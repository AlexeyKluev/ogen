{
  "openapi": "3.0.3",
  "title": "Sample Pet Store App",
  "description": "This is a sample server for a pet store.",
  "termsOfService": "https://example.com/terms/",
  "contact": {
    "name": "API Support",
    "url": "https://www.example.com/support",
    "email": "support@example.com"
  },
  "license": {
    "name": "Apache 2.0",
    "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
  },
  "version": "1.0.1",
  "paths": {
    "/pet": {
      "get": {
        "description": "Returns pet from the system that the user has access to",
        "operationId": "petGet",
        "parameters": [
          {
            "name": "petID",
            "in": "query",
            "description": "ID of pet",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-scope",
            "in": "header",
            "description": "pet scopes",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A pet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates pet",
        "operationId": "petCreate",
        "requestBody": {
          "description": "pet to add to the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A new pet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          }
        }
      }
    },
    "/pet/{name}": {
      "get": {
        "description": "Returns pet by name from the system that the user has access to",
        "operationId": "petGetByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of pet",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A pet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          }
        }
      }
    },
    "/foobar": {
      "get": {
        "description": "Dumb endpoint for testing things",
        "operationId": "fooBarGet",
        "parameters": [
          {
            "name": "inlinedParam",
            "in": "query",
            "description": "inlinedParam",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/skipParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PetResponse"
          }
        }
      },
      "post": {
        "description": "Dumb endpoint for testing things",
        "operationId": "fooBarPost",
        "requestBody": {
          "$ref": "#/components/requestBodies/PetCreate"
        },
        "responses": {
          "200": {
            "description": "A new pet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Pet": {
        "description": "cute and lovely creature",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "friends": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      }
    },
    "parameters": {
      "skipParam": {
        "name": "skip",
        "in": "query",
        "description": "number of items to skip",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "description": "max records to return",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "requestBodies": {
      "PetCreate": {
        "description": "pet to add to the system",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      }
    },
    "responses": {
      "PetResponse": {
        "description": "A pet.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      },
      "NotFound": {
        "description": "Entity not found."
      },
      "IllegalInput": {
        "description": "Illegal input for operation."
      },
      "GeneralError": {
        "description": "General Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GeneralError"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      },
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://example.org/api/oauth/dialog",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      }
    }
  }
}