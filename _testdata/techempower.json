{
  "openapi": "3.0.1",
  "info": {
    "title": "TechEmpower",
    "description": "API for TechEmpower benchmarks",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "contact": {
      "url": "https://github.com/TechEmpower/FrameworkBenchmarks/wiki/Project-Information-Framework-Tests-Overview#test-types"
    },
    "version": "20"
  },
  "servers": [
    {
      "url": "http://localhost/"
    }
  ],
  "paths": {
    "/json": {
      "get": {
        "summary": "The JSON Serialization test exercises the framework fundamentals including keep-alive support, request routing, request header parsing, object instantiation, JSON serialization, response header generation, and request count throughput.",
        "externalDocs": {
          "url": "https://github.com/TechEmpower/FrameworkBenchmarks/wiki/Project-Information-Framework-Tests-Overview#json-serialization"
        },
        "operationId": "json",
        "responses": {
          "200": {
            "description": "Hello world message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloWorld"
                }
              }
            }
          }
        }
      }
    },
    "/db": {
      "get": {
        "summary": "The Single Database Query test exercises the framework's object-relational mapper (ORM), random number generator, database driver, and database connection pool.",
        "externalDocs": {
          "url": "https://github.com/TechEmpower/FrameworkBenchmarks/wiki/Project-Information-Framework-Tests-Overview#single-database-query"
        },
        "operationId": "DB",
        "responses": {
          "200": {
            "description": "World object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorldObject"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HelloWorld": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "default": "Hello, World!",
            "description": "Should be equal to 'Hello, World!'"
          }
        }
      },
      "WorldObject": {
        "type": "object",
        "required": [
          "id",
          "randomNumber"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "randomNumber": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    }
  }
}
