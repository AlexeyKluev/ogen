// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/errors"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
)

func encodeActionsCreateOrUpdateEnvironmentSecretRequestJSON(req ActionsCreateOrUpdateEnvironmentSecretReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActionsCreateOrUpdateOrgSecretRequestJSON(req ActionsCreateOrUpdateOrgSecretReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActionsCreateOrUpdateRepoSecretRequestJSON(req ActionsCreateOrUpdateRepoSecretReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActionsCreateSelfHostedRunnerGroupForOrgRequestJSON(req ActionsCreateSelfHostedRunnerGroupForOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActionsSetAllowedActionsOrganizationRequestJSON(req SelectedActions, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActionsSetAllowedActionsRepositoryRequestJSON(req SelectedActions, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActionsSetGithubActionsPermissionsOrganizationRequestJSON(req ActionsSetGithubActionsPermissionsOrganizationReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActionsSetGithubActionsPermissionsRepositoryRequestJSON(req ActionsSetGithubActionsPermissionsRepositoryReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActionsSetRepoAccessToSelfHostedRunnerGroupInOrgRequestJSON(req ActionsSetRepoAccessToSelfHostedRunnerGroupInOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActionsSetSelectedReposForOrgSecretRequestJSON(req ActionsSetSelectedReposForOrgSecretReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationRequestJSON(req ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActionsSetSelfHostedRunnersInGroupForOrgRequestJSON(req ActionsSetSelfHostedRunnersInGroupForOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActionsUpdateSelfHostedRunnerGroupForOrgRequestJSON(req ActionsUpdateSelfHostedRunnerGroupForOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActivityMarkNotificationsAsReadRequestJSON(req ActivityMarkNotificationsAsReadReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActivityMarkRepoNotificationsAsReadRequestJSON(req ActivityMarkRepoNotificationsAsReadReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActivitySetRepoSubscriptionRequestJSON(req ActivitySetRepoSubscriptionReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeActivitySetThreadSubscriptionRequestJSON(req ActivitySetThreadSubscriptionReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeAppsUpdateWebhookConfigForAppRequestJSON(req AppsUpdateWebhookConfigForAppReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeChecksCreateSuiteRequestJSON(req ChecksCreateSuiteReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeChecksSetSuitesPreferencesRequestJSON(req ChecksSetSuitesPreferencesReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeCodeScanningUpdateAlertRequestJSON(req CodeScanningUpdateAlertReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeCodeScanningUploadSarifRequestJSON(req CodeScanningUploadSarifReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseRequestJSON(req EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeEnterpriseAdminProvisionAndInviteEnterpriseGroupRequestJSON(req EnterpriseAdminProvisionAndInviteEnterpriseGroupReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeEnterpriseAdminProvisionAndInviteEnterpriseUserRequestJSON(req EnterpriseAdminProvisionAndInviteEnterpriseUserReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeEnterpriseAdminSetAllowedActionsEnterpriseRequestJSON(req SelectedActions, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequestJSON(req EnterpriseAdminSetGithubActionsPermissionsEnterpriseReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeEnterpriseAdminSetInformationForProvisionedEnterpriseGroupRequestJSON(req EnterpriseAdminSetInformationForProvisionedEnterpriseGroupReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeEnterpriseAdminSetInformationForProvisionedEnterpriseUserRequestJSON(req EnterpriseAdminSetInformationForProvisionedEnterpriseUserReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeEnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterpriseRequestJSON(req EnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterpriseReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeEnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterpriseRequestJSON(req EnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterpriseReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeEnterpriseAdminSetSelfHostedRunnersInGroupForEnterpriseRequestJSON(req EnterpriseAdminSetSelfHostedRunnersInGroupForEnterpriseReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeEnterpriseAdminUpdateAttributeForEnterpriseUserRequestJSON(req EnterpriseAdminUpdateAttributeForEnterpriseUserReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseRequestJSON(req EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeGistsCreateCommentRequestJSON(req GistsCreateCommentReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeGistsUpdateCommentRequestJSON(req GistsUpdateCommentReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeInteractionsSetRestrictionsForRepoRequestJSON(req InteractionLimit, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeIssuesAddAssigneesRequestJSON(req IssuesAddAssigneesReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeIssuesRemoveAssigneesRequestJSON(req IssuesRemoveAssigneesReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeIssuesUpdateLabelRequestJSON(req IssuesUpdateLabelReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeIssuesUpdateMilestoneRequestJSON(req IssuesUpdateMilestoneReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeMigrationsUpdateImportRequestJSON(req MigrationsUpdateImportReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeOrgsUpdateWebhookConfigForOrgRequestJSON(req OrgsUpdateWebhookConfigForOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeProjectsCreateColumnRequestJSON(req ProjectsCreateColumnReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeProjectsCreateForAuthenticatedUserRequestJSON(req ProjectsCreateForAuthenticatedUserReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeProjectsCreateForOrgRequestJSON(req ProjectsCreateForOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeProjectsCreateForRepoRequestJSON(req ProjectsCreateForRepoReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeProjectsMoveColumnRequestJSON(req ProjectsMoveColumnReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeProjectsUpdateRequestJSON(req ProjectsUpdateReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeProjectsUpdateCardRequestJSON(req ProjectsUpdateCardReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeProjectsUpdateColumnRequestJSON(req ProjectsUpdateColumnReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodePullsCreateReplyForReviewCommentRequestJSON(req PullsCreateReplyForReviewCommentReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodePullsCreateReviewRequestJSON(req PullsCreateReviewReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodePullsDismissReviewRequestJSON(req PullsDismissReviewReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodePullsSubmitReviewRequestJSON(req PullsSubmitReviewReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodePullsUpdateReviewRequestJSON(req PullsUpdateReviewReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodePullsUpdateReviewCommentRequestJSON(req PullsUpdateReviewCommentReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReactionsCreateForTeamDiscussionCommentInOrgRequestJSON(req ReactionsCreateForTeamDiscussionCommentInOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReactionsCreateForTeamDiscussionCommentLegacyRequestJSON(req ReactionsCreateForTeamDiscussionCommentLegacyReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReactionsCreateForTeamDiscussionInOrgRequestJSON(req ReactionsCreateForTeamDiscussionInOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReactionsCreateForTeamDiscussionLegacyRequestJSON(req ReactionsCreateForTeamDiscussionLegacyReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReposCreateCommitStatusRequestJSON(req ReposCreateCommitStatusReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReposCreateUsingTemplateRequestJSON(req ReposCreateUsingTemplateReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReposMergeUpstreamRequestJSON(req ReposMergeUpstreamReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReposReplaceAllTopicsRequestJSON(req ReposReplaceAllTopicsReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReposTransferRequestJSON(req ReposTransferReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReposUpdateBranchProtectionRequestJSON(req ReposUpdateBranchProtectionReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReposUpdateCommitCommentRequestJSON(req ReposUpdateCommitCommentReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReposUpdateInvitationRequestJSON(req ReposUpdateInvitationReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReposUpdateReleaseRequestJSON(req ReposUpdateReleaseReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReposUpdateReleaseAssetRequestJSON(req ReposUpdateReleaseAssetReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeReposUpdateWebhookConfigForRepoRequestJSON(req ReposUpdateWebhookConfigForRepoReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeSecretScanningUpdateAlertRequestJSON(req SecretScanningUpdateAlertReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeTeamsAddOrUpdateMembershipForUserInOrgRequestJSON(req TeamsAddOrUpdateMembershipForUserInOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeTeamsAddOrUpdateMembershipForUserLegacyRequestJSON(req TeamsAddOrUpdateMembershipForUserLegacyReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeTeamsAddOrUpdateProjectPermissionsInOrgRequestJSON(req TeamsAddOrUpdateProjectPermissionsInOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeTeamsAddOrUpdateRepoPermissionsInOrgRequestJSON(req TeamsAddOrUpdateRepoPermissionsInOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeTeamsCreateDiscussionCommentInOrgRequestJSON(req TeamsCreateDiscussionCommentInOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeTeamsCreateDiscussionCommentLegacyRequestJSON(req TeamsCreateDiscussionCommentLegacyReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeTeamsCreateDiscussionInOrgRequestJSON(req TeamsCreateDiscussionInOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeTeamsCreateDiscussionLegacyRequestJSON(req TeamsCreateDiscussionLegacyReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeTeamsCreateOrUpdateIdpGroupConnectionsInOrgRequestJSON(req TeamsCreateOrUpdateIdpGroupConnectionsInOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeTeamsUpdateDiscussionCommentInOrgRequestJSON(req TeamsUpdateDiscussionCommentInOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeTeamsUpdateDiscussionCommentLegacyRequestJSON(req TeamsUpdateDiscussionCommentLegacyReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeTeamsUpdateDiscussionInOrgRequestJSON(req TeamsUpdateDiscussionInOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeTeamsUpdateDiscussionLegacyRequestJSON(req TeamsUpdateDiscussionLegacyReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}

func encodeTeamsUpdateInOrgRequestJSON(req TeamsUpdateInOrgReq, span trace.Span) (data *bytes.Buffer, err error) {
	buf := json.GetBuffer()
	e := json.GetEncoder()
	defer json.PutEncoder(e)
	more := json.NewMore(e)
	defer more.Reset()
	more.More()
	req.WriteJSON(e)
	if _, err := e.WriteTo(buf); err != nil {
		json.PutBuffer(buf)
		return nil, err
	}

	return buf, nil
}
