// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
)

// APIOverview describes #/components/schemas/api-overview.
type APIOverview struct {
	API                              *[]string                        `json:"api"`
	Actions                          *[]string                        `json:"actions"`
	Dependabot                       *[]string                        `json:"dependabot"`
	Git                              *[]string                        `json:"git"`
	Hooks                            *[]string                        `json:"hooks"`
	Importer                         *[]string                        `json:"importer"`
	Packages                         *[]string                        `json:"packages"`
	Pages                            *[]string                        `json:"pages"`
	SSHKeyFingerprints               OptAPIOverviewSSHKeyFingerprints `json:"ssh_key_fingerprints"`
	VerifiablePasswordAuthentication bool                             `json:"verifiable_password_authentication"`
	Web                              *[]string                        `json:"web"`
}

func (*APIOverview) metaGetResponse() {}

type APIOverviewSSHKeyFingerprints struct {
	SHA256DSA     OptString `json:"SHA256_DSA"`
	SHA256ECDSA   OptString `json:"SHA256_ECDSA"`
	SHA256ED25519 OptString `json:"SHA256_ED25519"`
	SHA256RSA     OptString `json:"SHA256_RSA"`
}

type Accepted struct{}

func (*Accepted) reposEnableLfsForRepoResponse()       {}
func (*Accepted) reposGetCodeFrequencyStatsResponse()  {}
func (*Accepted) reposGetCommitActivityStatsResponse() {}
func (*Accepted) reposGetContributorsStatsResponse()   {}

type ActionsAddRepoAccessToSelfHostedRunnerGroupInOrg struct{}

type ActionsAddSelectedRepoToOrgSecretConflict struct{}

func (*ActionsAddSelectedRepoToOrgSecretConflict) actionsAddSelectedRepoToOrgSecretResponse() {}

type ActionsAddSelectedRepoToOrgSecretNoContent struct{}

func (*ActionsAddSelectedRepoToOrgSecretNoContent) actionsAddSelectedRepoToOrgSecretResponse() {}

type ActionsAddSelfHostedRunnerToGroupForOrg struct{}

type ActionsApproveWorkflowRunApplicationJSONForbidden BasicError

func (*ActionsApproveWorkflowRunApplicationJSONForbidden) actionsApproveWorkflowRunResponse() {}

type ActionsApproveWorkflowRunApplicationJSONNotFound BasicError

func (*ActionsApproveWorkflowRunApplicationJSONNotFound) actionsApproveWorkflowRunResponse() {}

// ActionsBillingUsage describes #/components/schemas/actions-billing-usage.
type ActionsBillingUsage struct {
	IncludedMinutes      int                                     `json:"included_minutes"`
	MinutesUsedBreakdown ActionsBillingUsageMinutesUsedBreakdown `json:"minutes_used_breakdown"`
	TotalMinutesUsed     int                                     `json:"total_minutes_used"`
	TotalPaidMinutesUsed int                                     `json:"total_paid_minutes_used"`
}

type ActionsBillingUsageMinutesUsedBreakdown struct {
	MACOS   OptInt `json:"MACOS"`
	UBUNTU  OptInt `json:"UBUNTU"`
	WINDOWS OptInt `json:"WINDOWS"`
}

type ActionsCancelWorkflowRun struct{}

type ActionsCreateOrUpdateEnvironmentSecretApplicationJSONRequest struct {
	EncryptedValue string `json:"encrypted_value"`
	KeyID          string `json:"key_id"`
}

type ActionsCreateOrUpdateEnvironmentSecretNoContent struct{}

func (*ActionsCreateOrUpdateEnvironmentSecretNoContent) actionsCreateOrUpdateEnvironmentSecretResponse() {
}

type ActionsCreateOrUpdateOrgSecretApplicationJSONRequest struct {
	EncryptedValue        OptString                                                      `json:"encrypted_value"`
	KeyID                 OptString                                                      `json:"key_id"`
	SelectedRepositoryIds *[]string                                                      `json:"selected_repository_ids"`
	Visibility            ActionsCreateOrUpdateOrgSecretApplicationJSONRequestVisibility `json:"visibility"`
}

type ActionsCreateOrUpdateOrgSecretApplicationJSONRequestVisibility string

const (
	ActionsCreateOrUpdateOrgSecretApplicationJSONRequestVisibilityAll      ActionsCreateOrUpdateOrgSecretApplicationJSONRequestVisibility = "all"
	ActionsCreateOrUpdateOrgSecretApplicationJSONRequestVisibilityPrivate  ActionsCreateOrUpdateOrgSecretApplicationJSONRequestVisibility = "private"
	ActionsCreateOrUpdateOrgSecretApplicationJSONRequestVisibilitySelected ActionsCreateOrUpdateOrgSecretApplicationJSONRequestVisibility = "selected"
)

type ActionsCreateOrUpdateOrgSecretNoContent struct{}

func (*ActionsCreateOrUpdateOrgSecretNoContent) actionsCreateOrUpdateOrgSecretResponse() {}

type ActionsCreateOrUpdateRepoSecretApplicationJSONRequest struct {
	EncryptedValue OptString `json:"encrypted_value"`
	KeyID          OptString `json:"key_id"`
}

type ActionsCreateOrUpdateRepoSecretCreated struct{}

func (*ActionsCreateOrUpdateRepoSecretCreated) actionsCreateOrUpdateRepoSecretResponse() {}

type ActionsCreateOrUpdateRepoSecretNoContent struct{}

func (*ActionsCreateOrUpdateRepoSecretNoContent) actionsCreateOrUpdateRepoSecretResponse() {}

type ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequest struct {
	Name                  string                                                                      `json:"name"`
	Runners               *[]int                                                                      `json:"runners"`
	SelectedRepositoryIds *[]int                                                                      `json:"selected_repository_ids"`
	Visibility            OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility `json:"visibility"`
}

type ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility string

const (
	ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibilitySelected ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility = "selected"
	ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibilityAll      ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility = "all"
	ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibilityPrivate  ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility = "private"
)

type ActionsDeleteArtifact struct{}

type ActionsDeleteEnvironmentSecret struct{}

type ActionsDeleteOrgSecret struct{}

type ActionsDeleteRepoSecret struct{}

type ActionsDeleteSelfHostedRunnerFromOrg struct{}

type ActionsDeleteSelfHostedRunnerFromRepo struct{}

type ActionsDeleteSelfHostedRunnerGroupFromOrg struct{}

type ActionsDeleteWorkflowRun struct{}

type ActionsDeleteWorkflowRunLogs struct{}

type ActionsDisableSelectedRepositoryGithubActionsOrganization struct{}

type ActionsDownloadArtifact struct{}

type ActionsDownloadJobLogsForWorkflowRun struct{}

type ActionsDownloadWorkflowRunLogs struct{}

type ActionsEnableSelectedRepositoryGithubActionsOrganization struct{}

type ActionsEnabled bool

// ActionsEnterprisePermissions describes #/components/schemas/actions-enterprise-permissions.
type ActionsEnterprisePermissions struct {
	AllowedActions           OptAllowedActions    `json:"allowed_actions"`
	EnabledOrganizations     EnabledOrganizations `json:"enabled_organizations"`
	SelectedActionsURL       *SelectedActionsURL  `json:"selected_actions_url"`
	SelectedOrganizationsURL OptString            `json:"selected_organizations_url"`
}

type ActionsListArtifactsForRepo struct {
	Artifacts  []Artifact `json:"artifacts"`
	TotalCount int        `json:"total_count"`
}

type ActionsListEnvironmentSecrets struct {
	Secrets    []ActionsSecret `json:"secrets"`
	TotalCount int             `json:"total_count"`
}

type ActionsListOrgSecrets struct {
	Secrets    []OrganizationActionsSecret `json:"secrets"`
	TotalCount int                         `json:"total_count"`
}

type ActionsListRepoAccessToSelfHostedRunnerGroupInOrg struct {
	Repositories []MinimalRepository `json:"repositories"`
	TotalCount   float64             `json:"total_count"`
}

type ActionsListRepoSecrets struct {
	Secrets    []ActionsSecret `json:"secrets"`
	TotalCount int             `json:"total_count"`
}

type ActionsListRepoWorkflows struct {
	TotalCount int        `json:"total_count"`
	Workflows  []Workflow `json:"workflows"`
}

type ActionsListSelectedReposForOrgSecret struct {
	Repositories []MinimalRepository `json:"repositories"`
	TotalCount   int                 `json:"total_count"`
}

type ActionsListSelectedRepositoriesEnabledGithubActionsOrganization struct {
	Repositories []Repository `json:"repositories"`
	TotalCount   float64      `json:"total_count"`
}

type ActionsListSelfHostedRunnerGroupsForOrg struct {
	RunnerGroups []RunnerGroupsOrg `json:"runner_groups"`
	TotalCount   float64           `json:"total_count"`
}

type ActionsListSelfHostedRunnersForOrg struct {
	Runners    []Runner `json:"runners"`
	TotalCount int      `json:"total_count"`
}

type ActionsListSelfHostedRunnersForRepo struct {
	Runners    []Runner `json:"runners"`
	TotalCount int      `json:"total_count"`
}

type ActionsListSelfHostedRunnersInGroupForOrg struct {
	Runners    []Runner `json:"runners"`
	TotalCount float64  `json:"total_count"`
}

type ActionsListWorkflowRunArtifacts struct {
	Artifacts  []Artifact `json:"artifacts"`
	TotalCount int        `json:"total_count"`
}

// ActionsOrganizationPermissions describes #/components/schemas/actions-organization-permissions.
type ActionsOrganizationPermissions struct {
	AllowedActions          OptAllowedActions   `json:"allowed_actions"`
	EnabledRepositories     EnabledRepositories `json:"enabled_repositories"`
	SelectedActionsURL      *SelectedActionsURL `json:"selected_actions_url"`
	SelectedRepositoriesURL OptString           `json:"selected_repositories_url"`
}

// ActionsPublicKey describes #/components/schemas/actions-public-key.
type ActionsPublicKey struct {
	CreatedAt OptString `json:"created_at"`
	ID        OptInt    `json:"id"`
	Key       string    `json:"key"`
	KeyID     string    `json:"key_id"`
	Title     OptString `json:"title"`
	URL       OptString `json:"url"`
}

type ActionsReRunWorkflow struct{}

type ActionsRemoveRepoAccessToSelfHostedRunnerGroupInOrg struct{}

type ActionsRemoveSelectedRepoFromOrgSecretConflict struct{}

func (*ActionsRemoveSelectedRepoFromOrgSecretConflict) actionsRemoveSelectedRepoFromOrgSecretResponse() {
}

type ActionsRemoveSelectedRepoFromOrgSecretNoContent struct{}

func (*ActionsRemoveSelectedRepoFromOrgSecretNoContent) actionsRemoveSelectedRepoFromOrgSecretResponse() {
}

type ActionsRemoveSelfHostedRunnerFromGroupForOrg struct{}

// ActionsRepositoryPermissions describes #/components/schemas/actions-repository-permissions.
type ActionsRepositoryPermissions struct {
	AllowedActions     OptAllowedActions   `json:"allowed_actions"`
	Enabled            ActionsEnabled      `json:"enabled"`
	SelectedActionsURL *SelectedActionsURL `json:"selected_actions_url"`
}

type ActionsRetryWorkflow struct{}

type ActionsReviewPendingDeploymentsForRunApplicationJSONRequest struct {
	Comment        string                                                           `json:"comment"`
	EnvironmentIds []int                                                            `json:"environment_ids"`
	State          ActionsReviewPendingDeploymentsForRunApplicationJSONRequestState `json:"state"`
}

func (*ActionsReviewPendingDeploymentsForRunApplicationJSONRequest) actionsReviewPendingDeploymentsForRunRequest() {
}

type ActionsReviewPendingDeploymentsForRunApplicationJSONRequestState string

const (
	ActionsReviewPendingDeploymentsForRunApplicationJSONRequestStateApproved ActionsReviewPendingDeploymentsForRunApplicationJSONRequestState = "approved"
	ActionsReviewPendingDeploymentsForRunApplicationJSONRequestStateRejected ActionsReviewPendingDeploymentsForRunApplicationJSONRequestState = "rejected"
)

// ActionsSecret describes #/components/schemas/actions-secret.
type ActionsSecret struct {
	CreatedAt time.Time `json:"created_at"`
	Name      string    `json:"name"`
	UpdatedAt time.Time `json:"updated_at"`
}

type ActionsSetAllowedActionsOrganization struct{}

type ActionsSetAllowedActionsRepository struct{}

type ActionsSetGithubActionsPermissionsOrganization struct{}

type ActionsSetGithubActionsPermissionsOrganizationApplicationJSONRequest struct {
	AllowedActions      OptAllowedActions   `json:"allowed_actions"`
	EnabledRepositories EnabledRepositories `json:"enabled_repositories"`
}

type ActionsSetGithubActionsPermissionsRepository struct{}

type ActionsSetGithubActionsPermissionsRepositoryApplicationJSONRequest struct {
	AllowedActions OptAllowedActions `json:"allowed_actions"`
	Enabled        ActionsEnabled    `json:"enabled"`
}

type ActionsSetRepoAccessToSelfHostedRunnerGroupInOrg struct{}

type ActionsSetRepoAccessToSelfHostedRunnerGroupInOrgApplicationJSONRequest struct {
	SelectedRepositoryIds []int `json:"selected_repository_ids"`
}

type ActionsSetSelectedReposForOrgSecret struct{}

type ActionsSetSelectedReposForOrgSecretApplicationJSONRequest struct {
	SelectedRepositoryIds []int `json:"selected_repository_ids"`
}

type ActionsSetSelectedRepositoriesEnabledGithubActionsOrganization struct{}

type ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationApplicationJSONRequest struct {
	SelectedRepositoryIds []int `json:"selected_repository_ids"`
}

type ActionsSetSelfHostedRunnersInGroupForOrg struct{}

type ActionsSetSelfHostedRunnersInGroupForOrgApplicationJSONRequest struct {
	Runners []int `json:"runners"`
}

type ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequest struct {
	Name       string                                                                      `json:"name"`
	Visibility OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility `json:"visibility"`
}

type ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility string

const (
	ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibilitySelected ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility = "selected"
	ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibilityAll      ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility = "all"
	ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibilityPrivate  ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility = "private"
)

type ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONForbidden) activityCheckRepoIsStarredByAuthenticatedUserResponse() {
}

type ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONNotFound BasicError

func (*ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONNotFound) activityCheckRepoIsStarredByAuthenticatedUserResponse() {
}

type ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONUnauthorized) activityCheckRepoIsStarredByAuthenticatedUserResponse() {
}

type ActivityCheckRepoIsStarredByAuthenticatedUserNoContent struct{}

func (*ActivityCheckRepoIsStarredByAuthenticatedUserNoContent) activityCheckRepoIsStarredByAuthenticatedUserResponse() {
}

type ActivityDeleteRepoSubscription struct{}

type ActivityDeleteThreadSubscriptionApplicationJSONForbidden BasicError

func (*ActivityDeleteThreadSubscriptionApplicationJSONForbidden) activityDeleteThreadSubscriptionResponse() {
}

type ActivityDeleteThreadSubscriptionApplicationJSONUnauthorized BasicError

func (*ActivityDeleteThreadSubscriptionApplicationJSONUnauthorized) activityDeleteThreadSubscriptionResponse() {
}

type ActivityDeleteThreadSubscriptionNoContent struct{}

func (*ActivityDeleteThreadSubscriptionNoContent) activityDeleteThreadSubscriptionResponse() {}

type ActivityGetRepoSubscriptionNotFound struct{}

func (*ActivityGetRepoSubscriptionNotFound) activityGetRepoSubscriptionResponse() {}

type ActivityGetThreadApplicationJSONForbidden BasicError

func (*ActivityGetThreadApplicationJSONForbidden) activityGetThreadResponse() {}

type ActivityGetThreadApplicationJSONUnauthorized BasicError

func (*ActivityGetThreadApplicationJSONUnauthorized) activityGetThreadResponse() {}

type ActivityGetThreadSubscriptionForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityGetThreadSubscriptionForAuthenticatedUserApplicationJSONForbidden) activityGetThreadSubscriptionForAuthenticatedUserResponse() {
}

type ActivityGetThreadSubscriptionForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityGetThreadSubscriptionForAuthenticatedUserApplicationJSONUnauthorized) activityGetThreadSubscriptionForAuthenticatedUserResponse() {
}

type ActivityListNotificationsForAuthenticatedUserOK []Thread

type ActivityListPublicEventsForRepoNetworkApplicationJSONForbidden BasicError

func (*ActivityListPublicEventsForRepoNetworkApplicationJSONForbidden) activityListPublicEventsForRepoNetworkResponse() {
}

type ActivityListPublicEventsForRepoNetworkApplicationJSONMovedPermanently BasicError

func (*ActivityListPublicEventsForRepoNetworkApplicationJSONMovedPermanently) activityListPublicEventsForRepoNetworkResponse() {
}

type ActivityListPublicEventsForRepoNetworkApplicationJSONNotFound BasicError

func (*ActivityListPublicEventsForRepoNetworkApplicationJSONNotFound) activityListPublicEventsForRepoNetworkResponse() {
}

type ActivityListPublicEventsForRepoNetworkOK []Event

func (*ActivityListPublicEventsForRepoNetworkOK) activityListPublicEventsForRepoNetworkResponse() {}

type ActivityListPublicEventsOK []Event

func (*ActivityListPublicEventsOK) activityListPublicEventsResponse() {}

type ActivityListWatchedReposForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityListWatchedReposForAuthenticatedUserApplicationJSONForbidden) activityListWatchedReposForAuthenticatedUserResponse() {
}

type ActivityListWatchedReposForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityListWatchedReposForAuthenticatedUserApplicationJSONUnauthorized) activityListWatchedReposForAuthenticatedUserResponse() {
}

type ActivityListWatchedReposForAuthenticatedUserOK []MinimalRepository

func (*ActivityListWatchedReposForAuthenticatedUserOK) activityListWatchedReposForAuthenticatedUserResponse() {
}

type ActivityMarkNotificationsAsReadAccepted struct {
	Message OptString `json:"message"`
}

func (*ActivityMarkNotificationsAsReadAccepted) activityMarkNotificationsAsReadResponse() {}

type ActivityMarkNotificationsAsReadApplicationJSONForbidden BasicError

func (*ActivityMarkNotificationsAsReadApplicationJSONForbidden) activityMarkNotificationsAsReadResponse() {
}

type ActivityMarkNotificationsAsReadApplicationJSONRequest struct {
	LastReadAt OptTime `json:"last_read_at"`
	Read       OptBool `json:"read"`
}

type ActivityMarkNotificationsAsReadApplicationJSONUnauthorized BasicError

func (*ActivityMarkNotificationsAsReadApplicationJSONUnauthorized) activityMarkNotificationsAsReadResponse() {
}

type ActivityMarkNotificationsAsReadResetContent struct{}

func (*ActivityMarkNotificationsAsReadResetContent) activityMarkNotificationsAsReadResponse() {}

type ActivityMarkRepoNotificationsAsReadAccepted struct {
	Message OptString `json:"message"`
	URL     OptString `json:"url"`
}

func (*ActivityMarkRepoNotificationsAsReadAccepted) activityMarkRepoNotificationsAsReadResponse() {}

type ActivityMarkRepoNotificationsAsReadApplicationJSONRequest struct {
	LastReadAt OptTime `json:"last_read_at"`
}

type ActivityMarkRepoNotificationsAsReadResetContent struct{}

func (*ActivityMarkRepoNotificationsAsReadResetContent) activityMarkRepoNotificationsAsReadResponse() {
}

type ActivityMarkThreadAsReadResetContent struct{}

func (*ActivityMarkThreadAsReadResetContent) activityMarkThreadAsReadResponse() {}

type ActivitySetRepoSubscriptionApplicationJSONRequest struct {
	Ignored    OptBool `json:"ignored"`
	Subscribed OptBool `json:"subscribed"`
}

type ActivitySetThreadSubscriptionApplicationJSONForbidden BasicError

func (*ActivitySetThreadSubscriptionApplicationJSONForbidden) activitySetThreadSubscriptionResponse() {
}

type ActivitySetThreadSubscriptionApplicationJSONRequest struct {
	Ignored OptBool `json:"ignored"`
}

type ActivitySetThreadSubscriptionApplicationJSONUnauthorized BasicError

func (*ActivitySetThreadSubscriptionApplicationJSONUnauthorized) activitySetThreadSubscriptionResponse() {
}

type ActivityStarRepoForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityStarRepoForAuthenticatedUserApplicationJSONForbidden) activityStarRepoForAuthenticatedUserResponse() {
}

type ActivityStarRepoForAuthenticatedUserApplicationJSONNotFound BasicError

func (*ActivityStarRepoForAuthenticatedUserApplicationJSONNotFound) activityStarRepoForAuthenticatedUserResponse() {
}

type ActivityStarRepoForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityStarRepoForAuthenticatedUserApplicationJSONUnauthorized) activityStarRepoForAuthenticatedUserResponse() {
}

type ActivityStarRepoForAuthenticatedUserNoContent struct{}

func (*ActivityStarRepoForAuthenticatedUserNoContent) activityStarRepoForAuthenticatedUserResponse() {
}

type ActivityUnstarRepoForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityUnstarRepoForAuthenticatedUserApplicationJSONForbidden) activityUnstarRepoForAuthenticatedUserResponse() {
}

type ActivityUnstarRepoForAuthenticatedUserApplicationJSONNotFound BasicError

func (*ActivityUnstarRepoForAuthenticatedUserApplicationJSONNotFound) activityUnstarRepoForAuthenticatedUserResponse() {
}

type ActivityUnstarRepoForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityUnstarRepoForAuthenticatedUserApplicationJSONUnauthorized) activityUnstarRepoForAuthenticatedUserResponse() {
}

type ActivityUnstarRepoForAuthenticatedUserNoContent struct{}

func (*ActivityUnstarRepoForAuthenticatedUserNoContent) activityUnstarRepoForAuthenticatedUserResponse() {
}

// Actor describes #/components/schemas/actor.
type Actor struct {
	AvatarURL    url.URL   `json:"avatar_url"`
	DisplayLogin OptString `json:"display_login"`
	GravatarID   NilString `json:"gravatar_id"`
	ID           int       `json:"id"`
	Login        string    `json:"login"`
	URL          url.URL   `json:"url"`
}

type AlertCreatedAt time.Time

type AlertHTMLURL url.URL

type AlertInstancesURL url.URL

type AlertNumber int

type AlertURL url.URL

type AllowedActions string

const (
	AllowedActionsAll       AllowedActions = "all"
	AllowedActionsLocalOnly AllowedActions = "local_only"
	AllowedActionsSelected  AllowedActions = "selected"
)

// AppPermissions describes #/components/schemas/app-permissions.
type AppPermissions struct {
	Actions                       OptAppPermissionsActions                       `json:"actions"`
	Administration                OptAppPermissionsAdministration                `json:"administration"`
	Checks                        OptAppPermissionsChecks                        `json:"checks"`
	ContentReferences             OptAppPermissionsContentReferences             `json:"content_references"`
	Contents                      OptAppPermissionsContents                      `json:"contents"`
	Deployments                   OptAppPermissionsDeployments                   `json:"deployments"`
	Environments                  OptAppPermissionsEnvironments                  `json:"environments"`
	Issues                        OptAppPermissionsIssues                        `json:"issues"`
	Members                       OptAppPermissionsMembers                       `json:"members"`
	Metadata                      OptAppPermissionsMetadata                      `json:"metadata"`
	OrganizationAdministration    OptAppPermissionsOrganizationAdministration    `json:"organization_administration"`
	OrganizationHooks             OptAppPermissionsOrganizationHooks             `json:"organization_hooks"`
	OrganizationPackages          OptAppPermissionsOrganizationPackages          `json:"organization_packages"`
	OrganizationPlan              OptAppPermissionsOrganizationPlan              `json:"organization_plan"`
	OrganizationProjects          OptAppPermissionsOrganizationProjects          `json:"organization_projects"`
	OrganizationSecrets           OptAppPermissionsOrganizationSecrets           `json:"organization_secrets"`
	OrganizationSelfHostedRunners OptAppPermissionsOrganizationSelfHostedRunners `json:"organization_self_hosted_runners"`
	OrganizationUserBlocking      OptAppPermissionsOrganizationUserBlocking      `json:"organization_user_blocking"`
	Packages                      OptAppPermissionsPackages                      `json:"packages"`
	Pages                         OptAppPermissionsPages                         `json:"pages"`
	PullRequests                  OptAppPermissionsPullRequests                  `json:"pull_requests"`
	RepositoryHooks               OptAppPermissionsRepositoryHooks               `json:"repository_hooks"`
	RepositoryProjects            OptAppPermissionsRepositoryProjects            `json:"repository_projects"`
	SecretScanningAlerts          OptAppPermissionsSecretScanningAlerts          `json:"secret_scanning_alerts"`
	Secrets                       OptAppPermissionsSecrets                       `json:"secrets"`
	SecurityEvents                OptAppPermissionsSecurityEvents                `json:"security_events"`
	SingleFile                    OptAppPermissionsSingleFile                    `json:"single_file"`
	Statuses                      OptAppPermissionsStatuses                      `json:"statuses"`
	TeamDiscussions               OptAppPermissionsTeamDiscussions               `json:"team_discussions"`
	VulnerabilityAlerts           OptAppPermissionsVulnerabilityAlerts           `json:"vulnerability_alerts"`
	Workflows                     OptAppPermissionsWorkflows                     `json:"workflows"`
}

type AppPermissionsActions string

const (
	AppPermissionsActionsRead  AppPermissionsActions = "read"
	AppPermissionsActionsWrite AppPermissionsActions = "write"
)

type AppPermissionsAdministration string

const (
	AppPermissionsAdministrationRead  AppPermissionsAdministration = "read"
	AppPermissionsAdministrationWrite AppPermissionsAdministration = "write"
)

type AppPermissionsChecks string

const (
	AppPermissionsChecksRead  AppPermissionsChecks = "read"
	AppPermissionsChecksWrite AppPermissionsChecks = "write"
)

type AppPermissionsContentReferences string

const (
	AppPermissionsContentReferencesRead  AppPermissionsContentReferences = "read"
	AppPermissionsContentReferencesWrite AppPermissionsContentReferences = "write"
)

type AppPermissionsContents string

const (
	AppPermissionsContentsRead  AppPermissionsContents = "read"
	AppPermissionsContentsWrite AppPermissionsContents = "write"
)

type AppPermissionsDeployments string

const (
	AppPermissionsDeploymentsRead  AppPermissionsDeployments = "read"
	AppPermissionsDeploymentsWrite AppPermissionsDeployments = "write"
)

type AppPermissionsEnvironments string

const (
	AppPermissionsEnvironmentsRead  AppPermissionsEnvironments = "read"
	AppPermissionsEnvironmentsWrite AppPermissionsEnvironments = "write"
)

type AppPermissionsIssues string

const (
	AppPermissionsIssuesRead  AppPermissionsIssues = "read"
	AppPermissionsIssuesWrite AppPermissionsIssues = "write"
)

type AppPermissionsMembers string

const (
	AppPermissionsMembersRead  AppPermissionsMembers = "read"
	AppPermissionsMembersWrite AppPermissionsMembers = "write"
)

type AppPermissionsMetadata string

const (
	AppPermissionsMetadataRead  AppPermissionsMetadata = "read"
	AppPermissionsMetadataWrite AppPermissionsMetadata = "write"
)

type AppPermissionsOrganizationAdministration string

const (
	AppPermissionsOrganizationAdministrationRead  AppPermissionsOrganizationAdministration = "read"
	AppPermissionsOrganizationAdministrationWrite AppPermissionsOrganizationAdministration = "write"
)

type AppPermissionsOrganizationHooks string

const (
	AppPermissionsOrganizationHooksRead  AppPermissionsOrganizationHooks = "read"
	AppPermissionsOrganizationHooksWrite AppPermissionsOrganizationHooks = "write"
)

type AppPermissionsOrganizationPackages string

const (
	AppPermissionsOrganizationPackagesRead  AppPermissionsOrganizationPackages = "read"
	AppPermissionsOrganizationPackagesWrite AppPermissionsOrganizationPackages = "write"
)

type AppPermissionsOrganizationPlan string

const (
	AppPermissionsOrganizationPlanRead AppPermissionsOrganizationPlan = "read"
)

type AppPermissionsOrganizationProjects string

const (
	AppPermissionsOrganizationProjectsRead  AppPermissionsOrganizationProjects = "read"
	AppPermissionsOrganizationProjectsWrite AppPermissionsOrganizationProjects = "write"
	AppPermissionsOrganizationProjectsAdmin AppPermissionsOrganizationProjects = "admin"
)

type AppPermissionsOrganizationSecrets string

const (
	AppPermissionsOrganizationSecretsRead  AppPermissionsOrganizationSecrets = "read"
	AppPermissionsOrganizationSecretsWrite AppPermissionsOrganizationSecrets = "write"
)

type AppPermissionsOrganizationSelfHostedRunners string

const (
	AppPermissionsOrganizationSelfHostedRunnersRead  AppPermissionsOrganizationSelfHostedRunners = "read"
	AppPermissionsOrganizationSelfHostedRunnersWrite AppPermissionsOrganizationSelfHostedRunners = "write"
)

type AppPermissionsOrganizationUserBlocking string

const (
	AppPermissionsOrganizationUserBlockingRead  AppPermissionsOrganizationUserBlocking = "read"
	AppPermissionsOrganizationUserBlockingWrite AppPermissionsOrganizationUserBlocking = "write"
)

type AppPermissionsPackages string

const (
	AppPermissionsPackagesRead  AppPermissionsPackages = "read"
	AppPermissionsPackagesWrite AppPermissionsPackages = "write"
)

type AppPermissionsPages string

const (
	AppPermissionsPagesRead  AppPermissionsPages = "read"
	AppPermissionsPagesWrite AppPermissionsPages = "write"
)

type AppPermissionsPullRequests string

const (
	AppPermissionsPullRequestsRead  AppPermissionsPullRequests = "read"
	AppPermissionsPullRequestsWrite AppPermissionsPullRequests = "write"
)

type AppPermissionsRepositoryHooks string

const (
	AppPermissionsRepositoryHooksRead  AppPermissionsRepositoryHooks = "read"
	AppPermissionsRepositoryHooksWrite AppPermissionsRepositoryHooks = "write"
)

type AppPermissionsRepositoryProjects string

const (
	AppPermissionsRepositoryProjectsRead  AppPermissionsRepositoryProjects = "read"
	AppPermissionsRepositoryProjectsWrite AppPermissionsRepositoryProjects = "write"
	AppPermissionsRepositoryProjectsAdmin AppPermissionsRepositoryProjects = "admin"
)

type AppPermissionsSecretScanningAlerts string

const (
	AppPermissionsSecretScanningAlertsRead  AppPermissionsSecretScanningAlerts = "read"
	AppPermissionsSecretScanningAlertsWrite AppPermissionsSecretScanningAlerts = "write"
)

type AppPermissionsSecrets string

const (
	AppPermissionsSecretsRead  AppPermissionsSecrets = "read"
	AppPermissionsSecretsWrite AppPermissionsSecrets = "write"
)

type AppPermissionsSecurityEvents string

const (
	AppPermissionsSecurityEventsRead  AppPermissionsSecurityEvents = "read"
	AppPermissionsSecurityEventsWrite AppPermissionsSecurityEvents = "write"
)

type AppPermissionsSingleFile string

const (
	AppPermissionsSingleFileRead  AppPermissionsSingleFile = "read"
	AppPermissionsSingleFileWrite AppPermissionsSingleFile = "write"
)

type AppPermissionsStatuses string

const (
	AppPermissionsStatusesRead  AppPermissionsStatuses = "read"
	AppPermissionsStatusesWrite AppPermissionsStatuses = "write"
)

type AppPermissionsTeamDiscussions string

const (
	AppPermissionsTeamDiscussionsRead  AppPermissionsTeamDiscussions = "read"
	AppPermissionsTeamDiscussionsWrite AppPermissionsTeamDiscussions = "write"
)

type AppPermissionsVulnerabilityAlerts string

const (
	AppPermissionsVulnerabilityAlertsRead AppPermissionsVulnerabilityAlerts = "read"
)

type AppPermissionsWorkflows string

const (
	AppPermissionsWorkflowsWrite AppPermissionsWorkflows = "write"
)

// ApplicationGrant describes #/components/schemas/application-grant.
type ApplicationGrant struct {
	App       ApplicationGrantApp   `json:"app"`
	CreatedAt time.Time             `json:"created_at"`
	ID        int                   `json:"id"`
	Scopes    []string              `json:"scopes"`
	URL       url.URL               `json:"url"`
	UpdatedAt time.Time             `json:"updated_at"`
	User      OptNullableSimpleUser `json:"user"`
}

func (*ApplicationGrant) oAuthAuthorizationsGetGrantResponse() {}

type ApplicationGrantApp struct {
	ClientID string  `json:"client_id"`
	Name     string  `json:"name"`
	URL      url.URL `json:"url"`
}

type AppsAddRepoToInstallationApplicationJSONForbidden BasicError

func (*AppsAddRepoToInstallationApplicationJSONForbidden) appsAddRepoToInstallationResponse() {}

type AppsAddRepoToInstallationApplicationJSONNotFound BasicError

func (*AppsAddRepoToInstallationApplicationJSONNotFound) appsAddRepoToInstallationResponse() {}

type AppsAddRepoToInstallationNoContent struct{}

func (*AppsAddRepoToInstallationNoContent) appsAddRepoToInstallationResponse() {}

type AppsCheckTokenApplicationJSONRequest struct {
	AccessToken string `json:"access_token"`
}

func (*AppsCheckTokenApplicationJSONRequest) appsCheckTokenRequest() {}

type AppsCreateContentAttachmentApplicationJSONRequest struct {
	Body  string `json:"body"`
	Title string `json:"title"`
}

func (*AppsCreateContentAttachmentApplicationJSONRequest) appsCreateContentAttachmentRequest() {}

type AppsCreateFromManifestApplicationJSONRequest struct{}

func (*AppsCreateFromManifestApplicationJSONRequest) appsCreateFromManifestRequest() {}

type AppsCreateInstallationAccessTokenApplicationJSONRequest struct {
	Permissions   OptAppPermissions `json:"permissions"`
	Repositories  *[]string         `json:"repositories"`
	RepositoryIds *[]int            `json:"repository_ids"`
}

func (*AppsCreateInstallationAccessTokenApplicationJSONRequest) appsCreateInstallationAccessTokenRequest() {
}

type AppsDeleteAuthorizationApplicationJSONRequest struct {
	AccessToken string `json:"access_token"`
}

func (*AppsDeleteAuthorizationApplicationJSONRequest) appsDeleteAuthorizationRequest() {}

type AppsDeleteAuthorizationNoContent struct{}

type AppsDeleteInstallationNoContent struct{}

func (*AppsDeleteInstallationNoContent) appsDeleteInstallationResponse() {}

type AppsDeleteTokenApplicationJSONRequest struct {
	AccessToken string `json:"access_token"`
}

func (*AppsDeleteTokenApplicationJSONRequest) appsDeleteTokenRequest() {}

type AppsDeleteTokenNoContent struct{}

type AppsGetBySlugApplicationJSONForbidden BasicError

func (*AppsGetBySlugApplicationJSONForbidden) appsGetBySlugResponse() {}

type AppsGetBySlugApplicationJSONNotFound BasicError

func (*AppsGetBySlugApplicationJSONNotFound) appsGetBySlugResponse() {}

type AppsGetSubscriptionPlanForAccountApplicationJSONNotFound BasicError

func (*AppsGetSubscriptionPlanForAccountApplicationJSONNotFound) appsGetSubscriptionPlanForAccountResponse() {
}

type AppsGetSubscriptionPlanForAccountApplicationJSONUnauthorized BasicError

func (*AppsGetSubscriptionPlanForAccountApplicationJSONUnauthorized) appsGetSubscriptionPlanForAccountResponse() {
}

type AppsGetSubscriptionPlanForAccountStubbedNotFound struct{}

func (*AppsGetSubscriptionPlanForAccountStubbedNotFound) appsGetSubscriptionPlanForAccountStubbedResponse() {
}

type AppsListInstallationReposForAuthenticatedUserApplicationJSONForbidden BasicError

func (*AppsListInstallationReposForAuthenticatedUserApplicationJSONForbidden) appsListInstallationReposForAuthenticatedUserResponse() {
}

type AppsListInstallationReposForAuthenticatedUserApplicationJSONNotFound BasicError

func (*AppsListInstallationReposForAuthenticatedUserApplicationJSONNotFound) appsListInstallationReposForAuthenticatedUserResponse() {
}

type AppsListInstallationReposForAuthenticatedUserOK struct {
	Repositories        []Repository `json:"repositories"`
	RepositorySelection OptString    `json:"repository_selection"`
	TotalCount          int          `json:"total_count"`
}

func (*AppsListInstallationReposForAuthenticatedUserOK) appsListInstallationReposForAuthenticatedUserResponse() {
}

type AppsListPlansApplicationJSONNotFound BasicError

func (*AppsListPlansApplicationJSONNotFound) appsListPlansResponse() {}

type AppsListPlansApplicationJSONUnauthorized BasicError

func (*AppsListPlansApplicationJSONUnauthorized) appsListPlansResponse() {}

type AppsListPlansOK []MarketplaceListingPlan

func (*AppsListPlansOK) appsListPlansResponse() {}

type AppsListPlansStubbedOK []MarketplaceListingPlan

func (*AppsListPlansStubbedOK) appsListPlansStubbedResponse() {}

type AppsListReposAccessibleToInstallationApplicationJSONForbidden BasicError

func (*AppsListReposAccessibleToInstallationApplicationJSONForbidden) appsListReposAccessibleToInstallationResponse() {
}

type AppsListReposAccessibleToInstallationApplicationJSONUnauthorized BasicError

func (*AppsListReposAccessibleToInstallationApplicationJSONUnauthorized) appsListReposAccessibleToInstallationResponse() {
}

type AppsListReposAccessibleToInstallationOK struct {
	Repositories        []Repository `json:"repositories"`
	RepositorySelection OptString    `json:"repository_selection"`
	TotalCount          int          `json:"total_count"`
}

func (*AppsListReposAccessibleToInstallationOK) appsListReposAccessibleToInstallationResponse() {}

type AppsListSubscriptionsForAuthenticatedUserApplicationJSONNotFound BasicError

func (*AppsListSubscriptionsForAuthenticatedUserApplicationJSONNotFound) appsListSubscriptionsForAuthenticatedUserResponse() {
}

type AppsListSubscriptionsForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*AppsListSubscriptionsForAuthenticatedUserApplicationJSONUnauthorized) appsListSubscriptionsForAuthenticatedUserResponse() {
}

type AppsListSubscriptionsForAuthenticatedUserOK []UserMarketplacePurchase

func (*AppsListSubscriptionsForAuthenticatedUserOK) appsListSubscriptionsForAuthenticatedUserResponse() {
}

type AppsListSubscriptionsForAuthenticatedUserStubbedOK []UserMarketplacePurchase

func (*AppsListSubscriptionsForAuthenticatedUserStubbedOK) appsListSubscriptionsForAuthenticatedUserStubbedResponse() {
}

type AppsListWebhookDeliveriesOK []HookDeliveryItem

type AppsRemoveRepoFromInstallationApplicationJSONForbidden BasicError

func (*AppsRemoveRepoFromInstallationApplicationJSONForbidden) appsRemoveRepoFromInstallationResponse() {
}

type AppsRemoveRepoFromInstallationApplicationJSONNotFound BasicError

func (*AppsRemoveRepoFromInstallationApplicationJSONNotFound) appsRemoveRepoFromInstallationResponse() {
}

type AppsRemoveRepoFromInstallationNoContent struct{}

func (*AppsRemoveRepoFromInstallationNoContent) appsRemoveRepoFromInstallationResponse() {}

type AppsResetTokenApplicationJSONRequest struct {
	AccessToken string `json:"access_token"`
}

func (*AppsResetTokenApplicationJSONRequest) appsResetTokenRequest() {}

type AppsRevokeInstallationAccessToken struct{}

type AppsScopeTokenApplicationJSONRequest struct {
	AccessToken   string            `json:"access_token"`
	Permissions   OptAppPermissions `json:"permissions"`
	Repositories  *[]string         `json:"repositories"`
	RepositoryIds *[]int            `json:"repository_ids"`
	Target        OptString         `json:"target"`
	TargetID      OptInt            `json:"target_id"`
}

func (*AppsScopeTokenApplicationJSONRequest) appsScopeTokenRequest() {}

type AppsSuspendInstallationNoContent struct{}

func (*AppsSuspendInstallationNoContent) appsSuspendInstallationResponse() {}

type AppsUnsuspendInstallationNoContent struct{}

func (*AppsUnsuspendInstallationNoContent) appsUnsuspendInstallationResponse() {}

// Artifact describes #/components/schemas/artifact.
type Artifact struct {
	ArchiveDownloadURL string  `json:"archive_download_url"`
	CreatedAt          NilTime `json:"created_at"`
	Expired            bool    `json:"expired"`
	ExpiresAt          NilTime `json:"expires_at"`
	ID                 int     `json:"id"`
	Name               string  `json:"name"`
	NodeID             string  `json:"node_id"`
	SizeInBytes        int     `json:"size_in_bytes"`
	URL                string  `json:"url"`
	UpdatedAt          NilTime `json:"updated_at"`
}

// AuthenticationToken describes #/components/schemas/authentication-token.
type AuthenticationToken struct {
	ExpiresAt           time.Time                                 `json:"expires_at"`
	Permissions         *struct{}                                 `json:"permissions"`
	Repositories        *[]Repository                             `json:"repositories"`
	RepositorySelection OptAuthenticationTokenRepositorySelection `json:"repository_selection"`
	SingleFile          OptNilString                              `json:"single_file"`
	Token               string                                    `json:"token"`
}

type AuthenticationTokenRepositorySelection string

const (
	AuthenticationTokenRepositorySelectionAll      AuthenticationTokenRepositorySelection = "all"
	AuthenticationTokenRepositorySelectionSelected AuthenticationTokenRepositorySelection = "selected"
)

type AuthorAssociation string

const (
	AuthorAssociationCOLLABORATOR         AuthorAssociation = "COLLABORATOR"
	AuthorAssociationCONTRIBUTOR          AuthorAssociation = "CONTRIBUTOR"
	AuthorAssociationFIRSTTIMER           AuthorAssociation = "FIRST_TIMER"
	AuthorAssociationFIRSTTIMECONTRIBUTOR AuthorAssociation = "FIRST_TIME_CONTRIBUTOR"
	AuthorAssociationMANNEQUIN            AuthorAssociation = "MANNEQUIN"
	AuthorAssociationMEMBER               AuthorAssociation = "MEMBER"
	AuthorAssociationNONE                 AuthorAssociation = "NONE"
	AuthorAssociationOWNER                AuthorAssociation = "OWNER"
)

// Authorization describes #/components/schemas/authorization.
type Authorization struct {
	App            AuthorizationApp              `json:"app"`
	CreatedAt      time.Time                     `json:"created_at"`
	ExpiresAt      NilTime                       `json:"expires_at"`
	Fingerprint    NilString                     `json:"fingerprint"`
	HashedToken    NilString                     `json:"hashed_token"`
	ID             int                           `json:"id"`
	Installation   OptNullableScopedInstallation `json:"installation"`
	Note           NilString                     `json:"note"`
	NoteURL        NilURL                        `json:"note_url"`
	Scopes         []string                      `json:"scopes"`
	Token          string                        `json:"token"`
	TokenLastEight NilString                     `json:"token_last_eight"`
	URL            url.URL                       `json:"url"`
	UpdatedAt      time.Time                     `json:"updated_at"`
	User           OptNullableSimpleUser         `json:"user"`
}

func (*Authorization) oAuthAuthorizationsGetAuthorizationResponse() {}

type AuthorizationApp struct {
	ClientID string  `json:"client_id"`
	Name     string  `json:"name"`
	URL      url.URL `json:"url"`
}

// AutoMerge describes #/components/schemas/auto_merge.
type AutoMerge struct {
	CommitMessage string               `json:"commit_message"`
	CommitTitle   string               `json:"commit_title"`
	EnabledBy     SimpleUser           `json:"enabled_by"`
	MergeMethod   AutoMergeMergeMethod `json:"merge_method"`
}

type AutoMergeMergeMethod string

const (
	AutoMergeMergeMethodMerge  AutoMergeMergeMethod = "merge"
	AutoMergeMergeMethodSquash AutoMergeMergeMethod = "squash"
	AutoMergeMergeMethodRebase AutoMergeMergeMethod = "rebase"
)

// Autolink describes #/components/schemas/autolink.
type Autolink struct {
	ID          int    `json:"id"`
	KeyPrefix   string `json:"key_prefix"`
	URLTemplate string `json:"url_template"`
}

func (*Autolink) reposGetAutolinkResponse() {}

// BaseGist describes #/components/schemas/base-gist.
type BaseGist struct {
	Comments    int                `json:"comments"`
	CommentsURL url.URL            `json:"comments_url"`
	CommitsURL  url.URL            `json:"commits_url"`
	CreatedAt   time.Time          `json:"created_at"`
	Description NilString          `json:"description"`
	Files       struct{}           `json:"files"`
	Forks       *[]string          `json:"forks"`
	ForksURL    url.URL            `json:"forks_url"`
	GitPullURL  url.URL            `json:"git_pull_url"`
	GitPushURL  url.URL            `json:"git_push_url"`
	HTMLURL     url.URL            `json:"html_url"`
	History     *[]string          `json:"history"`
	ID          string             `json:"id"`
	NodeID      string             `json:"node_id"`
	Owner       OptSimpleUser      `json:"owner"`
	Public      bool               `json:"public"`
	Truncated   OptBool            `json:"truncated"`
	URL         url.URL            `json:"url"`
	UpdatedAt   time.Time          `json:"updated_at"`
	User        NullableSimpleUser `json:"user"`
}

// BasicError describes #/components/schemas/basic-error.
type BasicError struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
	Status           OptString `json:"status"`
	URL              OptString `json:"url"`
}

func (*BasicError) activityGetRepoSubscriptionResponse()                      {}
func (*BasicError) activityListPublicEventsResponse()                         {}
func (*BasicError) activityMarkThreadAsReadResponse()                         {}
func (*BasicError) appsDeleteInstallationResponse()                           {}
func (*BasicError) appsGetSubscriptionPlanForAccountStubbedResponse()         {}
func (*BasicError) appsListPlansStubbedResponse()                             {}
func (*BasicError) appsListSubscriptionsForAuthenticatedUserStubbedResponse() {}
func (*BasicError) appsSuspendInstallationResponse()                          {}
func (*BasicError) appsUnsuspendInstallationResponse()                        {}
func (*BasicError) codeScanningGetSarifResponse()                             {}
func (*BasicError) codesOfConductGetConductCodeResponse()                     {}
func (*BasicError) gistsCheckIsStarredResponse()                              {}
func (*BasicError) gistsGetCommentResponse()                                  {}
func (*BasicError) gistsGetResponse()                                         {}
func (*BasicError) gistsListResponse()                                        {}
func (*BasicError) gistsUpdateCommentResponse()                               {}
func (*BasicError) gitGetCommitResponse()                                     {}
func (*BasicError) gitGetRefResponse()                                        {}
func (*BasicError) gitGetTagResponse()                                        {}
func (*BasicError) issuesCheckUserCanBeAssignedResponse()                     {}
func (*BasicError) issuesDeleteMilestoneResponse()                            {}
func (*BasicError) issuesGetCommentResponse()                                 {}
func (*BasicError) issuesGetLabelResponse()                                   {}
func (*BasicError) issuesGetMilestoneResponse()                               {}
func (*BasicError) issuesListAssigneesResponse()                              {}
func (*BasicError) issuesListLabelsForRepoResponse()                          {}
func (*BasicError) issuesListLabelsOnIssueResponse()                          {}
func (*BasicError) issuesRemoveAllLabelsResponse()                            {}
func (*BasicError) migrationsDeleteArchiveForOrgResponse()                    {}
func (*BasicError) migrationsDownloadArchiveForOrgResponse()                  {}
func (*BasicError) migrationsGetCommitAuthorsResponse()                       {}
func (*BasicError) migrationsGetImportStatusResponse()                        {}
func (*BasicError) migrationsListReposForOrgResponse()                        {}
func (*BasicError) migrationsListReposForUserResponse()                       {}
func (*BasicError) migrationsUnlockRepoForOrgResponse()                       {}
func (*BasicError) orgsCheckBlockedUserResponse()                             {}
func (*BasicError) orgsConvertMemberToOutsideCollaboratorResponse()           {}
func (*BasicError) orgsDeleteWebhookResponse()                                {}
func (*BasicError) orgsGetResponse()                                          {}
func (*BasicError) orgsGetWebhookResponse()                                   {}
func (*BasicError) orgsListFailedInvitationsResponse()                        {}
func (*BasicError) orgsListInvitationTeamsResponse()                          {}
func (*BasicError) orgsListPendingInvitationsResponse()                       {}
func (*BasicError) orgsListWebhooksResponse()                                 {}
func (*BasicError) orgsPingWebhookResponse()                                  {}
func (*BasicError) orgsRemoveMemberResponse()                                 {}
func (*BasicError) orgsRemoveSamlSSOAuthorizationResponse()                   {}
func (*BasicError) orgsSetPublicMembershipForAuthenticatedUserResponse()      {}
func (*BasicError) pullsCreateReplyForReviewCommentResponse()                 {}
func (*BasicError) pullsCreateReviewResponse()                                {}
func (*BasicError) pullsDeletePendingReviewResponse()                         {}
func (*BasicError) pullsDeleteReviewCommentResponse()                         {}
func (*BasicError) pullsDismissReviewResponse()                               {}
func (*BasicError) pullsGetReviewCommentResponse()                            {}
func (*BasicError) pullsGetReviewResponse()                                   {}
func (*BasicError) pullsListCommentsForReviewResponse()                       {}
func (*BasicError) rateLimitGetResponse()                                     {}
func (*BasicError) reposCreateCommitSignatureProtectionResponse()             {}
func (*BasicError) reposDeleteAdminBranchProtectionResponse()                 {}
func (*BasicError) reposDeleteAutolinkResponse()                              {}
func (*BasicError) reposDeleteBranchProtectionResponse()                      {}
func (*BasicError) reposDeleteCommitCommentResponse()                         {}
func (*BasicError) reposDeleteCommitSignatureProtectionResponse()             {}
func (*BasicError) reposDeleteDeploymentResponse()                            {}
func (*BasicError) reposDeletePullRequestReviewProtectionResponse()           {}
func (*BasicError) reposDeleteWebhookResponse()                               {}
func (*BasicError) reposGetAccessRestrictionsResponse()                       {}
func (*BasicError) reposGetAllStatusCheckContextsResponse()                   {}
func (*BasicError) reposGetAllTopicsResponse()                                {}
func (*BasicError) reposGetAppsWithAccessToProtectedBranchResponse()          {}
func (*BasicError) reposGetAutolinkResponse()                                 {}
func (*BasicError) reposGetBranchProtectionResponse()                         {}
func (*BasicError) reposGetCollaboratorPermissionLevelResponse()              {}
func (*BasicError) reposGetCombinedStatusForRefResponse()                     {}
func (*BasicError) reposGetCommitCommentResponse()                            {}
func (*BasicError) reposGetCommitSignatureProtectionResponse()                {}
func (*BasicError) reposGetDeployKeyResponse()                                {}
func (*BasicError) reposGetDeploymentStatusResponse()                         {}
func (*BasicError) reposGetPagesHealthCheckResponse()                         {}
func (*BasicError) reposGetPagesResponse()                                    {}
func (*BasicError) reposGetParticipationStatsResponse()                       {}
func (*BasicError) reposGetReleaseAssetResponse()                             {}
func (*BasicError) reposGetReleaseByTagResponse()                             {}
func (*BasicError) reposGetReleaseResponse()                                  {}
func (*BasicError) reposGetStatusChecksProtectionResponse()                   {}
func (*BasicError) reposGetTeamsWithAccessToProtectedBranchResponse()         {}
func (*BasicError) reposGetTopPathsResponse()                                 {}
func (*BasicError) reposGetTopReferrersResponse()                             {}
func (*BasicError) reposGetUsersWithAccessToProtectedBranchResponse()         {}
func (*BasicError) reposListBranchesResponse()                                {}
func (*BasicError) reposListCommitStatusesForRefResponse()                    {}
func (*BasicError) reposListDeploymentStatusesResponse()                      {}
func (*BasicError) reposListReleasesResponse()                                {}
func (*BasicError) reposPingWebhookResponse()                                 {}
func (*BasicError) reposReplaceAllTopicsResponse()                            {}
func (*BasicError) reposTestPushWebhookResponse()                             {}
func (*BasicError) reposUpdateCommitCommentResponse()                         {}
func (*BasicError) reposUpdateReleaseResponse()                               {}
func (*BasicError) teamsAddMemberLegacyResponse()                             {}
func (*BasicError) teamsAddOrUpdateMembershipForUserLegacyResponse()          {}
func (*BasicError) teamsGetByNameResponse()                                   {}
func (*BasicError) teamsGetLegacyResponse()                                   {}
func (*BasicError) teamsGetMembershipForUserLegacyResponse()                  {}
func (*BasicError) teamsListProjectsLegacyResponse()                          {}
func (*BasicError) teamsListReposLegacyResponse()                             {}
func (*BasicError) teamsListResponse()                                        {}

// Blob describes #/components/schemas/blob.
type Blob struct {
	Content            string    `json:"content"`
	Encoding           string    `json:"encoding"`
	HighlightedContent OptString `json:"highlighted_content"`
	NodeID             string    `json:"node_id"`
	Sha                string    `json:"sha"`
	Size               NilInt    `json:"size"`
	URL                url.URL   `json:"url"`
}

// BranchProtection describes #/components/schemas/branch-protection.
type BranchProtection struct {
	AllowDeletions                 OptBranchProtectionAllowDeletions                 `json:"allow_deletions"`
	AllowForcePushes               OptBranchProtectionAllowForcePushes               `json:"allow_force_pushes"`
	Enabled                        OptBool                                           `json:"enabled"`
	EnforceAdmins                  OptProtectedBranchAdminEnforced                   `json:"enforce_admins"`
	Name                           OptString                                         `json:"name"`
	ProtectionURL                  OptString                                         `json:"protection_url"`
	RequiredConversationResolution OptBranchProtectionRequiredConversationResolution `json:"required_conversation_resolution"`
	RequiredLinearHistory          OptBranchProtectionRequiredLinearHistory          `json:"required_linear_history"`
	RequiredPullRequestReviews     OptProtectedBranchPullRequestReview               `json:"required_pull_request_reviews"`
	RequiredSignatures             OptBranchProtectionRequiredSignatures             `json:"required_signatures"`
	RequiredStatusChecks           OptBranchProtectionRequiredStatusChecks           `json:"required_status_checks"`
	Restrictions                   OptBranchRestrictionPolicy                        `json:"restrictions"`
	URL                            OptString                                         `json:"url"`
}

func (*BranchProtection) reposGetBranchProtectionResponse() {}

type BranchProtectionAllowDeletions struct {
	Enabled OptBool `json:"enabled"`
}

type BranchProtectionAllowForcePushes struct {
	Enabled OptBool `json:"enabled"`
}

type BranchProtectionRequiredConversationResolution struct {
	Enabled OptBool `json:"enabled"`
}

type BranchProtectionRequiredLinearHistory struct {
	Enabled OptBool `json:"enabled"`
}

type BranchProtectionRequiredSignatures struct {
	Enabled bool    `json:"enabled"`
	URL     url.URL `json:"url"`
}

type BranchProtectionRequiredStatusChecks struct {
	Contexts         []string  `json:"contexts"`
	ContextsURL      OptString `json:"contexts_url"`
	EnforcementLevel OptString `json:"enforcement_level"`
	Strict           OptBool   `json:"strict"`
	URL              OptString `json:"url"`
}

// BranchRestrictionPolicy describes #/components/schemas/branch-restriction-policy.
type BranchRestrictionPolicy struct {
	Apps     []BranchRestrictionPolicyAppsItem  `json:"apps"`
	AppsURL  url.URL                            `json:"apps_url"`
	Teams    []BranchRestrictionPolicyTeamsItem `json:"teams"`
	TeamsURL url.URL                            `json:"teams_url"`
	URL      url.URL                            `json:"url"`
	Users    []BranchRestrictionPolicyUsersItem `json:"users"`
	UsersURL url.URL                            `json:"users_url"`
}

func (*BranchRestrictionPolicy) reposGetAccessRestrictionsResponse() {}

type BranchRestrictionPolicyAppsItem struct {
	CreatedAt   OptString                                     `json:"created_at"`
	Description OptString                                     `json:"description"`
	Events      *[]string                                     `json:"events"`
	ExternalURL OptString                                     `json:"external_url"`
	HTMLURL     OptString                                     `json:"html_url"`
	ID          OptInt                                        `json:"id"`
	Name        OptString                                     `json:"name"`
	NodeID      OptString                                     `json:"node_id"`
	Owner       OptBranchRestrictionPolicyAppsItemOwner       `json:"owner"`
	Permissions OptBranchRestrictionPolicyAppsItemPermissions `json:"permissions"`
	Slug        OptString                                     `json:"slug"`
	UpdatedAt   OptString                                     `json:"updated_at"`
}

type BranchRestrictionPolicyAppsItemOwner struct {
	AvatarURL         OptString `json:"avatar_url"`
	Description       OptString `json:"description"`
	EventsURL         OptString `json:"events_url"`
	FollowersURL      OptString `json:"followers_url"`
	FollowingURL      OptString `json:"following_url"`
	GistsURL          OptString `json:"gists_url"`
	GravatarID        OptString `json:"gravatar_id"`
	HTMLURL           OptString `json:"html_url"`
	HooksURL          OptString `json:"hooks_url"`
	ID                OptInt    `json:"id"`
	IssuesURL         OptString `json:"issues_url"`
	Login             OptString `json:"login"`
	MembersURL        OptString `json:"members_url"`
	NodeID            OptString `json:"node_id"`
	OrganizationsURL  OptString `json:"organizations_url"`
	PublicMembersURL  OptString `json:"public_members_url"`
	ReceivedEventsURL OptString `json:"received_events_url"`
	ReposURL          OptString `json:"repos_url"`
	SiteAdmin         OptBool   `json:"site_admin"`
	StarredURL        OptString `json:"starred_url"`
	SubscriptionsURL  OptString `json:"subscriptions_url"`
	Type              OptString `json:"type"`
	URL               OptString `json:"url"`
}

type BranchRestrictionPolicyAppsItemPermissions struct {
	Contents   OptString `json:"contents"`
	Issues     OptString `json:"issues"`
	Metadata   OptString `json:"metadata"`
	SingleFile OptString `json:"single_file"`
}

type BranchRestrictionPolicyTeamsItem struct {
	Description     OptNilString `json:"description"`
	HTMLURL         OptString    `json:"html_url"`
	ID              OptInt       `json:"id"`
	MembersURL      OptString    `json:"members_url"`
	Name            OptString    `json:"name"`
	NodeID          OptString    `json:"node_id"`
	Parent          OptNilString `json:"parent"`
	Permission      OptString    `json:"permission"`
	Privacy         OptString    `json:"privacy"`
	RepositoriesURL OptString    `json:"repositories_url"`
	Slug            OptString    `json:"slug"`
	URL             OptString    `json:"url"`
}

type BranchRestrictionPolicyUsersItem struct {
	AvatarURL         OptString `json:"avatar_url"`
	EventsURL         OptString `json:"events_url"`
	FollowersURL      OptString `json:"followers_url"`
	FollowingURL      OptString `json:"following_url"`
	GistsURL          OptString `json:"gists_url"`
	GravatarID        OptString `json:"gravatar_id"`
	HTMLURL           OptString `json:"html_url"`
	ID                OptInt    `json:"id"`
	Login             OptString `json:"login"`
	NodeID            OptString `json:"node_id"`
	OrganizationsURL  OptString `json:"organizations_url"`
	ReceivedEventsURL OptString `json:"received_events_url"`
	ReposURL          OptString `json:"repos_url"`
	SiteAdmin         OptBool   `json:"site_admin"`
	StarredURL        OptString `json:"starred_url"`
	SubscriptionsURL  OptString `json:"subscriptions_url"`
	Type              OptString `json:"type"`
	URL               OptString `json:"url"`
}

// BranchShort describes #/components/schemas/branch-short.
type BranchShort struct {
	Commit    BranchShortCommit `json:"commit"`
	Name      string            `json:"name"`
	Protected bool              `json:"protected"`
}

type BranchShortCommit struct {
	Sha string `json:"sha"`
	URL string `json:"url"`
}

// BranchWithProtection describes #/components/schemas/branch-with-protection.
type BranchWithProtection struct {
	Commit                       Commit                    `json:"commit"`
	Links                        BranchWithProtectionLinks `json:"_links"`
	Name                         string                    `json:"name"`
	Pattern                      OptString                 `json:"pattern"`
	Protected                    bool                      `json:"protected"`
	Protection                   BranchProtection          `json:"protection"`
	ProtectionURL                url.URL                   `json:"protection_url"`
	RequiredApprovingReviewCount OptInt                    `json:"required_approving_review_count"`
}

func (*BranchWithProtection) reposGetBranchResponse() {}

type BranchWithProtectionLinks struct {
	HTML string  `json:"html"`
	Self url.URL `json:"self"`
}

// CheckAnnotation describes #/components/schemas/check-annotation.
type CheckAnnotation struct {
	AnnotationLevel NilString `json:"annotation_level"`
	BlobHref        string    `json:"blob_href"`
	EndColumn       NilInt    `json:"end_column"`
	EndLine         int       `json:"end_line"`
	Message         NilString `json:"message"`
	Path            string    `json:"path"`
	RawDetails      NilString `json:"raw_details"`
	StartColumn     NilInt    `json:"start_column"`
	StartLine       int       `json:"start_line"`
	Title           NilString `json:"title"`
}

// CheckRun describes #/components/schemas/check-run.
type CheckRun struct {
	App          NullableIntegration   `json:"app"`
	CheckSuite   NilCheckRunCheckSuite `json:"check_suite"`
	CompletedAt  NilTime               `json:"completed_at"`
	Conclusion   NilCheckRunConclusion `json:"conclusion"`
	Deployment   OptDeploymentSimple   `json:"deployment"`
	DetailsURL   NilString             `json:"details_url"`
	ExternalID   NilString             `json:"external_id"`
	HTMLURL      NilString             `json:"html_url"`
	HeadSha      string                `json:"head_sha"`
	ID           int                   `json:"id"`
	Name         string                `json:"name"`
	NodeID       string                `json:"node_id"`
	Output       CheckRunOutput        `json:"output"`
	PullRequests string                `json:"pull_requests"`
	StartedAt    NilTime               `json:"started_at"`
	Status       CheckRunStatus        `json:"status"`
	URL          string                `json:"url"`
}

type CheckRunCheckSuite struct {
	ID int `json:"id"`
}

type CheckRunConclusion string

const (
	CheckRunConclusionSuccess        CheckRunConclusion = "success"
	CheckRunConclusionFailure        CheckRunConclusion = "failure"
	CheckRunConclusionNeutral        CheckRunConclusion = "neutral"
	CheckRunConclusionCancelled      CheckRunConclusion = "cancelled"
	CheckRunConclusionSkipped        CheckRunConclusion = "skipped"
	CheckRunConclusionTimedOut       CheckRunConclusion = "timed_out"
	CheckRunConclusionActionRequired CheckRunConclusion = "action_required"
)

type CheckRunOutput struct {
	AnnotationsCount int       `json:"annotations_count"`
	AnnotationsURL   url.URL   `json:"annotations_url"`
	Summary          NilString `json:"summary"`
	Text             NilString `json:"text"`
	Title            NilString `json:"title"`
}

type CheckRunStatus string

const (
	CheckRunStatusQueued     CheckRunStatus = "queued"
	CheckRunStatusInProgress CheckRunStatus = "in_progress"
	CheckRunStatusCompleted  CheckRunStatus = "completed"
)

// CheckSuite describes #/components/schemas/check-suite.
type CheckSuite struct {
	After                NilString               `json:"after"`
	App                  NullableIntegration     `json:"app"`
	Before               NilString               `json:"before"`
	CheckRunsURL         string                  `json:"check_runs_url"`
	Conclusion           NilCheckSuiteConclusion `json:"conclusion"`
	CreatedAt            NilTime                 `json:"created_at"`
	HeadBranch           NilString               `json:"head_branch"`
	HeadCommit           SimpleCommit            `json:"head_commit"`
	HeadSha              string                  `json:"head_sha"`
	ID                   int                     `json:"id"`
	LatestCheckRunsCount int                     `json:"latest_check_runs_count"`
	NodeID               string                  `json:"node_id"`
	PullRequests         []PullRequestMinimal    `json:"pull_requests"`
	Repository           MinimalRepository       `json:"repository"`
	Status               NilCheckSuiteStatus     `json:"status"`
	URL                  NilString               `json:"url"`
	UpdatedAt            NilTime                 `json:"updated_at"`
}

type CheckSuiteConclusion string

const (
	CheckSuiteConclusionSuccess        CheckSuiteConclusion = "success"
	CheckSuiteConclusionFailure        CheckSuiteConclusion = "failure"
	CheckSuiteConclusionNeutral        CheckSuiteConclusion = "neutral"
	CheckSuiteConclusionCancelled      CheckSuiteConclusion = "cancelled"
	CheckSuiteConclusionSkipped        CheckSuiteConclusion = "skipped"
	CheckSuiteConclusionTimedOut       CheckSuiteConclusion = "timed_out"
	CheckSuiteConclusionActionRequired CheckSuiteConclusion = "action_required"
)

// CheckSuitePreference describes #/components/schemas/check-suite-preference.
type CheckSuitePreference struct {
	Preferences CheckSuitePreferencePreferences `json:"preferences"`
	Repository  MinimalRepository               `json:"repository"`
}

type CheckSuitePreferencePreferences struct {
	AutoTriggerChecks *[]CheckSuitePreferencePreferencesAutoTriggerChecksItem `json:"auto_trigger_checks"`
}

type CheckSuitePreferencePreferencesAutoTriggerChecksItem struct {
	AppID   int  `json:"app_id"`
	Setting bool `json:"setting"`
}

type CheckSuiteStatus string

const (
	CheckSuiteStatusQueued     CheckSuiteStatus = "queued"
	CheckSuiteStatusInProgress CheckSuiteStatus = "in_progress"
	CheckSuiteStatusCompleted  CheckSuiteStatus = "completed"
)

type ChecksCreateSuiteApplicationJSONCreated CheckSuite

func (*ChecksCreateSuiteApplicationJSONCreated) checksCreateSuiteResponse() {}

type ChecksCreateSuiteApplicationJSONOK CheckSuite

func (*ChecksCreateSuiteApplicationJSONOK) checksCreateSuiteResponse() {}

type ChecksCreateSuiteApplicationJSONRequest struct {
	HeadSha string `json:"head_sha"`
}

type ChecksListSuitesForRef struct {
	CheckSuites []CheckSuite `json:"check_suites"`
	TotalCount  int          `json:"total_count"`
}

type ChecksRerequestSuite struct{}

type ChecksSetSuitesPreferencesApplicationJSONRequest struct {
	AutoTriggerChecks *[]ChecksSetSuitesPreferencesApplicationJSONRequestAutoTriggerChecksItem `json:"auto_trigger_checks"`
}

type ChecksSetSuitesPreferencesApplicationJSONRequestAutoTriggerChecksItem struct {
	AppID   int  `json:"app_id"`
	Setting bool `json:"setting"`
}

type CodeFrequencyStat []int

// CodeOfConduct describes #/components/schemas/code-of-conduct.
type CodeOfConduct struct {
	Body    OptString `json:"body"`
	HTMLURL NilURL    `json:"html_url"`
	Key     string    `json:"key"`
	Name    string    `json:"name"`
	URL     url.URL   `json:"url"`
}

func (*CodeOfConduct) codesOfConductGetConductCodeResponse() {}

// CodeOfConductSimple describes #/components/schemas/code-of-conduct-simple.
type CodeOfConductSimple struct {
	HTMLURL NilURL  `json:"html_url"`
	Key     string  `json:"key"`
	Name    string  `json:"name"`
	URL     url.URL `json:"url"`
}

// CodeScanningAlert describes #/components/schemas/code-scanning-alert.
type CodeScanningAlert struct {
	CreatedAt          AlertCreatedAt                   `json:"created_at"`
	DismissedAt        CodeScanningAlertDismissedAt     `json:"dismissed_at"`
	DismissedBy        NullableSimpleUser               `json:"dismissed_by"`
	DismissedReason    CodeScanningAlertDismissedReason `json:"dismissed_reason"`
	HTMLURL            AlertHTMLURL                     `json:"html_url"`
	Instances          OptString                        `json:"instances"`
	InstancesURL       AlertInstancesURL                `json:"instances_url"`
	MostRecentInstance CodeScanningAlertInstance        `json:"most_recent_instance"`
	Number             AlertNumber                      `json:"number"`
	Rule               CodeScanningAlertRule            `json:"rule"`
	State              CodeScanningAlertState           `json:"state"`
	Tool               CodeScanningAnalysisTool         `json:"tool"`
	URL                AlertURL                         `json:"url"`
}

func (*CodeScanningAlert) codeScanningGetAlertResponse()    {}
func (*CodeScanningAlert) codeScanningUpdateAlertResponse() {}

type CodeScanningAlertClassification string

const (
	CodeScanningAlertClassificationSource    CodeScanningAlertClassification = "source"
	CodeScanningAlertClassificationGenerated CodeScanningAlertClassification = "generated"
	CodeScanningAlertClassificationTest      CodeScanningAlertClassification = "test"
	CodeScanningAlertClassificationLibrary   CodeScanningAlertClassification = "library"
)

type CodeScanningAlertDismissedAt time.Time

type CodeScanningAlertDismissedReason string

const (
	CodeScanningAlertDismissedReasonFalsePositive CodeScanningAlertDismissedReason = "false positive"
	CodeScanningAlertDismissedReasonWonTFix       CodeScanningAlertDismissedReason = "won't fix"
	CodeScanningAlertDismissedReasonUsedInTests   CodeScanningAlertDismissedReason = "used in tests"
)

type CodeScanningAlertEnvironment string

// CodeScanningAlertInstance describes #/components/schemas/code-scanning-alert-instance.
type CodeScanningAlertInstance struct {
	AnalysisKey     *CodeScanningAnalysisAnalysisKey    `json:"analysis_key"`
	Category        *CodeScanningAnalysisCategory       `json:"category"`
	Classifications *[]CodeScanningAlertClassification  `json:"classifications"`
	CommitSha       OptString                           `json:"commit_sha"`
	Environment     *CodeScanningAlertEnvironment       `json:"environment"`
	HTMLURL         OptString                           `json:"html_url"`
	Location        OptCodeScanningAlertLocation        `json:"location"`
	Message         OptCodeScanningAlertInstanceMessage `json:"message"`
	Ref             *CodeScanningRef                    `json:"ref"`
	State           OptCodeScanningAlertState           `json:"state"`
}

type CodeScanningAlertInstanceMessage struct {
	Text OptString `json:"text"`
}

// CodeScanningAlertLocation describes #/components/schemas/code-scanning-alert-location.
type CodeScanningAlertLocation struct {
	EndColumn   OptInt    `json:"end_column"`
	EndLine     OptInt    `json:"end_line"`
	Path        OptString `json:"path"`
	StartColumn OptInt    `json:"start_column"`
	StartLine   OptInt    `json:"start_line"`
}

// CodeScanningAlertRule describes #/components/schemas/code-scanning-alert-rule.
type CodeScanningAlertRule struct {
	Description           OptString                                        `json:"description"`
	FullDescription       OptString                                        `json:"full_description"`
	Help                  OptNilString                                     `json:"help"`
	ID                    OptNilString                                     `json:"id"`
	Name                  OptString                                        `json:"name"`
	SecuritySeverityLevel OptNilCodeScanningAlertRuleSecuritySeverityLevel `json:"security_severity_level"`
	Severity              OptNilCodeScanningAlertRuleSeverity              `json:"severity"`
	Tags                  *[]string                                        `json:"tags"`
}

type CodeScanningAlertRuleSecuritySeverityLevel string

const (
	CodeScanningAlertRuleSecuritySeverityLevelLow      CodeScanningAlertRuleSecuritySeverityLevel = "low"
	CodeScanningAlertRuleSecuritySeverityLevelMedium   CodeScanningAlertRuleSecuritySeverityLevel = "medium"
	CodeScanningAlertRuleSecuritySeverityLevelHigh     CodeScanningAlertRuleSecuritySeverityLevel = "high"
	CodeScanningAlertRuleSecuritySeverityLevelCritical CodeScanningAlertRuleSecuritySeverityLevel = "critical"
)

type CodeScanningAlertRuleSeverity string

const (
	CodeScanningAlertRuleSeverityNone    CodeScanningAlertRuleSeverity = "none"
	CodeScanningAlertRuleSeverityNote    CodeScanningAlertRuleSeverity = "note"
	CodeScanningAlertRuleSeverityWarning CodeScanningAlertRuleSeverity = "warning"
	CodeScanningAlertRuleSeverityError   CodeScanningAlertRuleSeverity = "error"
)

type CodeScanningAlertSetState string

const (
	CodeScanningAlertSetStateOpen      CodeScanningAlertSetState = "open"
	CodeScanningAlertSetStateDismissed CodeScanningAlertSetState = "dismissed"
)

type CodeScanningAlertState string

const (
	CodeScanningAlertStateOpen      CodeScanningAlertState = "open"
	CodeScanningAlertStateClosed    CodeScanningAlertState = "closed"
	CodeScanningAlertStateDismissed CodeScanningAlertState = "dismissed"
	CodeScanningAlertStateFixed     CodeScanningAlertState = "fixed"
)

// CodeScanningAnalysis describes #/components/schemas/code-scanning-analysis.
type CodeScanningAnalysis struct {
	AnalysisKey  CodeScanningAnalysisAnalysisKey `json:"analysis_key"`
	Category     *CodeScanningAnalysisCategory   `json:"category"`
	CommitSha    CodeScanningAnalysisCommitSha   `json:"commit_sha"`
	CreatedAt    CodeScanningAnalysisCreatedAt   `json:"created_at"`
	Deletable    bool                            `json:"deletable"`
	Environment  CodeScanningAnalysisEnvironment `json:"environment"`
	Error        string                          `json:"error"`
	ID           int                             `json:"id"`
	Ref          CodeScanningRef                 `json:"ref"`
	ResultsCount int                             `json:"results_count"`
	RulesCount   int                             `json:"rules_count"`
	SarifID      CodeScanningAnalysisSarifID     `json:"sarif_id"`
	Tool         CodeScanningAnalysisTool        `json:"tool"`
	ToolName     OptString                       `json:"tool_name"`
	URL          CodeScanningAnalysisURL         `json:"url"`
	Warning      string                          `json:"warning"`
}

func (*CodeScanningAnalysis) codeScanningGetAnalysisResponse() {}

type CodeScanningAnalysisAnalysisKey string

type CodeScanningAnalysisCategory string

type CodeScanningAnalysisCommitSha string

type CodeScanningAnalysisCreatedAt time.Time

// CodeScanningAnalysisDeletion describes #/components/schemas/code-scanning-analysis-deletion.
type CodeScanningAnalysisDeletion struct {
	ConfirmDeleteURL NilURL `json:"confirm_delete_url"`
	NextAnalysisURL  NilURL `json:"next_analysis_url"`
}

func (*CodeScanningAnalysisDeletion) codeScanningDeleteAnalysisResponse() {}

type CodeScanningAnalysisEnvironment string

type CodeScanningAnalysisSarifFile string

type CodeScanningAnalysisSarifID string

// CodeScanningAnalysisTool describes #/components/schemas/code-scanning-analysis-tool.
type CodeScanningAnalysisTool struct {
	GUID    *CodeScanningAnalysisToolGUID    `json:"guid"`
	Name    *CodeScanningAnalysisToolName    `json:"name"`
	Version *CodeScanningAnalysisToolVersion `json:"version"`
}

type CodeScanningAnalysisToolGUID string

type CodeScanningAnalysisToolName string

type CodeScanningAnalysisToolVersion string

type CodeScanningAnalysisURL url.URL

type CodeScanningDeleteAnalysisApplicationJSONBadRequest BasicError

func (*CodeScanningDeleteAnalysisApplicationJSONBadRequest) codeScanningDeleteAnalysisResponse() {}

type CodeScanningDeleteAnalysisApplicationJSONForbidden BasicError

func (*CodeScanningDeleteAnalysisApplicationJSONForbidden) codeScanningDeleteAnalysisResponse() {}

type CodeScanningDeleteAnalysisApplicationJSONNotFound BasicError

func (*CodeScanningDeleteAnalysisApplicationJSONNotFound) codeScanningDeleteAnalysisResponse() {}

type CodeScanningGetAlertApplicationJSONForbidden BasicError

func (*CodeScanningGetAlertApplicationJSONForbidden) codeScanningGetAlertResponse() {}

type CodeScanningGetAlertApplicationJSONNotFound BasicError

func (*CodeScanningGetAlertApplicationJSONNotFound) codeScanningGetAlertResponse() {}

type CodeScanningGetAnalysisApplicationJSONForbidden BasicError

func (*CodeScanningGetAnalysisApplicationJSONForbidden) codeScanningGetAnalysisResponse() {}

type CodeScanningGetAnalysisApplicationJSONNotFound BasicError

func (*CodeScanningGetAnalysisApplicationJSONNotFound) codeScanningGetAnalysisResponse() {}

type CodeScanningGetAnalysisOKApplicationJSONSarif string

func (*CodeScanningGetAnalysisOKApplicationJSONSarif) codeScanningGetAnalysisResponse() {}

type CodeScanningGetSarifNotFound struct{}

func (*CodeScanningGetSarifNotFound) codeScanningGetSarifResponse() {}

type CodeScanningListAlertInstancesApplicationJSONForbidden BasicError

func (*CodeScanningListAlertInstancesApplicationJSONForbidden) codeScanningListAlertInstancesResponse() {
}

type CodeScanningListAlertInstancesApplicationJSONNotFound BasicError

func (*CodeScanningListAlertInstancesApplicationJSONNotFound) codeScanningListAlertInstancesResponse() {
}

type CodeScanningListAlertInstancesOK []CodeScanningAlertInstance

func (*CodeScanningListAlertInstancesOK) codeScanningListAlertInstancesResponse() {}

type CodeScanningListRecentAnalysesApplicationJSONForbidden BasicError

func (*CodeScanningListRecentAnalysesApplicationJSONForbidden) codeScanningListRecentAnalysesResponse() {
}

type CodeScanningListRecentAnalysesApplicationJSONNotFound BasicError

func (*CodeScanningListRecentAnalysesApplicationJSONNotFound) codeScanningListRecentAnalysesResponse() {
}

type CodeScanningListRecentAnalysesOK []CodeScanningAnalysis

func (*CodeScanningListRecentAnalysesOK) codeScanningListRecentAnalysesResponse() {}

type CodeScanningRef string

// CodeScanningSarifsReceipt describes #/components/schemas/code-scanning-sarifs-receipt.
type CodeScanningSarifsReceipt struct {
	ID  *CodeScanningAnalysisSarifID `json:"id"`
	URL OptURL                       `json:"url"`
}

func (*CodeScanningSarifsReceipt) codeScanningUploadSarifResponse() {}

// CodeScanningSarifsStatus describes #/components/schemas/code-scanning-sarifs-status.
type CodeScanningSarifsStatus struct {
	AnalysesURL      OptNilURL                                   `json:"analyses_url"`
	ProcessingStatus OptCodeScanningSarifsStatusProcessingStatus `json:"processing_status"`
}

func (*CodeScanningSarifsStatus) codeScanningGetSarifResponse() {}

type CodeScanningSarifsStatusProcessingStatus string

const (
	CodeScanningSarifsStatusProcessingStatusPending  CodeScanningSarifsStatusProcessingStatus = "pending"
	CodeScanningSarifsStatusProcessingStatusComplete CodeScanningSarifsStatusProcessingStatus = "complete"
)

type CodeScanningUpdateAlertApplicationJSONForbidden BasicError

func (*CodeScanningUpdateAlertApplicationJSONForbidden) codeScanningUpdateAlertResponse() {}

type CodeScanningUpdateAlertApplicationJSONNotFound BasicError

func (*CodeScanningUpdateAlertApplicationJSONNotFound) codeScanningUpdateAlertResponse() {}

type CodeScanningUpdateAlertApplicationJSONRequest struct {
	DismissedReason OptCodeScanningAlertDismissedReason `json:"dismissed_reason"`
	State           CodeScanningAlertSetState           `json:"state"`
}

type CodeScanningUploadSarifApplicationJSONForbidden BasicError

func (*CodeScanningUploadSarifApplicationJSONForbidden) codeScanningUploadSarifResponse() {}

type CodeScanningUploadSarifApplicationJSONNotFound BasicError

func (*CodeScanningUploadSarifApplicationJSONNotFound) codeScanningUploadSarifResponse() {}

type CodeScanningUploadSarifApplicationJSONRequest struct {
	CheckoutURI OptURL                        `json:"checkout_uri"`
	CommitSha   CodeScanningAnalysisCommitSha `json:"commit_sha"`
	Ref         CodeScanningRef               `json:"ref"`
	Sarif       CodeScanningAnalysisSarifFile `json:"sarif"`
	StartedAt   OptTime                       `json:"started_at"`
	ToolName    OptString                     `json:"tool_name"`
}

type CodeScanningUploadSarifBadRequest struct{}

func (*CodeScanningUploadSarifBadRequest) codeScanningUploadSarifResponse() {}

type CodeScanningUploadSarifRequestEntityTooLarge struct{}

func (*CodeScanningUploadSarifRequestEntityTooLarge) codeScanningUploadSarifResponse() {}

type CodesOfConductGetAllCodesOfConductOK []CodeOfConduct

func (*CodesOfConductGetAllCodesOfConductOK) codesOfConductGetAllCodesOfConductResponse() {}

// CombinedBillingUsage describes #/components/schemas/combined-billing-usage.
type CombinedBillingUsage struct {
	DaysLeftInBillingCycle       int `json:"days_left_in_billing_cycle"`
	EstimatedPaidStorageForMonth int `json:"estimated_paid_storage_for_month"`
	EstimatedStorageForMonth     int `json:"estimated_storage_for_month"`
}

// CombinedCommitStatus describes #/components/schemas/combined-commit-status.
type CombinedCommitStatus struct {
	CommitURL  url.URL              `json:"commit_url"`
	Repository MinimalRepository    `json:"repository"`
	Sha        string               `json:"sha"`
	State      string               `json:"state"`
	Statuses   []SimpleCommitStatus `json:"statuses"`
	TotalCount int                  `json:"total_count"`
	URL        url.URL              `json:"url"`
}

func (*CombinedCommitStatus) reposGetCombinedStatusForRefResponse() {}

// Commit describes #/components/schemas/commit.
type Commit struct {
	Author      NullableSimpleUser  `json:"author"`
	CommentsURL url.URL             `json:"comments_url"`
	Commit      CommitCommit        `json:"commit"`
	Committer   NullableSimpleUser  `json:"committer"`
	Files       *[]CommitFilesItem  `json:"files"`
	HTMLURL     url.URL             `json:"html_url"`
	NodeID      string              `json:"node_id"`
	Parents     []CommitParentsItem `json:"parents"`
	Sha         string              `json:"sha"`
	Stats       OptCommitStats      `json:"stats"`
	URL         url.URL             `json:"url"`
}

// CommitActivity describes #/components/schemas/commit-activity.
type CommitActivity struct {
	Days  []int `json:"days"`
	Total int   `json:"total"`
	Week  int   `json:"week"`
}

// CommitComment describes #/components/schemas/commit-comment.
type CommitComment struct {
	AuthorAssociation AuthorAssociation  `json:"author_association"`
	Body              string             `json:"body"`
	CommitID          string             `json:"commit_id"`
	CreatedAt         time.Time          `json:"created_at"`
	HTMLURL           url.URL            `json:"html_url"`
	ID                int                `json:"id"`
	Line              NilInt             `json:"line"`
	NodeID            string             `json:"node_id"`
	Path              NilString          `json:"path"`
	Position          NilInt             `json:"position"`
	Reactions         OptReactionRollup  `json:"reactions"`
	URL               url.URL            `json:"url"`
	UpdatedAt         time.Time          `json:"updated_at"`
	User              NullableSimpleUser `json:"user"`
}

func (*CommitComment) reposGetCommitCommentResponse()    {}
func (*CommitComment) reposUpdateCommitCommentResponse() {}

type CommitCommit struct {
	Author       NullableGitUser  `json:"author"`
	CommentCount int              `json:"comment_count"`
	Committer    NullableGitUser  `json:"committer"`
	Message      string           `json:"message"`
	Tree         CommitCommitTree `json:"tree"`
	URL          url.URL          `json:"url"`
	Verification OptVerification  `json:"verification"`
}

type CommitCommitTree struct {
	Sha string  `json:"sha"`
	URL url.URL `json:"url"`
}

// CommitComparison describes #/components/schemas/commit-comparison.
type CommitComparison struct {
	AheadBy         int                    `json:"ahead_by"`
	BaseCommit      Commit                 `json:"base_commit"`
	BehindBy        int                    `json:"behind_by"`
	Commits         []Commit               `json:"commits"`
	DiffURL         url.URL                `json:"diff_url"`
	Files           *[]DiffEntry           `json:"files"`
	HTMLURL         url.URL                `json:"html_url"`
	MergeBaseCommit Commit                 `json:"merge_base_commit"`
	PatchURL        url.URL                `json:"patch_url"`
	PermalinkURL    url.URL                `json:"permalink_url"`
	Status          CommitComparisonStatus `json:"status"`
	TotalCommits    int                    `json:"total_commits"`
	URL             url.URL                `json:"url"`
}

func (*CommitComparison) reposCompareCommitsResponse() {}

type CommitComparisonStatus string

const (
	CommitComparisonStatusDiverged  CommitComparisonStatus = "diverged"
	CommitComparisonStatusAhead     CommitComparisonStatus = "ahead"
	CommitComparisonStatusBehind    CommitComparisonStatus = "behind"
	CommitComparisonStatusIdentical CommitComparisonStatus = "identical"
)

type CommitFilesItem struct {
	Additions        OptInt    `json:"additions"`
	BlobURL          OptString `json:"blob_url"`
	Changes          OptInt    `json:"changes"`
	ContentsURL      OptString `json:"contents_url"`
	Deletions        OptInt    `json:"deletions"`
	Filename         OptString `json:"filename"`
	Patch            OptString `json:"patch"`
	PreviousFilename OptString `json:"previous_filename"`
	RawURL           OptString `json:"raw_url"`
	Sha              OptString `json:"sha"`
	Status           OptString `json:"status"`
}

type CommitParentsItem struct {
	HTMLURL OptURL  `json:"html_url"`
	Sha     string  `json:"sha"`
	URL     url.URL `json:"url"`
}

type CommitStats struct {
	Additions OptInt `json:"additions"`
	Deletions OptInt `json:"deletions"`
	Total     OptInt `json:"total"`
}

// CommunityProfile describes #/components/schemas/community-profile.
type CommunityProfile struct {
	ContentReportsEnabled OptBool               `json:"content_reports_enabled"`
	Description           NilString             `json:"description"`
	Documentation         NilString             `json:"documentation"`
	Files                 CommunityProfileFiles `json:"files"`
	HealthPercentage      int                   `json:"health_percentage"`
	UpdatedAt             NilTime               `json:"updated_at"`
}

type CommunityProfileFiles struct {
	CodeOfConduct       NullableCodeOfConductSimple `json:"code_of_conduct"`
	CodeOfConductFile   NullableCommunityHealthFile `json:"code_of_conduct_file"`
	Contributing        NullableCommunityHealthFile `json:"contributing"`
	IssueTemplate       NullableCommunityHealthFile `json:"issue_template"`
	License             NullableLicenseSimple       `json:"license"`
	PullRequestTemplate NullableCommunityHealthFile `json:"pull_request_template"`
	Readme              NullableCommunityHealthFile `json:"readme"`
}

// ContentFile describes #/components/schemas/content-file.
type ContentFile struct {
	Content         string           `json:"content"`
	DownloadURL     NilURL           `json:"download_url"`
	Encoding        string           `json:"encoding"`
	GitURL          NilURL           `json:"git_url"`
	HTMLURL         NilURL           `json:"html_url"`
	Links           ContentFileLinks `json:"_links"`
	Name            string           `json:"name"`
	Path            string           `json:"path"`
	Sha             string           `json:"sha"`
	Size            int              `json:"size"`
	SubmoduleGitURL OptString        `json:"submodule_git_url"`
	Target          OptString        `json:"target"`
	Type            string           `json:"type"`
	URL             url.URL          `json:"url"`
}

type ContentFileLinks struct {
	Git  NilURL  `json:"git"`
	HTML NilURL  `json:"html"`
	Self url.URL `json:"self"`
}

// ContentReferenceAttachment describes #/components/schemas/content-reference-attachment.
type ContentReferenceAttachment struct {
	Body   string    `json:"body"`
	ID     int       `json:"id"`
	NodeID OptString `json:"node_id"`
	Title  string    `json:"title"`
}

// ContentTraffic describes #/components/schemas/content-traffic.
type ContentTraffic struct {
	Count   int    `json:"count"`
	Path    string `json:"path"`
	Title   string `json:"title"`
	Uniques int    `json:"uniques"`
}

// Contributor describes #/components/schemas/contributor.
type Contributor struct {
	AvatarURL         OptURL       `json:"avatar_url"`
	Contributions     int          `json:"contributions"`
	Email             OptString    `json:"email"`
	EventsURL         OptString    `json:"events_url"`
	FollowersURL      OptURL       `json:"followers_url"`
	FollowingURL      OptString    `json:"following_url"`
	GistsURL          OptString    `json:"gists_url"`
	GravatarID        OptNilString `json:"gravatar_id"`
	HTMLURL           OptURL       `json:"html_url"`
	ID                OptInt       `json:"id"`
	Login             OptString    `json:"login"`
	Name              OptString    `json:"name"`
	NodeID            OptString    `json:"node_id"`
	OrganizationsURL  OptURL       `json:"organizations_url"`
	ReceivedEventsURL OptURL       `json:"received_events_url"`
	ReposURL          OptURL       `json:"repos_url"`
	SiteAdmin         OptBool      `json:"site_admin"`
	StarredURL        OptString    `json:"starred_url"`
	SubscriptionsURL  OptURL       `json:"subscriptions_url"`
	Type              string       `json:"type"`
	URL               OptURL       `json:"url"`
}

// ContributorActivity describes #/components/schemas/contributor-activity.
type ContributorActivity struct {
	Author NullableSimpleUser             `json:"author"`
	Total  int                            `json:"total"`
	Weeks  []ContributorActivityWeeksItem `json:"weeks"`
}

type ContributorActivityWeeksItem struct {
	A OptInt `json:"a"`
	C OptInt `json:"c"`
	D OptInt `json:"d"`
	W OptInt `json:"w"`
}

// CredentialAuthorization describes #/components/schemas/credential-authorization.
type CredentialAuthorization struct {
	AuthorizedCredentialID    OptNilInt    `json:"authorized_credential_id"`
	AuthorizedCredentialNote  OptNilString `json:"authorized_credential_note"`
	AuthorizedCredentialTitle OptNilString `json:"authorized_credential_title"`
	CredentialAccessedAt      OptNilTime   `json:"credential_accessed_at"`
	CredentialAuthorizedAt    time.Time    `json:"credential_authorized_at"`
	CredentialID              int          `json:"credential_id"`
	CredentialType            string       `json:"credential_type"`
	Fingerprint               OptString    `json:"fingerprint"`
	Login                     string       `json:"login"`
	Scopes                    *[]string    `json:"scopes"`
	TokenLastEight            OptString    `json:"token_last_eight"`
}

// DeployKey describes #/components/schemas/deploy-key.
type DeployKey struct {
	CreatedAt string `json:"created_at"`
	ID        int    `json:"id"`
	Key       string `json:"key"`
	ReadOnly  bool   `json:"read_only"`
	Title     string `json:"title"`
	URL       string `json:"url"`
	Verified  bool   `json:"verified"`
}

func (*DeployKey) reposGetDeployKeyResponse() {}

// DeploymentBranchPolicy describes #/components/schemas/deployment_branch_policy.
type DeploymentBranchPolicy struct {
	CustomBranchPolicies bool `json:"custom_branch_policies"`
	ProtectedBranches    bool `json:"protected_branches"`
}

type DeploymentReviewerType string

const (
	DeploymentReviewerTypeUser DeploymentReviewerType = "User"
	DeploymentReviewerTypeTeam DeploymentReviewerType = "Team"
)

// DeploymentSimple describes #/components/schemas/deployment-simple.
type DeploymentSimple struct {
	CreatedAt             time.Time              `json:"created_at"`
	Description           NilString              `json:"description"`
	Environment           string                 `json:"environment"`
	ID                    int                    `json:"id"`
	NodeID                string                 `json:"node_id"`
	OriginalEnvironment   OptString              `json:"original_environment"`
	PerformedViaGithubApp OptNullableIntegration `json:"performed_via_github_app"`
	ProductionEnvironment OptBool                `json:"production_environment"`
	RepositoryURL         url.URL                `json:"repository_url"`
	StatusesURL           url.URL                `json:"statuses_url"`
	Task                  string                 `json:"task"`
	TransientEnvironment  OptBool                `json:"transient_environment"`
	URL                   url.URL                `json:"url"`
	UpdatedAt             time.Time              `json:"updated_at"`
}

// DeploymentStatus describes #/components/schemas/deployment-status.
type DeploymentStatus struct {
	CreatedAt             time.Time              `json:"created_at"`
	Creator               NullableSimpleUser     `json:"creator"`
	DeploymentURL         url.URL                `json:"deployment_url"`
	Description           string                 `json:"description"`
	Environment           OptString              `json:"environment"`
	EnvironmentURL        OptURL                 `json:"environment_url"`
	ID                    int                    `json:"id"`
	LogURL                OptURL                 `json:"log_url"`
	NodeID                string                 `json:"node_id"`
	PerformedViaGithubApp OptNullableIntegration `json:"performed_via_github_app"`
	RepositoryURL         url.URL                `json:"repository_url"`
	State                 DeploymentStatusState  `json:"state"`
	TargetURL             url.URL                `json:"target_url"`
	URL                   url.URL                `json:"url"`
	UpdatedAt             time.Time              `json:"updated_at"`
}

func (*DeploymentStatus) reposGetDeploymentStatusResponse() {}

type DeploymentStatusState string

const (
	DeploymentStatusStateError      DeploymentStatusState = "error"
	DeploymentStatusStateFailure    DeploymentStatusState = "failure"
	DeploymentStatusStateInactive   DeploymentStatusState = "inactive"
	DeploymentStatusStatePending    DeploymentStatusState = "pending"
	DeploymentStatusStateSuccess    DeploymentStatusState = "success"
	DeploymentStatusStateQueued     DeploymentStatusState = "queued"
	DeploymentStatusStateInProgress DeploymentStatusState = "in_progress"
)

// DiffEntry describes #/components/schemas/diff-entry.
type DiffEntry struct {
	Additions        int             `json:"additions"`
	BlobURL          url.URL         `json:"blob_url"`
	Changes          int             `json:"changes"`
	ContentsURL      url.URL         `json:"contents_url"`
	Deletions        int             `json:"deletions"`
	Filename         string          `json:"filename"`
	Patch            OptString       `json:"patch"`
	PreviousFilename OptString       `json:"previous_filename"`
	RawURL           url.URL         `json:"raw_url"`
	Sha              string          `json:"sha"`
	Status           DiffEntryStatus `json:"status"`
}

type DiffEntryStatus string

const (
	DiffEntryStatusAdded     DiffEntryStatus = "added"
	DiffEntryStatusRemoved   DiffEntryStatus = "removed"
	DiffEntryStatusModified  DiffEntryStatus = "modified"
	DiffEntryStatusRenamed   DiffEntryStatus = "renamed"
	DiffEntryStatusCopied    DiffEntryStatus = "copied"
	DiffEntryStatusChanged   DiffEntryStatus = "changed"
	DiffEntryStatusUnchanged DiffEntryStatus = "unchanged"
)

// Email describes #/components/schemas/email.
type Email struct {
	Email      string    `json:"email"`
	Primary    bool      `json:"primary"`
	Verified   bool      `json:"verified"`
	Visibility NilString `json:"visibility"`
}

type EmojisGetOK struct{}

func (*EmojisGetOK) emojisGetResponse() {}

type EmptyObject struct{}

func (*EmptyObject) actionsApproveWorkflowRunResponse()              {}
func (*EmptyObject) actionsCreateOrUpdateEnvironmentSecretResponse() {}
func (*EmptyObject) actionsCreateOrUpdateOrgSecretResponse()         {}
func (*EmptyObject) reposGetPagesHealthCheckResponse()               {}

type EnabledOrganizations string

const (
	EnabledOrganizationsAll      EnabledOrganizations = "all"
	EnabledOrganizationsNone     EnabledOrganizations = "none"
	EnabledOrganizationsSelected EnabledOrganizations = "selected"
)

type EnabledRepositories string

const (
	EnabledRepositoriesAll      EnabledRepositories = "all"
	EnabledRepositoriesNone     EnabledRepositories = "none"
	EnabledRepositoriesSelected EnabledRepositories = "selected"
)

type EnterpriseAdminAddOrgAccessToSelfHostedRunnerGroupInEnterprise struct{}

type EnterpriseAdminAddSelfHostedRunnerToGroupForEnterprise struct{}

type EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequest struct {
	Name                    string                                                                                     `json:"name"`
	Runners                 *[]int                                                                                     `json:"runners"`
	SelectedOrganizationIds *[]int                                                                                     `json:"selected_organization_ids"`
	Visibility              OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility `json:"visibility"`
}

type EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility string

const (
	EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibilitySelected EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility = "selected"
	EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibilityAll      EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility = "all"
)

type EnterpriseAdminDeleteScimGroupFromEnterprise struct{}

type EnterpriseAdminDeleteSelfHostedRunnerFromEnterprise struct{}

type EnterpriseAdminDeleteSelfHostedRunnerGroupFromEnterprise struct{}

type EnterpriseAdminDeleteUserFromEnterprise struct{}

type EnterpriseAdminDisableSelectedOrganizationGithubActionsEnterprise struct{}

type EnterpriseAdminEnableSelectedOrganizationGithubActionsEnterprise struct{}

type EnterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterprise struct {
	Organizations []OrganizationSimple `json:"organizations"`
	TotalCount    float64              `json:"total_count"`
}

type EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprise struct {
	Organizations []OrganizationSimple `json:"organizations"`
	TotalCount    float64              `json:"total_count"`
}

type EnterpriseAdminListSelfHostedRunnerGroupsForEnterprise struct {
	RunnerGroups []RunnerGroupsEnterprise `json:"runner_groups"`
	TotalCount   float64                  `json:"total_count"`
}

type EnterpriseAdminListSelfHostedRunnersForEnterprise struct {
	Runners    *[]Runner  `json:"runners"`
	TotalCount OptFloat64 `json:"total_count"`
}

type EnterpriseAdminListSelfHostedRunnersInGroupForEnterprise struct {
	Runners    []Runner `json:"runners"`
	TotalCount float64  `json:"total_count"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseGroupApplicationJSONRequest struct {
	DisplayName string                                                                               `json:"displayName"`
	Members     *[]EnterpriseAdminProvisionAndInviteEnterpriseGroupApplicationJSONRequestMembersItem `json:"members"`
	Schemas     []string                                                                             `json:"schemas"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseGroupApplicationJSONRequestMembersItem struct {
	Value string `json:"value"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseUserApplicationJSONRequest struct {
	Emails   []EnterpriseAdminProvisionAndInviteEnterpriseUserApplicationJSONRequestEmailsItem  `json:"emails"`
	Groups   *[]EnterpriseAdminProvisionAndInviteEnterpriseUserApplicationJSONRequestGroupsItem `json:"groups"`
	Name     EnterpriseAdminProvisionAndInviteEnterpriseUserApplicationJSONRequestName          `json:"name"`
	Schemas  []string                                                                           `json:"schemas"`
	UserName string                                                                             `json:"userName"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseUserApplicationJSONRequestEmailsItem struct {
	Primary bool   `json:"primary"`
	Type    string `json:"type"`
	Value   string `json:"value"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseUserApplicationJSONRequestGroupsItem struct {
	Value OptString `json:"value"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseUserApplicationJSONRequestName struct {
	FamilyName string `json:"familyName"`
	GivenName  string `json:"givenName"`
}

type EnterpriseAdminRemoveOrgAccessToSelfHostedRunnerGroupInEnterprise struct{}

type EnterpriseAdminRemoveSelfHostedRunnerFromGroupForEnterprise struct{}

type EnterpriseAdminSetAllowedActionsEnterprise struct{}

type EnterpriseAdminSetGithubActionsPermissionsEnterprise struct{}

type EnterpriseAdminSetGithubActionsPermissionsEnterpriseApplicationJSONRequest struct {
	AllowedActions       OptAllowedActions    `json:"allowed_actions"`
	EnabledOrganizations EnabledOrganizations `json:"enabled_organizations"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseGroupApplicationJSONRequest struct {
	DisplayName string                                                                                         `json:"displayName"`
	Members     *[]EnterpriseAdminSetInformationForProvisionedEnterpriseGroupApplicationJSONRequestMembersItem `json:"members"`
	Schemas     []string                                                                                       `json:"schemas"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseGroupApplicationJSONRequestMembersItem struct {
	Value string `json:"value"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseUserApplicationJSONRequest struct {
	Emails   []EnterpriseAdminSetInformationForProvisionedEnterpriseUserApplicationJSONRequestEmailsItem  `json:"emails"`
	Groups   *[]EnterpriseAdminSetInformationForProvisionedEnterpriseUserApplicationJSONRequestGroupsItem `json:"groups"`
	Name     EnterpriseAdminSetInformationForProvisionedEnterpriseUserApplicationJSONRequestName          `json:"name"`
	Schemas  []string                                                                                     `json:"schemas"`
	UserName string                                                                                       `json:"userName"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseUserApplicationJSONRequestEmailsItem struct {
	Primary bool   `json:"primary"`
	Type    string `json:"type"`
	Value   string `json:"value"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseUserApplicationJSONRequestGroupsItem struct {
	Value OptString `json:"value"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseUserApplicationJSONRequestName struct {
	FamilyName string `json:"familyName"`
	GivenName  string `json:"givenName"`
}

type EnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterprise struct{}

type EnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterpriseApplicationJSONRequest struct {
	SelectedOrganizationIds []int `json:"selected_organization_ids"`
}

type EnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterprise struct{}

type EnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterpriseApplicationJSONRequest struct {
	SelectedOrganizationIds []int `json:"selected_organization_ids"`
}

type EnterpriseAdminSetSelfHostedRunnersInGroupForEnterprise struct{}

type EnterpriseAdminSetSelfHostedRunnersInGroupForEnterpriseApplicationJSONRequest struct {
	Runners []int `json:"runners"`
}

type EnterpriseAdminUpdateAttributeForEnterpriseUserApplicationJSONRequest struct {
	Operations []struct{} `json:"Operations"`
	Schemas    []string   `json:"schemas"`
}

type EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequest struct {
	Name       OptString                                                                                  `json:"name"`
	Visibility OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility `json:"visibility"`
}

type EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility string

const (
	EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibilitySelected EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility = "selected"
	EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibilityAll      EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility = "all"
)

// EnvironmentApprovals describes #/components/schemas/environment-approvals.
type EnvironmentApprovals struct {
	Comment      string                                 `json:"comment"`
	Environments []EnvironmentApprovalsEnvironmentsItem `json:"environments"`
	State        EnvironmentApprovalsState              `json:"state"`
	User         SimpleUser                             `json:"user"`
}

type EnvironmentApprovalsEnvironmentsItem struct {
	CreatedAt OptTime   `json:"created_at"`
	HTMLURL   OptString `json:"html_url"`
	ID        OptInt    `json:"id"`
	Name      OptString `json:"name"`
	NodeID    OptString `json:"node_id"`
	URL       OptString `json:"url"`
	UpdatedAt OptTime   `json:"updated_at"`
}

type EnvironmentApprovalsState string

const (
	EnvironmentApprovalsStateApproved EnvironmentApprovalsState = "approved"
	EnvironmentApprovalsStateRejected EnvironmentApprovalsState = "rejected"
)

// Event describes #/components/schemas/event.
type Event struct {
	Actor     Actor        `json:"actor"`
	CreatedAt NilTime      `json:"created_at"`
	ID        string       `json:"id"`
	Org       OptActor     `json:"org"`
	Payload   EventPayload `json:"payload"`
	Public    bool         `json:"public"`
	Repo      EventRepo    `json:"repo"`
	Type      NilString    `json:"type"`
}

type EventPayload struct {
	Action  OptString                `json:"action"`
	Comment OptIssueComment          `json:"comment"`
	Issue   OptIssueSimple           `json:"issue"`
	Pages   *[]EventPayloadPagesItem `json:"pages"`
}

type EventPayloadPagesItem struct {
	Action   OptString    `json:"action"`
	HTMLURL  OptString    `json:"html_url"`
	PageName OptString    `json:"page_name"`
	Sha      OptString    `json:"sha"`
	Summary  OptNilString `json:"summary"`
	Title    OptString    `json:"title"`
}

type EventRepo struct {
	ID   int     `json:"id"`
	Name string  `json:"name"`
	URL  url.URL `json:"url"`
}

// Feed describes #/components/schemas/feed.
type Feed struct {
	CurrentUserActorURL         OptString  `json:"current_user_actor_url"`
	CurrentUserOrganizationURL  OptString  `json:"current_user_organization_url"`
	CurrentUserOrganizationUrls *[]url.URL `json:"current_user_organization_urls"`
	CurrentUserPublicURL        OptString  `json:"current_user_public_url"`
	CurrentUserURL              OptString  `json:"current_user_url"`
	Links                       FeedLinks  `json:"_links"`
	SecurityAdvisoriesURL       OptString  `json:"security_advisories_url"`
	TimelineURL                 string     `json:"timeline_url"`
	UserURL                     string     `json:"user_url"`
}

type FeedLinks struct {
	CurrentUser              OptLinkWithType `json:"current_user"`
	CurrentUserActor         OptLinkWithType `json:"current_user_actor"`
	CurrentUserOrganization  OptLinkWithType `json:"current_user_organization"`
	CurrentUserOrganizations *[]LinkWithType `json:"current_user_organizations"`
	CurrentUserPublic        OptLinkWithType `json:"current_user_public"`
	SecurityAdvisories       OptLinkWithType `json:"security_advisories"`
	Timeline                 LinkWithType    `json:"timeline"`
	User                     LinkWithType    `json:"user"`
}

// FileCommit describes #/components/schemas/file-commit.
type FileCommit struct {
	Commit  FileCommitCommit     `json:"commit"`
	Content NilFileCommitContent `json:"content"`
}

type FileCommitCommit struct {
	Author       OptFileCommitCommitAuthor       `json:"author"`
	Committer    OptFileCommitCommitCommitter    `json:"committer"`
	HTMLURL      OptString                       `json:"html_url"`
	Message      OptString                       `json:"message"`
	NodeID       OptString                       `json:"node_id"`
	Parents      *[]FileCommitCommitParentsItem  `json:"parents"`
	Sha          OptString                       `json:"sha"`
	Tree         OptFileCommitCommitTree         `json:"tree"`
	URL          OptString                       `json:"url"`
	Verification OptFileCommitCommitVerification `json:"verification"`
}

type FileCommitCommitAuthor struct {
	Date  OptString `json:"date"`
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type FileCommitCommitCommitter struct {
	Date  OptString `json:"date"`
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type FileCommitCommitParentsItem struct {
	HTMLURL OptString `json:"html_url"`
	Sha     OptString `json:"sha"`
	URL     OptString `json:"url"`
}

type FileCommitCommitTree struct {
	Sha OptString `json:"sha"`
	URL OptString `json:"url"`
}

type FileCommitCommitVerification struct {
	Payload   OptNilString `json:"payload"`
	Reason    OptString    `json:"reason"`
	Signature OptNilString `json:"signature"`
	Verified  OptBool      `json:"verified"`
}

type FileCommitContent struct {
	DownloadURL OptString                 `json:"download_url"`
	GitURL      OptString                 `json:"git_url"`
	HTMLURL     OptString                 `json:"html_url"`
	Links       OptFileCommitContentLinks `json:"_links"`
	Name        OptString                 `json:"name"`
	Path        OptString                 `json:"path"`
	Sha         OptString                 `json:"sha"`
	Size        OptInt                    `json:"size"`
	Type        OptString                 `json:"type"`
	URL         OptString                 `json:"url"`
}

type FileCommitContentLinks struct {
	Git  OptString `json:"git"`
	HTML OptString `json:"html"`
	Self OptString `json:"self"`
}

type ForbiddenGist struct {
	Block            OptForbiddenGistBlock `json:"block"`
	DocumentationURL OptString             `json:"documentation_url"`
	Message          OptString             `json:"message"`
}

func (*ForbiddenGist) gistsGetCommentResponse() {}
func (*ForbiddenGist) gistsGetResponse()        {}

type ForbiddenGistBlock struct {
	CreatedAt OptString    `json:"created_at"`
	HTMLURL   OptNilString `json:"html_url"`
	Reason    OptString    `json:"reason"`
}

type Found struct{}

func (*Found) reposGetReleaseAssetResponse() {}

// FullRepository describes #/components/schemas/full-repository.
type FullRepository struct {
	AllowAutoMerge         OptBool                                 `json:"allow_auto_merge"`
	AllowForking           OptBool                                 `json:"allow_forking"`
	AllowMergeCommit       OptBool                                 `json:"allow_merge_commit"`
	AllowRebaseMerge       OptBool                                 `json:"allow_rebase_merge"`
	AllowSquashMerge       OptBool                                 `json:"allow_squash_merge"`
	AnonymousAccessEnabled OptBool                                 `json:"anonymous_access_enabled"`
	ArchiveURL             string                                  `json:"archive_url"`
	Archived               bool                                    `json:"archived"`
	AssigneesURL           string                                  `json:"assignees_url"`
	BlobsURL               string                                  `json:"blobs_url"`
	BranchesURL            string                                  `json:"branches_url"`
	CloneURL               string                                  `json:"clone_url"`
	CodeOfConduct          OptCodeOfConductSimple                  `json:"code_of_conduct"`
	CollaboratorsURL       string                                  `json:"collaborators_url"`
	CommentsURL            string                                  `json:"comments_url"`
	CommitsURL             string                                  `json:"commits_url"`
	CompareURL             string                                  `json:"compare_url"`
	ContentsURL            string                                  `json:"contents_url"`
	ContributorsURL        url.URL                                 `json:"contributors_url"`
	CreatedAt              time.Time                               `json:"created_at"`
	DefaultBranch          string                                  `json:"default_branch"`
	DeleteBranchOnMerge    OptBool                                 `json:"delete_branch_on_merge"`
	DeploymentsURL         url.URL                                 `json:"deployments_url"`
	Description            NilString                               `json:"description"`
	Disabled               bool                                    `json:"disabled"`
	DownloadsURL           url.URL                                 `json:"downloads_url"`
	EventsURL              url.URL                                 `json:"events_url"`
	Fork                   bool                                    `json:"fork"`
	Forks                  int                                     `json:"forks"`
	ForksCount             int                                     `json:"forks_count"`
	ForksURL               url.URL                                 `json:"forks_url"`
	FullName               string                                  `json:"full_name"`
	GitCommitsURL          string                                  `json:"git_commits_url"`
	GitRefsURL             string                                  `json:"git_refs_url"`
	GitTagsURL             string                                  `json:"git_tags_url"`
	GitURL                 string                                  `json:"git_url"`
	HTMLURL                url.URL                                 `json:"html_url"`
	HasDownloads           bool                                    `json:"has_downloads"`
	HasIssues              bool                                    `json:"has_issues"`
	HasPages               bool                                    `json:"has_pages"`
	HasProjects            bool                                    `json:"has_projects"`
	HasWiki                bool                                    `json:"has_wiki"`
	Homepage               NilURL                                  `json:"homepage"`
	HooksURL               url.URL                                 `json:"hooks_url"`
	ID                     int                                     `json:"id"`
	IsTemplate             OptBool                                 `json:"is_template"`
	IssueCommentURL        string                                  `json:"issue_comment_url"`
	IssueEventsURL         string                                  `json:"issue_events_url"`
	IssuesURL              string                                  `json:"issues_url"`
	KeysURL                string                                  `json:"keys_url"`
	LabelsURL              string                                  `json:"labels_url"`
	Language               NilString                               `json:"language"`
	LanguagesURL           url.URL                                 `json:"languages_url"`
	License                NullableLicenseSimple                   `json:"license"`
	MasterBranch           OptString                               `json:"master_branch"`
	MergesURL              url.URL                                 `json:"merges_url"`
	MilestonesURL          string                                  `json:"milestones_url"`
	MirrorURL              NilURL                                  `json:"mirror_url"`
	Name                   string                                  `json:"name"`
	NetworkCount           int                                     `json:"network_count"`
	NodeID                 string                                  `json:"node_id"`
	NotificationsURL       string                                  `json:"notifications_url"`
	OpenIssues             int                                     `json:"open_issues"`
	OpenIssuesCount        int                                     `json:"open_issues_count"`
	Organization           OptNullableSimpleUser                   `json:"organization"`
	Owner                  SimpleUser                              `json:"owner"`
	Parent                 OptRepository                           `json:"parent"`
	Permissions            OptFullRepositoryPermissions            `json:"permissions"`
	Private                bool                                    `json:"private"`
	PullsURL               string                                  `json:"pulls_url"`
	PushedAt               time.Time                               `json:"pushed_at"`
	ReleasesURL            string                                  `json:"releases_url"`
	SSHURL                 string                                  `json:"ssh_url"`
	SecurityAndAnalysis    OptNilFullRepositorySecurityAndAnalysis `json:"security_and_analysis"`
	Size                   int                                     `json:"size"`
	Source                 OptRepository                           `json:"source"`
	StargazersCount        int                                     `json:"stargazers_count"`
	StargazersURL          url.URL                                 `json:"stargazers_url"`
	StatusesURL            string                                  `json:"statuses_url"`
	SubscribersCount       int                                     `json:"subscribers_count"`
	SubscribersURL         url.URL                                 `json:"subscribers_url"`
	SubscriptionURL        url.URL                                 `json:"subscription_url"`
	SvnURL                 url.URL                                 `json:"svn_url"`
	TagsURL                url.URL                                 `json:"tags_url"`
	TeamsURL               url.URL                                 `json:"teams_url"`
	TempCloneToken         OptNilString                            `json:"temp_clone_token"`
	TemplateRepository     OptNullableRepository                   `json:"template_repository"`
	Topics                 *[]string                               `json:"topics"`
	TreesURL               string                                  `json:"trees_url"`
	URL                    url.URL                                 `json:"url"`
	UpdatedAt              time.Time                               `json:"updated_at"`
	Visibility             OptString                               `json:"visibility"`
	Watchers               int                                     `json:"watchers"`
	WatchersCount          int                                     `json:"watchers_count"`
}

func (*FullRepository) reposGetResponse() {}

type FullRepositoryPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

type FullRepositorySecurityAndAnalysis struct {
	AdvancedSecurity OptFullRepositorySecurityAndAnalysisAdvancedSecurity `json:"advanced_security"`
	SecretScanning   OptFullRepositorySecurityAndAnalysisSecretScanning   `json:"secret_scanning"`
}

type FullRepositorySecurityAndAnalysisAdvancedSecurity struct {
	Status OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus `json:"status"`
}

type FullRepositorySecurityAndAnalysisAdvancedSecurityStatus string

const (
	FullRepositorySecurityAndAnalysisAdvancedSecurityStatusEnabled  FullRepositorySecurityAndAnalysisAdvancedSecurityStatus = "enabled"
	FullRepositorySecurityAndAnalysisAdvancedSecurityStatusDisabled FullRepositorySecurityAndAnalysisAdvancedSecurityStatus = "disabled"
)

type FullRepositorySecurityAndAnalysisSecretScanning struct {
	Status OptFullRepositorySecurityAndAnalysisSecretScanningStatus `json:"status"`
}

type FullRepositorySecurityAndAnalysisSecretScanningStatus string

const (
	FullRepositorySecurityAndAnalysisSecretScanningStatusEnabled  FullRepositorySecurityAndAnalysisSecretScanningStatus = "enabled"
	FullRepositorySecurityAndAnalysisSecretScanningStatusDisabled FullRepositorySecurityAndAnalysisSecretScanningStatus = "disabled"
)

// GistComment describes #/components/schemas/gist-comment.
type GistComment struct {
	AuthorAssociation AuthorAssociation  `json:"author_association"`
	Body              string             `json:"body"`
	CreatedAt         time.Time          `json:"created_at"`
	ID                int                `json:"id"`
	NodeID            string             `json:"node_id"`
	URL               url.URL            `json:"url"`
	UpdatedAt         time.Time          `json:"updated_at"`
	User              NullableSimpleUser `json:"user"`
}

func (*GistComment) gistsCreateCommentResponse() {}
func (*GistComment) gistsGetCommentResponse()    {}
func (*GistComment) gistsUpdateCommentResponse() {}

// GistCommit describes #/components/schemas/gist-commit.
type GistCommit struct {
	ChangeStatus GistCommitChangeStatus `json:"change_status"`
	CommittedAt  time.Time              `json:"committed_at"`
	URL          url.URL                `json:"url"`
	User         NullableSimpleUser     `json:"user"`
	Version      string                 `json:"version"`
}

type GistCommitChangeStatus struct {
	Additions OptInt `json:"additions"`
	Deletions OptInt `json:"deletions"`
	Total     OptInt `json:"total"`
}

// GistHistory describes #/components/schemas/gist-history.
type GistHistory struct {
	ChangeStatus OptGistHistoryChangeStatus `json:"change_status"`
	CommittedAt  OptTime                    `json:"committed_at"`
	URL          OptURL                     `json:"url"`
	User         OptNullableSimpleUser      `json:"user"`
	Version      OptString                  `json:"version"`
}

type GistHistoryChangeStatus struct {
	Additions OptInt `json:"additions"`
	Deletions OptInt `json:"deletions"`
	Total     OptInt `json:"total"`
}

// GistSimple describes #/components/schemas/gist-simple.
type GistSimple struct {
	Comments    OptInt                 `json:"comments"`
	CommentsURL OptString              `json:"comments_url"`
	CommitsURL  OptString              `json:"commits_url"`
	CreatedAt   OptString              `json:"created_at"`
	Description OptNilString           `json:"description"`
	Files       *struct{}              `json:"files"`
	ForkOf      OptNilGistSimpleForkOf `json:"fork_of"`
	Forks       *[]GistSimpleForksItem `json:"forks"`
	ForksURL    OptString              `json:"forks_url"`
	GitPullURL  OptString              `json:"git_pull_url"`
	GitPushURL  OptString              `json:"git_push_url"`
	HTMLURL     OptString              `json:"html_url"`
	History     *[]GistHistory         `json:"history"`
	ID          OptString              `json:"id"`
	NodeID      OptString              `json:"node_id"`
	Owner       OptSimpleUser          `json:"owner"`
	Public      OptBool                `json:"public"`
	Truncated   OptBool                `json:"truncated"`
	URL         OptString              `json:"url"`
	UpdatedAt   OptString              `json:"updated_at"`
	User        OptNilString           `json:"user"`
}

func (*GistSimple) gistsGetResponse() {}

type GistSimpleForkOf struct {
	Comments    int                   `json:"comments"`
	CommentsURL url.URL               `json:"comments_url"`
	CommitsURL  url.URL               `json:"commits_url"`
	CreatedAt   time.Time             `json:"created_at"`
	Description NilString             `json:"description"`
	Files       struct{}              `json:"files"`
	Forks       *[]string             `json:"forks"`
	ForksURL    url.URL               `json:"forks_url"`
	GitPullURL  url.URL               `json:"git_pull_url"`
	GitPushURL  url.URL               `json:"git_push_url"`
	HTMLURL     url.URL               `json:"html_url"`
	History     *[]string             `json:"history"`
	ID          string                `json:"id"`
	NodeID      string                `json:"node_id"`
	Owner       OptNullableSimpleUser `json:"owner"`
	Public      bool                  `json:"public"`
	Truncated   OptBool               `json:"truncated"`
	URL         url.URL               `json:"url"`
	UpdatedAt   time.Time             `json:"updated_at"`
	User        NullableSimpleUser    `json:"user"`
}

type GistSimpleForksItem struct {
	CreatedAt OptTime       `json:"created_at"`
	ID        OptString     `json:"id"`
	URL       OptURL        `json:"url"`
	UpdatedAt OptTime       `json:"updated_at"`
	User      OptPublicUser `json:"user"`
}

type GistsCheckIsStarredNoContent struct{}

func (*GistsCheckIsStarredNoContent) gistsCheckIsStarredResponse() {}

type GistsCheckIsStarredNotFound struct{}

func (*GistsCheckIsStarredNotFound) gistsCheckIsStarredResponse() {}

type GistsCreateCommentApplicationJSONForbidden BasicError

func (*GistsCreateCommentApplicationJSONForbidden) gistsCreateCommentResponse() {}

type GistsCreateCommentApplicationJSONNotFound BasicError

func (*GistsCreateCommentApplicationJSONNotFound) gistsCreateCommentResponse() {}

type GistsCreateCommentApplicationJSONRequest struct {
	Body string `json:"body"`
}

type GistsDeleteApplicationJSONForbidden BasicError

func (*GistsDeleteApplicationJSONForbidden) gistsDeleteResponse() {}

type GistsDeleteApplicationJSONNotFound BasicError

func (*GistsDeleteApplicationJSONNotFound) gistsDeleteResponse() {}

type GistsDeleteCommentApplicationJSONForbidden BasicError

func (*GistsDeleteCommentApplicationJSONForbidden) gistsDeleteCommentResponse() {}

type GistsDeleteCommentApplicationJSONNotFound BasicError

func (*GistsDeleteCommentApplicationJSONNotFound) gistsDeleteCommentResponse() {}

type GistsDeleteCommentNoContent struct{}

func (*GistsDeleteCommentNoContent) gistsDeleteCommentResponse() {}

type GistsDeleteNoContent struct{}

func (*GistsDeleteNoContent) gistsDeleteResponse() {}

type GistsListCommentsApplicationJSONForbidden BasicError

func (*GistsListCommentsApplicationJSONForbidden) gistsListCommentsResponse() {}

type GistsListCommentsApplicationJSONNotFound BasicError

func (*GistsListCommentsApplicationJSONNotFound) gistsListCommentsResponse() {}

type GistsListCommentsOK []GistComment

func (*GistsListCommentsOK) gistsListCommentsResponse() {}

type GistsListCommitsApplicationJSONForbidden BasicError

func (*GistsListCommitsApplicationJSONForbidden) gistsListCommitsResponse() {}

type GistsListCommitsApplicationJSONNotFound BasicError

func (*GistsListCommitsApplicationJSONNotFound) gistsListCommitsResponse() {}

type GistsListCommitsOK []GistCommit

func (*GistsListCommitsOK) gistsListCommitsResponse() {}

type GistsListForUserOK []BaseGist

type GistsListForksApplicationJSONForbidden BasicError

func (*GistsListForksApplicationJSONForbidden) gistsListForksResponse() {}

type GistsListForksApplicationJSONNotFound BasicError

func (*GistsListForksApplicationJSONNotFound) gistsListForksResponse() {}

type GistsListForksOK []GistSimple

func (*GistsListForksOK) gistsListForksResponse() {}

type GistsListOK []BaseGist

func (*GistsListOK) gistsListResponse() {}

type GistsListPublicOK []BaseGist

type GistsListStarredApplicationJSONForbidden BasicError

func (*GistsListStarredApplicationJSONForbidden) gistsListStarredResponse() {}

type GistsListStarredApplicationJSONUnauthorized BasicError

func (*GistsListStarredApplicationJSONUnauthorized) gistsListStarredResponse() {}

type GistsListStarredOK []BaseGist

func (*GistsListStarredOK) gistsListStarredResponse() {}

type GistsStarApplicationJSONForbidden BasicError

func (*GistsStarApplicationJSONForbidden) gistsStarResponse() {}

type GistsStarApplicationJSONNotFound BasicError

func (*GistsStarApplicationJSONNotFound) gistsStarResponse() {}

type GistsStarNoContent struct{}

func (*GistsStarNoContent) gistsStarResponse() {}

type GistsUnstarApplicationJSONForbidden BasicError

func (*GistsUnstarApplicationJSONForbidden) gistsUnstarResponse() {}

type GistsUnstarApplicationJSONNotFound BasicError

func (*GistsUnstarApplicationJSONNotFound) gistsUnstarResponse() {}

type GistsUnstarNoContent struct{}

func (*GistsUnstarNoContent) gistsUnstarResponse() {}

type GistsUpdateCommentApplicationJSONRequest struct {
	Body string `json:"body"`
}

// GitCommit describes #/components/schemas/git-commit.
type GitCommit struct {
	Author       GitCommitAuthor        `json:"author"`
	Committer    GitCommitCommitter     `json:"committer"`
	HTMLURL      url.URL                `json:"html_url"`
	Message      string                 `json:"message"`
	NodeID       string                 `json:"node_id"`
	Parents      []GitCommitParentsItem `json:"parents"`
	Sha          string                 `json:"sha"`
	Tree         GitCommitTree          `json:"tree"`
	URL          url.URL                `json:"url"`
	Verification GitCommitVerification  `json:"verification"`
}

func (*GitCommit) gitGetCommitResponse() {}

type GitCommitAuthor struct {
	Date  time.Time `json:"date"`
	Email string    `json:"email"`
	Name  string    `json:"name"`
}

type GitCommitCommitter struct {
	Date  time.Time `json:"date"`
	Email string    `json:"email"`
	Name  string    `json:"name"`
}

type GitCommitParentsItem struct {
	HTMLURL url.URL `json:"html_url"`
	Sha     string  `json:"sha"`
	URL     url.URL `json:"url"`
}

type GitCommitTree struct {
	Sha string  `json:"sha"`
	URL url.URL `json:"url"`
}

type GitCommitVerification struct {
	Payload   NilString `json:"payload"`
	Reason    string    `json:"reason"`
	Signature NilString `json:"signature"`
	Verified  bool      `json:"verified"`
}

type GitCreateBlobApplicationJSONRequest struct {
	Content  string    `json:"content"`
	Encoding OptString `json:"encoding"`
}

func (*GitCreateBlobApplicationJSONRequest) gitCreateBlobRequest() {}

type GitCreateCommitApplicationJSONRequest struct {
	Author    OptGitCreateCommitApplicationJSONRequestAuthor    `json:"author"`
	Committer OptGitCreateCommitApplicationJSONRequestCommitter `json:"committer"`
	Message   string                                            `json:"message"`
	Parents   *[]string                                         `json:"parents"`
	Signature OptString                                         `json:"signature"`
	Tree      string                                            `json:"tree"`
}

func (*GitCreateCommitApplicationJSONRequest) gitCreateCommitRequest() {}

type GitCreateCommitApplicationJSONRequestAuthor struct {
	Date  OptTime `json:"date"`
	Email string  `json:"email"`
	Name  string  `json:"name"`
}

type GitCreateCommitApplicationJSONRequestCommitter struct {
	Date  OptTime   `json:"date"`
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type GitCreateRefApplicationJSONRequest struct {
	Key OptString `json:"key"`
	Ref string    `json:"ref"`
	Sha string    `json:"sha"`
}

func (*GitCreateRefApplicationJSONRequest) gitCreateRefRequest() {}

type GitCreateTagApplicationJSONRequest struct {
	Message string                                      `json:"message"`
	Object  string                                      `json:"object"`
	Tag     string                                      `json:"tag"`
	Tagger  OptGitCreateTagApplicationJSONRequestTagger `json:"tagger"`
	Type    GitCreateTagApplicationJSONRequestType      `json:"type"`
}

func (*GitCreateTagApplicationJSONRequest) gitCreateTagRequest() {}

type GitCreateTagApplicationJSONRequestTagger struct {
	Date  OptTime `json:"date"`
	Email string  `json:"email"`
	Name  string  `json:"name"`
}

type GitCreateTagApplicationJSONRequestType string

const (
	GitCreateTagApplicationJSONRequestTypeCommit GitCreateTagApplicationJSONRequestType = "commit"
	GitCreateTagApplicationJSONRequestTypeTree   GitCreateTagApplicationJSONRequestType = "tree"
	GitCreateTagApplicationJSONRequestTypeBlob   GitCreateTagApplicationJSONRequestType = "blob"
)

type GitCreateTreeApplicationJSONRequest struct {
	BaseTree OptString                                     `json:"base_tree"`
	Tree     []GitCreateTreeApplicationJSONRequestTreeItem `json:"tree"`
}

func (*GitCreateTreeApplicationJSONRequest) gitCreateTreeRequest() {}

type GitCreateTreeApplicationJSONRequestTreeItem struct {
	Content OptString                                          `json:"content"`
	Mode    OptGitCreateTreeApplicationJSONRequestTreeItemMode `json:"mode"`
	Path    OptString                                          `json:"path"`
	Sha     OptNilString                                       `json:"sha"`
	Type    OptGitCreateTreeApplicationJSONRequestTreeItemType `json:"type"`
}

type GitCreateTreeApplicationJSONRequestTreeItemMode string

const (
	GitCreateTreeApplicationJSONRequestTreeItemMode100644 GitCreateTreeApplicationJSONRequestTreeItemMode = "100644"
	GitCreateTreeApplicationJSONRequestTreeItemMode100755 GitCreateTreeApplicationJSONRequestTreeItemMode = "100755"
	GitCreateTreeApplicationJSONRequestTreeItemMode040000 GitCreateTreeApplicationJSONRequestTreeItemMode = "040000"
	GitCreateTreeApplicationJSONRequestTreeItemMode160000 GitCreateTreeApplicationJSONRequestTreeItemMode = "160000"
	GitCreateTreeApplicationJSONRequestTreeItemMode120000 GitCreateTreeApplicationJSONRequestTreeItemMode = "120000"
)

type GitCreateTreeApplicationJSONRequestTreeItemType string

const (
	GitCreateTreeApplicationJSONRequestTreeItemTypeBlob   GitCreateTreeApplicationJSONRequestTreeItemType = "blob"
	GitCreateTreeApplicationJSONRequestTreeItemTypeTree   GitCreateTreeApplicationJSONRequestTreeItemType = "tree"
	GitCreateTreeApplicationJSONRequestTreeItemTypeCommit GitCreateTreeApplicationJSONRequestTreeItemType = "commit"
)

type GitDeleteRefNoContent struct{}

// GitRef describes #/components/schemas/git-ref.
type GitRef struct {
	NodeID string       `json:"node_id"`
	Object GitRefObject `json:"object"`
	Ref    string       `json:"ref"`
	URL    url.URL      `json:"url"`
}

func (*GitRef) gitGetRefResponse() {}

type GitRefObject struct {
	Sha  string  `json:"sha"`
	Type string  `json:"type"`
	URL  url.URL `json:"url"`
}

// GitTag describes #/components/schemas/git-tag.
type GitTag struct {
	Message      string          `json:"message"`
	NodeID       string          `json:"node_id"`
	Object       GitTagObject    `json:"object"`
	Sha          string          `json:"sha"`
	Tag          string          `json:"tag"`
	Tagger       GitTagTagger    `json:"tagger"`
	URL          url.URL         `json:"url"`
	Verification OptVerification `json:"verification"`
}

func (*GitTag) gitGetTagResponse() {}

type GitTagObject struct {
	Sha  string  `json:"sha"`
	Type string  `json:"type"`
	URL  url.URL `json:"url"`
}

type GitTagTagger struct {
	Date  string `json:"date"`
	Email string `json:"email"`
	Name  string `json:"name"`
}

// GitTree describes #/components/schemas/git-tree.
type GitTree struct {
	Sha       string            `json:"sha"`
	Tree      []GitTreeTreeItem `json:"tree"`
	Truncated bool              `json:"truncated"`
	URL       url.URL           `json:"url"`
}

type GitTreeTreeItem struct {
	Mode OptString `json:"mode"`
	Path OptString `json:"path"`
	Sha  OptString `json:"sha"`
	Size OptInt    `json:"size"`
	Type OptString `json:"type"`
	URL  OptString `json:"url"`
}

type GitUpdateRefApplicationJSONRequest struct {
	Force OptBool `json:"force"`
	Sha   string  `json:"sha"`
}

func (*GitUpdateRefApplicationJSONRequest) gitUpdateRefRequest() {}

type GitignoreGetAllTemplatesOK []string

func (*GitignoreGetAllTemplatesOK) gitignoreGetAllTemplatesResponse() {}

// GitignoreTemplate describes #/components/schemas/gitignore-template.
type GitignoreTemplate struct {
	Name   string `json:"name"`
	Source string `json:"source"`
}

func (*GitignoreTemplate) gitignoreGetTemplateResponse() {}

// GpgKey describes #/components/schemas/gpg-key.
type GpgKey struct {
	CanCertify        bool                `json:"can_certify"`
	CanEncryptComms   bool                `json:"can_encrypt_comms"`
	CanEncryptStorage bool                `json:"can_encrypt_storage"`
	CanSign           bool                `json:"can_sign"`
	CreatedAt         time.Time           `json:"created_at"`
	Emails            []GpgKeyEmailsItem  `json:"emails"`
	ExpiresAt         NilTime             `json:"expires_at"`
	ID                int                 `json:"id"`
	KeyID             string              `json:"key_id"`
	PrimaryKeyID      NilInt              `json:"primary_key_id"`
	PublicKey         string              `json:"public_key"`
	RawKey            NilString           `json:"raw_key"`
	Subkeys           []GpgKeySubkeysItem `json:"subkeys"`
}

func (*GpgKey) usersGetGpgKeyForAuthenticatedResponse() {}

type GpgKeyEmailsItem struct {
	Email    OptString `json:"email"`
	Verified OptBool   `json:"verified"`
}

type GpgKeySubkeysItem struct {
	CanCertify        OptBool      `json:"can_certify"`
	CanEncryptComms   OptBool      `json:"can_encrypt_comms"`
	CanEncryptStorage OptBool      `json:"can_encrypt_storage"`
	CanSign           OptBool      `json:"can_sign"`
	CreatedAt         OptString    `json:"created_at"`
	Emails            *[]string    `json:"emails"`
	ExpiresAt         OptNilString `json:"expires_at"`
	ID                OptInt       `json:"id"`
	KeyID             OptString    `json:"key_id"`
	PrimaryKeyID      OptInt       `json:"primary_key_id"`
	PublicKey         OptString    `json:"public_key"`
	RawKey            OptNilString `json:"raw_key"`
	Subkeys           *[]string    `json:"subkeys"`
}

// GroupMapping describes #/components/schemas/group-mapping.
type GroupMapping struct {
	Groups *[]GroupMappingGroupsItem `json:"groups"`
}

func (*GroupMapping) teamsListIdpGroupsForLegacyResponse() {}

type GroupMappingGroupsItem struct {
	GroupDescription string       `json:"group_description"`
	GroupID          string       `json:"group_id"`
	GroupName        string       `json:"group_name"`
	Status           OptString    `json:"status"`
	SyncedAt         OptNilString `json:"synced_at"`
}

// HookDelivery describes #/components/schemas/hook-delivery.
type HookDelivery struct {
	Action         NilString            `json:"action"`
	DeliveredAt    time.Time            `json:"delivered_at"`
	Duration       float64              `json:"duration"`
	Event          string               `json:"event"`
	GUID           string               `json:"guid"`
	ID             int                  `json:"id"`
	InstallationID NilInt               `json:"installation_id"`
	Redelivery     bool                 `json:"redelivery"`
	RepositoryID   NilInt               `json:"repository_id"`
	Request        HookDeliveryRequest  `json:"request"`
	Response       HookDeliveryResponse `json:"response"`
	Status         string               `json:"status"`
	StatusCode     int                  `json:"status_code"`
	URL            OptString            `json:"url"`
}

// HookDeliveryItem describes #/components/schemas/hook-delivery-item.
type HookDeliveryItem struct {
	Action         NilString `json:"action"`
	DeliveredAt    time.Time `json:"delivered_at"`
	Duration       float64   `json:"duration"`
	Event          string    `json:"event"`
	GUID           string    `json:"guid"`
	ID             int       `json:"id"`
	InstallationID NilInt    `json:"installation_id"`
	Redelivery     bool      `json:"redelivery"`
	RepositoryID   NilInt    `json:"repository_id"`
	Status         string    `json:"status"`
	StatusCode     int       `json:"status_code"`
}

type HookDeliveryRequest struct {
	Headers struct{} `json:"headers"`
	Payload struct{} `json:"payload"`
}

type HookDeliveryResponse struct {
	Headers struct{}  `json:"headers"`
	Payload NilString `json:"payload"`
}

// Import describes #/components/schemas/import.
type Import struct {
	AuthorsCount    OptNilInt                   `json:"authors_count"`
	AuthorsURL      url.URL                     `json:"authors_url"`
	CommitCount     OptNilInt                   `json:"commit_count"`
	ErrorMessage    OptNilString                `json:"error_message"`
	FailedStep      OptNilString                `json:"failed_step"`
	HTMLURL         url.URL                     `json:"html_url"`
	HasLargeFiles   OptBool                     `json:"has_large_files"`
	ImportPercent   OptNilInt                   `json:"import_percent"`
	LargeFilesCount OptInt                      `json:"large_files_count"`
	LargeFilesSize  OptInt                      `json:"large_files_size"`
	Message         OptString                   `json:"message"`
	ProjectChoices  *[]ImportProjectChoicesItem `json:"project_choices"`
	PushPercent     OptNilInt                   `json:"push_percent"`
	RepositoryURL   url.URL                     `json:"repository_url"`
	Status          ImportStatus                `json:"status"`
	StatusText      OptNilString                `json:"status_text"`
	SvcRoot         OptString                   `json:"svc_root"`
	SvnRoot         OptString                   `json:"svn_root"`
	TfvcProject     OptString                   `json:"tfvc_project"`
	URL             url.URL                     `json:"url"`
	UseLfs          OptBool                     `json:"use_lfs"`
	Vcs             NilString                   `json:"vcs"`
	VcsURL          string                      `json:"vcs_url"`
}

func (*Import) migrationsGetImportStatusResponse() {}

type ImportProjectChoicesItem struct {
	HumanName   OptString `json:"human_name"`
	TfvcProject OptString `json:"tfvc_project"`
	Vcs         OptString `json:"vcs"`
}

type ImportStatus string

const (
	ImportStatusAuth                   ImportStatus = "auth"
	ImportStatusError                  ImportStatus = "error"
	ImportStatusNone                   ImportStatus = "none"
	ImportStatusDetecting              ImportStatus = "detecting"
	ImportStatusChoose                 ImportStatus = "choose"
	ImportStatusAuthFailed             ImportStatus = "auth_failed"
	ImportStatusImporting              ImportStatus = "importing"
	ImportStatusMapping                ImportStatus = "mapping"
	ImportStatusWaitingToPush          ImportStatus = "waiting_to_push"
	ImportStatusPushing                ImportStatus = "pushing"
	ImportStatusComplete               ImportStatus = "complete"
	ImportStatusSetup                  ImportStatus = "setup"
	ImportStatusUnknown                ImportStatus = "unknown"
	ImportStatusDetectionFoundMultiple ImportStatus = "detection_found_multiple"
	ImportStatusDetectionFoundNothing  ImportStatus = "detection_found_nothing"
	ImportStatusDetectionNeedsAuth     ImportStatus = "detection_needs_auth"
)

// InstallationToken describes #/components/schemas/installation-token.
type InstallationToken struct {
	ExpiresAt              string                                  `json:"expires_at"`
	HasMultipleSingleFiles OptBool                                 `json:"has_multiple_single_files"`
	Permissions            OptAppPermissions                       `json:"permissions"`
	Repositories           *[]Repository                           `json:"repositories"`
	RepositorySelection    OptInstallationTokenRepositorySelection `json:"repository_selection"`
	SingleFile             OptString                               `json:"single_file"`
	SingleFilePaths        *[]string                               `json:"single_file_paths"`
	Token                  string                                  `json:"token"`
}

type InstallationTokenRepositorySelection string

const (
	InstallationTokenRepositorySelectionAll      InstallationTokenRepositorySelection = "all"
	InstallationTokenRepositorySelectionSelected InstallationTokenRepositorySelection = "selected"
)

// Integration describes #/components/schemas/integration.
type Integration struct {
	ClientID           OptString              `json:"client_id"`
	ClientSecret       OptString              `json:"client_secret"`
	CreatedAt          time.Time              `json:"created_at"`
	Description        NilString              `json:"description"`
	Events             []string               `json:"events"`
	ExternalURL        url.URL                `json:"external_url"`
	HTMLURL            url.URL                `json:"html_url"`
	ID                 int                    `json:"id"`
	InstallationsCount OptInt                 `json:"installations_count"`
	Name               string                 `json:"name"`
	NodeID             string                 `json:"node_id"`
	Owner              NullableSimpleUser     `json:"owner"`
	Pem                OptString              `json:"pem"`
	Permissions        IntegrationPermissions `json:"permissions"`
	Slug               OptString              `json:"slug"`
	UpdatedAt          time.Time              `json:"updated_at"`
	WebhookSecret      OptNilString           `json:"webhook_secret"`
}

func (*Integration) appsGetBySlugResponse() {}

type IntegrationPermissions struct {
	Checks      OptString `json:"checks"`
	Contents    OptString `json:"contents"`
	Deployments OptString `json:"deployments"`
	Issues      OptString `json:"issues"`
	Metadata    OptString `json:"metadata"`
}

type InteractionExpiry string

const (
	InteractionExpiryOneDay    InteractionExpiry = "one_day"
	InteractionExpiryThreeDays InteractionExpiry = "three_days"
	InteractionExpiryOneWeek   InteractionExpiry = "one_week"
	InteractionExpiryOneMonth  InteractionExpiry = "one_month"
	InteractionExpirySixMonths InteractionExpiry = "six_months"
)

type InteractionGroup string

const (
	InteractionGroupExistingUsers     InteractionGroup = "existing_users"
	InteractionGroupContributorsOnly  InteractionGroup = "contributors_only"
	InteractionGroupCollaboratorsOnly InteractionGroup = "collaborators_only"
)

// InteractionLimit describes #/components/schemas/interaction-limit.
type InteractionLimit struct {
	Expiry OptInteractionExpiry `json:"expiry"`
	Limit  InteractionGroup     `json:"limit"`
}

func (*InteractionLimit) interactionsSetRestrictionsForAuthenticatedUserRequest() {}
func (*InteractionLimit) interactionsSetRestrictionsForOrgRequest()               {}

// InteractionLimitResponse describes #/components/schemas/interaction-limit-response.
type InteractionLimitResponse struct {
	ExpiresAt time.Time        `json:"expires_at"`
	Limit     InteractionGroup `json:"limit"`
	Origin    string           `json:"origin"`
}

func (*InteractionLimitResponse) interactionsSetRestrictionsForRepoResponse() {}

type InteractionsRemoveRestrictionsForAuthenticatedUser struct{}

type InteractionsRemoveRestrictionsForOrg struct{}

type InteractionsRemoveRestrictionsForRepoConflict struct{}

func (*InteractionsRemoveRestrictionsForRepoConflict) interactionsRemoveRestrictionsForRepoResponse() {
}

type InteractionsRemoveRestrictionsForRepoNoContent struct{}

func (*InteractionsRemoveRestrictionsForRepoNoContent) interactionsRemoveRestrictionsForRepoResponse() {
}

type InteractionsSetRestrictionsForRepoConflict struct{}

func (*InteractionsSetRestrictionsForRepoConflict) interactionsSetRestrictionsForRepoResponse() {}

// IssueComment describes #/components/schemas/issue-comment.
type IssueComment struct {
	AuthorAssociation     AuthorAssociation      `json:"author_association"`
	Body                  OptString              `json:"body"`
	BodyHTML              OptString              `json:"body_html"`
	BodyText              OptString              `json:"body_text"`
	CreatedAt             time.Time              `json:"created_at"`
	HTMLURL               url.URL                `json:"html_url"`
	ID                    int                    `json:"id"`
	IssueURL              url.URL                `json:"issue_url"`
	NodeID                string                 `json:"node_id"`
	PerformedViaGithubApp OptNullableIntegration `json:"performed_via_github_app"`
	Reactions             OptReactionRollup      `json:"reactions"`
	URL                   url.URL                `json:"url"`
	UpdatedAt             time.Time              `json:"updated_at"`
	User                  NullableSimpleUser     `json:"user"`
}

func (*IssueComment) issuesGetCommentResponse() {}

// IssueEvent describes #/components/schemas/issue-event.
type IssueEvent struct {
	Actor                 NullableSimpleUser           `json:"actor"`
	Assignee              OptNullableSimpleUser        `json:"assignee"`
	Assigner              OptNullableSimpleUser        `json:"assigner"`
	AuthorAssociation     OptAuthorAssociation         `json:"author_association"`
	CommitID              NilString                    `json:"commit_id"`
	CommitURL             NilString                    `json:"commit_url"`
	CreatedAt             time.Time                    `json:"created_at"`
	DismissedReview       OptIssueEventDismissedReview `json:"dismissed_review"`
	Event                 string                       `json:"event"`
	ID                    int                          `json:"id"`
	Issue                 OptIssueSimple               `json:"issue"`
	Label                 OptIssueEventLabel           `json:"label"`
	LockReason            OptNilString                 `json:"lock_reason"`
	Milestone             OptIssueEventMilestone       `json:"milestone"`
	NodeID                string                       `json:"node_id"`
	PerformedViaGithubApp OptNullableIntegration       `json:"performed_via_github_app"`
	ProjectCard           OptIssueEventProjectCard     `json:"project_card"`
	Rename                OptIssueEventRename          `json:"rename"`
	RequestedReviewer     OptNullableSimpleUser        `json:"requested_reviewer"`
	RequestedTeam         OptTeam                      `json:"requested_team"`
	ReviewRequester       OptNullableSimpleUser        `json:"review_requester"`
	URL                   url.URL                      `json:"url"`
}

func (*IssueEvent) issuesGetEventResponse() {}

// IssueEventDismissedReview describes #/components/schemas/issue-event-dismissed-review.
type IssueEventDismissedReview struct {
	DismissalCommitID OptNilString `json:"dismissal_commit_id"`
	DismissalMessage  NilString    `json:"dismissal_message"`
	ReviewID          int          `json:"review_id"`
	State             string       `json:"state"`
}

// IssueEventLabel describes #/components/schemas/issue-event-label.
type IssueEventLabel struct {
	Color NilString `json:"color"`
	Name  NilString `json:"name"`
}

// IssueEventMilestone describes #/components/schemas/issue-event-milestone.
type IssueEventMilestone struct {
	Title string `json:"title"`
}

// IssueEventProjectCard describes #/components/schemas/issue-event-project-card.
type IssueEventProjectCard struct {
	ColumnName         string    `json:"column_name"`
	ID                 int       `json:"id"`
	PreviousColumnName OptString `json:"previous_column_name"`
	ProjectID          int       `json:"project_id"`
	ProjectURL         url.URL   `json:"project_url"`
	URL                url.URL   `json:"url"`
}

// IssueEventRename describes #/components/schemas/issue-event-rename.
type IssueEventRename struct {
	From string `json:"from"`
	To   string `json:"to"`
}

// IssueSimple describes #/components/schemas/issue-simple.
type IssueSimple struct {
	ActiveLockReason      OptNilString              `json:"active_lock_reason"`
	Assignee              NullableSimpleUser        `json:"assignee"`
	Assignees             *[]SimpleUser             `json:"assignees"`
	AuthorAssociation     AuthorAssociation         `json:"author_association"`
	Body                  OptString                 `json:"body"`
	BodyHTML              OptString                 `json:"body_html"`
	BodyText              OptString                 `json:"body_text"`
	ClosedAt              NilTime                   `json:"closed_at"`
	Comments              int                       `json:"comments"`
	CommentsURL           url.URL                   `json:"comments_url"`
	CreatedAt             time.Time                 `json:"created_at"`
	EventsURL             url.URL                   `json:"events_url"`
	HTMLURL               url.URL                   `json:"html_url"`
	ID                    int                       `json:"id"`
	Labels                []Label                   `json:"labels"`
	LabelsURL             string                    `json:"labels_url"`
	Locked                bool                      `json:"locked"`
	Milestone             NullableMilestone         `json:"milestone"`
	NodeID                string                    `json:"node_id"`
	Number                int                       `json:"number"`
	PerformedViaGithubApp OptNullableIntegration    `json:"performed_via_github_app"`
	PullRequest           OptIssueSimplePullRequest `json:"pull_request"`
	Repository            OptRepository             `json:"repository"`
	RepositoryURL         url.URL                   `json:"repository_url"`
	State                 string                    `json:"state"`
	TimelineURL           OptURL                    `json:"timeline_url"`
	Title                 string                    `json:"title"`
	URL                   url.URL                   `json:"url"`
	UpdatedAt             time.Time                 `json:"updated_at"`
	User                  NullableSimpleUser        `json:"user"`
}

type IssueSimplePullRequest struct {
	DiffURL  NilURL     `json:"diff_url"`
	HTMLURL  NilURL     `json:"html_url"`
	MergedAt OptNilTime `json:"merged_at"`
	PatchURL NilURL     `json:"patch_url"`
	URL      NilURL     `json:"url"`
}

type IssuesAddAssigneesApplicationJSONRequest struct {
	Assignees *[]string `json:"assignees"`
}

type IssuesCheckUserCanBeAssignedNoContent struct{}

func (*IssuesCheckUserCanBeAssignedNoContent) issuesCheckUserCanBeAssignedResponse() {}

type IssuesCreateCommentApplicationJSONRequest struct {
	Body string `json:"body"`
}

func (*IssuesCreateCommentApplicationJSONRequest) issuesCreateCommentRequest() {}

type IssuesCreateLabelApplicationJSONRequest struct {
	Color       OptString `json:"color"`
	Description OptString `json:"description"`
	Name        string    `json:"name"`
}

func (*IssuesCreateLabelApplicationJSONRequest) issuesCreateLabelRequest() {}

type IssuesCreateMilestoneApplicationJSONRequest struct {
	Description OptString                                           `json:"description"`
	DueOn       OptTime                                             `json:"due_on"`
	State       OptIssuesCreateMilestoneApplicationJSONRequestState `json:"state"`
	Title       string                                              `json:"title"`
}

func (*IssuesCreateMilestoneApplicationJSONRequest) issuesCreateMilestoneRequest() {}

type IssuesCreateMilestoneApplicationJSONRequestState string

const (
	IssuesCreateMilestoneApplicationJSONRequestStateOpen   IssuesCreateMilestoneApplicationJSONRequestState = "open"
	IssuesCreateMilestoneApplicationJSONRequestStateClosed IssuesCreateMilestoneApplicationJSONRequestState = "closed"
)

type IssuesDeleteComment struct{}

type IssuesDeleteLabel struct{}

type IssuesDeleteMilestoneNoContent struct{}

func (*IssuesDeleteMilestoneNoContent) issuesDeleteMilestoneResponse() {}

type IssuesGetEventApplicationJSONForbidden BasicError

func (*IssuesGetEventApplicationJSONForbidden) issuesGetEventResponse() {}

type IssuesGetEventApplicationJSONGone BasicError

func (*IssuesGetEventApplicationJSONGone) issuesGetEventResponse() {}

type IssuesGetEventApplicationJSONNotFound BasicError

func (*IssuesGetEventApplicationJSONNotFound) issuesGetEventResponse() {}

type IssuesListAssigneesOK []SimpleUser

func (*IssuesListAssigneesOK) issuesListAssigneesResponse() {}

type IssuesListCommentsApplicationJSONGone BasicError

func (*IssuesListCommentsApplicationJSONGone) issuesListCommentsResponse() {}

type IssuesListCommentsApplicationJSONNotFound BasicError

func (*IssuesListCommentsApplicationJSONNotFound) issuesListCommentsResponse() {}

type IssuesListCommentsOK []IssueComment

func (*IssuesListCommentsOK) issuesListCommentsResponse() {}

type IssuesListEventsForRepoOK []IssueEvent

type IssuesListLabelsForRepoOK []Label

func (*IssuesListLabelsForRepoOK) issuesListLabelsForRepoResponse() {}

type IssuesListLabelsOnIssueOK []Label

func (*IssuesListLabelsOnIssueOK) issuesListLabelsOnIssueResponse() {}

type IssuesLockApplicationJSONRequest struct {
	LockReason OptIssuesLockApplicationJSONRequestLockReason `json:"lock_reason"`
}

func (*IssuesLockApplicationJSONRequest) issuesLockRequest() {}

type IssuesLockApplicationJSONRequestLockReason string

const (
	IssuesLockApplicationJSONRequestLockReasonOffMinusTopic IssuesLockApplicationJSONRequestLockReason = "off-topic"
	IssuesLockApplicationJSONRequestLockReasonTooHeated     IssuesLockApplicationJSONRequestLockReason = "too heated"
	IssuesLockApplicationJSONRequestLockReasonResolved      IssuesLockApplicationJSONRequestLockReason = "resolved"
	IssuesLockApplicationJSONRequestLockReasonSpam          IssuesLockApplicationJSONRequestLockReason = "spam"
)

type IssuesLockNoContent struct{}

type IssuesRemoveAllLabelsNoContent struct{}

func (*IssuesRemoveAllLabelsNoContent) issuesRemoveAllLabelsResponse() {}

type IssuesRemoveAssigneesApplicationJSONRequest struct {
	Assignees *[]string `json:"assignees"`
}

type IssuesRemoveLabelApplicationJSONGone BasicError

func (*IssuesRemoveLabelApplicationJSONGone) issuesRemoveLabelResponse() {}

type IssuesRemoveLabelApplicationJSONNotFound BasicError

func (*IssuesRemoveLabelApplicationJSONNotFound) issuesRemoveLabelResponse() {}

type IssuesRemoveLabelOK []Label

func (*IssuesRemoveLabelOK) issuesRemoveLabelResponse() {}

type IssuesUnlockApplicationJSONForbidden BasicError

func (*IssuesUnlockApplicationJSONForbidden) issuesUnlockResponse() {}

type IssuesUnlockApplicationJSONNotFound BasicError

func (*IssuesUnlockApplicationJSONNotFound) issuesUnlockResponse() {}

type IssuesUnlockNoContent struct{}

func (*IssuesUnlockNoContent) issuesUnlockResponse() {}

type IssuesUpdateCommentApplicationJSONRequest struct {
	Body string `json:"body"`
}

func (*IssuesUpdateCommentApplicationJSONRequest) issuesUpdateCommentRequest() {}

type IssuesUpdateLabelApplicationJSONRequest struct {
	Color       OptString `json:"color"`
	Description OptString `json:"description"`
	NewName     OptString `json:"new_name"`
}

type IssuesUpdateMilestoneApplicationJSONRequest struct {
	Description OptString                                           `json:"description"`
	DueOn       OptTime                                             `json:"due_on"`
	State       OptIssuesUpdateMilestoneApplicationJSONRequestState `json:"state"`
	Title       OptString                                           `json:"title"`
}

type IssuesUpdateMilestoneApplicationJSONRequestState string

const (
	IssuesUpdateMilestoneApplicationJSONRequestStateOpen   IssuesUpdateMilestoneApplicationJSONRequestState = "open"
	IssuesUpdateMilestoneApplicationJSONRequestStateClosed IssuesUpdateMilestoneApplicationJSONRequestState = "closed"
)

// Job describes #/components/schemas/job.
type Job struct {
	CheckRunURL string          `json:"check_run_url"`
	CompletedAt NilTime         `json:"completed_at"`
	Conclusion  NilString       `json:"conclusion"`
	HTMLURL     NilString       `json:"html_url"`
	HeadSha     string          `json:"head_sha"`
	ID          int             `json:"id"`
	Name        string          `json:"name"`
	NodeID      string          `json:"node_id"`
	RunID       int             `json:"run_id"`
	RunURL      string          `json:"run_url"`
	StartedAt   time.Time       `json:"started_at"`
	Status      JobStatus       `json:"status"`
	Steps       *[]JobStepsItem `json:"steps"`
	URL         string          `json:"url"`
}

type JobStatus string

const (
	JobStatusQueued     JobStatus = "queued"
	JobStatusInProgress JobStatus = "in_progress"
	JobStatusCompleted  JobStatus = "completed"
)

type JobStepsItem struct {
	CompletedAt OptNilTime         `json:"completed_at"`
	Conclusion  NilString          `json:"conclusion"`
	Name        string             `json:"name"`
	Number      int                `json:"number"`
	StartedAt   OptNilTime         `json:"started_at"`
	Status      JobStepsItemStatus `json:"status"`
}

type JobStepsItemStatus string

const (
	JobStepsItemStatusQueued     JobStepsItemStatus = "queued"
	JobStepsItemStatusInProgress JobStepsItemStatus = "in_progress"
	JobStepsItemStatusCompleted  JobStepsItemStatus = "completed"
)

// Key describes #/components/schemas/key.
type Key struct {
	CreatedAt time.Time `json:"created_at"`
	ID        int       `json:"id"`
	Key       string    `json:"key"`
	ReadOnly  bool      `json:"read_only"`
	Title     string    `json:"title"`
	URL       string    `json:"url"`
	Verified  bool      `json:"verified"`
}

func (*Key) usersGetPublicSSHKeyForAuthenticatedResponse() {}

// KeySimple describes #/components/schemas/key-simple.
type KeySimple struct {
	ID  int    `json:"id"`
	Key string `json:"key"`
}

// Label describes #/components/schemas/label.
type Label struct {
	Color       string    `json:"color"`
	Default     bool      `json:"default"`
	Description NilString `json:"description"`
	ID          int64     `json:"id"`
	Name        string    `json:"name"`
	NodeID      string    `json:"node_id"`
	URL         url.URL   `json:"url"`
}

func (*Label) issuesGetLabelResponse() {}

type Language struct{}

// License describes #/components/schemas/license.
type License struct {
	Body           string    `json:"body"`
	Conditions     []string  `json:"conditions"`
	Description    string    `json:"description"`
	Featured       bool      `json:"featured"`
	HTMLURL        url.URL   `json:"html_url"`
	Implementation string    `json:"implementation"`
	Key            string    `json:"key"`
	Limitations    []string  `json:"limitations"`
	Name           string    `json:"name"`
	NodeID         string    `json:"node_id"`
	Permissions    []string  `json:"permissions"`
	SpdxID         NilString `json:"spdx_id"`
	URL            NilURL    `json:"url"`
}

func (*License) licensesGetResponse() {}

// LicenseContent describes #/components/schemas/license-content.
type LicenseContent struct {
	Content     string                `json:"content"`
	DownloadURL NilURL                `json:"download_url"`
	Encoding    string                `json:"encoding"`
	GitURL      NilURL                `json:"git_url"`
	HTMLURL     NilURL                `json:"html_url"`
	License     NullableLicenseSimple `json:"license"`
	Links       LicenseContentLinks   `json:"_links"`
	Name        string                `json:"name"`
	Path        string                `json:"path"`
	Sha         string                `json:"sha"`
	Size        int                   `json:"size"`
	Type        string                `json:"type"`
	URL         url.URL               `json:"url"`
}

type LicenseContentLinks struct {
	Git  NilURL  `json:"git"`
	HTML NilURL  `json:"html"`
	Self url.URL `json:"self"`
}

// LicenseSimple describes #/components/schemas/license-simple.
type LicenseSimple struct {
	HTMLURL OptURL    `json:"html_url"`
	Key     string    `json:"key"`
	Name    string    `json:"name"`
	NodeID  string    `json:"node_id"`
	SpdxID  NilString `json:"spdx_id"`
	URL     NilURL    `json:"url"`
}

type LicensesGetAllCommonlyUsedOK []LicenseSimple

func (*LicensesGetAllCommonlyUsedOK) licensesGetAllCommonlyUsedResponse() {}

type LicensesGetApplicationJSONForbidden BasicError

func (*LicensesGetApplicationJSONForbidden) licensesGetResponse() {}

type LicensesGetApplicationJSONNotFound BasicError

func (*LicensesGetApplicationJSONNotFound) licensesGetResponse() {}

// Link describes #/components/schemas/link.
type Link struct {
	Href string `json:"href"`
}

// LinkWithType describes #/components/schemas/link-with-type.
type LinkWithType struct {
	Href string `json:"href"`
	Type string `json:"type"`
}

type MarkdownRenderApplicationJSONRequest struct {
	Context OptString                                   `json:"context"`
	Mode    OptMarkdownRenderApplicationJSONRequestMode `json:"mode"`
	Text    string                                      `json:"text"`
}

type MarkdownRenderApplicationJSONRequestMode string

const (
	MarkdownRenderApplicationJSONRequestModeMarkdown MarkdownRenderApplicationJSONRequestMode = "markdown"
	MarkdownRenderApplicationJSONRequestModeGfm      MarkdownRenderApplicationJSONRequestMode = "gfm"
)

type MarkdownRenderOK string

func (*MarkdownRenderOK) markdownRenderResponse() {}

type MarkdownRenderRawOK string

func (*MarkdownRenderRawOK) markdownRenderRawResponse() {}

type MarkdownRenderRawTextPlainRequest string

func (*MarkdownRenderRawTextPlainRequest) markdownRenderRawRequest() {}

type MarkdownRenderRawTextXMarkdownRequest string

func (*MarkdownRenderRawTextXMarkdownRequest) markdownRenderRawRequest() {}

// MarketplaceAccount describes #/components/schemas/marketplace-account.
type MarketplaceAccount struct {
	Email                    OptNilString `json:"email"`
	ID                       int          `json:"id"`
	Login                    string       `json:"login"`
	NodeID                   OptString    `json:"node_id"`
	OrganizationBillingEmail OptNilString `json:"organization_billing_email"`
	Type                     string       `json:"type"`
	URL                      url.URL      `json:"url"`
}

// MarketplaceListingPlan describes #/components/schemas/marketplace-listing-plan.
type MarketplaceListingPlan struct {
	AccountsURL         url.URL   `json:"accounts_url"`
	Bullets             []string  `json:"bullets"`
	Description         string    `json:"description"`
	HasFreeTrial        bool      `json:"has_free_trial"`
	ID                  int       `json:"id"`
	MonthlyPriceInCents int       `json:"monthly_price_in_cents"`
	Name                string    `json:"name"`
	Number              int       `json:"number"`
	PriceModel          string    `json:"price_model"`
	State               string    `json:"state"`
	URL                 url.URL   `json:"url"`
	UnitName            NilString `json:"unit_name"`
	YearlyPriceInCents  int       `json:"yearly_price_in_cents"`
}

// MarketplacePurchase describes #/components/schemas/marketplace-purchase.
type MarketplacePurchase struct {
	Email                    OptNilString                                      `json:"email"`
	ID                       int                                               `json:"id"`
	Login                    string                                            `json:"login"`
	MarketplacePendingChange OptNilMarketplacePurchaseMarketplacePendingChange `json:"marketplace_pending_change"`
	MarketplacePurchase      MarketplacePurchaseMarketplacePurchase            `json:"marketplace_purchase"`
	OrganizationBillingEmail OptString                                         `json:"organization_billing_email"`
	Type                     string                                            `json:"type"`
	URL                      string                                            `json:"url"`
}

func (*MarketplacePurchase) appsGetSubscriptionPlanForAccountResponse()        {}
func (*MarketplacePurchase) appsGetSubscriptionPlanForAccountStubbedResponse() {}

type MarketplacePurchaseMarketplacePendingChange struct {
	EffectiveDate OptString                 `json:"effective_date"`
	ID            OptInt                    `json:"id"`
	IsInstalled   OptBool                   `json:"is_installed"`
	Plan          OptMarketplaceListingPlan `json:"plan"`
	UnitCount     OptNilInt                 `json:"unit_count"`
}

type MarketplacePurchaseMarketplacePurchase struct {
	BillingCycle    OptString                 `json:"billing_cycle"`
	FreeTrialEndsOn OptNilString              `json:"free_trial_ends_on"`
	IsInstalled     OptBool                   `json:"is_installed"`
	NextBillingDate OptNilString              `json:"next_billing_date"`
	OnFreeTrial     OptBool                   `json:"on_free_trial"`
	Plan            OptMarketplaceListingPlan `json:"plan"`
	UnitCount       OptNilInt                 `json:"unit_count"`
	UpdatedAt       OptString                 `json:"updated_at"`
}

// MergedUpstream describes #/components/schemas/merged-upstream.
type MergedUpstream struct {
	BaseBranch OptString                  `json:"base_branch"`
	MergeType  OptMergedUpstreamMergeType `json:"merge_type"`
	Message    OptString                  `json:"message"`
}

func (*MergedUpstream) reposMergeUpstreamResponse() {}

type MergedUpstreamMergeType string

const (
	MergedUpstreamMergeTypeMerge            MergedUpstreamMergeType = "merge"
	MergedUpstreamMergeTypeFastMinusForward MergedUpstreamMergeType = "fast-forward"
	MergedUpstreamMergeTypeNone             MergedUpstreamMergeType = "none"
)

type MetaRoot struct {
	AuthorizationsURL                string    `json:"authorizations_url"`
	CodeSearchURL                    string    `json:"code_search_url"`
	CommitSearchURL                  string    `json:"commit_search_url"`
	CurrentUserAuthorizationsHTMLURL string    `json:"current_user_authorizations_html_url"`
	CurrentUserRepositoriesURL       string    `json:"current_user_repositories_url"`
	CurrentUserURL                   string    `json:"current_user_url"`
	EmailsURL                        string    `json:"emails_url"`
	EmojisURL                        string    `json:"emojis_url"`
	EventsURL                        string    `json:"events_url"`
	FeedsURL                         string    `json:"feeds_url"`
	FollowersURL                     string    `json:"followers_url"`
	FollowingURL                     string    `json:"following_url"`
	GistsURL                         string    `json:"gists_url"`
	HubURL                           string    `json:"hub_url"`
	IssueSearchURL                   string    `json:"issue_search_url"`
	IssuesURL                        string    `json:"issues_url"`
	KeysURL                          string    `json:"keys_url"`
	LabelSearchURL                   string    `json:"label_search_url"`
	NotificationsURL                 string    `json:"notifications_url"`
	OrganizationRepositoriesURL      string    `json:"organization_repositories_url"`
	OrganizationTeamsURL             string    `json:"organization_teams_url"`
	OrganizationURL                  string    `json:"organization_url"`
	PublicGistsURL                   string    `json:"public_gists_url"`
	RateLimitURL                     string    `json:"rate_limit_url"`
	RepositorySearchURL              string    `json:"repository_search_url"`
	RepositoryURL                    string    `json:"repository_url"`
	StarredGistsURL                  string    `json:"starred_gists_url"`
	StarredURL                       string    `json:"starred_url"`
	TopicSearchURL                   OptString `json:"topic_search_url"`
	UserOrganizationsURL             string    `json:"user_organizations_url"`
	UserRepositoriesURL              string    `json:"user_repositories_url"`
	UserSearchURL                    string    `json:"user_search_url"`
	UserURL                          string    `json:"user_url"`
}

// Migration describes #/components/schemas/migration.
type Migration struct {
	ArchiveURL           OptURL             `json:"archive_url"`
	CreatedAt            time.Time          `json:"created_at"`
	Exclude              *[]string          `json:"exclude"`
	ExcludeAttachments   bool               `json:"exclude_attachments"`
	ExcludeGitData       bool               `json:"exclude_git_data"`
	ExcludeMetadata      bool               `json:"exclude_metadata"`
	ExcludeOwnerProjects bool               `json:"exclude_owner_projects"`
	ExcludeReleases      bool               `json:"exclude_releases"`
	GUID                 string             `json:"guid"`
	ID                   int                `json:"id"`
	LockRepositories     bool               `json:"lock_repositories"`
	NodeID               string             `json:"node_id"`
	Owner                NullableSimpleUser `json:"owner"`
	Repositories         []Repository       `json:"repositories"`
	State                string             `json:"state"`
	URL                  url.URL            `json:"url"`
	UpdatedAt            time.Time          `json:"updated_at"`
}

func (*Migration) migrationsGetStatusForAuthenticatedUserResponse() {}

type MigrationsCancelImport struct{}

type MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONForbidden) migrationsDeleteArchiveForAuthenticatedUserResponse() {
}

type MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONNotFound BasicError

func (*MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONNotFound) migrationsDeleteArchiveForAuthenticatedUserResponse() {
}

type MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONUnauthorized) migrationsDeleteArchiveForAuthenticatedUserResponse() {
}

type MigrationsDeleteArchiveForAuthenticatedUserNoContent struct{}

func (*MigrationsDeleteArchiveForAuthenticatedUserNoContent) migrationsDeleteArchiveForAuthenticatedUserResponse() {
}

type MigrationsDeleteArchiveForOrgNoContent struct{}

func (*MigrationsDeleteArchiveForOrgNoContent) migrationsDeleteArchiveForOrgResponse() {}

type MigrationsDownloadArchiveForOrgFound struct{}

func (*MigrationsDownloadArchiveForOrgFound) migrationsDownloadArchiveForOrgResponse() {}

type MigrationsGetArchiveForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsGetArchiveForAuthenticatedUserApplicationJSONForbidden) migrationsGetArchiveForAuthenticatedUserResponse() {
}

type MigrationsGetArchiveForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsGetArchiveForAuthenticatedUserApplicationJSONUnauthorized) migrationsGetArchiveForAuthenticatedUserResponse() {
}

type MigrationsGetArchiveForAuthenticatedUserFound struct{}

func (*MigrationsGetArchiveForAuthenticatedUserFound) migrationsGetArchiveForAuthenticatedUserResponse() {
}

type MigrationsGetCommitAuthorsOK []PorterAuthor

func (*MigrationsGetCommitAuthorsOK) migrationsGetCommitAuthorsResponse() {}

type MigrationsGetStatusForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsGetStatusForAuthenticatedUserApplicationJSONForbidden) migrationsGetStatusForAuthenticatedUserResponse() {
}

type MigrationsGetStatusForAuthenticatedUserApplicationJSONNotFound BasicError

func (*MigrationsGetStatusForAuthenticatedUserApplicationJSONNotFound) migrationsGetStatusForAuthenticatedUserResponse() {
}

type MigrationsGetStatusForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsGetStatusForAuthenticatedUserApplicationJSONUnauthorized) migrationsGetStatusForAuthenticatedUserResponse() {
}

type MigrationsGetStatusForOrgExcludeItem string

const (
	MigrationsGetStatusForOrgExcludeItemRepositories MigrationsGetStatusForOrgExcludeItem = "repositories"
)

type MigrationsListForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsListForAuthenticatedUserApplicationJSONForbidden) migrationsListForAuthenticatedUserResponse() {
}

type MigrationsListForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsListForAuthenticatedUserApplicationJSONUnauthorized) migrationsListForAuthenticatedUserResponse() {
}

type MigrationsListForAuthenticatedUserOK []Migration

func (*MigrationsListForAuthenticatedUserOK) migrationsListForAuthenticatedUserResponse() {}

type MigrationsListForOrgExcludeItem string

const (
	MigrationsListForOrgExcludeItemRepositories MigrationsListForOrgExcludeItem = "repositories"
)

type MigrationsListReposForOrgOK []MinimalRepository

func (*MigrationsListReposForOrgOK) migrationsListReposForOrgResponse() {}

type MigrationsListReposForUserOK []MinimalRepository

func (*MigrationsListReposForUserOK) migrationsListReposForUserResponse() {}

type MigrationsMapCommitAuthorApplicationJSONRequest struct {
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

func (*MigrationsMapCommitAuthorApplicationJSONRequest) migrationsMapCommitAuthorRequest() {}

type MigrationsSetLfsPreferenceApplicationJSONRequest struct {
	UseLfs MigrationsSetLfsPreferenceApplicationJSONRequestUseLfs `json:"use_lfs"`
}

func (*MigrationsSetLfsPreferenceApplicationJSONRequest) migrationsSetLfsPreferenceRequest() {}

type MigrationsSetLfsPreferenceApplicationJSONRequestUseLfs string

const (
	MigrationsSetLfsPreferenceApplicationJSONRequestUseLfsOptIn  MigrationsSetLfsPreferenceApplicationJSONRequestUseLfs = "opt_in"
	MigrationsSetLfsPreferenceApplicationJSONRequestUseLfsOptOut MigrationsSetLfsPreferenceApplicationJSONRequestUseLfs = "opt_out"
)

type MigrationsStartForAuthenticatedUserApplicationJSONRequest struct {
	Exclude              *[]MigrationsStartForAuthenticatedUserApplicationJSONRequestExcludeItem `json:"exclude"`
	ExcludeAttachments   OptBool                                                                 `json:"exclude_attachments"`
	ExcludeOwnerProjects OptBool                                                                 `json:"exclude_owner_projects"`
	ExcludeReleases      OptBool                                                                 `json:"exclude_releases"`
	LockRepositories     OptBool                                                                 `json:"lock_repositories"`
	Repositories         []string                                                                `json:"repositories"`
}

func (*MigrationsStartForAuthenticatedUserApplicationJSONRequest) migrationsStartForAuthenticatedUserRequest() {
}

type MigrationsStartForAuthenticatedUserApplicationJSONRequestExcludeItem string

const (
	MigrationsStartForAuthenticatedUserApplicationJSONRequestExcludeItemRepositories MigrationsStartForAuthenticatedUserApplicationJSONRequestExcludeItem = "repositories"
)

type MigrationsStartForOrgApplicationJSONRequest struct {
	Exclude              *[]MigrationsStartForOrgApplicationJSONRequestExcludeItem `json:"exclude"`
	ExcludeAttachments   OptBool                                                   `json:"exclude_attachments"`
	ExcludeOwnerProjects OptBool                                                   `json:"exclude_owner_projects"`
	ExcludeReleases      OptBool                                                   `json:"exclude_releases"`
	LockRepositories     OptBool                                                   `json:"lock_repositories"`
	Repositories         []string                                                  `json:"repositories"`
}

func (*MigrationsStartForOrgApplicationJSONRequest) migrationsStartForOrgRequest() {}

type MigrationsStartForOrgApplicationJSONRequestExcludeItem string

const (
	MigrationsStartForOrgApplicationJSONRequestExcludeItemRepositories MigrationsStartForOrgApplicationJSONRequestExcludeItem = "repositories"
)

type MigrationsStartImportApplicationJSONRequest struct {
	TfvcProject OptString                                         `json:"tfvc_project"`
	Vcs         OptMigrationsStartImportApplicationJSONRequestVcs `json:"vcs"`
	VcsPassword OptString                                         `json:"vcs_password"`
	VcsURL      string                                            `json:"vcs_url"`
	VcsUsername OptString                                         `json:"vcs_username"`
}

func (*MigrationsStartImportApplicationJSONRequest) migrationsStartImportRequest() {}

type MigrationsStartImportApplicationJSONRequestVcs string

const (
	MigrationsStartImportApplicationJSONRequestVcsSubversion MigrationsStartImportApplicationJSONRequestVcs = "subversion"
	MigrationsStartImportApplicationJSONRequestVcsGit        MigrationsStartImportApplicationJSONRequestVcs = "git"
	MigrationsStartImportApplicationJSONRequestVcsMercurial  MigrationsStartImportApplicationJSONRequestVcs = "mercurial"
	MigrationsStartImportApplicationJSONRequestVcsTfvc       MigrationsStartImportApplicationJSONRequestVcs = "tfvc"
)

type MigrationsUnlockRepoForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsUnlockRepoForAuthenticatedUserApplicationJSONForbidden) migrationsUnlockRepoForAuthenticatedUserResponse() {
}

type MigrationsUnlockRepoForAuthenticatedUserApplicationJSONNotFound BasicError

func (*MigrationsUnlockRepoForAuthenticatedUserApplicationJSONNotFound) migrationsUnlockRepoForAuthenticatedUserResponse() {
}

type MigrationsUnlockRepoForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsUnlockRepoForAuthenticatedUserApplicationJSONUnauthorized) migrationsUnlockRepoForAuthenticatedUserResponse() {
}

type MigrationsUnlockRepoForAuthenticatedUserNoContent struct{}

func (*MigrationsUnlockRepoForAuthenticatedUserNoContent) migrationsUnlockRepoForAuthenticatedUserResponse() {
}

type MigrationsUnlockRepoForOrgNoContent struct{}

func (*MigrationsUnlockRepoForOrgNoContent) migrationsUnlockRepoForOrgResponse() {}

type MigrationsUpdateImportApplicationJSONRequest struct {
	TfvcProject OptString `json:"tfvc_project"`
	Vcs         OptString `json:"vcs"`
	VcsPassword OptString `json:"vcs_password"`
	VcsUsername OptString `json:"vcs_username"`
}

// Milestone describes #/components/schemas/milestone.
type Milestone struct {
	ClosedAt     NilTime            `json:"closed_at"`
	ClosedIssues int                `json:"closed_issues"`
	CreatedAt    time.Time          `json:"created_at"`
	Creator      NullableSimpleUser `json:"creator"`
	Description  NilString          `json:"description"`
	DueOn        NilTime            `json:"due_on"`
	HTMLURL      url.URL            `json:"html_url"`
	ID           int                `json:"id"`
	LabelsURL    url.URL            `json:"labels_url"`
	NodeID       string             `json:"node_id"`
	Number       int                `json:"number"`
	OpenIssues   int                `json:"open_issues"`
	State        MilestoneState     `json:"state"`
	Title        string             `json:"title"`
	URL          url.URL            `json:"url"`
	UpdatedAt    time.Time          `json:"updated_at"`
}

func (*Milestone) issuesGetMilestoneResponse() {}

type MilestoneState string

const (
	MilestoneStateOpen   MilestoneState = "open"
	MilestoneStateClosed MilestoneState = "closed"
)

// MinimalRepository describes #/components/schemas/minimal-repository.
type MinimalRepository struct {
	AllowForking        OptBool                         `json:"allow_forking"`
	ArchiveURL          string                          `json:"archive_url"`
	Archived            OptBool                         `json:"archived"`
	AssigneesURL        string                          `json:"assignees_url"`
	BlobsURL            string                          `json:"blobs_url"`
	BranchesURL         string                          `json:"branches_url"`
	CloneURL            OptString                       `json:"clone_url"`
	CodeOfConduct       OptCodeOfConduct                `json:"code_of_conduct"`
	CollaboratorsURL    string                          `json:"collaborators_url"`
	CommentsURL         string                          `json:"comments_url"`
	CommitsURL          string                          `json:"commits_url"`
	CompareURL          string                          `json:"compare_url"`
	ContentsURL         string                          `json:"contents_url"`
	ContributorsURL     url.URL                         `json:"contributors_url"`
	CreatedAt           OptNilTime                      `json:"created_at"`
	DefaultBranch       OptString                       `json:"default_branch"`
	DeleteBranchOnMerge OptBool                         `json:"delete_branch_on_merge"`
	DeploymentsURL      url.URL                         `json:"deployments_url"`
	Description         NilString                       `json:"description"`
	Disabled            OptBool                         `json:"disabled"`
	DownloadsURL        url.URL                         `json:"downloads_url"`
	EventsURL           url.URL                         `json:"events_url"`
	Fork                bool                            `json:"fork"`
	Forks               OptInt                          `json:"forks"`
	ForksCount          OptInt                          `json:"forks_count"`
	ForksURL            url.URL                         `json:"forks_url"`
	FullName            string                          `json:"full_name"`
	GitCommitsURL       string                          `json:"git_commits_url"`
	GitRefsURL          string                          `json:"git_refs_url"`
	GitTagsURL          string                          `json:"git_tags_url"`
	GitURL              OptString                       `json:"git_url"`
	HTMLURL             url.URL                         `json:"html_url"`
	HasDownloads        OptBool                         `json:"has_downloads"`
	HasIssues           OptBool                         `json:"has_issues"`
	HasPages            OptBool                         `json:"has_pages"`
	HasProjects         OptBool                         `json:"has_projects"`
	HasWiki             OptBool                         `json:"has_wiki"`
	Homepage            OptNilString                    `json:"homepage"`
	HooksURL            url.URL                         `json:"hooks_url"`
	ID                  int                             `json:"id"`
	IsTemplate          OptBool                         `json:"is_template"`
	IssueCommentURL     string                          `json:"issue_comment_url"`
	IssueEventsURL      string                          `json:"issue_events_url"`
	IssuesURL           string                          `json:"issues_url"`
	KeysURL             string                          `json:"keys_url"`
	LabelsURL           string                          `json:"labels_url"`
	Language            OptNilString                    `json:"language"`
	LanguagesURL        url.URL                         `json:"languages_url"`
	License             OptNilMinimalRepositoryLicense  `json:"license"`
	MergesURL           url.URL                         `json:"merges_url"`
	MilestonesURL       string                          `json:"milestones_url"`
	MirrorURL           OptNilString                    `json:"mirror_url"`
	Name                string                          `json:"name"`
	NetworkCount        OptInt                          `json:"network_count"`
	NodeID              string                          `json:"node_id"`
	NotificationsURL    string                          `json:"notifications_url"`
	OpenIssues          OptInt                          `json:"open_issues"`
	OpenIssuesCount     OptInt                          `json:"open_issues_count"`
	Owner               SimpleUser                      `json:"owner"`
	Permissions         OptMinimalRepositoryPermissions `json:"permissions"`
	Private             bool                            `json:"private"`
	PullsURL            string                          `json:"pulls_url"`
	PushedAt            OptNilTime                      `json:"pushed_at"`
	ReleasesURL         string                          `json:"releases_url"`
	SSHURL              OptString                       `json:"ssh_url"`
	Size                OptInt                          `json:"size"`
	StargazersCount     OptInt                          `json:"stargazers_count"`
	StargazersURL       url.URL                         `json:"stargazers_url"`
	StatusesURL         string                          `json:"statuses_url"`
	SubscribersCount    OptInt                          `json:"subscribers_count"`
	SubscribersURL      url.URL                         `json:"subscribers_url"`
	SubscriptionURL     url.URL                         `json:"subscription_url"`
	SvnURL              OptString                       `json:"svn_url"`
	TagsURL             url.URL                         `json:"tags_url"`
	TeamsURL            url.URL                         `json:"teams_url"`
	TempCloneToken      OptString                       `json:"temp_clone_token"`
	TemplateRepository  OptNullableRepository           `json:"template_repository"`
	Topics              *[]string                       `json:"topics"`
	TreesURL            string                          `json:"trees_url"`
	URL                 url.URL                         `json:"url"`
	UpdatedAt           OptNilTime                      `json:"updated_at"`
	Visibility          OptString                       `json:"visibility"`
	Watchers            OptInt                          `json:"watchers"`
	WatchersCount       OptInt                          `json:"watchers_count"`
}

type MinimalRepositoryLicense struct {
	Key    OptString `json:"key"`
	Name   OptString `json:"name"`
	NodeID OptString `json:"node_id"`
	SpdxID OptString `json:"spdx_id"`
	URL    OptString `json:"url"`
}

type MinimalRepositoryPermissions struct {
	Admin    OptBool `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     OptBool `json:"pull"`
	Push     OptBool `json:"push"`
	Triage   OptBool `json:"triage"`
}

// New returns new NilBool with value set to v.
func NewNilBool(v bool) NilBool {
	return NilBool{
		Value: v,
	}
}

// NilBool is generic valiant of bool.
type NilBool struct {
	Value bool
	Null  bool
}

// SetTo sets value to v.
func (o *NilBool) SetTo(v bool) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilBool) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilCheckRunCheckSuite with value set to v.
func NewNilCheckRunCheckSuite(v CheckRunCheckSuite) NilCheckRunCheckSuite {
	return NilCheckRunCheckSuite{
		Value: v,
	}
}

// NilCheckRunCheckSuite is generic valiant of CheckRunCheckSuite.
type NilCheckRunCheckSuite struct {
	Value CheckRunCheckSuite
	Null  bool
}

// SetTo sets value to v.
func (o *NilCheckRunCheckSuite) SetTo(v CheckRunCheckSuite) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilCheckRunCheckSuite) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilCheckRunCheckSuite) Get() (v CheckRunCheckSuite, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilCheckRunConclusion with value set to v.
func NewNilCheckRunConclusion(v CheckRunConclusion) NilCheckRunConclusion {
	return NilCheckRunConclusion{
		Value: v,
	}
}

// NilCheckRunConclusion is generic valiant of CheckRunConclusion.
type NilCheckRunConclusion struct {
	Value CheckRunConclusion
	Null  bool
}

// SetTo sets value to v.
func (o *NilCheckRunConclusion) SetTo(v CheckRunConclusion) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilCheckRunConclusion) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilCheckRunConclusion) Get() (v CheckRunConclusion, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilCheckSuiteConclusion with value set to v.
func NewNilCheckSuiteConclusion(v CheckSuiteConclusion) NilCheckSuiteConclusion {
	return NilCheckSuiteConclusion{
		Value: v,
	}
}

// NilCheckSuiteConclusion is generic valiant of CheckSuiteConclusion.
type NilCheckSuiteConclusion struct {
	Value CheckSuiteConclusion
	Null  bool
}

// SetTo sets value to v.
func (o *NilCheckSuiteConclusion) SetTo(v CheckSuiteConclusion) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilCheckSuiteConclusion) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilCheckSuiteConclusion) Get() (v CheckSuiteConclusion, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilCheckSuiteStatus with value set to v.
func NewNilCheckSuiteStatus(v CheckSuiteStatus) NilCheckSuiteStatus {
	return NilCheckSuiteStatus{
		Value: v,
	}
}

// NilCheckSuiteStatus is generic valiant of CheckSuiteStatus.
type NilCheckSuiteStatus struct {
	Value CheckSuiteStatus
	Null  bool
}

// SetTo sets value to v.
func (o *NilCheckSuiteStatus) SetTo(v CheckSuiteStatus) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilCheckSuiteStatus) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilCheckSuiteStatus) Get() (v CheckSuiteStatus, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilFileCommitContent with value set to v.
func NewNilFileCommitContent(v FileCommitContent) NilFileCommitContent {
	return NilFileCommitContent{
		Value: v,
	}
}

// NilFileCommitContent is generic valiant of FileCommitContent.
type NilFileCommitContent struct {
	Value FileCommitContent
	Null  bool
}

// SetTo sets value to v.
func (o *NilFileCommitContent) SetTo(v FileCommitContent) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilFileCommitContent) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilFileCommitContent) Get() (v FileCommitContent, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilInt with value set to v.
func NewNilInt(v int) NilInt {
	return NilInt{
		Value: v,
	}
}

// NilInt is generic valiant of int.
type NilInt struct {
	Value int
	Null  bool
}

// SetTo sets value to v.
func (o *NilInt) SetTo(v int) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilInt) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilNullableSimpleCommitAuthor with value set to v.
func NewNilNullableSimpleCommitAuthor(v NullableSimpleCommitAuthor) NilNullableSimpleCommitAuthor {
	return NilNullableSimpleCommitAuthor{
		Value: v,
	}
}

// NilNullableSimpleCommitAuthor is generic valiant of NullableSimpleCommitAuthor.
type NilNullableSimpleCommitAuthor struct {
	Value NullableSimpleCommitAuthor
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableSimpleCommitAuthor) SetTo(v NullableSimpleCommitAuthor) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableSimpleCommitAuthor) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableSimpleCommitAuthor) Get() (v NullableSimpleCommitAuthor, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilNullableSimpleCommitCommitter with value set to v.
func NewNilNullableSimpleCommitCommitter(v NullableSimpleCommitCommitter) NilNullableSimpleCommitCommitter {
	return NilNullableSimpleCommitCommitter{
		Value: v,
	}
}

// NilNullableSimpleCommitCommitter is generic valiant of NullableSimpleCommitCommitter.
type NilNullableSimpleCommitCommitter struct {
	Value NullableSimpleCommitCommitter
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableSimpleCommitCommitter) SetTo(v NullableSimpleCommitCommitter) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableSimpleCommitCommitter) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableSimpleCommitCommitter) Get() (v NullableSimpleCommitCommitter, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilPageStatus with value set to v.
func NewNilPageStatus(v PageStatus) NilPageStatus {
	return NilPageStatus{
		Value: v,
	}
}

// NilPageStatus is generic valiant of PageStatus.
type NilPageStatus struct {
	Value PageStatus
	Null  bool
}

// SetTo sets value to v.
func (o *NilPageStatus) SetTo(v PageStatus) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilPageStatus) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilPageStatus) Get() (v PageStatus, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilPullRequestHeadRepo with value set to v.
func NewNilPullRequestHeadRepo(v PullRequestHeadRepo) NilPullRequestHeadRepo {
	return NilPullRequestHeadRepo{
		Value: v,
	}
}

// NilPullRequestHeadRepo is generic valiant of PullRequestHeadRepo.
type NilPullRequestHeadRepo struct {
	Value PullRequestHeadRepo
	Null  bool
}

// SetTo sets value to v.
func (o *NilPullRequestHeadRepo) SetTo(v PullRequestHeadRepo) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilPullRequestHeadRepo) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilPullRequestHeadRepo) Get() (v PullRequestHeadRepo, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilPullRequestHeadRepoLicense with value set to v.
func NewNilPullRequestHeadRepoLicense(v PullRequestHeadRepoLicense) NilPullRequestHeadRepoLicense {
	return NilPullRequestHeadRepoLicense{
		Value: v,
	}
}

// NilPullRequestHeadRepoLicense is generic valiant of PullRequestHeadRepoLicense.
type NilPullRequestHeadRepoLicense struct {
	Value PullRequestHeadRepoLicense
	Null  bool
}

// SetTo sets value to v.
func (o *NilPullRequestHeadRepoLicense) SetTo(v PullRequestHeadRepoLicense) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilPullRequestHeadRepoLicense) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilPullRequestHeadRepoLicense) Get() (v PullRequestHeadRepoLicense, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews with value set to v.
func NewNilReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews(v ReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews) NilReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews {
	return NilReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews{
		Value: v,
	}
}

// NilReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews is generic valiant of ReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews.
type NilReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews struct {
	Value ReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews
	Null  bool
}

// SetTo sets value to v.
func (o *NilReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews) SetTo(v ReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews) IsNull() bool {
	return o.Null
}

// Get returns value and boolean that denotes whether value was set.
func (o NilReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews) Get() (v ReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks with value set to v.
func NewNilReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks(v ReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks) NilReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks {
	return NilReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks{
		Value: v,
	}
}

// NilReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks is generic valiant of ReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks.
type NilReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks struct {
	Value ReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks
	Null  bool
}

// SetTo sets value to v.
func (o *NilReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks) SetTo(v ReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks) IsNull() bool {
	return o.Null
}

// Get returns value and boolean that denotes whether value was set.
func (o NilReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks) Get() (v ReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilReposUpdateBranchProtectionApplicationJSONRequestRestrictions with value set to v.
func NewNilReposUpdateBranchProtectionApplicationJSONRequestRestrictions(v ReposUpdateBranchProtectionApplicationJSONRequestRestrictions) NilReposUpdateBranchProtectionApplicationJSONRequestRestrictions {
	return NilReposUpdateBranchProtectionApplicationJSONRequestRestrictions{
		Value: v,
	}
}

// NilReposUpdateBranchProtectionApplicationJSONRequestRestrictions is generic valiant of ReposUpdateBranchProtectionApplicationJSONRequestRestrictions.
type NilReposUpdateBranchProtectionApplicationJSONRequestRestrictions struct {
	Value ReposUpdateBranchProtectionApplicationJSONRequestRestrictions
	Null  bool
}

// SetTo sets value to v.
func (o *NilReposUpdateBranchProtectionApplicationJSONRequestRestrictions) SetTo(v ReposUpdateBranchProtectionApplicationJSONRequestRestrictions) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilReposUpdateBranchProtectionApplicationJSONRequestRestrictions) IsNull() bool {
	return o.Null
}

// Get returns value and boolean that denotes whether value was set.
func (o NilReposUpdateBranchProtectionApplicationJSONRequestRestrictions) Get() (v ReposUpdateBranchProtectionApplicationJSONRequestRestrictions, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilSimpleCommitAuthor with value set to v.
func NewNilSimpleCommitAuthor(v SimpleCommitAuthor) NilSimpleCommitAuthor {
	return NilSimpleCommitAuthor{
		Value: v,
	}
}

// NilSimpleCommitAuthor is generic valiant of SimpleCommitAuthor.
type NilSimpleCommitAuthor struct {
	Value SimpleCommitAuthor
	Null  bool
}

// SetTo sets value to v.
func (o *NilSimpleCommitAuthor) SetTo(v SimpleCommitAuthor) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilSimpleCommitAuthor) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilSimpleCommitAuthor) Get() (v SimpleCommitAuthor, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilSimpleCommitCommitter with value set to v.
func NewNilSimpleCommitCommitter(v SimpleCommitCommitter) NilSimpleCommitCommitter {
	return NilSimpleCommitCommitter{
		Value: v,
	}
}

// NilSimpleCommitCommitter is generic valiant of SimpleCommitCommitter.
type NilSimpleCommitCommitter struct {
	Value SimpleCommitCommitter
	Null  bool
}

// SetTo sets value to v.
func (o *NilSimpleCommitCommitter) SetTo(v SimpleCommitCommitter) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilSimpleCommitCommitter) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilSimpleCommitCommitter) Get() (v SimpleCommitCommitter, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is generic valiant of string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilTime with value set to v.
func NewNilTime(v time.Time) NilTime {
	return NilTime{
		Value: v,
	}
}

// NilTime is generic valiant of time.Time.
type NilTime struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilTime) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilTime) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// New returns new NilURL with value set to v.
func NewNilURL(v url.URL) NilURL {
	return NilURL{
		Value: v,
	}
}

// NilURL is generic valiant of url.URL.
type NilURL struct {
	Value url.URL
	Null  bool
}

// SetTo sets value to v.
func (o *NilURL) SetTo(v url.URL) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilURL) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilURL) Get() (v url.URL, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

type NoContent struct{}

func (*NoContent) reposGetCodeFrequencyStatsResponse()  {}
func (*NoContent) reposGetCommitActivityStatsResponse() {}
func (*NoContent) reposGetContributorsStatsResponse()   {}
func (*NoContent) reposGetPunchCardStatsResponse()      {}

type NotModified struct{}

func (*NotModified) activityCheckRepoIsStarredByAuthenticatedUserResponse()     {}
func (*NotModified) activityDeleteThreadSubscriptionResponse()                  {}
func (*NotModified) activityGetThreadResponse()                                 {}
func (*NotModified) activityGetThreadSubscriptionForAuthenticatedUserResponse() {}
func (*NotModified) activityListPublicEventsForRepoNetworkResponse()            {}
func (*NotModified) activityListPublicEventsResponse()                          {}
func (*NotModified) activityListWatchedReposForAuthenticatedUserResponse()      {}
func (*NotModified) activityMarkNotificationsAsReadResponse()                   {}
func (*NotModified) activityMarkThreadAsReadResponse()                          {}
func (*NotModified) activitySetThreadSubscriptionResponse()                     {}
func (*NotModified) activityStarRepoForAuthenticatedUserResponse()              {}
func (*NotModified) activityUnstarRepoForAuthenticatedUserResponse()            {}
func (*NotModified) appsAddRepoToInstallationResponse()                         {}
func (*NotModified) appsListInstallationReposForAuthenticatedUserResponse()     {}
func (*NotModified) appsListReposAccessibleToInstallationResponse()             {}
func (*NotModified) appsListSubscriptionsForAuthenticatedUserResponse()         {}
func (*NotModified) appsListSubscriptionsForAuthenticatedUserStubbedResponse()  {}
func (*NotModified) appsRemoveRepoFromInstallationResponse()                    {}
func (*NotModified) codesOfConductGetAllCodesOfConductResponse()                {}
func (*NotModified) codesOfConductGetConductCodeResponse()                      {}
func (*NotModified) emojisGetResponse()                                         {}
func (*NotModified) gistsCheckIsStarredResponse()                               {}
func (*NotModified) gistsCreateCommentResponse()                                {}
func (*NotModified) gistsDeleteCommentResponse()                                {}
func (*NotModified) gistsDeleteResponse()                                       {}
func (*NotModified) gistsGetCommentResponse()                                   {}
func (*NotModified) gistsGetResponse()                                          {}
func (*NotModified) gistsListCommentsResponse()                                 {}
func (*NotModified) gistsListCommitsResponse()                                  {}
func (*NotModified) gistsListForksResponse()                                    {}
func (*NotModified) gistsListResponse()                                         {}
func (*NotModified) gistsListStarredResponse()                                  {}
func (*NotModified) gistsStarResponse()                                         {}
func (*NotModified) gistsUnstarResponse()                                       {}
func (*NotModified) gitignoreGetAllTemplatesResponse()                          {}
func (*NotModified) gitignoreGetTemplateResponse()                              {}
func (*NotModified) licensesGetAllCommonlyUsedResponse()                        {}
func (*NotModified) licensesGetResponse()                                       {}
func (*NotModified) markdownRenderRawResponse()                                 {}
func (*NotModified) markdownRenderResponse()                                    {}
func (*NotModified) metaGetResponse()                                           {}
func (*NotModified) migrationsDeleteArchiveForAuthenticatedUserResponse()       {}
func (*NotModified) migrationsGetArchiveForAuthenticatedUserResponse()          {}
func (*NotModified) migrationsGetStatusForAuthenticatedUserResponse()           {}
func (*NotModified) migrationsListForAuthenticatedUserResponse()                {}
func (*NotModified) migrationsUnlockRepoForAuthenticatedUserResponse()          {}
func (*NotModified) oAuthAuthorizationsDeleteAuthorizationResponse()            {}
func (*NotModified) oAuthAuthorizationsDeleteGrantResponse()                    {}
func (*NotModified) oAuthAuthorizationsGetAuthorizationResponse()               {}
func (*NotModified) oAuthAuthorizationsGetGrantResponse()                       {}
func (*NotModified) oAuthAuthorizationsListAuthorizationsResponse()             {}
func (*NotModified) oAuthAuthorizationsListGrantsResponse()                     {}
func (*NotModified) orgsListForAuthenticatedUserResponse()                      {}
func (*NotModified) orgsListResponse()                                          {}
func (*NotModified) projectsCreateColumnResponse()                              {}
func (*NotModified) projectsCreateForAuthenticatedUserResponse()                {}
func (*NotModified) projectsDeleteCardResponse()                                {}
func (*NotModified) projectsDeleteColumnResponse()                              {}
func (*NotModified) projectsDeleteResponse()                                    {}
func (*NotModified) projectsGetCardResponse()                                   {}
func (*NotModified) projectsGetColumnResponse()                                 {}
func (*NotModified) projectsGetResponse()                                       {}
func (*NotModified) projectsListColumnsResponse()                               {}
func (*NotModified) projectsMoveColumnResponse()                                {}
func (*NotModified) projectsUpdateCardResponse()                                {}
func (*NotModified) projectsUpdateColumnResponse()                              {}
func (*NotModified) projectsUpdateResponse()                                    {}
func (*NotModified) pullsGetResponse()                                          {}
func (*NotModified) rateLimitGetResponse()                                      {}
func (*NotModified) reactionsDeleteLegacyResponse()                             {}
func (*NotModified) reposAcceptInvitationResponse()                             {}
func (*NotModified) reposDeclineInvitationResponse()                            {}
func (*NotModified) reposListInvitationsForAuthenticatedUserResponse()          {}
func (*NotModified) scimDeleteUserFromOrgResponse()                             {}
func (*NotModified) searchTopicsResponse()                                      {}
func (*NotModified) teamsListForAuthenticatedUserResponse()                     {}
func (*NotModified) usersCheckBlockedResponse()                                 {}
func (*NotModified) usersCheckPersonIsFollowedByAuthenticatedResponse()         {}
func (*NotModified) usersDeletePublicSSHKeyForAuthenticatedResponse()           {}
func (*NotModified) usersFollowResponse()                                       {}
func (*NotModified) usersGetGpgKeyForAuthenticatedResponse()                    {}
func (*NotModified) usersGetPublicSSHKeyForAuthenticatedResponse()              {}
func (*NotModified) usersListBlockedByAuthenticatedResponse()                   {}
func (*NotModified) usersListEmailsForAuthenticatedResponse()                   {}
func (*NotModified) usersListFollowedByAuthenticatedResponse()                  {}
func (*NotModified) usersListFollowersForAuthenticatedUserResponse()            {}
func (*NotModified) usersListGpgKeysForAuthenticatedResponse()                  {}
func (*NotModified) usersListPublicEmailsForAuthenticatedResponse()             {}
func (*NotModified) usersListPublicSSHKeysForAuthenticatedResponse()            {}
func (*NotModified) usersListResponse()                                         {}
func (*NotModified) usersUnblockResponse()                                      {}
func (*NotModified) usersUnfollowResponse()                                     {}

// NullableCodeOfConductSimple describes #/components/schemas/nullable-code-of-conduct-simple.
type NullableCodeOfConductSimple struct {
	HTMLURL NilURL  `json:"html_url"`
	Key     string  `json:"key"`
	Name    string  `json:"name"`
	URL     url.URL `json:"url"`
}

// NullableCommunityHealthFile describes #/components/schemas/nullable-community-health-file.
type NullableCommunityHealthFile struct {
	HTMLURL url.URL `json:"html_url"`
	URL     url.URL `json:"url"`
}

// NullableGitUser describes #/components/schemas/nullable-git-user.
type NullableGitUser struct {
	Date  OptString `json:"date"`
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

// NullableIntegration describes #/components/schemas/nullable-integration.
type NullableIntegration struct {
	ClientID           OptString                      `json:"client_id"`
	ClientSecret       OptString                      `json:"client_secret"`
	CreatedAt          time.Time                      `json:"created_at"`
	Description        NilString                      `json:"description"`
	Events             []string                       `json:"events"`
	ExternalURL        url.URL                        `json:"external_url"`
	HTMLURL            url.URL                        `json:"html_url"`
	ID                 int                            `json:"id"`
	InstallationsCount OptInt                         `json:"installations_count"`
	Name               string                         `json:"name"`
	NodeID             string                         `json:"node_id"`
	Owner              NullableSimpleUser             `json:"owner"`
	Pem                OptString                      `json:"pem"`
	Permissions        NullableIntegrationPermissions `json:"permissions"`
	Slug               OptString                      `json:"slug"`
	UpdatedAt          time.Time                      `json:"updated_at"`
	WebhookSecret      OptNilString                   `json:"webhook_secret"`
}

type NullableIntegrationPermissions struct {
	Checks      OptString `json:"checks"`
	Contents    OptString `json:"contents"`
	Deployments OptString `json:"deployments"`
	Issues      OptString `json:"issues"`
	Metadata    OptString `json:"metadata"`
}

// NullableLicenseSimple describes #/components/schemas/nullable-license-simple.
type NullableLicenseSimple struct {
	HTMLURL OptURL    `json:"html_url"`
	Key     string    `json:"key"`
	Name    string    `json:"name"`
	NodeID  string    `json:"node_id"`
	SpdxID  NilString `json:"spdx_id"`
	URL     NilURL    `json:"url"`
}

// NullableMilestone describes #/components/schemas/nullable-milestone.
type NullableMilestone struct {
	ClosedAt     NilTime                `json:"closed_at"`
	ClosedIssues int                    `json:"closed_issues"`
	CreatedAt    time.Time              `json:"created_at"`
	Creator      NullableSimpleUser     `json:"creator"`
	Description  NilString              `json:"description"`
	DueOn        NilTime                `json:"due_on"`
	HTMLURL      url.URL                `json:"html_url"`
	ID           int                    `json:"id"`
	LabelsURL    url.URL                `json:"labels_url"`
	NodeID       string                 `json:"node_id"`
	Number       int                    `json:"number"`
	OpenIssues   int                    `json:"open_issues"`
	State        NullableMilestoneState `json:"state"`
	Title        string                 `json:"title"`
	URL          url.URL                `json:"url"`
	UpdatedAt    time.Time              `json:"updated_at"`
}

type NullableMilestoneState string

const (
	NullableMilestoneStateOpen   NullableMilestoneState = "open"
	NullableMilestoneStateClosed NullableMilestoneState = "closed"
)

// NullableRepository describes #/components/schemas/nullable-repository.
type NullableRepository struct {
	AllowAutoMerge      OptBool                                    `json:"allow_auto_merge"`
	AllowForking        OptBool                                    `json:"allow_forking"`
	AllowMergeCommit    OptBool                                    `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                                    `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                                    `json:"allow_squash_merge"`
	ArchiveURL          string                                     `json:"archive_url"`
	Archived            bool                                       `json:"archived"`
	AssigneesURL        string                                     `json:"assignees_url"`
	BlobsURL            string                                     `json:"blobs_url"`
	BranchesURL         string                                     `json:"branches_url"`
	CloneURL            string                                     `json:"clone_url"`
	CollaboratorsURL    string                                     `json:"collaborators_url"`
	CommentsURL         string                                     `json:"comments_url"`
	CommitsURL          string                                     `json:"commits_url"`
	CompareURL          string                                     `json:"compare_url"`
	ContentsURL         string                                     `json:"contents_url"`
	ContributorsURL     url.URL                                    `json:"contributors_url"`
	CreatedAt           NilTime                                    `json:"created_at"`
	DefaultBranch       string                                     `json:"default_branch"`
	DeleteBranchOnMerge OptBool                                    `json:"delete_branch_on_merge"`
	DeploymentsURL      url.URL                                    `json:"deployments_url"`
	Description         NilString                                  `json:"description"`
	Disabled            bool                                       `json:"disabled"`
	DownloadsURL        url.URL                                    `json:"downloads_url"`
	EventsURL           url.URL                                    `json:"events_url"`
	Fork                bool                                       `json:"fork"`
	Forks               int                                        `json:"forks"`
	ForksCount          int                                        `json:"forks_count"`
	ForksURL            url.URL                                    `json:"forks_url"`
	FullName            string                                     `json:"full_name"`
	GitCommitsURL       string                                     `json:"git_commits_url"`
	GitRefsURL          string                                     `json:"git_refs_url"`
	GitTagsURL          string                                     `json:"git_tags_url"`
	GitURL              string                                     `json:"git_url"`
	HTMLURL             url.URL                                    `json:"html_url"`
	HasDownloads        bool                                       `json:"has_downloads"`
	HasIssues           bool                                       `json:"has_issues"`
	HasPages            bool                                       `json:"has_pages"`
	HasProjects         bool                                       `json:"has_projects"`
	HasWiki             bool                                       `json:"has_wiki"`
	Homepage            NilURL                                     `json:"homepage"`
	HooksURL            url.URL                                    `json:"hooks_url"`
	ID                  int                                        `json:"id"`
	IsTemplate          OptBool                                    `json:"is_template"`
	IssueCommentURL     string                                     `json:"issue_comment_url"`
	IssueEventsURL      string                                     `json:"issue_events_url"`
	IssuesURL           string                                     `json:"issues_url"`
	KeysURL             string                                     `json:"keys_url"`
	LabelsURL           string                                     `json:"labels_url"`
	Language            NilString                                  `json:"language"`
	LanguagesURL        url.URL                                    `json:"languages_url"`
	License             NullableLicenseSimple                      `json:"license"`
	MasterBranch        OptString                                  `json:"master_branch"`
	MergesURL           url.URL                                    `json:"merges_url"`
	MilestonesURL       string                                     `json:"milestones_url"`
	MirrorURL           NilURL                                     `json:"mirror_url"`
	Name                string                                     `json:"name"`
	NetworkCount        OptInt                                     `json:"network_count"`
	NodeID              string                                     `json:"node_id"`
	NotificationsURL    string                                     `json:"notifications_url"`
	OpenIssues          int                                        `json:"open_issues"`
	OpenIssuesCount     int                                        `json:"open_issues_count"`
	Organization        OptNullableSimpleUser                      `json:"organization"`
	Owner               SimpleUser                                 `json:"owner"`
	Permissions         OptNullableRepositoryPermissions           `json:"permissions"`
	Private             bool                                       `json:"private"`
	PullsURL            string                                     `json:"pulls_url"`
	PushedAt            NilTime                                    `json:"pushed_at"`
	ReleasesURL         string                                     `json:"releases_url"`
	SSHURL              string                                     `json:"ssh_url"`
	Size                int                                        `json:"size"`
	StargazersCount     int                                        `json:"stargazers_count"`
	StargazersURL       url.URL                                    `json:"stargazers_url"`
	StarredAt           OptString                                  `json:"starred_at"`
	StatusesURL         string                                     `json:"statuses_url"`
	SubscribersCount    OptInt                                     `json:"subscribers_count"`
	SubscribersURL      url.URL                                    `json:"subscribers_url"`
	SubscriptionURL     url.URL                                    `json:"subscription_url"`
	SvnURL              url.URL                                    `json:"svn_url"`
	TagsURL             url.URL                                    `json:"tags_url"`
	TeamsURL            url.URL                                    `json:"teams_url"`
	TempCloneToken      OptString                                  `json:"temp_clone_token"`
	TemplateRepository  OptNilNullableRepositoryTemplateRepository `json:"template_repository"`
	Topics              *[]string                                  `json:"topics"`
	TreesURL            string                                     `json:"trees_url"`
	URL                 url.URL                                    `json:"url"`
	UpdatedAt           NilTime                                    `json:"updated_at"`
	Visibility          OptString                                  `json:"visibility"`
	Watchers            int                                        `json:"watchers"`
	WatchersCount       int                                        `json:"watchers_count"`
}

type NullableRepositoryPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

type NullableRepositoryTemplateRepository struct {
	AllowAutoMerge      OptBool                                            `json:"allow_auto_merge"`
	AllowMergeCommit    OptBool                                            `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                                            `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                                            `json:"allow_squash_merge"`
	ArchiveURL          OptString                                          `json:"archive_url"`
	Archived            OptBool                                            `json:"archived"`
	AssigneesURL        OptString                                          `json:"assignees_url"`
	BlobsURL            OptString                                          `json:"blobs_url"`
	BranchesURL         OptString                                          `json:"branches_url"`
	CloneURL            OptString                                          `json:"clone_url"`
	CollaboratorsURL    OptString                                          `json:"collaborators_url"`
	CommentsURL         OptString                                          `json:"comments_url"`
	CommitsURL          OptString                                          `json:"commits_url"`
	CompareURL          OptString                                          `json:"compare_url"`
	ContentsURL         OptString                                          `json:"contents_url"`
	ContributorsURL     OptString                                          `json:"contributors_url"`
	CreatedAt           OptString                                          `json:"created_at"`
	DefaultBranch       OptString                                          `json:"default_branch"`
	DeleteBranchOnMerge OptBool                                            `json:"delete_branch_on_merge"`
	DeploymentsURL      OptString                                          `json:"deployments_url"`
	Description         OptString                                          `json:"description"`
	Disabled            OptBool                                            `json:"disabled"`
	DownloadsURL        OptString                                          `json:"downloads_url"`
	EventsURL           OptString                                          `json:"events_url"`
	Fork                OptBool                                            `json:"fork"`
	ForksCount          OptInt                                             `json:"forks_count"`
	ForksURL            OptString                                          `json:"forks_url"`
	FullName            OptString                                          `json:"full_name"`
	GitCommitsURL       OptString                                          `json:"git_commits_url"`
	GitRefsURL          OptString                                          `json:"git_refs_url"`
	GitTagsURL          OptString                                          `json:"git_tags_url"`
	GitURL              OptString                                          `json:"git_url"`
	HTMLURL             OptString                                          `json:"html_url"`
	HasDownloads        OptBool                                            `json:"has_downloads"`
	HasIssues           OptBool                                            `json:"has_issues"`
	HasPages            OptBool                                            `json:"has_pages"`
	HasProjects         OptBool                                            `json:"has_projects"`
	HasWiki             OptBool                                            `json:"has_wiki"`
	Homepage            OptString                                          `json:"homepage"`
	HooksURL            OptString                                          `json:"hooks_url"`
	ID                  OptInt                                             `json:"id"`
	IsTemplate          OptBool                                            `json:"is_template"`
	IssueCommentURL     OptString                                          `json:"issue_comment_url"`
	IssueEventsURL      OptString                                          `json:"issue_events_url"`
	IssuesURL           OptString                                          `json:"issues_url"`
	KeysURL             OptString                                          `json:"keys_url"`
	LabelsURL           OptString                                          `json:"labels_url"`
	Language            OptString                                          `json:"language"`
	LanguagesURL        OptString                                          `json:"languages_url"`
	MergesURL           OptString                                          `json:"merges_url"`
	MilestonesURL       OptString                                          `json:"milestones_url"`
	MirrorURL           OptString                                          `json:"mirror_url"`
	Name                OptString                                          `json:"name"`
	NetworkCount        OptInt                                             `json:"network_count"`
	NodeID              OptString                                          `json:"node_id"`
	NotificationsURL    OptString                                          `json:"notifications_url"`
	OpenIssuesCount     OptInt                                             `json:"open_issues_count"`
	Owner               OptNullableRepositoryTemplateRepositoryOwner       `json:"owner"`
	Permissions         OptNullableRepositoryTemplateRepositoryPermissions `json:"permissions"`
	Private             OptBool                                            `json:"private"`
	PullsURL            OptString                                          `json:"pulls_url"`
	PushedAt            OptString                                          `json:"pushed_at"`
	ReleasesURL         OptString                                          `json:"releases_url"`
	SSHURL              OptString                                          `json:"ssh_url"`
	Size                OptInt                                             `json:"size"`
	StargazersCount     OptInt                                             `json:"stargazers_count"`
	StargazersURL       OptString                                          `json:"stargazers_url"`
	StatusesURL         OptString                                          `json:"statuses_url"`
	SubscribersCount    OptInt                                             `json:"subscribers_count"`
	SubscribersURL      OptString                                          `json:"subscribers_url"`
	SubscriptionURL     OptString                                          `json:"subscription_url"`
	SvnURL              OptString                                          `json:"svn_url"`
	TagsURL             OptString                                          `json:"tags_url"`
	TeamsURL            OptString                                          `json:"teams_url"`
	TempCloneToken      OptString                                          `json:"temp_clone_token"`
	Topics              *[]string                                          `json:"topics"`
	TreesURL            OptString                                          `json:"trees_url"`
	URL                 OptString                                          `json:"url"`
	UpdatedAt           OptString                                          `json:"updated_at"`
	Visibility          OptString                                          `json:"visibility"`
	WatchersCount       OptInt                                             `json:"watchers_count"`
}

type NullableRepositoryTemplateRepositoryOwner struct {
	AvatarURL         OptString `json:"avatar_url"`
	EventsURL         OptString `json:"events_url"`
	FollowersURL      OptString `json:"followers_url"`
	FollowingURL      OptString `json:"following_url"`
	GistsURL          OptString `json:"gists_url"`
	GravatarID        OptString `json:"gravatar_id"`
	HTMLURL           OptString `json:"html_url"`
	ID                OptInt    `json:"id"`
	Login             OptString `json:"login"`
	NodeID            OptString `json:"node_id"`
	OrganizationsURL  OptString `json:"organizations_url"`
	ReceivedEventsURL OptString `json:"received_events_url"`
	ReposURL          OptString `json:"repos_url"`
	SiteAdmin         OptBool   `json:"site_admin"`
	StarredURL        OptString `json:"starred_url"`
	SubscriptionsURL  OptString `json:"subscriptions_url"`
	Type              OptString `json:"type"`
	URL               OptString `json:"url"`
}

type NullableRepositoryTemplateRepositoryPermissions struct {
	Admin    OptBool `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     OptBool `json:"pull"`
	Push     OptBool `json:"push"`
	Triage   OptBool `json:"triage"`
}

// NullableScopedInstallation describes #/components/schemas/nullable-scoped-installation.
type NullableScopedInstallation struct {
	Account                SimpleUser                                    `json:"account"`
	HasMultipleSingleFiles OptBool                                       `json:"has_multiple_single_files"`
	Permissions            AppPermissions                                `json:"permissions"`
	RepositoriesURL        url.URL                                       `json:"repositories_url"`
	RepositorySelection    NullableScopedInstallationRepositorySelection `json:"repository_selection"`
	SingleFileName         NilString                                     `json:"single_file_name"`
	SingleFilePaths        *[]string                                     `json:"single_file_paths"`
}

type NullableScopedInstallationRepositorySelection string

const (
	NullableScopedInstallationRepositorySelectionAll      NullableScopedInstallationRepositorySelection = "all"
	NullableScopedInstallationRepositorySelectionSelected NullableScopedInstallationRepositorySelection = "selected"
)

// NullableSimpleCommit describes #/components/schemas/nullable-simple-commit.
type NullableSimpleCommit struct {
	Author    NilNullableSimpleCommitAuthor    `json:"author"`
	Committer NilNullableSimpleCommitCommitter `json:"committer"`
	ID        string                           `json:"id"`
	Message   string                           `json:"message"`
	Timestamp time.Time                        `json:"timestamp"`
	TreeID    string                           `json:"tree_id"`
}

type NullableSimpleCommitAuthor struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

type NullableSimpleCommitCommitter struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

// NullableSimpleUser describes #/components/schemas/nullable-simple-user.
type NullableSimpleUser struct {
	AvatarURL         url.URL      `json:"avatar_url"`
	Email             OptNilString `json:"email"`
	EventsURL         string       `json:"events_url"`
	FollowersURL      url.URL      `json:"followers_url"`
	FollowingURL      string       `json:"following_url"`
	GistsURL          string       `json:"gists_url"`
	GravatarID        NilString    `json:"gravatar_id"`
	HTMLURL           url.URL      `json:"html_url"`
	ID                int          `json:"id"`
	Login             string       `json:"login"`
	Name              OptNilString `json:"name"`
	NodeID            string       `json:"node_id"`
	OrganizationsURL  url.URL      `json:"organizations_url"`
	ReceivedEventsURL url.URL      `json:"received_events_url"`
	ReposURL          url.URL      `json:"repos_url"`
	SiteAdmin         bool         `json:"site_admin"`
	StarredAt         OptString    `json:"starred_at"`
	StarredURL        string       `json:"starred_url"`
	SubscriptionsURL  url.URL      `json:"subscriptions_url"`
	Type              string       `json:"type"`
	URL               url.URL      `json:"url"`
}

// NullableTeamSimple describes #/components/schemas/nullable-team-simple.
type NullableTeamSimple struct {
	Description     NilString `json:"description"`
	HTMLURL         url.URL   `json:"html_url"`
	ID              int       `json:"id"`
	LdapDn          OptString `json:"ldap_dn"`
	MembersURL      string    `json:"members_url"`
	Name            string    `json:"name"`
	NodeID          string    `json:"node_id"`
	Permission      string    `json:"permission"`
	Privacy         OptString `json:"privacy"`
	RepositoriesURL url.URL   `json:"repositories_url"`
	Slug            string    `json:"slug"`
	URL             url.URL   `json:"url"`
}

type OAuthAuthorizationsCreateAuthorizationApplicationJSONRequest struct {
	ClientID     OptString `json:"client_id"`
	ClientSecret OptString `json:"client_secret"`
	Fingerprint  OptString `json:"fingerprint"`
	Note         OptString `json:"note"`
	NoteURL      OptString `json:"note_url"`
	Scopes       *[]string `json:"scopes"`
}

func (*OAuthAuthorizationsCreateAuthorizationApplicationJSONRequest) oAuthAuthorizationsCreateAuthorizationRequest() {
}

type OAuthAuthorizationsDeleteAuthorizationApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsDeleteAuthorizationApplicationJSONForbidden) oAuthAuthorizationsDeleteAuthorizationResponse() {
}

type OAuthAuthorizationsDeleteAuthorizationApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsDeleteAuthorizationApplicationJSONUnauthorized) oAuthAuthorizationsDeleteAuthorizationResponse() {
}

type OAuthAuthorizationsDeleteAuthorizationNoContent struct{}

func (*OAuthAuthorizationsDeleteAuthorizationNoContent) oAuthAuthorizationsDeleteAuthorizationResponse() {
}

type OAuthAuthorizationsDeleteGrantApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsDeleteGrantApplicationJSONForbidden) oAuthAuthorizationsDeleteGrantResponse() {
}

type OAuthAuthorizationsDeleteGrantApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsDeleteGrantApplicationJSONUnauthorized) oAuthAuthorizationsDeleteGrantResponse() {
}

type OAuthAuthorizationsDeleteGrantNoContent struct{}

func (*OAuthAuthorizationsDeleteGrantNoContent) oAuthAuthorizationsDeleteGrantResponse() {}

type OAuthAuthorizationsGetAuthorizationApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsGetAuthorizationApplicationJSONForbidden) oAuthAuthorizationsGetAuthorizationResponse() {
}

type OAuthAuthorizationsGetAuthorizationApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsGetAuthorizationApplicationJSONUnauthorized) oAuthAuthorizationsGetAuthorizationResponse() {
}

type OAuthAuthorizationsGetGrantApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsGetGrantApplicationJSONForbidden) oAuthAuthorizationsGetGrantResponse() {}

type OAuthAuthorizationsGetGrantApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsGetGrantApplicationJSONUnauthorized) oAuthAuthorizationsGetGrantResponse() {
}

type OAuthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprintApplicationJSONRequest struct {
	ClientSecret string    `json:"client_secret"`
	Note         OptString `json:"note"`
	NoteURL      OptString `json:"note_url"`
	Scopes       *[]string `json:"scopes"`
}

func (*OAuthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprintApplicationJSONRequest) oAuthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprintRequest() {
}

type OAuthAuthorizationsGetOrCreateAuthorizationForAppApplicationJSONRequest struct {
	ClientSecret string    `json:"client_secret"`
	Fingerprint  OptString `json:"fingerprint"`
	Note         OptString `json:"note"`
	NoteURL      OptString `json:"note_url"`
	Scopes       *[]string `json:"scopes"`
}

func (*OAuthAuthorizationsGetOrCreateAuthorizationForAppApplicationJSONRequest) oAuthAuthorizationsGetOrCreateAuthorizationForAppRequest() {
}

type OAuthAuthorizationsListAuthorizationsApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsListAuthorizationsApplicationJSONForbidden) oAuthAuthorizationsListAuthorizationsResponse() {
}

type OAuthAuthorizationsListAuthorizationsApplicationJSONNotFound BasicError

func (*OAuthAuthorizationsListAuthorizationsApplicationJSONNotFound) oAuthAuthorizationsListAuthorizationsResponse() {
}

type OAuthAuthorizationsListAuthorizationsApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsListAuthorizationsApplicationJSONUnauthorized) oAuthAuthorizationsListAuthorizationsResponse() {
}

type OAuthAuthorizationsListAuthorizationsOK []Authorization

func (*OAuthAuthorizationsListAuthorizationsOK) oAuthAuthorizationsListAuthorizationsResponse() {}

type OAuthAuthorizationsListGrantsApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsListGrantsApplicationJSONForbidden) oAuthAuthorizationsListGrantsResponse() {
}

type OAuthAuthorizationsListGrantsApplicationJSONNotFound BasicError

func (*OAuthAuthorizationsListGrantsApplicationJSONNotFound) oAuthAuthorizationsListGrantsResponse() {
}

type OAuthAuthorizationsListGrantsApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsListGrantsApplicationJSONUnauthorized) oAuthAuthorizationsListGrantsResponse() {
}

type OAuthAuthorizationsListGrantsOK []ApplicationGrant

func (*OAuthAuthorizationsListGrantsOK) oAuthAuthorizationsListGrantsResponse() {}

type OAuthAuthorizationsUpdateAuthorizationApplicationJSONRequest struct {
	AddScopes    *[]string `json:"add_scopes"`
	Fingerprint  OptString `json:"fingerprint"`
	Note         OptString `json:"note"`
	NoteURL      OptString `json:"note_url"`
	RemoveScopes *[]string `json:"remove_scopes"`
	Scopes       *[]string `json:"scopes"`
}

func (*OAuthAuthorizationsUpdateAuthorizationApplicationJSONRequest) oAuthAuthorizationsUpdateAuthorizationRequest() {
}

// New returns new OptAPIOverviewSSHKeyFingerprints with value set to v.
func NewOptAPIOverviewSSHKeyFingerprints(v APIOverviewSSHKeyFingerprints) OptAPIOverviewSSHKeyFingerprints {
	return OptAPIOverviewSSHKeyFingerprints{
		Value: v,
		Set:   true,
	}
}

// OptAPIOverviewSSHKeyFingerprints is generic valiant of APIOverviewSSHKeyFingerprints.
type OptAPIOverviewSSHKeyFingerprints struct {
	Value APIOverviewSSHKeyFingerprints
	Set   bool
}

// IsSet returns true if OptAPIOverviewSSHKeyFingerprints was set.
func (o OptAPIOverviewSSHKeyFingerprints) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAPIOverviewSSHKeyFingerprints) Reset() {
	var v APIOverviewSSHKeyFingerprints
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAPIOverviewSSHKeyFingerprints) SetTo(v APIOverviewSSHKeyFingerprints) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAPIOverviewSSHKeyFingerprints) Get() (v APIOverviewSSHKeyFingerprints, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility with value set to v.
func NewOptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility(v ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility) OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility {
	return OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility{
		Value: v,
		Set:   true,
	}
}

// OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility is generic valiant of ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility.
type OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility struct {
	Value ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility
	Set   bool
}

// IsSet returns true if OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility was set.
func (o OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility) Reset() {
	var v ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility) SetTo(v ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility) Get() (v ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility with value set to v.
func NewOptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility(v ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility) OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility {
	return OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility{
		Value: v,
		Set:   true,
	}
}

// OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility is generic valiant of ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility.
type OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility struct {
	Value ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility
	Set   bool
}

// IsSet returns true if OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility was set.
func (o OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility) Reset() {
	var v ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility) SetTo(v ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility) Get() (v ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONRequestVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptActor with value set to v.
func NewOptActor(v Actor) OptActor {
	return OptActor{
		Value: v,
		Set:   true,
	}
}

// OptActor is generic valiant of Actor.
type OptActor struct {
	Value Actor
	Set   bool
}

// IsSet returns true if OptActor was set.
func (o OptActor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptActor) Reset() {
	var v Actor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptActor) SetTo(v Actor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptActor) Get() (v Actor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAllowedActions with value set to v.
func NewOptAllowedActions(v AllowedActions) OptAllowedActions {
	return OptAllowedActions{
		Value: v,
		Set:   true,
	}
}

// OptAllowedActions is generic valiant of AllowedActions.
type OptAllowedActions struct {
	Value AllowedActions
	Set   bool
}

// IsSet returns true if OptAllowedActions was set.
func (o OptAllowedActions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAllowedActions) Reset() {
	var v AllowedActions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAllowedActions) SetTo(v AllowedActions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAllowedActions) Get() (v AllowedActions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissions with value set to v.
func NewOptAppPermissions(v AppPermissions) OptAppPermissions {
	return OptAppPermissions{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissions is generic valiant of AppPermissions.
type OptAppPermissions struct {
	Value AppPermissions
	Set   bool
}

// IsSet returns true if OptAppPermissions was set.
func (o OptAppPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissions) Reset() {
	var v AppPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissions) SetTo(v AppPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissions) Get() (v AppPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsActions with value set to v.
func NewOptAppPermissionsActions(v AppPermissionsActions) OptAppPermissionsActions {
	return OptAppPermissionsActions{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsActions is generic valiant of AppPermissionsActions.
type OptAppPermissionsActions struct {
	Value AppPermissionsActions
	Set   bool
}

// IsSet returns true if OptAppPermissionsActions was set.
func (o OptAppPermissionsActions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsActions) Reset() {
	var v AppPermissionsActions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsActions) SetTo(v AppPermissionsActions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsActions) Get() (v AppPermissionsActions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsAdministration with value set to v.
func NewOptAppPermissionsAdministration(v AppPermissionsAdministration) OptAppPermissionsAdministration {
	return OptAppPermissionsAdministration{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsAdministration is generic valiant of AppPermissionsAdministration.
type OptAppPermissionsAdministration struct {
	Value AppPermissionsAdministration
	Set   bool
}

// IsSet returns true if OptAppPermissionsAdministration was set.
func (o OptAppPermissionsAdministration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsAdministration) Reset() {
	var v AppPermissionsAdministration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsAdministration) SetTo(v AppPermissionsAdministration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsAdministration) Get() (v AppPermissionsAdministration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsChecks with value set to v.
func NewOptAppPermissionsChecks(v AppPermissionsChecks) OptAppPermissionsChecks {
	return OptAppPermissionsChecks{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsChecks is generic valiant of AppPermissionsChecks.
type OptAppPermissionsChecks struct {
	Value AppPermissionsChecks
	Set   bool
}

// IsSet returns true if OptAppPermissionsChecks was set.
func (o OptAppPermissionsChecks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsChecks) Reset() {
	var v AppPermissionsChecks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsChecks) SetTo(v AppPermissionsChecks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsChecks) Get() (v AppPermissionsChecks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsContentReferences with value set to v.
func NewOptAppPermissionsContentReferences(v AppPermissionsContentReferences) OptAppPermissionsContentReferences {
	return OptAppPermissionsContentReferences{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsContentReferences is generic valiant of AppPermissionsContentReferences.
type OptAppPermissionsContentReferences struct {
	Value AppPermissionsContentReferences
	Set   bool
}

// IsSet returns true if OptAppPermissionsContentReferences was set.
func (o OptAppPermissionsContentReferences) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsContentReferences) Reset() {
	var v AppPermissionsContentReferences
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsContentReferences) SetTo(v AppPermissionsContentReferences) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsContentReferences) Get() (v AppPermissionsContentReferences, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsContents with value set to v.
func NewOptAppPermissionsContents(v AppPermissionsContents) OptAppPermissionsContents {
	return OptAppPermissionsContents{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsContents is generic valiant of AppPermissionsContents.
type OptAppPermissionsContents struct {
	Value AppPermissionsContents
	Set   bool
}

// IsSet returns true if OptAppPermissionsContents was set.
func (o OptAppPermissionsContents) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsContents) Reset() {
	var v AppPermissionsContents
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsContents) SetTo(v AppPermissionsContents) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsContents) Get() (v AppPermissionsContents, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsDeployments with value set to v.
func NewOptAppPermissionsDeployments(v AppPermissionsDeployments) OptAppPermissionsDeployments {
	return OptAppPermissionsDeployments{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsDeployments is generic valiant of AppPermissionsDeployments.
type OptAppPermissionsDeployments struct {
	Value AppPermissionsDeployments
	Set   bool
}

// IsSet returns true if OptAppPermissionsDeployments was set.
func (o OptAppPermissionsDeployments) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsDeployments) Reset() {
	var v AppPermissionsDeployments
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsDeployments) SetTo(v AppPermissionsDeployments) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsDeployments) Get() (v AppPermissionsDeployments, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsEnvironments with value set to v.
func NewOptAppPermissionsEnvironments(v AppPermissionsEnvironments) OptAppPermissionsEnvironments {
	return OptAppPermissionsEnvironments{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsEnvironments is generic valiant of AppPermissionsEnvironments.
type OptAppPermissionsEnvironments struct {
	Value AppPermissionsEnvironments
	Set   bool
}

// IsSet returns true if OptAppPermissionsEnvironments was set.
func (o OptAppPermissionsEnvironments) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsEnvironments) Reset() {
	var v AppPermissionsEnvironments
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsEnvironments) SetTo(v AppPermissionsEnvironments) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsEnvironments) Get() (v AppPermissionsEnvironments, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsIssues with value set to v.
func NewOptAppPermissionsIssues(v AppPermissionsIssues) OptAppPermissionsIssues {
	return OptAppPermissionsIssues{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsIssues is generic valiant of AppPermissionsIssues.
type OptAppPermissionsIssues struct {
	Value AppPermissionsIssues
	Set   bool
}

// IsSet returns true if OptAppPermissionsIssues was set.
func (o OptAppPermissionsIssues) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsIssues) Reset() {
	var v AppPermissionsIssues
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsIssues) SetTo(v AppPermissionsIssues) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsIssues) Get() (v AppPermissionsIssues, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsMembers with value set to v.
func NewOptAppPermissionsMembers(v AppPermissionsMembers) OptAppPermissionsMembers {
	return OptAppPermissionsMembers{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsMembers is generic valiant of AppPermissionsMembers.
type OptAppPermissionsMembers struct {
	Value AppPermissionsMembers
	Set   bool
}

// IsSet returns true if OptAppPermissionsMembers was set.
func (o OptAppPermissionsMembers) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsMembers) Reset() {
	var v AppPermissionsMembers
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsMembers) SetTo(v AppPermissionsMembers) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsMembers) Get() (v AppPermissionsMembers, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsMetadata with value set to v.
func NewOptAppPermissionsMetadata(v AppPermissionsMetadata) OptAppPermissionsMetadata {
	return OptAppPermissionsMetadata{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsMetadata is generic valiant of AppPermissionsMetadata.
type OptAppPermissionsMetadata struct {
	Value AppPermissionsMetadata
	Set   bool
}

// IsSet returns true if OptAppPermissionsMetadata was set.
func (o OptAppPermissionsMetadata) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsMetadata) Reset() {
	var v AppPermissionsMetadata
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsMetadata) SetTo(v AppPermissionsMetadata) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsMetadata) Get() (v AppPermissionsMetadata, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsOrganizationAdministration with value set to v.
func NewOptAppPermissionsOrganizationAdministration(v AppPermissionsOrganizationAdministration) OptAppPermissionsOrganizationAdministration {
	return OptAppPermissionsOrganizationAdministration{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationAdministration is generic valiant of AppPermissionsOrganizationAdministration.
type OptAppPermissionsOrganizationAdministration struct {
	Value AppPermissionsOrganizationAdministration
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationAdministration was set.
func (o OptAppPermissionsOrganizationAdministration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationAdministration) Reset() {
	var v AppPermissionsOrganizationAdministration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationAdministration) SetTo(v AppPermissionsOrganizationAdministration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationAdministration) Get() (v AppPermissionsOrganizationAdministration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsOrganizationHooks with value set to v.
func NewOptAppPermissionsOrganizationHooks(v AppPermissionsOrganizationHooks) OptAppPermissionsOrganizationHooks {
	return OptAppPermissionsOrganizationHooks{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationHooks is generic valiant of AppPermissionsOrganizationHooks.
type OptAppPermissionsOrganizationHooks struct {
	Value AppPermissionsOrganizationHooks
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationHooks was set.
func (o OptAppPermissionsOrganizationHooks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationHooks) Reset() {
	var v AppPermissionsOrganizationHooks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationHooks) SetTo(v AppPermissionsOrganizationHooks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationHooks) Get() (v AppPermissionsOrganizationHooks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsOrganizationPackages with value set to v.
func NewOptAppPermissionsOrganizationPackages(v AppPermissionsOrganizationPackages) OptAppPermissionsOrganizationPackages {
	return OptAppPermissionsOrganizationPackages{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationPackages is generic valiant of AppPermissionsOrganizationPackages.
type OptAppPermissionsOrganizationPackages struct {
	Value AppPermissionsOrganizationPackages
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationPackages was set.
func (o OptAppPermissionsOrganizationPackages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationPackages) Reset() {
	var v AppPermissionsOrganizationPackages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationPackages) SetTo(v AppPermissionsOrganizationPackages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationPackages) Get() (v AppPermissionsOrganizationPackages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsOrganizationPlan with value set to v.
func NewOptAppPermissionsOrganizationPlan(v AppPermissionsOrganizationPlan) OptAppPermissionsOrganizationPlan {
	return OptAppPermissionsOrganizationPlan{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationPlan is generic valiant of AppPermissionsOrganizationPlan.
type OptAppPermissionsOrganizationPlan struct {
	Value AppPermissionsOrganizationPlan
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationPlan was set.
func (o OptAppPermissionsOrganizationPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationPlan) Reset() {
	var v AppPermissionsOrganizationPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationPlan) SetTo(v AppPermissionsOrganizationPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationPlan) Get() (v AppPermissionsOrganizationPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsOrganizationProjects with value set to v.
func NewOptAppPermissionsOrganizationProjects(v AppPermissionsOrganizationProjects) OptAppPermissionsOrganizationProjects {
	return OptAppPermissionsOrganizationProjects{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationProjects is generic valiant of AppPermissionsOrganizationProjects.
type OptAppPermissionsOrganizationProjects struct {
	Value AppPermissionsOrganizationProjects
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationProjects was set.
func (o OptAppPermissionsOrganizationProjects) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationProjects) Reset() {
	var v AppPermissionsOrganizationProjects
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationProjects) SetTo(v AppPermissionsOrganizationProjects) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationProjects) Get() (v AppPermissionsOrganizationProjects, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsOrganizationSecrets with value set to v.
func NewOptAppPermissionsOrganizationSecrets(v AppPermissionsOrganizationSecrets) OptAppPermissionsOrganizationSecrets {
	return OptAppPermissionsOrganizationSecrets{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationSecrets is generic valiant of AppPermissionsOrganizationSecrets.
type OptAppPermissionsOrganizationSecrets struct {
	Value AppPermissionsOrganizationSecrets
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationSecrets was set.
func (o OptAppPermissionsOrganizationSecrets) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationSecrets) Reset() {
	var v AppPermissionsOrganizationSecrets
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationSecrets) SetTo(v AppPermissionsOrganizationSecrets) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationSecrets) Get() (v AppPermissionsOrganizationSecrets, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsOrganizationSelfHostedRunners with value set to v.
func NewOptAppPermissionsOrganizationSelfHostedRunners(v AppPermissionsOrganizationSelfHostedRunners) OptAppPermissionsOrganizationSelfHostedRunners {
	return OptAppPermissionsOrganizationSelfHostedRunners{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationSelfHostedRunners is generic valiant of AppPermissionsOrganizationSelfHostedRunners.
type OptAppPermissionsOrganizationSelfHostedRunners struct {
	Value AppPermissionsOrganizationSelfHostedRunners
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationSelfHostedRunners was set.
func (o OptAppPermissionsOrganizationSelfHostedRunners) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationSelfHostedRunners) Reset() {
	var v AppPermissionsOrganizationSelfHostedRunners
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationSelfHostedRunners) SetTo(v AppPermissionsOrganizationSelfHostedRunners) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationSelfHostedRunners) Get() (v AppPermissionsOrganizationSelfHostedRunners, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsOrganizationUserBlocking with value set to v.
func NewOptAppPermissionsOrganizationUserBlocking(v AppPermissionsOrganizationUserBlocking) OptAppPermissionsOrganizationUserBlocking {
	return OptAppPermissionsOrganizationUserBlocking{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationUserBlocking is generic valiant of AppPermissionsOrganizationUserBlocking.
type OptAppPermissionsOrganizationUserBlocking struct {
	Value AppPermissionsOrganizationUserBlocking
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationUserBlocking was set.
func (o OptAppPermissionsOrganizationUserBlocking) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationUserBlocking) Reset() {
	var v AppPermissionsOrganizationUserBlocking
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationUserBlocking) SetTo(v AppPermissionsOrganizationUserBlocking) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationUserBlocking) Get() (v AppPermissionsOrganizationUserBlocking, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsPackages with value set to v.
func NewOptAppPermissionsPackages(v AppPermissionsPackages) OptAppPermissionsPackages {
	return OptAppPermissionsPackages{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsPackages is generic valiant of AppPermissionsPackages.
type OptAppPermissionsPackages struct {
	Value AppPermissionsPackages
	Set   bool
}

// IsSet returns true if OptAppPermissionsPackages was set.
func (o OptAppPermissionsPackages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsPackages) Reset() {
	var v AppPermissionsPackages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsPackages) SetTo(v AppPermissionsPackages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsPackages) Get() (v AppPermissionsPackages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsPages with value set to v.
func NewOptAppPermissionsPages(v AppPermissionsPages) OptAppPermissionsPages {
	return OptAppPermissionsPages{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsPages is generic valiant of AppPermissionsPages.
type OptAppPermissionsPages struct {
	Value AppPermissionsPages
	Set   bool
}

// IsSet returns true if OptAppPermissionsPages was set.
func (o OptAppPermissionsPages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsPages) Reset() {
	var v AppPermissionsPages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsPages) SetTo(v AppPermissionsPages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsPages) Get() (v AppPermissionsPages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsPullRequests with value set to v.
func NewOptAppPermissionsPullRequests(v AppPermissionsPullRequests) OptAppPermissionsPullRequests {
	return OptAppPermissionsPullRequests{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsPullRequests is generic valiant of AppPermissionsPullRequests.
type OptAppPermissionsPullRequests struct {
	Value AppPermissionsPullRequests
	Set   bool
}

// IsSet returns true if OptAppPermissionsPullRequests was set.
func (o OptAppPermissionsPullRequests) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsPullRequests) Reset() {
	var v AppPermissionsPullRequests
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsPullRequests) SetTo(v AppPermissionsPullRequests) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsPullRequests) Get() (v AppPermissionsPullRequests, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsRepositoryHooks with value set to v.
func NewOptAppPermissionsRepositoryHooks(v AppPermissionsRepositoryHooks) OptAppPermissionsRepositoryHooks {
	return OptAppPermissionsRepositoryHooks{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsRepositoryHooks is generic valiant of AppPermissionsRepositoryHooks.
type OptAppPermissionsRepositoryHooks struct {
	Value AppPermissionsRepositoryHooks
	Set   bool
}

// IsSet returns true if OptAppPermissionsRepositoryHooks was set.
func (o OptAppPermissionsRepositoryHooks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsRepositoryHooks) Reset() {
	var v AppPermissionsRepositoryHooks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsRepositoryHooks) SetTo(v AppPermissionsRepositoryHooks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsRepositoryHooks) Get() (v AppPermissionsRepositoryHooks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsRepositoryProjects with value set to v.
func NewOptAppPermissionsRepositoryProjects(v AppPermissionsRepositoryProjects) OptAppPermissionsRepositoryProjects {
	return OptAppPermissionsRepositoryProjects{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsRepositoryProjects is generic valiant of AppPermissionsRepositoryProjects.
type OptAppPermissionsRepositoryProjects struct {
	Value AppPermissionsRepositoryProjects
	Set   bool
}

// IsSet returns true if OptAppPermissionsRepositoryProjects was set.
func (o OptAppPermissionsRepositoryProjects) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsRepositoryProjects) Reset() {
	var v AppPermissionsRepositoryProjects
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsRepositoryProjects) SetTo(v AppPermissionsRepositoryProjects) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsRepositoryProjects) Get() (v AppPermissionsRepositoryProjects, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsSecretScanningAlerts with value set to v.
func NewOptAppPermissionsSecretScanningAlerts(v AppPermissionsSecretScanningAlerts) OptAppPermissionsSecretScanningAlerts {
	return OptAppPermissionsSecretScanningAlerts{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsSecretScanningAlerts is generic valiant of AppPermissionsSecretScanningAlerts.
type OptAppPermissionsSecretScanningAlerts struct {
	Value AppPermissionsSecretScanningAlerts
	Set   bool
}

// IsSet returns true if OptAppPermissionsSecretScanningAlerts was set.
func (o OptAppPermissionsSecretScanningAlerts) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsSecretScanningAlerts) Reset() {
	var v AppPermissionsSecretScanningAlerts
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsSecretScanningAlerts) SetTo(v AppPermissionsSecretScanningAlerts) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsSecretScanningAlerts) Get() (v AppPermissionsSecretScanningAlerts, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsSecrets with value set to v.
func NewOptAppPermissionsSecrets(v AppPermissionsSecrets) OptAppPermissionsSecrets {
	return OptAppPermissionsSecrets{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsSecrets is generic valiant of AppPermissionsSecrets.
type OptAppPermissionsSecrets struct {
	Value AppPermissionsSecrets
	Set   bool
}

// IsSet returns true if OptAppPermissionsSecrets was set.
func (o OptAppPermissionsSecrets) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsSecrets) Reset() {
	var v AppPermissionsSecrets
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsSecrets) SetTo(v AppPermissionsSecrets) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsSecrets) Get() (v AppPermissionsSecrets, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsSecurityEvents with value set to v.
func NewOptAppPermissionsSecurityEvents(v AppPermissionsSecurityEvents) OptAppPermissionsSecurityEvents {
	return OptAppPermissionsSecurityEvents{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsSecurityEvents is generic valiant of AppPermissionsSecurityEvents.
type OptAppPermissionsSecurityEvents struct {
	Value AppPermissionsSecurityEvents
	Set   bool
}

// IsSet returns true if OptAppPermissionsSecurityEvents was set.
func (o OptAppPermissionsSecurityEvents) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsSecurityEvents) Reset() {
	var v AppPermissionsSecurityEvents
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsSecurityEvents) SetTo(v AppPermissionsSecurityEvents) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsSecurityEvents) Get() (v AppPermissionsSecurityEvents, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsSingleFile with value set to v.
func NewOptAppPermissionsSingleFile(v AppPermissionsSingleFile) OptAppPermissionsSingleFile {
	return OptAppPermissionsSingleFile{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsSingleFile is generic valiant of AppPermissionsSingleFile.
type OptAppPermissionsSingleFile struct {
	Value AppPermissionsSingleFile
	Set   bool
}

// IsSet returns true if OptAppPermissionsSingleFile was set.
func (o OptAppPermissionsSingleFile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsSingleFile) Reset() {
	var v AppPermissionsSingleFile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsSingleFile) SetTo(v AppPermissionsSingleFile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsSingleFile) Get() (v AppPermissionsSingleFile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsStatuses with value set to v.
func NewOptAppPermissionsStatuses(v AppPermissionsStatuses) OptAppPermissionsStatuses {
	return OptAppPermissionsStatuses{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsStatuses is generic valiant of AppPermissionsStatuses.
type OptAppPermissionsStatuses struct {
	Value AppPermissionsStatuses
	Set   bool
}

// IsSet returns true if OptAppPermissionsStatuses was set.
func (o OptAppPermissionsStatuses) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsStatuses) Reset() {
	var v AppPermissionsStatuses
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsStatuses) SetTo(v AppPermissionsStatuses) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsStatuses) Get() (v AppPermissionsStatuses, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsTeamDiscussions with value set to v.
func NewOptAppPermissionsTeamDiscussions(v AppPermissionsTeamDiscussions) OptAppPermissionsTeamDiscussions {
	return OptAppPermissionsTeamDiscussions{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsTeamDiscussions is generic valiant of AppPermissionsTeamDiscussions.
type OptAppPermissionsTeamDiscussions struct {
	Value AppPermissionsTeamDiscussions
	Set   bool
}

// IsSet returns true if OptAppPermissionsTeamDiscussions was set.
func (o OptAppPermissionsTeamDiscussions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsTeamDiscussions) Reset() {
	var v AppPermissionsTeamDiscussions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsTeamDiscussions) SetTo(v AppPermissionsTeamDiscussions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsTeamDiscussions) Get() (v AppPermissionsTeamDiscussions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsVulnerabilityAlerts with value set to v.
func NewOptAppPermissionsVulnerabilityAlerts(v AppPermissionsVulnerabilityAlerts) OptAppPermissionsVulnerabilityAlerts {
	return OptAppPermissionsVulnerabilityAlerts{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsVulnerabilityAlerts is generic valiant of AppPermissionsVulnerabilityAlerts.
type OptAppPermissionsVulnerabilityAlerts struct {
	Value AppPermissionsVulnerabilityAlerts
	Set   bool
}

// IsSet returns true if OptAppPermissionsVulnerabilityAlerts was set.
func (o OptAppPermissionsVulnerabilityAlerts) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsVulnerabilityAlerts) Reset() {
	var v AppPermissionsVulnerabilityAlerts
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsVulnerabilityAlerts) SetTo(v AppPermissionsVulnerabilityAlerts) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsVulnerabilityAlerts) Get() (v AppPermissionsVulnerabilityAlerts, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAppPermissionsWorkflows with value set to v.
func NewOptAppPermissionsWorkflows(v AppPermissionsWorkflows) OptAppPermissionsWorkflows {
	return OptAppPermissionsWorkflows{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsWorkflows is generic valiant of AppPermissionsWorkflows.
type OptAppPermissionsWorkflows struct {
	Value AppPermissionsWorkflows
	Set   bool
}

// IsSet returns true if OptAppPermissionsWorkflows was set.
func (o OptAppPermissionsWorkflows) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsWorkflows) Reset() {
	var v AppPermissionsWorkflows
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsWorkflows) SetTo(v AppPermissionsWorkflows) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsWorkflows) Get() (v AppPermissionsWorkflows, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAuthenticationTokenRepositorySelection with value set to v.
func NewOptAuthenticationTokenRepositorySelection(v AuthenticationTokenRepositorySelection) OptAuthenticationTokenRepositorySelection {
	return OptAuthenticationTokenRepositorySelection{
		Value: v,
		Set:   true,
	}
}

// OptAuthenticationTokenRepositorySelection is generic valiant of AuthenticationTokenRepositorySelection.
type OptAuthenticationTokenRepositorySelection struct {
	Value AuthenticationTokenRepositorySelection
	Set   bool
}

// IsSet returns true if OptAuthenticationTokenRepositorySelection was set.
func (o OptAuthenticationTokenRepositorySelection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAuthenticationTokenRepositorySelection) Reset() {
	var v AuthenticationTokenRepositorySelection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAuthenticationTokenRepositorySelection) SetTo(v AuthenticationTokenRepositorySelection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAuthenticationTokenRepositorySelection) Get() (v AuthenticationTokenRepositorySelection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptAuthorAssociation with value set to v.
func NewOptAuthorAssociation(v AuthorAssociation) OptAuthorAssociation {
	return OptAuthorAssociation{
		Value: v,
		Set:   true,
	}
}

// OptAuthorAssociation is generic valiant of AuthorAssociation.
type OptAuthorAssociation struct {
	Value AuthorAssociation
	Set   bool
}

// IsSet returns true if OptAuthorAssociation was set.
func (o OptAuthorAssociation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAuthorAssociation) Reset() {
	var v AuthorAssociation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAuthorAssociation) SetTo(v AuthorAssociation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAuthorAssociation) Get() (v AuthorAssociation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is generic valiant of bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptBranchProtection with value set to v.
func NewOptBranchProtection(v BranchProtection) OptBranchProtection {
	return OptBranchProtection{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtection is generic valiant of BranchProtection.
type OptBranchProtection struct {
	Value BranchProtection
	Set   bool
}

// IsSet returns true if OptBranchProtection was set.
func (o OptBranchProtection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtection) Reset() {
	var v BranchProtection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtection) SetTo(v BranchProtection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtection) Get() (v BranchProtection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptBranchProtectionAllowDeletions with value set to v.
func NewOptBranchProtectionAllowDeletions(v BranchProtectionAllowDeletions) OptBranchProtectionAllowDeletions {
	return OptBranchProtectionAllowDeletions{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionAllowDeletions is generic valiant of BranchProtectionAllowDeletions.
type OptBranchProtectionAllowDeletions struct {
	Value BranchProtectionAllowDeletions
	Set   bool
}

// IsSet returns true if OptBranchProtectionAllowDeletions was set.
func (o OptBranchProtectionAllowDeletions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionAllowDeletions) Reset() {
	var v BranchProtectionAllowDeletions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionAllowDeletions) SetTo(v BranchProtectionAllowDeletions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionAllowDeletions) Get() (v BranchProtectionAllowDeletions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptBranchProtectionAllowForcePushes with value set to v.
func NewOptBranchProtectionAllowForcePushes(v BranchProtectionAllowForcePushes) OptBranchProtectionAllowForcePushes {
	return OptBranchProtectionAllowForcePushes{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionAllowForcePushes is generic valiant of BranchProtectionAllowForcePushes.
type OptBranchProtectionAllowForcePushes struct {
	Value BranchProtectionAllowForcePushes
	Set   bool
}

// IsSet returns true if OptBranchProtectionAllowForcePushes was set.
func (o OptBranchProtectionAllowForcePushes) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionAllowForcePushes) Reset() {
	var v BranchProtectionAllowForcePushes
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionAllowForcePushes) SetTo(v BranchProtectionAllowForcePushes) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionAllowForcePushes) Get() (v BranchProtectionAllowForcePushes, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptBranchProtectionRequiredConversationResolution with value set to v.
func NewOptBranchProtectionRequiredConversationResolution(v BranchProtectionRequiredConversationResolution) OptBranchProtectionRequiredConversationResolution {
	return OptBranchProtectionRequiredConversationResolution{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionRequiredConversationResolution is generic valiant of BranchProtectionRequiredConversationResolution.
type OptBranchProtectionRequiredConversationResolution struct {
	Value BranchProtectionRequiredConversationResolution
	Set   bool
}

// IsSet returns true if OptBranchProtectionRequiredConversationResolution was set.
func (o OptBranchProtectionRequiredConversationResolution) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionRequiredConversationResolution) Reset() {
	var v BranchProtectionRequiredConversationResolution
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionRequiredConversationResolution) SetTo(v BranchProtectionRequiredConversationResolution) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionRequiredConversationResolution) Get() (v BranchProtectionRequiredConversationResolution, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptBranchProtectionRequiredLinearHistory with value set to v.
func NewOptBranchProtectionRequiredLinearHistory(v BranchProtectionRequiredLinearHistory) OptBranchProtectionRequiredLinearHistory {
	return OptBranchProtectionRequiredLinearHistory{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionRequiredLinearHistory is generic valiant of BranchProtectionRequiredLinearHistory.
type OptBranchProtectionRequiredLinearHistory struct {
	Value BranchProtectionRequiredLinearHistory
	Set   bool
}

// IsSet returns true if OptBranchProtectionRequiredLinearHistory was set.
func (o OptBranchProtectionRequiredLinearHistory) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionRequiredLinearHistory) Reset() {
	var v BranchProtectionRequiredLinearHistory
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionRequiredLinearHistory) SetTo(v BranchProtectionRequiredLinearHistory) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionRequiredLinearHistory) Get() (v BranchProtectionRequiredLinearHistory, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptBranchProtectionRequiredSignatures with value set to v.
func NewOptBranchProtectionRequiredSignatures(v BranchProtectionRequiredSignatures) OptBranchProtectionRequiredSignatures {
	return OptBranchProtectionRequiredSignatures{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionRequiredSignatures is generic valiant of BranchProtectionRequiredSignatures.
type OptBranchProtectionRequiredSignatures struct {
	Value BranchProtectionRequiredSignatures
	Set   bool
}

// IsSet returns true if OptBranchProtectionRequiredSignatures was set.
func (o OptBranchProtectionRequiredSignatures) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionRequiredSignatures) Reset() {
	var v BranchProtectionRequiredSignatures
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionRequiredSignatures) SetTo(v BranchProtectionRequiredSignatures) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionRequiredSignatures) Get() (v BranchProtectionRequiredSignatures, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptBranchProtectionRequiredStatusChecks with value set to v.
func NewOptBranchProtectionRequiredStatusChecks(v BranchProtectionRequiredStatusChecks) OptBranchProtectionRequiredStatusChecks {
	return OptBranchProtectionRequiredStatusChecks{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionRequiredStatusChecks is generic valiant of BranchProtectionRequiredStatusChecks.
type OptBranchProtectionRequiredStatusChecks struct {
	Value BranchProtectionRequiredStatusChecks
	Set   bool
}

// IsSet returns true if OptBranchProtectionRequiredStatusChecks was set.
func (o OptBranchProtectionRequiredStatusChecks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionRequiredStatusChecks) Reset() {
	var v BranchProtectionRequiredStatusChecks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionRequiredStatusChecks) SetTo(v BranchProtectionRequiredStatusChecks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionRequiredStatusChecks) Get() (v BranchProtectionRequiredStatusChecks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptBranchRestrictionPolicy with value set to v.
func NewOptBranchRestrictionPolicy(v BranchRestrictionPolicy) OptBranchRestrictionPolicy {
	return OptBranchRestrictionPolicy{
		Value: v,
		Set:   true,
	}
}

// OptBranchRestrictionPolicy is generic valiant of BranchRestrictionPolicy.
type OptBranchRestrictionPolicy struct {
	Value BranchRestrictionPolicy
	Set   bool
}

// IsSet returns true if OptBranchRestrictionPolicy was set.
func (o OptBranchRestrictionPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchRestrictionPolicy) Reset() {
	var v BranchRestrictionPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchRestrictionPolicy) SetTo(v BranchRestrictionPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchRestrictionPolicy) Get() (v BranchRestrictionPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptBranchRestrictionPolicyAppsItemOwner with value set to v.
func NewOptBranchRestrictionPolicyAppsItemOwner(v BranchRestrictionPolicyAppsItemOwner) OptBranchRestrictionPolicyAppsItemOwner {
	return OptBranchRestrictionPolicyAppsItemOwner{
		Value: v,
		Set:   true,
	}
}

// OptBranchRestrictionPolicyAppsItemOwner is generic valiant of BranchRestrictionPolicyAppsItemOwner.
type OptBranchRestrictionPolicyAppsItemOwner struct {
	Value BranchRestrictionPolicyAppsItemOwner
	Set   bool
}

// IsSet returns true if OptBranchRestrictionPolicyAppsItemOwner was set.
func (o OptBranchRestrictionPolicyAppsItemOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchRestrictionPolicyAppsItemOwner) Reset() {
	var v BranchRestrictionPolicyAppsItemOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchRestrictionPolicyAppsItemOwner) SetTo(v BranchRestrictionPolicyAppsItemOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchRestrictionPolicyAppsItemOwner) Get() (v BranchRestrictionPolicyAppsItemOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptBranchRestrictionPolicyAppsItemPermissions with value set to v.
func NewOptBranchRestrictionPolicyAppsItemPermissions(v BranchRestrictionPolicyAppsItemPermissions) OptBranchRestrictionPolicyAppsItemPermissions {
	return OptBranchRestrictionPolicyAppsItemPermissions{
		Value: v,
		Set:   true,
	}
}

// OptBranchRestrictionPolicyAppsItemPermissions is generic valiant of BranchRestrictionPolicyAppsItemPermissions.
type OptBranchRestrictionPolicyAppsItemPermissions struct {
	Value BranchRestrictionPolicyAppsItemPermissions
	Set   bool
}

// IsSet returns true if OptBranchRestrictionPolicyAppsItemPermissions was set.
func (o OptBranchRestrictionPolicyAppsItemPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchRestrictionPolicyAppsItemPermissions) Reset() {
	var v BranchRestrictionPolicyAppsItemPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchRestrictionPolicyAppsItemPermissions) SetTo(v BranchRestrictionPolicyAppsItemPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchRestrictionPolicyAppsItemPermissions) Get() (v BranchRestrictionPolicyAppsItemPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptCodeOfConduct with value set to v.
func NewOptCodeOfConduct(v CodeOfConduct) OptCodeOfConduct {
	return OptCodeOfConduct{
		Value: v,
		Set:   true,
	}
}

// OptCodeOfConduct is generic valiant of CodeOfConduct.
type OptCodeOfConduct struct {
	Value CodeOfConduct
	Set   bool
}

// IsSet returns true if OptCodeOfConduct was set.
func (o OptCodeOfConduct) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeOfConduct) Reset() {
	var v CodeOfConduct
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeOfConduct) SetTo(v CodeOfConduct) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeOfConduct) Get() (v CodeOfConduct, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptCodeOfConductSimple with value set to v.
func NewOptCodeOfConductSimple(v CodeOfConductSimple) OptCodeOfConductSimple {
	return OptCodeOfConductSimple{
		Value: v,
		Set:   true,
	}
}

// OptCodeOfConductSimple is generic valiant of CodeOfConductSimple.
type OptCodeOfConductSimple struct {
	Value CodeOfConductSimple
	Set   bool
}

// IsSet returns true if OptCodeOfConductSimple was set.
func (o OptCodeOfConductSimple) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeOfConductSimple) Reset() {
	var v CodeOfConductSimple
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeOfConductSimple) SetTo(v CodeOfConductSimple) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeOfConductSimple) Get() (v CodeOfConductSimple, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptCodeScanningAlertDismissedReason with value set to v.
func NewOptCodeScanningAlertDismissedReason(v CodeScanningAlertDismissedReason) OptCodeScanningAlertDismissedReason {
	return OptCodeScanningAlertDismissedReason{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAlertDismissedReason is generic valiant of CodeScanningAlertDismissedReason.
type OptCodeScanningAlertDismissedReason struct {
	Value CodeScanningAlertDismissedReason
	Set   bool
}

// IsSet returns true if OptCodeScanningAlertDismissedReason was set.
func (o OptCodeScanningAlertDismissedReason) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAlertDismissedReason) Reset() {
	var v CodeScanningAlertDismissedReason
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAlertDismissedReason) SetTo(v CodeScanningAlertDismissedReason) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAlertDismissedReason) Get() (v CodeScanningAlertDismissedReason, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptCodeScanningAlertInstanceMessage with value set to v.
func NewOptCodeScanningAlertInstanceMessage(v CodeScanningAlertInstanceMessage) OptCodeScanningAlertInstanceMessage {
	return OptCodeScanningAlertInstanceMessage{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAlertInstanceMessage is generic valiant of CodeScanningAlertInstanceMessage.
type OptCodeScanningAlertInstanceMessage struct {
	Value CodeScanningAlertInstanceMessage
	Set   bool
}

// IsSet returns true if OptCodeScanningAlertInstanceMessage was set.
func (o OptCodeScanningAlertInstanceMessage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAlertInstanceMessage) Reset() {
	var v CodeScanningAlertInstanceMessage
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAlertInstanceMessage) SetTo(v CodeScanningAlertInstanceMessage) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAlertInstanceMessage) Get() (v CodeScanningAlertInstanceMessage, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptCodeScanningAlertLocation with value set to v.
func NewOptCodeScanningAlertLocation(v CodeScanningAlertLocation) OptCodeScanningAlertLocation {
	return OptCodeScanningAlertLocation{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAlertLocation is generic valiant of CodeScanningAlertLocation.
type OptCodeScanningAlertLocation struct {
	Value CodeScanningAlertLocation
	Set   bool
}

// IsSet returns true if OptCodeScanningAlertLocation was set.
func (o OptCodeScanningAlertLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAlertLocation) Reset() {
	var v CodeScanningAlertLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAlertLocation) SetTo(v CodeScanningAlertLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAlertLocation) Get() (v CodeScanningAlertLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptCodeScanningAlertState with value set to v.
func NewOptCodeScanningAlertState(v CodeScanningAlertState) OptCodeScanningAlertState {
	return OptCodeScanningAlertState{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAlertState is generic valiant of CodeScanningAlertState.
type OptCodeScanningAlertState struct {
	Value CodeScanningAlertState
	Set   bool
}

// IsSet returns true if OptCodeScanningAlertState was set.
func (o OptCodeScanningAlertState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAlertState) Reset() {
	var v CodeScanningAlertState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAlertState) SetTo(v CodeScanningAlertState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAlertState) Get() (v CodeScanningAlertState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptCodeScanningSarifsStatusProcessingStatus with value set to v.
func NewOptCodeScanningSarifsStatusProcessingStatus(v CodeScanningSarifsStatusProcessingStatus) OptCodeScanningSarifsStatusProcessingStatus {
	return OptCodeScanningSarifsStatusProcessingStatus{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningSarifsStatusProcessingStatus is generic valiant of CodeScanningSarifsStatusProcessingStatus.
type OptCodeScanningSarifsStatusProcessingStatus struct {
	Value CodeScanningSarifsStatusProcessingStatus
	Set   bool
}

// IsSet returns true if OptCodeScanningSarifsStatusProcessingStatus was set.
func (o OptCodeScanningSarifsStatusProcessingStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningSarifsStatusProcessingStatus) Reset() {
	var v CodeScanningSarifsStatusProcessingStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningSarifsStatusProcessingStatus) SetTo(v CodeScanningSarifsStatusProcessingStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningSarifsStatusProcessingStatus) Get() (v CodeScanningSarifsStatusProcessingStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptCommitStats with value set to v.
func NewOptCommitStats(v CommitStats) OptCommitStats {
	return OptCommitStats{
		Value: v,
		Set:   true,
	}
}

// OptCommitStats is generic valiant of CommitStats.
type OptCommitStats struct {
	Value CommitStats
	Set   bool
}

// IsSet returns true if OptCommitStats was set.
func (o OptCommitStats) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCommitStats) Reset() {
	var v CommitStats
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCommitStats) SetTo(v CommitStats) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCommitStats) Get() (v CommitStats, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptDeploymentBranchPolicy with value set to v.
func NewOptDeploymentBranchPolicy(v DeploymentBranchPolicy) OptDeploymentBranchPolicy {
	return OptDeploymentBranchPolicy{
		Value: v,
		Set:   true,
	}
}

// OptDeploymentBranchPolicy is generic valiant of DeploymentBranchPolicy.
type OptDeploymentBranchPolicy struct {
	Value DeploymentBranchPolicy
	Set   bool
}

// IsSet returns true if OptDeploymentBranchPolicy was set.
func (o OptDeploymentBranchPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDeploymentBranchPolicy) Reset() {
	var v DeploymentBranchPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDeploymentBranchPolicy) SetTo(v DeploymentBranchPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDeploymentBranchPolicy) Get() (v DeploymentBranchPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptDeploymentReviewerType with value set to v.
func NewOptDeploymentReviewerType(v DeploymentReviewerType) OptDeploymentReviewerType {
	return OptDeploymentReviewerType{
		Value: v,
		Set:   true,
	}
}

// OptDeploymentReviewerType is generic valiant of DeploymentReviewerType.
type OptDeploymentReviewerType struct {
	Value DeploymentReviewerType
	Set   bool
}

// IsSet returns true if OptDeploymentReviewerType was set.
func (o OptDeploymentReviewerType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDeploymentReviewerType) Reset() {
	var v DeploymentReviewerType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDeploymentReviewerType) SetTo(v DeploymentReviewerType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDeploymentReviewerType) Get() (v DeploymentReviewerType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptDeploymentSimple with value set to v.
func NewOptDeploymentSimple(v DeploymentSimple) OptDeploymentSimple {
	return OptDeploymentSimple{
		Value: v,
		Set:   true,
	}
}

// OptDeploymentSimple is generic valiant of DeploymentSimple.
type OptDeploymentSimple struct {
	Value DeploymentSimple
	Set   bool
}

// IsSet returns true if OptDeploymentSimple was set.
func (o OptDeploymentSimple) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDeploymentSimple) Reset() {
	var v DeploymentSimple
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDeploymentSimple) SetTo(v DeploymentSimple) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDeploymentSimple) Get() (v DeploymentSimple, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility with value set to v.
func NewOptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility(v EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility) OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility {
	return OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility{
		Value: v,
		Set:   true,
	}
}

// OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility is generic valiant of EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility.
type OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility struct {
	Value EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility
	Set   bool
}

// IsSet returns true if OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility was set.
func (o OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility) Reset() {
	var v EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility) SetTo(v EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility) Get() (v EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility with value set to v.
func NewOptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility(v EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility) OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility {
	return OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility{
		Value: v,
		Set:   true,
	}
}

// OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility is generic valiant of EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility.
type OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility struct {
	Value EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility
	Set   bool
}

// IsSet returns true if OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility was set.
func (o OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility) Reset() {
	var v EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility) SetTo(v EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility) Get() (v EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONRequestVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptFileCommitCommitAuthor with value set to v.
func NewOptFileCommitCommitAuthor(v FileCommitCommitAuthor) OptFileCommitCommitAuthor {
	return OptFileCommitCommitAuthor{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitCommitAuthor is generic valiant of FileCommitCommitAuthor.
type OptFileCommitCommitAuthor struct {
	Value FileCommitCommitAuthor
	Set   bool
}

// IsSet returns true if OptFileCommitCommitAuthor was set.
func (o OptFileCommitCommitAuthor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitCommitAuthor) Reset() {
	var v FileCommitCommitAuthor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitCommitAuthor) SetTo(v FileCommitCommitAuthor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitCommitAuthor) Get() (v FileCommitCommitAuthor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptFileCommitCommitCommitter with value set to v.
func NewOptFileCommitCommitCommitter(v FileCommitCommitCommitter) OptFileCommitCommitCommitter {
	return OptFileCommitCommitCommitter{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitCommitCommitter is generic valiant of FileCommitCommitCommitter.
type OptFileCommitCommitCommitter struct {
	Value FileCommitCommitCommitter
	Set   bool
}

// IsSet returns true if OptFileCommitCommitCommitter was set.
func (o OptFileCommitCommitCommitter) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitCommitCommitter) Reset() {
	var v FileCommitCommitCommitter
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitCommitCommitter) SetTo(v FileCommitCommitCommitter) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitCommitCommitter) Get() (v FileCommitCommitCommitter, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptFileCommitCommitTree with value set to v.
func NewOptFileCommitCommitTree(v FileCommitCommitTree) OptFileCommitCommitTree {
	return OptFileCommitCommitTree{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitCommitTree is generic valiant of FileCommitCommitTree.
type OptFileCommitCommitTree struct {
	Value FileCommitCommitTree
	Set   bool
}

// IsSet returns true if OptFileCommitCommitTree was set.
func (o OptFileCommitCommitTree) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitCommitTree) Reset() {
	var v FileCommitCommitTree
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitCommitTree) SetTo(v FileCommitCommitTree) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitCommitTree) Get() (v FileCommitCommitTree, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptFileCommitCommitVerification with value set to v.
func NewOptFileCommitCommitVerification(v FileCommitCommitVerification) OptFileCommitCommitVerification {
	return OptFileCommitCommitVerification{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitCommitVerification is generic valiant of FileCommitCommitVerification.
type OptFileCommitCommitVerification struct {
	Value FileCommitCommitVerification
	Set   bool
}

// IsSet returns true if OptFileCommitCommitVerification was set.
func (o OptFileCommitCommitVerification) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitCommitVerification) Reset() {
	var v FileCommitCommitVerification
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitCommitVerification) SetTo(v FileCommitCommitVerification) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitCommitVerification) Get() (v FileCommitCommitVerification, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptFileCommitContentLinks with value set to v.
func NewOptFileCommitContentLinks(v FileCommitContentLinks) OptFileCommitContentLinks {
	return OptFileCommitContentLinks{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitContentLinks is generic valiant of FileCommitContentLinks.
type OptFileCommitContentLinks struct {
	Value FileCommitContentLinks
	Set   bool
}

// IsSet returns true if OptFileCommitContentLinks was set.
func (o OptFileCommitContentLinks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitContentLinks) Reset() {
	var v FileCommitContentLinks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitContentLinks) SetTo(v FileCommitContentLinks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitContentLinks) Get() (v FileCommitContentLinks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is generic valiant of float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptForbiddenGistBlock with value set to v.
func NewOptForbiddenGistBlock(v ForbiddenGistBlock) OptForbiddenGistBlock {
	return OptForbiddenGistBlock{
		Value: v,
		Set:   true,
	}
}

// OptForbiddenGistBlock is generic valiant of ForbiddenGistBlock.
type OptForbiddenGistBlock struct {
	Value ForbiddenGistBlock
	Set   bool
}

// IsSet returns true if OptForbiddenGistBlock was set.
func (o OptForbiddenGistBlock) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptForbiddenGistBlock) Reset() {
	var v ForbiddenGistBlock
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptForbiddenGistBlock) SetTo(v ForbiddenGistBlock) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptForbiddenGistBlock) Get() (v ForbiddenGistBlock, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptFullRepositoryPermissions with value set to v.
func NewOptFullRepositoryPermissions(v FullRepositoryPermissions) OptFullRepositoryPermissions {
	return OptFullRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositoryPermissions is generic valiant of FullRepositoryPermissions.
type OptFullRepositoryPermissions struct {
	Value FullRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptFullRepositoryPermissions was set.
func (o OptFullRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositoryPermissions) Reset() {
	var v FullRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositoryPermissions) SetTo(v FullRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositoryPermissions) Get() (v FullRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptFullRepositorySecurityAndAnalysisAdvancedSecurity with value set to v.
func NewOptFullRepositorySecurityAndAnalysisAdvancedSecurity(v FullRepositorySecurityAndAnalysisAdvancedSecurity) OptFullRepositorySecurityAndAnalysisAdvancedSecurity {
	return OptFullRepositorySecurityAndAnalysisAdvancedSecurity{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositorySecurityAndAnalysisAdvancedSecurity is generic valiant of FullRepositorySecurityAndAnalysisAdvancedSecurity.
type OptFullRepositorySecurityAndAnalysisAdvancedSecurity struct {
	Value FullRepositorySecurityAndAnalysisAdvancedSecurity
	Set   bool
}

// IsSet returns true if OptFullRepositorySecurityAndAnalysisAdvancedSecurity was set.
func (o OptFullRepositorySecurityAndAnalysisAdvancedSecurity) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositorySecurityAndAnalysisAdvancedSecurity) Reset() {
	var v FullRepositorySecurityAndAnalysisAdvancedSecurity
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositorySecurityAndAnalysisAdvancedSecurity) SetTo(v FullRepositorySecurityAndAnalysisAdvancedSecurity) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositorySecurityAndAnalysisAdvancedSecurity) Get() (v FullRepositorySecurityAndAnalysisAdvancedSecurity, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus with value set to v.
func NewOptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus(v FullRepositorySecurityAndAnalysisAdvancedSecurityStatus) OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus {
	return OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus is generic valiant of FullRepositorySecurityAndAnalysisAdvancedSecurityStatus.
type OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus struct {
	Value FullRepositorySecurityAndAnalysisAdvancedSecurityStatus
	Set   bool
}

// IsSet returns true if OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus was set.
func (o OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus) Reset() {
	var v FullRepositorySecurityAndAnalysisAdvancedSecurityStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus) SetTo(v FullRepositorySecurityAndAnalysisAdvancedSecurityStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus) Get() (v FullRepositorySecurityAndAnalysisAdvancedSecurityStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptFullRepositorySecurityAndAnalysisSecretScanning with value set to v.
func NewOptFullRepositorySecurityAndAnalysisSecretScanning(v FullRepositorySecurityAndAnalysisSecretScanning) OptFullRepositorySecurityAndAnalysisSecretScanning {
	return OptFullRepositorySecurityAndAnalysisSecretScanning{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositorySecurityAndAnalysisSecretScanning is generic valiant of FullRepositorySecurityAndAnalysisSecretScanning.
type OptFullRepositorySecurityAndAnalysisSecretScanning struct {
	Value FullRepositorySecurityAndAnalysisSecretScanning
	Set   bool
}

// IsSet returns true if OptFullRepositorySecurityAndAnalysisSecretScanning was set.
func (o OptFullRepositorySecurityAndAnalysisSecretScanning) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositorySecurityAndAnalysisSecretScanning) Reset() {
	var v FullRepositorySecurityAndAnalysisSecretScanning
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositorySecurityAndAnalysisSecretScanning) SetTo(v FullRepositorySecurityAndAnalysisSecretScanning) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositorySecurityAndAnalysisSecretScanning) Get() (v FullRepositorySecurityAndAnalysisSecretScanning, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptFullRepositorySecurityAndAnalysisSecretScanningStatus with value set to v.
func NewOptFullRepositorySecurityAndAnalysisSecretScanningStatus(v FullRepositorySecurityAndAnalysisSecretScanningStatus) OptFullRepositorySecurityAndAnalysisSecretScanningStatus {
	return OptFullRepositorySecurityAndAnalysisSecretScanningStatus{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositorySecurityAndAnalysisSecretScanningStatus is generic valiant of FullRepositorySecurityAndAnalysisSecretScanningStatus.
type OptFullRepositorySecurityAndAnalysisSecretScanningStatus struct {
	Value FullRepositorySecurityAndAnalysisSecretScanningStatus
	Set   bool
}

// IsSet returns true if OptFullRepositorySecurityAndAnalysisSecretScanningStatus was set.
func (o OptFullRepositorySecurityAndAnalysisSecretScanningStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositorySecurityAndAnalysisSecretScanningStatus) Reset() {
	var v FullRepositorySecurityAndAnalysisSecretScanningStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositorySecurityAndAnalysisSecretScanningStatus) SetTo(v FullRepositorySecurityAndAnalysisSecretScanningStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositorySecurityAndAnalysisSecretScanningStatus) Get() (v FullRepositorySecurityAndAnalysisSecretScanningStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptGistHistoryChangeStatus with value set to v.
func NewOptGistHistoryChangeStatus(v GistHistoryChangeStatus) OptGistHistoryChangeStatus {
	return OptGistHistoryChangeStatus{
		Value: v,
		Set:   true,
	}
}

// OptGistHistoryChangeStatus is generic valiant of GistHistoryChangeStatus.
type OptGistHistoryChangeStatus struct {
	Value GistHistoryChangeStatus
	Set   bool
}

// IsSet returns true if OptGistHistoryChangeStatus was set.
func (o OptGistHistoryChangeStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGistHistoryChangeStatus) Reset() {
	var v GistHistoryChangeStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGistHistoryChangeStatus) SetTo(v GistHistoryChangeStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGistHistoryChangeStatus) Get() (v GistHistoryChangeStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptGitCreateCommitApplicationJSONRequestAuthor with value set to v.
func NewOptGitCreateCommitApplicationJSONRequestAuthor(v GitCreateCommitApplicationJSONRequestAuthor) OptGitCreateCommitApplicationJSONRequestAuthor {
	return OptGitCreateCommitApplicationJSONRequestAuthor{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateCommitApplicationJSONRequestAuthor is generic valiant of GitCreateCommitApplicationJSONRequestAuthor.
type OptGitCreateCommitApplicationJSONRequestAuthor struct {
	Value GitCreateCommitApplicationJSONRequestAuthor
	Set   bool
}

// IsSet returns true if OptGitCreateCommitApplicationJSONRequestAuthor was set.
func (o OptGitCreateCommitApplicationJSONRequestAuthor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateCommitApplicationJSONRequestAuthor) Reset() {
	var v GitCreateCommitApplicationJSONRequestAuthor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateCommitApplicationJSONRequestAuthor) SetTo(v GitCreateCommitApplicationJSONRequestAuthor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateCommitApplicationJSONRequestAuthor) Get() (v GitCreateCommitApplicationJSONRequestAuthor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptGitCreateCommitApplicationJSONRequestCommitter with value set to v.
func NewOptGitCreateCommitApplicationJSONRequestCommitter(v GitCreateCommitApplicationJSONRequestCommitter) OptGitCreateCommitApplicationJSONRequestCommitter {
	return OptGitCreateCommitApplicationJSONRequestCommitter{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateCommitApplicationJSONRequestCommitter is generic valiant of GitCreateCommitApplicationJSONRequestCommitter.
type OptGitCreateCommitApplicationJSONRequestCommitter struct {
	Value GitCreateCommitApplicationJSONRequestCommitter
	Set   bool
}

// IsSet returns true if OptGitCreateCommitApplicationJSONRequestCommitter was set.
func (o OptGitCreateCommitApplicationJSONRequestCommitter) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateCommitApplicationJSONRequestCommitter) Reset() {
	var v GitCreateCommitApplicationJSONRequestCommitter
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateCommitApplicationJSONRequestCommitter) SetTo(v GitCreateCommitApplicationJSONRequestCommitter) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateCommitApplicationJSONRequestCommitter) Get() (v GitCreateCommitApplicationJSONRequestCommitter, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptGitCreateTagApplicationJSONRequestTagger with value set to v.
func NewOptGitCreateTagApplicationJSONRequestTagger(v GitCreateTagApplicationJSONRequestTagger) OptGitCreateTagApplicationJSONRequestTagger {
	return OptGitCreateTagApplicationJSONRequestTagger{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateTagApplicationJSONRequestTagger is generic valiant of GitCreateTagApplicationJSONRequestTagger.
type OptGitCreateTagApplicationJSONRequestTagger struct {
	Value GitCreateTagApplicationJSONRequestTagger
	Set   bool
}

// IsSet returns true if OptGitCreateTagApplicationJSONRequestTagger was set.
func (o OptGitCreateTagApplicationJSONRequestTagger) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateTagApplicationJSONRequestTagger) Reset() {
	var v GitCreateTagApplicationJSONRequestTagger
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateTagApplicationJSONRequestTagger) SetTo(v GitCreateTagApplicationJSONRequestTagger) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateTagApplicationJSONRequestTagger) Get() (v GitCreateTagApplicationJSONRequestTagger, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptGitCreateTreeApplicationJSONRequestTreeItemMode with value set to v.
func NewOptGitCreateTreeApplicationJSONRequestTreeItemMode(v GitCreateTreeApplicationJSONRequestTreeItemMode) OptGitCreateTreeApplicationJSONRequestTreeItemMode {
	return OptGitCreateTreeApplicationJSONRequestTreeItemMode{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateTreeApplicationJSONRequestTreeItemMode is generic valiant of GitCreateTreeApplicationJSONRequestTreeItemMode.
type OptGitCreateTreeApplicationJSONRequestTreeItemMode struct {
	Value GitCreateTreeApplicationJSONRequestTreeItemMode
	Set   bool
}

// IsSet returns true if OptGitCreateTreeApplicationJSONRequestTreeItemMode was set.
func (o OptGitCreateTreeApplicationJSONRequestTreeItemMode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateTreeApplicationJSONRequestTreeItemMode) Reset() {
	var v GitCreateTreeApplicationJSONRequestTreeItemMode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateTreeApplicationJSONRequestTreeItemMode) SetTo(v GitCreateTreeApplicationJSONRequestTreeItemMode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateTreeApplicationJSONRequestTreeItemMode) Get() (v GitCreateTreeApplicationJSONRequestTreeItemMode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptGitCreateTreeApplicationJSONRequestTreeItemType with value set to v.
func NewOptGitCreateTreeApplicationJSONRequestTreeItemType(v GitCreateTreeApplicationJSONRequestTreeItemType) OptGitCreateTreeApplicationJSONRequestTreeItemType {
	return OptGitCreateTreeApplicationJSONRequestTreeItemType{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateTreeApplicationJSONRequestTreeItemType is generic valiant of GitCreateTreeApplicationJSONRequestTreeItemType.
type OptGitCreateTreeApplicationJSONRequestTreeItemType struct {
	Value GitCreateTreeApplicationJSONRequestTreeItemType
	Set   bool
}

// IsSet returns true if OptGitCreateTreeApplicationJSONRequestTreeItemType was set.
func (o OptGitCreateTreeApplicationJSONRequestTreeItemType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateTreeApplicationJSONRequestTreeItemType) Reset() {
	var v GitCreateTreeApplicationJSONRequestTreeItemType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateTreeApplicationJSONRequestTreeItemType) SetTo(v GitCreateTreeApplicationJSONRequestTreeItemType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateTreeApplicationJSONRequestTreeItemType) Get() (v GitCreateTreeApplicationJSONRequestTreeItemType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptInstallationTokenRepositorySelection with value set to v.
func NewOptInstallationTokenRepositorySelection(v InstallationTokenRepositorySelection) OptInstallationTokenRepositorySelection {
	return OptInstallationTokenRepositorySelection{
		Value: v,
		Set:   true,
	}
}

// OptInstallationTokenRepositorySelection is generic valiant of InstallationTokenRepositorySelection.
type OptInstallationTokenRepositorySelection struct {
	Value InstallationTokenRepositorySelection
	Set   bool
}

// IsSet returns true if OptInstallationTokenRepositorySelection was set.
func (o OptInstallationTokenRepositorySelection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInstallationTokenRepositorySelection) Reset() {
	var v InstallationTokenRepositorySelection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInstallationTokenRepositorySelection) SetTo(v InstallationTokenRepositorySelection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInstallationTokenRepositorySelection) Get() (v InstallationTokenRepositorySelection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is generic valiant of int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is generic valiant of int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptInteractionExpiry with value set to v.
func NewOptInteractionExpiry(v InteractionExpiry) OptInteractionExpiry {
	return OptInteractionExpiry{
		Value: v,
		Set:   true,
	}
}

// OptInteractionExpiry is generic valiant of InteractionExpiry.
type OptInteractionExpiry struct {
	Value InteractionExpiry
	Set   bool
}

// IsSet returns true if OptInteractionExpiry was set.
func (o OptInteractionExpiry) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInteractionExpiry) Reset() {
	var v InteractionExpiry
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInteractionExpiry) SetTo(v InteractionExpiry) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInteractionExpiry) Get() (v InteractionExpiry, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptIssueComment with value set to v.
func NewOptIssueComment(v IssueComment) OptIssueComment {
	return OptIssueComment{
		Value: v,
		Set:   true,
	}
}

// OptIssueComment is generic valiant of IssueComment.
type OptIssueComment struct {
	Value IssueComment
	Set   bool
}

// IsSet returns true if OptIssueComment was set.
func (o OptIssueComment) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueComment) Reset() {
	var v IssueComment
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueComment) SetTo(v IssueComment) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueComment) Get() (v IssueComment, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptIssueEventDismissedReview with value set to v.
func NewOptIssueEventDismissedReview(v IssueEventDismissedReview) OptIssueEventDismissedReview {
	return OptIssueEventDismissedReview{
		Value: v,
		Set:   true,
	}
}

// OptIssueEventDismissedReview is generic valiant of IssueEventDismissedReview.
type OptIssueEventDismissedReview struct {
	Value IssueEventDismissedReview
	Set   bool
}

// IsSet returns true if OptIssueEventDismissedReview was set.
func (o OptIssueEventDismissedReview) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueEventDismissedReview) Reset() {
	var v IssueEventDismissedReview
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueEventDismissedReview) SetTo(v IssueEventDismissedReview) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueEventDismissedReview) Get() (v IssueEventDismissedReview, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptIssueEventLabel with value set to v.
func NewOptIssueEventLabel(v IssueEventLabel) OptIssueEventLabel {
	return OptIssueEventLabel{
		Value: v,
		Set:   true,
	}
}

// OptIssueEventLabel is generic valiant of IssueEventLabel.
type OptIssueEventLabel struct {
	Value IssueEventLabel
	Set   bool
}

// IsSet returns true if OptIssueEventLabel was set.
func (o OptIssueEventLabel) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueEventLabel) Reset() {
	var v IssueEventLabel
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueEventLabel) SetTo(v IssueEventLabel) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueEventLabel) Get() (v IssueEventLabel, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptIssueEventMilestone with value set to v.
func NewOptIssueEventMilestone(v IssueEventMilestone) OptIssueEventMilestone {
	return OptIssueEventMilestone{
		Value: v,
		Set:   true,
	}
}

// OptIssueEventMilestone is generic valiant of IssueEventMilestone.
type OptIssueEventMilestone struct {
	Value IssueEventMilestone
	Set   bool
}

// IsSet returns true if OptIssueEventMilestone was set.
func (o OptIssueEventMilestone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueEventMilestone) Reset() {
	var v IssueEventMilestone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueEventMilestone) SetTo(v IssueEventMilestone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueEventMilestone) Get() (v IssueEventMilestone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptIssueEventProjectCard with value set to v.
func NewOptIssueEventProjectCard(v IssueEventProjectCard) OptIssueEventProjectCard {
	return OptIssueEventProjectCard{
		Value: v,
		Set:   true,
	}
}

// OptIssueEventProjectCard is generic valiant of IssueEventProjectCard.
type OptIssueEventProjectCard struct {
	Value IssueEventProjectCard
	Set   bool
}

// IsSet returns true if OptIssueEventProjectCard was set.
func (o OptIssueEventProjectCard) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueEventProjectCard) Reset() {
	var v IssueEventProjectCard
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueEventProjectCard) SetTo(v IssueEventProjectCard) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueEventProjectCard) Get() (v IssueEventProjectCard, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptIssueEventRename with value set to v.
func NewOptIssueEventRename(v IssueEventRename) OptIssueEventRename {
	return OptIssueEventRename{
		Value: v,
		Set:   true,
	}
}

// OptIssueEventRename is generic valiant of IssueEventRename.
type OptIssueEventRename struct {
	Value IssueEventRename
	Set   bool
}

// IsSet returns true if OptIssueEventRename was set.
func (o OptIssueEventRename) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueEventRename) Reset() {
	var v IssueEventRename
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueEventRename) SetTo(v IssueEventRename) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueEventRename) Get() (v IssueEventRename, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptIssueSimple with value set to v.
func NewOptIssueSimple(v IssueSimple) OptIssueSimple {
	return OptIssueSimple{
		Value: v,
		Set:   true,
	}
}

// OptIssueSimple is generic valiant of IssueSimple.
type OptIssueSimple struct {
	Value IssueSimple
	Set   bool
}

// IsSet returns true if OptIssueSimple was set.
func (o OptIssueSimple) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueSimple) Reset() {
	var v IssueSimple
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueSimple) SetTo(v IssueSimple) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueSimple) Get() (v IssueSimple, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptIssueSimplePullRequest with value set to v.
func NewOptIssueSimplePullRequest(v IssueSimplePullRequest) OptIssueSimplePullRequest {
	return OptIssueSimplePullRequest{
		Value: v,
		Set:   true,
	}
}

// OptIssueSimplePullRequest is generic valiant of IssueSimplePullRequest.
type OptIssueSimplePullRequest struct {
	Value IssueSimplePullRequest
	Set   bool
}

// IsSet returns true if OptIssueSimplePullRequest was set.
func (o OptIssueSimplePullRequest) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueSimplePullRequest) Reset() {
	var v IssueSimplePullRequest
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueSimplePullRequest) SetTo(v IssueSimplePullRequest) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueSimplePullRequest) Get() (v IssueSimplePullRequest, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptIssuesCreateMilestoneApplicationJSONRequestState with value set to v.
func NewOptIssuesCreateMilestoneApplicationJSONRequestState(v IssuesCreateMilestoneApplicationJSONRequestState) OptIssuesCreateMilestoneApplicationJSONRequestState {
	return OptIssuesCreateMilestoneApplicationJSONRequestState{
		Value: v,
		Set:   true,
	}
}

// OptIssuesCreateMilestoneApplicationJSONRequestState is generic valiant of IssuesCreateMilestoneApplicationJSONRequestState.
type OptIssuesCreateMilestoneApplicationJSONRequestState struct {
	Value IssuesCreateMilestoneApplicationJSONRequestState
	Set   bool
}

// IsSet returns true if OptIssuesCreateMilestoneApplicationJSONRequestState was set.
func (o OptIssuesCreateMilestoneApplicationJSONRequestState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssuesCreateMilestoneApplicationJSONRequestState) Reset() {
	var v IssuesCreateMilestoneApplicationJSONRequestState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssuesCreateMilestoneApplicationJSONRequestState) SetTo(v IssuesCreateMilestoneApplicationJSONRequestState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssuesCreateMilestoneApplicationJSONRequestState) Get() (v IssuesCreateMilestoneApplicationJSONRequestState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptIssuesLockApplicationJSONRequestLockReason with value set to v.
func NewOptIssuesLockApplicationJSONRequestLockReason(v IssuesLockApplicationJSONRequestLockReason) OptIssuesLockApplicationJSONRequestLockReason {
	return OptIssuesLockApplicationJSONRequestLockReason{
		Value: v,
		Set:   true,
	}
}

// OptIssuesLockApplicationJSONRequestLockReason is generic valiant of IssuesLockApplicationJSONRequestLockReason.
type OptIssuesLockApplicationJSONRequestLockReason struct {
	Value IssuesLockApplicationJSONRequestLockReason
	Set   bool
}

// IsSet returns true if OptIssuesLockApplicationJSONRequestLockReason was set.
func (o OptIssuesLockApplicationJSONRequestLockReason) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssuesLockApplicationJSONRequestLockReason) Reset() {
	var v IssuesLockApplicationJSONRequestLockReason
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssuesLockApplicationJSONRequestLockReason) SetTo(v IssuesLockApplicationJSONRequestLockReason) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssuesLockApplicationJSONRequestLockReason) Get() (v IssuesLockApplicationJSONRequestLockReason, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptIssuesUpdateMilestoneApplicationJSONRequestState with value set to v.
func NewOptIssuesUpdateMilestoneApplicationJSONRequestState(v IssuesUpdateMilestoneApplicationJSONRequestState) OptIssuesUpdateMilestoneApplicationJSONRequestState {
	return OptIssuesUpdateMilestoneApplicationJSONRequestState{
		Value: v,
		Set:   true,
	}
}

// OptIssuesUpdateMilestoneApplicationJSONRequestState is generic valiant of IssuesUpdateMilestoneApplicationJSONRequestState.
type OptIssuesUpdateMilestoneApplicationJSONRequestState struct {
	Value IssuesUpdateMilestoneApplicationJSONRequestState
	Set   bool
}

// IsSet returns true if OptIssuesUpdateMilestoneApplicationJSONRequestState was set.
func (o OptIssuesUpdateMilestoneApplicationJSONRequestState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssuesUpdateMilestoneApplicationJSONRequestState) Reset() {
	var v IssuesUpdateMilestoneApplicationJSONRequestState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssuesUpdateMilestoneApplicationJSONRequestState) SetTo(v IssuesUpdateMilestoneApplicationJSONRequestState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssuesUpdateMilestoneApplicationJSONRequestState) Get() (v IssuesUpdateMilestoneApplicationJSONRequestState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptLinkWithType with value set to v.
func NewOptLinkWithType(v LinkWithType) OptLinkWithType {
	return OptLinkWithType{
		Value: v,
		Set:   true,
	}
}

// OptLinkWithType is generic valiant of LinkWithType.
type OptLinkWithType struct {
	Value LinkWithType
	Set   bool
}

// IsSet returns true if OptLinkWithType was set.
func (o OptLinkWithType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLinkWithType) Reset() {
	var v LinkWithType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLinkWithType) SetTo(v LinkWithType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLinkWithType) Get() (v LinkWithType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptMarkdownRenderApplicationJSONRequestMode with value set to v.
func NewOptMarkdownRenderApplicationJSONRequestMode(v MarkdownRenderApplicationJSONRequestMode) OptMarkdownRenderApplicationJSONRequestMode {
	return OptMarkdownRenderApplicationJSONRequestMode{
		Value: v,
		Set:   true,
	}
}

// OptMarkdownRenderApplicationJSONRequestMode is generic valiant of MarkdownRenderApplicationJSONRequestMode.
type OptMarkdownRenderApplicationJSONRequestMode struct {
	Value MarkdownRenderApplicationJSONRequestMode
	Set   bool
}

// IsSet returns true if OptMarkdownRenderApplicationJSONRequestMode was set.
func (o OptMarkdownRenderApplicationJSONRequestMode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMarkdownRenderApplicationJSONRequestMode) Reset() {
	var v MarkdownRenderApplicationJSONRequestMode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMarkdownRenderApplicationJSONRequestMode) SetTo(v MarkdownRenderApplicationJSONRequestMode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMarkdownRenderApplicationJSONRequestMode) Get() (v MarkdownRenderApplicationJSONRequestMode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptMarketplaceListingPlan with value set to v.
func NewOptMarketplaceListingPlan(v MarketplaceListingPlan) OptMarketplaceListingPlan {
	return OptMarketplaceListingPlan{
		Value: v,
		Set:   true,
	}
}

// OptMarketplaceListingPlan is generic valiant of MarketplaceListingPlan.
type OptMarketplaceListingPlan struct {
	Value MarketplaceListingPlan
	Set   bool
}

// IsSet returns true if OptMarketplaceListingPlan was set.
func (o OptMarketplaceListingPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMarketplaceListingPlan) Reset() {
	var v MarketplaceListingPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMarketplaceListingPlan) SetTo(v MarketplaceListingPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMarketplaceListingPlan) Get() (v MarketplaceListingPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptMergedUpstreamMergeType with value set to v.
func NewOptMergedUpstreamMergeType(v MergedUpstreamMergeType) OptMergedUpstreamMergeType {
	return OptMergedUpstreamMergeType{
		Value: v,
		Set:   true,
	}
}

// OptMergedUpstreamMergeType is generic valiant of MergedUpstreamMergeType.
type OptMergedUpstreamMergeType struct {
	Value MergedUpstreamMergeType
	Set   bool
}

// IsSet returns true if OptMergedUpstreamMergeType was set.
func (o OptMergedUpstreamMergeType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMergedUpstreamMergeType) Reset() {
	var v MergedUpstreamMergeType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMergedUpstreamMergeType) SetTo(v MergedUpstreamMergeType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMergedUpstreamMergeType) Get() (v MergedUpstreamMergeType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptMigrationsStartImportApplicationJSONRequestVcs with value set to v.
func NewOptMigrationsStartImportApplicationJSONRequestVcs(v MigrationsStartImportApplicationJSONRequestVcs) OptMigrationsStartImportApplicationJSONRequestVcs {
	return OptMigrationsStartImportApplicationJSONRequestVcs{
		Value: v,
		Set:   true,
	}
}

// OptMigrationsStartImportApplicationJSONRequestVcs is generic valiant of MigrationsStartImportApplicationJSONRequestVcs.
type OptMigrationsStartImportApplicationJSONRequestVcs struct {
	Value MigrationsStartImportApplicationJSONRequestVcs
	Set   bool
}

// IsSet returns true if OptMigrationsStartImportApplicationJSONRequestVcs was set.
func (o OptMigrationsStartImportApplicationJSONRequestVcs) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMigrationsStartImportApplicationJSONRequestVcs) Reset() {
	var v MigrationsStartImportApplicationJSONRequestVcs
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMigrationsStartImportApplicationJSONRequestVcs) SetTo(v MigrationsStartImportApplicationJSONRequestVcs) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMigrationsStartImportApplicationJSONRequestVcs) Get() (v MigrationsStartImportApplicationJSONRequestVcs, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptMinimalRepositoryPermissions with value set to v.
func NewOptMinimalRepositoryPermissions(v MinimalRepositoryPermissions) OptMinimalRepositoryPermissions {
	return OptMinimalRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptMinimalRepositoryPermissions is generic valiant of MinimalRepositoryPermissions.
type OptMinimalRepositoryPermissions struct {
	Value MinimalRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptMinimalRepositoryPermissions was set.
func (o OptMinimalRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMinimalRepositoryPermissions) Reset() {
	var v MinimalRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMinimalRepositoryPermissions) SetTo(v MinimalRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMinimalRepositoryPermissions) Get() (v MinimalRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilBool with value set to v.
func NewOptNilBool(v bool) OptNilBool {
	return OptNilBool{
		Value: v,
		Set:   true,
	}
}

// OptNilBool is generic valiant of bool.
type OptNilBool struct {
	Value bool
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBool was set.
func (o OptNilBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBool) SetTo(v bool) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilBool) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilCodeScanningAlertRuleSecuritySeverityLevel with value set to v.
func NewOptNilCodeScanningAlertRuleSecuritySeverityLevel(v CodeScanningAlertRuleSecuritySeverityLevel) OptNilCodeScanningAlertRuleSecuritySeverityLevel {
	return OptNilCodeScanningAlertRuleSecuritySeverityLevel{
		Value: v,
		Set:   true,
	}
}

// OptNilCodeScanningAlertRuleSecuritySeverityLevel is generic valiant of CodeScanningAlertRuleSecuritySeverityLevel.
type OptNilCodeScanningAlertRuleSecuritySeverityLevel struct {
	Value CodeScanningAlertRuleSecuritySeverityLevel
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCodeScanningAlertRuleSecuritySeverityLevel was set.
func (o OptNilCodeScanningAlertRuleSecuritySeverityLevel) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCodeScanningAlertRuleSecuritySeverityLevel) Reset() {
	var v CodeScanningAlertRuleSecuritySeverityLevel
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCodeScanningAlertRuleSecuritySeverityLevel) SetTo(v CodeScanningAlertRuleSecuritySeverityLevel) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCodeScanningAlertRuleSecuritySeverityLevel) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCodeScanningAlertRuleSecuritySeverityLevel) Get() (v CodeScanningAlertRuleSecuritySeverityLevel, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilCodeScanningAlertRuleSeverity with value set to v.
func NewOptNilCodeScanningAlertRuleSeverity(v CodeScanningAlertRuleSeverity) OptNilCodeScanningAlertRuleSeverity {
	return OptNilCodeScanningAlertRuleSeverity{
		Value: v,
		Set:   true,
	}
}

// OptNilCodeScanningAlertRuleSeverity is generic valiant of CodeScanningAlertRuleSeverity.
type OptNilCodeScanningAlertRuleSeverity struct {
	Value CodeScanningAlertRuleSeverity
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCodeScanningAlertRuleSeverity was set.
func (o OptNilCodeScanningAlertRuleSeverity) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCodeScanningAlertRuleSeverity) Reset() {
	var v CodeScanningAlertRuleSeverity
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCodeScanningAlertRuleSeverity) SetTo(v CodeScanningAlertRuleSeverity) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCodeScanningAlertRuleSeverity) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCodeScanningAlertRuleSeverity) Get() (v CodeScanningAlertRuleSeverity, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilFullRepositorySecurityAndAnalysis with value set to v.
func NewOptNilFullRepositorySecurityAndAnalysis(v FullRepositorySecurityAndAnalysis) OptNilFullRepositorySecurityAndAnalysis {
	return OptNilFullRepositorySecurityAndAnalysis{
		Value: v,
		Set:   true,
	}
}

// OptNilFullRepositorySecurityAndAnalysis is generic valiant of FullRepositorySecurityAndAnalysis.
type OptNilFullRepositorySecurityAndAnalysis struct {
	Value FullRepositorySecurityAndAnalysis
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFullRepositorySecurityAndAnalysis was set.
func (o OptNilFullRepositorySecurityAndAnalysis) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFullRepositorySecurityAndAnalysis) Reset() {
	var v FullRepositorySecurityAndAnalysis
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFullRepositorySecurityAndAnalysis) SetTo(v FullRepositorySecurityAndAnalysis) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilFullRepositorySecurityAndAnalysis) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFullRepositorySecurityAndAnalysis) Get() (v FullRepositorySecurityAndAnalysis, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilGistSimpleForkOf with value set to v.
func NewOptNilGistSimpleForkOf(v GistSimpleForkOf) OptNilGistSimpleForkOf {
	return OptNilGistSimpleForkOf{
		Value: v,
		Set:   true,
	}
}

// OptNilGistSimpleForkOf is generic valiant of GistSimpleForkOf.
type OptNilGistSimpleForkOf struct {
	Value GistSimpleForkOf
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGistSimpleForkOf was set.
func (o OptNilGistSimpleForkOf) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGistSimpleForkOf) Reset() {
	var v GistSimpleForkOf
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGistSimpleForkOf) SetTo(v GistSimpleForkOf) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilGistSimpleForkOf) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGistSimpleForkOf) Get() (v GistSimpleForkOf, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is generic valiant of int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilMarketplacePurchaseMarketplacePendingChange with value set to v.
func NewOptNilMarketplacePurchaseMarketplacePendingChange(v MarketplacePurchaseMarketplacePendingChange) OptNilMarketplacePurchaseMarketplacePendingChange {
	return OptNilMarketplacePurchaseMarketplacePendingChange{
		Value: v,
		Set:   true,
	}
}

// OptNilMarketplacePurchaseMarketplacePendingChange is generic valiant of MarketplacePurchaseMarketplacePendingChange.
type OptNilMarketplacePurchaseMarketplacePendingChange struct {
	Value MarketplacePurchaseMarketplacePendingChange
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilMarketplacePurchaseMarketplacePendingChange was set.
func (o OptNilMarketplacePurchaseMarketplacePendingChange) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilMarketplacePurchaseMarketplacePendingChange) Reset() {
	var v MarketplacePurchaseMarketplacePendingChange
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilMarketplacePurchaseMarketplacePendingChange) SetTo(v MarketplacePurchaseMarketplacePendingChange) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilMarketplacePurchaseMarketplacePendingChange) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilMarketplacePurchaseMarketplacePendingChange) Get() (v MarketplacePurchaseMarketplacePendingChange, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilMinimalRepositoryLicense with value set to v.
func NewOptNilMinimalRepositoryLicense(v MinimalRepositoryLicense) OptNilMinimalRepositoryLicense {
	return OptNilMinimalRepositoryLicense{
		Value: v,
		Set:   true,
	}
}

// OptNilMinimalRepositoryLicense is generic valiant of MinimalRepositoryLicense.
type OptNilMinimalRepositoryLicense struct {
	Value MinimalRepositoryLicense
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilMinimalRepositoryLicense was set.
func (o OptNilMinimalRepositoryLicense) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilMinimalRepositoryLicense) Reset() {
	var v MinimalRepositoryLicense
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilMinimalRepositoryLicense) SetTo(v MinimalRepositoryLicense) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilMinimalRepositoryLicense) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilMinimalRepositoryLicense) Get() (v MinimalRepositoryLicense, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilNullableRepositoryTemplateRepository with value set to v.
func NewOptNilNullableRepositoryTemplateRepository(v NullableRepositoryTemplateRepository) OptNilNullableRepositoryTemplateRepository {
	return OptNilNullableRepositoryTemplateRepository{
		Value: v,
		Set:   true,
	}
}

// OptNilNullableRepositoryTemplateRepository is generic valiant of NullableRepositoryTemplateRepository.
type OptNilNullableRepositoryTemplateRepository struct {
	Value NullableRepositoryTemplateRepository
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilNullableRepositoryTemplateRepository was set.
func (o OptNilNullableRepositoryTemplateRepository) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilNullableRepositoryTemplateRepository) Reset() {
	var v NullableRepositoryTemplateRepository
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilNullableRepositoryTemplateRepository) SetTo(v NullableRepositoryTemplateRepository) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilNullableRepositoryTemplateRepository) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilNullableRepositoryTemplateRepository) Get() (v NullableRepositoryTemplateRepository, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilPageProtectedDomainState with value set to v.
func NewOptNilPageProtectedDomainState(v PageProtectedDomainState) OptNilPageProtectedDomainState {
	return OptNilPageProtectedDomainState{
		Value: v,
		Set:   true,
	}
}

// OptNilPageProtectedDomainState is generic valiant of PageProtectedDomainState.
type OptNilPageProtectedDomainState struct {
	Value PageProtectedDomainState
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPageProtectedDomainState was set.
func (o OptNilPageProtectedDomainState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPageProtectedDomainState) Reset() {
	var v PageProtectedDomainState
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPageProtectedDomainState) SetTo(v PageProtectedDomainState) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPageProtectedDomainState) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPageProtectedDomainState) Get() (v PageProtectedDomainState, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilPagesHealthCheckAltDomain with value set to v.
func NewOptNilPagesHealthCheckAltDomain(v PagesHealthCheckAltDomain) OptNilPagesHealthCheckAltDomain {
	return OptNilPagesHealthCheckAltDomain{
		Value: v,
		Set:   true,
	}
}

// OptNilPagesHealthCheckAltDomain is generic valiant of PagesHealthCheckAltDomain.
type OptNilPagesHealthCheckAltDomain struct {
	Value PagesHealthCheckAltDomain
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPagesHealthCheckAltDomain was set.
func (o OptNilPagesHealthCheckAltDomain) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPagesHealthCheckAltDomain) Reset() {
	var v PagesHealthCheckAltDomain
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPagesHealthCheckAltDomain) SetTo(v PagesHealthCheckAltDomain) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPagesHealthCheckAltDomain) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPagesHealthCheckAltDomain) Get() (v PagesHealthCheckAltDomain, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilPullRequestReviewCommentStartSide with value set to v.
func NewOptNilPullRequestReviewCommentStartSide(v PullRequestReviewCommentStartSide) OptNilPullRequestReviewCommentStartSide {
	return OptNilPullRequestReviewCommentStartSide{
		Value: v,
		Set:   true,
	}
}

// OptNilPullRequestReviewCommentStartSide is generic valiant of PullRequestReviewCommentStartSide.
type OptNilPullRequestReviewCommentStartSide struct {
	Value PullRequestReviewCommentStartSide
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPullRequestReviewCommentStartSide was set.
func (o OptNilPullRequestReviewCommentStartSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPullRequestReviewCommentStartSide) Reset() {
	var v PullRequestReviewCommentStartSide
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPullRequestReviewCommentStartSide) SetTo(v PullRequestReviewCommentStartSide) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPullRequestReviewCommentStartSide) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPullRequestReviewCommentStartSide) Get() (v PullRequestReviewCommentStartSide, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilReposUpdateApplicationJSONRequestSecurityAndAnalysis with value set to v.
func NewOptNilReposUpdateApplicationJSONRequestSecurityAndAnalysis(v ReposUpdateApplicationJSONRequestSecurityAndAnalysis) OptNilReposUpdateApplicationJSONRequestSecurityAndAnalysis {
	return OptNilReposUpdateApplicationJSONRequestSecurityAndAnalysis{
		Value: v,
		Set:   true,
	}
}

// OptNilReposUpdateApplicationJSONRequestSecurityAndAnalysis is generic valiant of ReposUpdateApplicationJSONRequestSecurityAndAnalysis.
type OptNilReposUpdateApplicationJSONRequestSecurityAndAnalysis struct {
	Value ReposUpdateApplicationJSONRequestSecurityAndAnalysis
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilReposUpdateApplicationJSONRequestSecurityAndAnalysis was set.
func (o OptNilReposUpdateApplicationJSONRequestSecurityAndAnalysis) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilReposUpdateApplicationJSONRequestSecurityAndAnalysis) Reset() {
	var v ReposUpdateApplicationJSONRequestSecurityAndAnalysis
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilReposUpdateApplicationJSONRequestSecurityAndAnalysis) SetTo(v ReposUpdateApplicationJSONRequestSecurityAndAnalysis) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilReposUpdateApplicationJSONRequestSecurityAndAnalysis) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilReposUpdateApplicationJSONRequestSecurityAndAnalysis) Get() (v ReposUpdateApplicationJSONRequestSecurityAndAnalysis, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilRepositoryTemplateRepository with value set to v.
func NewOptNilRepositoryTemplateRepository(v RepositoryTemplateRepository) OptNilRepositoryTemplateRepository {
	return OptNilRepositoryTemplateRepository{
		Value: v,
		Set:   true,
	}
}

// OptNilRepositoryTemplateRepository is generic valiant of RepositoryTemplateRepository.
type OptNilRepositoryTemplateRepository struct {
	Value RepositoryTemplateRepository
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepositoryTemplateRepository was set.
func (o OptNilRepositoryTemplateRepository) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepositoryTemplateRepository) Reset() {
	var v RepositoryTemplateRepository
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepositoryTemplateRepository) SetTo(v RepositoryTemplateRepository) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepositoryTemplateRepository) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepositoryTemplateRepository) Get() (v RepositoryTemplateRepository, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilReviewCommentStartSide with value set to v.
func NewOptNilReviewCommentStartSide(v ReviewCommentStartSide) OptNilReviewCommentStartSide {
	return OptNilReviewCommentStartSide{
		Value: v,
		Set:   true,
	}
}

// OptNilReviewCommentStartSide is generic valiant of ReviewCommentStartSide.
type OptNilReviewCommentStartSide struct {
	Value ReviewCommentStartSide
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilReviewCommentStartSide was set.
func (o OptNilReviewCommentStartSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilReviewCommentStartSide) Reset() {
	var v ReviewCommentStartSide
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilReviewCommentStartSide) SetTo(v ReviewCommentStartSide) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilReviewCommentStartSide) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilReviewCommentStartSide) Get() (v ReviewCommentStartSide, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is generic valiant of string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilTime with value set to v.
func NewOptNilTime(v time.Time) OptNilTime {
	return OptNilTime{
		Value: v,
		Set:   true,
	}
}

// OptNilTime is generic valiant of time.Time.
type OptNilTime struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTime was set.
func (o OptNilTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTime) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTime) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNilURL with value set to v.
func NewOptNilURL(v url.URL) OptNilURL {
	return OptNilURL{
		Value: v,
		Set:   true,
	}
}

// OptNilURL is generic valiant of url.URL.
type OptNilURL struct {
	Value url.URL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilURL was set.
func (o OptNilURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilURL) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilURL) SetTo(v url.URL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilURL) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilURL) Get() (v url.URL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNullableIntegration with value set to v.
func NewOptNullableIntegration(v NullableIntegration) OptNullableIntegration {
	return OptNullableIntegration{
		Value: v,
		Set:   true,
	}
}

// OptNullableIntegration is generic valiant of NullableIntegration.
type OptNullableIntegration struct {
	Value NullableIntegration
	Set   bool
}

// IsSet returns true if OptNullableIntegration was set.
func (o OptNullableIntegration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableIntegration) Reset() {
	var v NullableIntegration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableIntegration) SetTo(v NullableIntegration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableIntegration) Get() (v NullableIntegration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNullableRepository with value set to v.
func NewOptNullableRepository(v NullableRepository) OptNullableRepository {
	return OptNullableRepository{
		Value: v,
		Set:   true,
	}
}

// OptNullableRepository is generic valiant of NullableRepository.
type OptNullableRepository struct {
	Value NullableRepository
	Set   bool
}

// IsSet returns true if OptNullableRepository was set.
func (o OptNullableRepository) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableRepository) Reset() {
	var v NullableRepository
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableRepository) SetTo(v NullableRepository) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableRepository) Get() (v NullableRepository, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNullableRepositoryPermissions with value set to v.
func NewOptNullableRepositoryPermissions(v NullableRepositoryPermissions) OptNullableRepositoryPermissions {
	return OptNullableRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptNullableRepositoryPermissions is generic valiant of NullableRepositoryPermissions.
type OptNullableRepositoryPermissions struct {
	Value NullableRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptNullableRepositoryPermissions was set.
func (o OptNullableRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableRepositoryPermissions) Reset() {
	var v NullableRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableRepositoryPermissions) SetTo(v NullableRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableRepositoryPermissions) Get() (v NullableRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNullableRepositoryTemplateRepositoryOwner with value set to v.
func NewOptNullableRepositoryTemplateRepositoryOwner(v NullableRepositoryTemplateRepositoryOwner) OptNullableRepositoryTemplateRepositoryOwner {
	return OptNullableRepositoryTemplateRepositoryOwner{
		Value: v,
		Set:   true,
	}
}

// OptNullableRepositoryTemplateRepositoryOwner is generic valiant of NullableRepositoryTemplateRepositoryOwner.
type OptNullableRepositoryTemplateRepositoryOwner struct {
	Value NullableRepositoryTemplateRepositoryOwner
	Set   bool
}

// IsSet returns true if OptNullableRepositoryTemplateRepositoryOwner was set.
func (o OptNullableRepositoryTemplateRepositoryOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableRepositoryTemplateRepositoryOwner) Reset() {
	var v NullableRepositoryTemplateRepositoryOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableRepositoryTemplateRepositoryOwner) SetTo(v NullableRepositoryTemplateRepositoryOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableRepositoryTemplateRepositoryOwner) Get() (v NullableRepositoryTemplateRepositoryOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNullableRepositoryTemplateRepositoryPermissions with value set to v.
func NewOptNullableRepositoryTemplateRepositoryPermissions(v NullableRepositoryTemplateRepositoryPermissions) OptNullableRepositoryTemplateRepositoryPermissions {
	return OptNullableRepositoryTemplateRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptNullableRepositoryTemplateRepositoryPermissions is generic valiant of NullableRepositoryTemplateRepositoryPermissions.
type OptNullableRepositoryTemplateRepositoryPermissions struct {
	Value NullableRepositoryTemplateRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptNullableRepositoryTemplateRepositoryPermissions was set.
func (o OptNullableRepositoryTemplateRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableRepositoryTemplateRepositoryPermissions) Reset() {
	var v NullableRepositoryTemplateRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableRepositoryTemplateRepositoryPermissions) SetTo(v NullableRepositoryTemplateRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableRepositoryTemplateRepositoryPermissions) Get() (v NullableRepositoryTemplateRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNullableScopedInstallation with value set to v.
func NewOptNullableScopedInstallation(v NullableScopedInstallation) OptNullableScopedInstallation {
	return OptNullableScopedInstallation{
		Value: v,
		Set:   true,
	}
}

// OptNullableScopedInstallation is generic valiant of NullableScopedInstallation.
type OptNullableScopedInstallation struct {
	Value NullableScopedInstallation
	Set   bool
}

// IsSet returns true if OptNullableScopedInstallation was set.
func (o OptNullableScopedInstallation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableScopedInstallation) Reset() {
	var v NullableScopedInstallation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableScopedInstallation) SetTo(v NullableScopedInstallation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableScopedInstallation) Get() (v NullableScopedInstallation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNullableSimpleUser with value set to v.
func NewOptNullableSimpleUser(v NullableSimpleUser) OptNullableSimpleUser {
	return OptNullableSimpleUser{
		Value: v,
		Set:   true,
	}
}

// OptNullableSimpleUser is generic valiant of NullableSimpleUser.
type OptNullableSimpleUser struct {
	Value NullableSimpleUser
	Set   bool
}

// IsSet returns true if OptNullableSimpleUser was set.
func (o OptNullableSimpleUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableSimpleUser) Reset() {
	var v NullableSimpleUser
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableSimpleUser) SetTo(v NullableSimpleUser) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableSimpleUser) Get() (v NullableSimpleUser, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptNullableTeamSimple with value set to v.
func NewOptNullableTeamSimple(v NullableTeamSimple) OptNullableTeamSimple {
	return OptNullableTeamSimple{
		Value: v,
		Set:   true,
	}
}

// OptNullableTeamSimple is generic valiant of NullableTeamSimple.
type OptNullableTeamSimple struct {
	Value NullableTeamSimple
	Set   bool
}

// IsSet returns true if OptNullableTeamSimple was set.
func (o OptNullableTeamSimple) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableTeamSimple) Reset() {
	var v NullableTeamSimple
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableTeamSimple) SetTo(v NullableTeamSimple) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableTeamSimple) Get() (v NullableTeamSimple, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptOrgMembershipPermissions with value set to v.
func NewOptOrgMembershipPermissions(v OrgMembershipPermissions) OptOrgMembershipPermissions {
	return OptOrgMembershipPermissions{
		Value: v,
		Set:   true,
	}
}

// OptOrgMembershipPermissions is generic valiant of OrgMembershipPermissions.
type OptOrgMembershipPermissions struct {
	Value OrgMembershipPermissions
	Set   bool
}

// IsSet returns true if OptOrgMembershipPermissions was set.
func (o OptOrgMembershipPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrgMembershipPermissions) Reset() {
	var v OrgMembershipPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgMembershipPermissions) SetTo(v OrgMembershipPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgMembershipPermissions) Get() (v OrgMembershipPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptOrganizationFullPlan with value set to v.
func NewOptOrganizationFullPlan(v OrganizationFullPlan) OptOrganizationFullPlan {
	return OptOrganizationFullPlan{
		Value: v,
		Set:   true,
	}
}

// OptOrganizationFullPlan is generic valiant of OrganizationFullPlan.
type OptOrganizationFullPlan struct {
	Value OrganizationFullPlan
	Set   bool
}

// IsSet returns true if OptOrganizationFullPlan was set.
func (o OptOrganizationFullPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrganizationFullPlan) Reset() {
	var v OrganizationFullPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrganizationFullPlan) SetTo(v OrganizationFullPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrganizationFullPlan) Get() (v OrganizationFullPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptOrgsCreateInvitationApplicationJSONRequestRole with value set to v.
func NewOptOrgsCreateInvitationApplicationJSONRequestRole(v OrgsCreateInvitationApplicationJSONRequestRole) OptOrgsCreateInvitationApplicationJSONRequestRole {
	return OptOrgsCreateInvitationApplicationJSONRequestRole{
		Value: v,
		Set:   true,
	}
}

// OptOrgsCreateInvitationApplicationJSONRequestRole is generic valiant of OrgsCreateInvitationApplicationJSONRequestRole.
type OptOrgsCreateInvitationApplicationJSONRequestRole struct {
	Value OrgsCreateInvitationApplicationJSONRequestRole
	Set   bool
}

// IsSet returns true if OptOrgsCreateInvitationApplicationJSONRequestRole was set.
func (o OptOrgsCreateInvitationApplicationJSONRequestRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrgsCreateInvitationApplicationJSONRequestRole) Reset() {
	var v OrgsCreateInvitationApplicationJSONRequestRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgsCreateInvitationApplicationJSONRequestRole) SetTo(v OrgsCreateInvitationApplicationJSONRequestRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgsCreateInvitationApplicationJSONRequestRole) Get() (v OrgsCreateInvitationApplicationJSONRequestRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptOrgsSetMembershipForUserApplicationJSONRequestRole with value set to v.
func NewOptOrgsSetMembershipForUserApplicationJSONRequestRole(v OrgsSetMembershipForUserApplicationJSONRequestRole) OptOrgsSetMembershipForUserApplicationJSONRequestRole {
	return OptOrgsSetMembershipForUserApplicationJSONRequestRole{
		Value: v,
		Set:   true,
	}
}

// OptOrgsSetMembershipForUserApplicationJSONRequestRole is generic valiant of OrgsSetMembershipForUserApplicationJSONRequestRole.
type OptOrgsSetMembershipForUserApplicationJSONRequestRole struct {
	Value OrgsSetMembershipForUserApplicationJSONRequestRole
	Set   bool
}

// IsSet returns true if OptOrgsSetMembershipForUserApplicationJSONRequestRole was set.
func (o OptOrgsSetMembershipForUserApplicationJSONRequestRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrgsSetMembershipForUserApplicationJSONRequestRole) Reset() {
	var v OrgsSetMembershipForUserApplicationJSONRequestRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgsSetMembershipForUserApplicationJSONRequestRole) SetTo(v OrgsSetMembershipForUserApplicationJSONRequestRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgsSetMembershipForUserApplicationJSONRequestRole) Get() (v OrgsSetMembershipForUserApplicationJSONRequestRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptOrgsUpdateApplicationJSONRequestDefaultRepositoryPermission with value set to v.
func NewOptOrgsUpdateApplicationJSONRequestDefaultRepositoryPermission(v OrgsUpdateApplicationJSONRequestDefaultRepositoryPermission) OptOrgsUpdateApplicationJSONRequestDefaultRepositoryPermission {
	return OptOrgsUpdateApplicationJSONRequestDefaultRepositoryPermission{
		Value: v,
		Set:   true,
	}
}

// OptOrgsUpdateApplicationJSONRequestDefaultRepositoryPermission is generic valiant of OrgsUpdateApplicationJSONRequestDefaultRepositoryPermission.
type OptOrgsUpdateApplicationJSONRequestDefaultRepositoryPermission struct {
	Value OrgsUpdateApplicationJSONRequestDefaultRepositoryPermission
	Set   bool
}

// IsSet returns true if OptOrgsUpdateApplicationJSONRequestDefaultRepositoryPermission was set.
func (o OptOrgsUpdateApplicationJSONRequestDefaultRepositoryPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrgsUpdateApplicationJSONRequestDefaultRepositoryPermission) Reset() {
	var v OrgsUpdateApplicationJSONRequestDefaultRepositoryPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgsUpdateApplicationJSONRequestDefaultRepositoryPermission) SetTo(v OrgsUpdateApplicationJSONRequestDefaultRepositoryPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgsUpdateApplicationJSONRequestDefaultRepositoryPermission) Get() (v OrgsUpdateApplicationJSONRequestDefaultRepositoryPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptOrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType with value set to v.
func NewOptOrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType(v OrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType) OptOrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType {
	return OptOrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType{
		Value: v,
		Set:   true,
	}
}

// OptOrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType is generic valiant of OrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType.
type OptOrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType struct {
	Value OrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType
	Set   bool
}

// IsSet returns true if OptOrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType was set.
func (o OptOrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptOrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType) Reset() {
	var v OrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType) SetTo(v OrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType) Get() (v OrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptPagesHTTPSCertificate with value set to v.
func NewOptPagesHTTPSCertificate(v PagesHTTPSCertificate) OptPagesHTTPSCertificate {
	return OptPagesHTTPSCertificate{
		Value: v,
		Set:   true,
	}
}

// OptPagesHTTPSCertificate is generic valiant of PagesHTTPSCertificate.
type OptPagesHTTPSCertificate struct {
	Value PagesHTTPSCertificate
	Set   bool
}

// IsSet returns true if OptPagesHTTPSCertificate was set.
func (o OptPagesHTTPSCertificate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPagesHTTPSCertificate) Reset() {
	var v PagesHTTPSCertificate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPagesHTTPSCertificate) SetTo(v PagesHTTPSCertificate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPagesHTTPSCertificate) Get() (v PagesHTTPSCertificate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptPagesHealthCheckDomain with value set to v.
func NewOptPagesHealthCheckDomain(v PagesHealthCheckDomain) OptPagesHealthCheckDomain {
	return OptPagesHealthCheckDomain{
		Value: v,
		Set:   true,
	}
}

// OptPagesHealthCheckDomain is generic valiant of PagesHealthCheckDomain.
type OptPagesHealthCheckDomain struct {
	Value PagesHealthCheckDomain
	Set   bool
}

// IsSet returns true if OptPagesHealthCheckDomain was set.
func (o OptPagesHealthCheckDomain) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPagesHealthCheckDomain) Reset() {
	var v PagesHealthCheckDomain
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPagesHealthCheckDomain) SetTo(v PagesHealthCheckDomain) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPagesHealthCheckDomain) Get() (v PagesHealthCheckDomain, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptPagesSourceHash with value set to v.
func NewOptPagesSourceHash(v PagesSourceHash) OptPagesSourceHash {
	return OptPagesSourceHash{
		Value: v,
		Set:   true,
	}
}

// OptPagesSourceHash is generic valiant of PagesSourceHash.
type OptPagesSourceHash struct {
	Value PagesSourceHash
	Set   bool
}

// IsSet returns true if OptPagesSourceHash was set.
func (o OptPagesSourceHash) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPagesSourceHash) Reset() {
	var v PagesSourceHash
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPagesSourceHash) SetTo(v PagesSourceHash) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPagesSourceHash) Get() (v PagesSourceHash, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptPrivateUserPlan with value set to v.
func NewOptPrivateUserPlan(v PrivateUserPlan) OptPrivateUserPlan {
	return OptPrivateUserPlan{
		Value: v,
		Set:   true,
	}
}

// OptPrivateUserPlan is generic valiant of PrivateUserPlan.
type OptPrivateUserPlan struct {
	Value PrivateUserPlan
	Set   bool
}

// IsSet returns true if OptPrivateUserPlan was set.
func (o OptPrivateUserPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPrivateUserPlan) Reset() {
	var v PrivateUserPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPrivateUserPlan) SetTo(v PrivateUserPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPrivateUserPlan) Get() (v PrivateUserPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptProjectOrganizationPermission with value set to v.
func NewOptProjectOrganizationPermission(v ProjectOrganizationPermission) OptProjectOrganizationPermission {
	return OptProjectOrganizationPermission{
		Value: v,
		Set:   true,
	}
}

// OptProjectOrganizationPermission is generic valiant of ProjectOrganizationPermission.
type OptProjectOrganizationPermission struct {
	Value ProjectOrganizationPermission
	Set   bool
}

// IsSet returns true if OptProjectOrganizationPermission was set.
func (o OptProjectOrganizationPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProjectOrganizationPermission) Reset() {
	var v ProjectOrganizationPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProjectOrganizationPermission) SetTo(v ProjectOrganizationPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProjectOrganizationPermission) Get() (v ProjectOrganizationPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptProjectsAddCollaboratorApplicationJSONRequestPermission with value set to v.
func NewOptProjectsAddCollaboratorApplicationJSONRequestPermission(v ProjectsAddCollaboratorApplicationJSONRequestPermission) OptProjectsAddCollaboratorApplicationJSONRequestPermission {
	return OptProjectsAddCollaboratorApplicationJSONRequestPermission{
		Value: v,
		Set:   true,
	}
}

// OptProjectsAddCollaboratorApplicationJSONRequestPermission is generic valiant of ProjectsAddCollaboratorApplicationJSONRequestPermission.
type OptProjectsAddCollaboratorApplicationJSONRequestPermission struct {
	Value ProjectsAddCollaboratorApplicationJSONRequestPermission
	Set   bool
}

// IsSet returns true if OptProjectsAddCollaboratorApplicationJSONRequestPermission was set.
func (o OptProjectsAddCollaboratorApplicationJSONRequestPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProjectsAddCollaboratorApplicationJSONRequestPermission) Reset() {
	var v ProjectsAddCollaboratorApplicationJSONRequestPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProjectsAddCollaboratorApplicationJSONRequestPermission) SetTo(v ProjectsAddCollaboratorApplicationJSONRequestPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProjectsAddCollaboratorApplicationJSONRequestPermission) Get() (v ProjectsAddCollaboratorApplicationJSONRequestPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptProjectsUpdateApplicationJSONRequestOrganizationPermission with value set to v.
func NewOptProjectsUpdateApplicationJSONRequestOrganizationPermission(v ProjectsUpdateApplicationJSONRequestOrganizationPermission) OptProjectsUpdateApplicationJSONRequestOrganizationPermission {
	return OptProjectsUpdateApplicationJSONRequestOrganizationPermission{
		Value: v,
		Set:   true,
	}
}

// OptProjectsUpdateApplicationJSONRequestOrganizationPermission is generic valiant of ProjectsUpdateApplicationJSONRequestOrganizationPermission.
type OptProjectsUpdateApplicationJSONRequestOrganizationPermission struct {
	Value ProjectsUpdateApplicationJSONRequestOrganizationPermission
	Set   bool
}

// IsSet returns true if OptProjectsUpdateApplicationJSONRequestOrganizationPermission was set.
func (o OptProjectsUpdateApplicationJSONRequestOrganizationPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProjectsUpdateApplicationJSONRequestOrganizationPermission) Reset() {
	var v ProjectsUpdateApplicationJSONRequestOrganizationPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProjectsUpdateApplicationJSONRequestOrganizationPermission) SetTo(v ProjectsUpdateApplicationJSONRequestOrganizationPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProjectsUpdateApplicationJSONRequestOrganizationPermission) Get() (v ProjectsUpdateApplicationJSONRequestOrganizationPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptProtectedBranchAdminEnforced with value set to v.
func NewOptProtectedBranchAdminEnforced(v ProtectedBranchAdminEnforced) OptProtectedBranchAdminEnforced {
	return OptProtectedBranchAdminEnforced{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchAdminEnforced is generic valiant of ProtectedBranchAdminEnforced.
type OptProtectedBranchAdminEnforced struct {
	Value ProtectedBranchAdminEnforced
	Set   bool
}

// IsSet returns true if OptProtectedBranchAdminEnforced was set.
func (o OptProtectedBranchAdminEnforced) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchAdminEnforced) Reset() {
	var v ProtectedBranchAdminEnforced
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchAdminEnforced) SetTo(v ProtectedBranchAdminEnforced) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchAdminEnforced) Get() (v ProtectedBranchAdminEnforced, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptProtectedBranchAllowDeletions with value set to v.
func NewOptProtectedBranchAllowDeletions(v ProtectedBranchAllowDeletions) OptProtectedBranchAllowDeletions {
	return OptProtectedBranchAllowDeletions{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchAllowDeletions is generic valiant of ProtectedBranchAllowDeletions.
type OptProtectedBranchAllowDeletions struct {
	Value ProtectedBranchAllowDeletions
	Set   bool
}

// IsSet returns true if OptProtectedBranchAllowDeletions was set.
func (o OptProtectedBranchAllowDeletions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchAllowDeletions) Reset() {
	var v ProtectedBranchAllowDeletions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchAllowDeletions) SetTo(v ProtectedBranchAllowDeletions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchAllowDeletions) Get() (v ProtectedBranchAllowDeletions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptProtectedBranchAllowForcePushes with value set to v.
func NewOptProtectedBranchAllowForcePushes(v ProtectedBranchAllowForcePushes) OptProtectedBranchAllowForcePushes {
	return OptProtectedBranchAllowForcePushes{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchAllowForcePushes is generic valiant of ProtectedBranchAllowForcePushes.
type OptProtectedBranchAllowForcePushes struct {
	Value ProtectedBranchAllowForcePushes
	Set   bool
}

// IsSet returns true if OptProtectedBranchAllowForcePushes was set.
func (o OptProtectedBranchAllowForcePushes) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchAllowForcePushes) Reset() {
	var v ProtectedBranchAllowForcePushes
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchAllowForcePushes) SetTo(v ProtectedBranchAllowForcePushes) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchAllowForcePushes) Get() (v ProtectedBranchAllowForcePushes, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptProtectedBranchEnforceAdmins with value set to v.
func NewOptProtectedBranchEnforceAdmins(v ProtectedBranchEnforceAdmins) OptProtectedBranchEnforceAdmins {
	return OptProtectedBranchEnforceAdmins{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchEnforceAdmins is generic valiant of ProtectedBranchEnforceAdmins.
type OptProtectedBranchEnforceAdmins struct {
	Value ProtectedBranchEnforceAdmins
	Set   bool
}

// IsSet returns true if OptProtectedBranchEnforceAdmins was set.
func (o OptProtectedBranchEnforceAdmins) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchEnforceAdmins) Reset() {
	var v ProtectedBranchEnforceAdmins
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchEnforceAdmins) SetTo(v ProtectedBranchEnforceAdmins) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchEnforceAdmins) Get() (v ProtectedBranchEnforceAdmins, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptProtectedBranchPullRequestReview with value set to v.
func NewOptProtectedBranchPullRequestReview(v ProtectedBranchPullRequestReview) OptProtectedBranchPullRequestReview {
	return OptProtectedBranchPullRequestReview{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchPullRequestReview is generic valiant of ProtectedBranchPullRequestReview.
type OptProtectedBranchPullRequestReview struct {
	Value ProtectedBranchPullRequestReview
	Set   bool
}

// IsSet returns true if OptProtectedBranchPullRequestReview was set.
func (o OptProtectedBranchPullRequestReview) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchPullRequestReview) Reset() {
	var v ProtectedBranchPullRequestReview
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchPullRequestReview) SetTo(v ProtectedBranchPullRequestReview) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchPullRequestReview) Get() (v ProtectedBranchPullRequestReview, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptProtectedBranchPullRequestReviewDismissalRestrictions with value set to v.
func NewOptProtectedBranchPullRequestReviewDismissalRestrictions(v ProtectedBranchPullRequestReviewDismissalRestrictions) OptProtectedBranchPullRequestReviewDismissalRestrictions {
	return OptProtectedBranchPullRequestReviewDismissalRestrictions{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchPullRequestReviewDismissalRestrictions is generic valiant of ProtectedBranchPullRequestReviewDismissalRestrictions.
type OptProtectedBranchPullRequestReviewDismissalRestrictions struct {
	Value ProtectedBranchPullRequestReviewDismissalRestrictions
	Set   bool
}

// IsSet returns true if OptProtectedBranchPullRequestReviewDismissalRestrictions was set.
func (o OptProtectedBranchPullRequestReviewDismissalRestrictions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchPullRequestReviewDismissalRestrictions) Reset() {
	var v ProtectedBranchPullRequestReviewDismissalRestrictions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchPullRequestReviewDismissalRestrictions) SetTo(v ProtectedBranchPullRequestReviewDismissalRestrictions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchPullRequestReviewDismissalRestrictions) Get() (v ProtectedBranchPullRequestReviewDismissalRestrictions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptProtectedBranchRequiredConversationResolution with value set to v.
func NewOptProtectedBranchRequiredConversationResolution(v ProtectedBranchRequiredConversationResolution) OptProtectedBranchRequiredConversationResolution {
	return OptProtectedBranchRequiredConversationResolution{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredConversationResolution is generic valiant of ProtectedBranchRequiredConversationResolution.
type OptProtectedBranchRequiredConversationResolution struct {
	Value ProtectedBranchRequiredConversationResolution
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredConversationResolution was set.
func (o OptProtectedBranchRequiredConversationResolution) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredConversationResolution) Reset() {
	var v ProtectedBranchRequiredConversationResolution
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredConversationResolution) SetTo(v ProtectedBranchRequiredConversationResolution) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredConversationResolution) Get() (v ProtectedBranchRequiredConversationResolution, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptProtectedBranchRequiredLinearHistory with value set to v.
func NewOptProtectedBranchRequiredLinearHistory(v ProtectedBranchRequiredLinearHistory) OptProtectedBranchRequiredLinearHistory {
	return OptProtectedBranchRequiredLinearHistory{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredLinearHistory is generic valiant of ProtectedBranchRequiredLinearHistory.
type OptProtectedBranchRequiredLinearHistory struct {
	Value ProtectedBranchRequiredLinearHistory
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredLinearHistory was set.
func (o OptProtectedBranchRequiredLinearHistory) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredLinearHistory) Reset() {
	var v ProtectedBranchRequiredLinearHistory
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredLinearHistory) SetTo(v ProtectedBranchRequiredLinearHistory) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredLinearHistory) Get() (v ProtectedBranchRequiredLinearHistory, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptProtectedBranchRequiredPullRequestReviews with value set to v.
func NewOptProtectedBranchRequiredPullRequestReviews(v ProtectedBranchRequiredPullRequestReviews) OptProtectedBranchRequiredPullRequestReviews {
	return OptProtectedBranchRequiredPullRequestReviews{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredPullRequestReviews is generic valiant of ProtectedBranchRequiredPullRequestReviews.
type OptProtectedBranchRequiredPullRequestReviews struct {
	Value ProtectedBranchRequiredPullRequestReviews
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredPullRequestReviews was set.
func (o OptProtectedBranchRequiredPullRequestReviews) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredPullRequestReviews) Reset() {
	var v ProtectedBranchRequiredPullRequestReviews
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredPullRequestReviews) SetTo(v ProtectedBranchRequiredPullRequestReviews) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredPullRequestReviews) Get() (v ProtectedBranchRequiredPullRequestReviews, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions with value set to v.
func NewOptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions(v ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions {
	return OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions is generic valiant of ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions.
type OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions struct {
	Value ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions was set.
func (o OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) Reset() {
	var v ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) SetTo(v ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) Get() (v ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptProtectedBranchRequiredSignatures with value set to v.
func NewOptProtectedBranchRequiredSignatures(v ProtectedBranchRequiredSignatures) OptProtectedBranchRequiredSignatures {
	return OptProtectedBranchRequiredSignatures{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredSignatures is generic valiant of ProtectedBranchRequiredSignatures.
type OptProtectedBranchRequiredSignatures struct {
	Value ProtectedBranchRequiredSignatures
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredSignatures was set.
func (o OptProtectedBranchRequiredSignatures) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredSignatures) Reset() {
	var v ProtectedBranchRequiredSignatures
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredSignatures) SetTo(v ProtectedBranchRequiredSignatures) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredSignatures) Get() (v ProtectedBranchRequiredSignatures, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptPublicUser with value set to v.
func NewOptPublicUser(v PublicUser) OptPublicUser {
	return OptPublicUser{
		Value: v,
		Set:   true,
	}
}

// OptPublicUser is generic valiant of PublicUser.
type OptPublicUser struct {
	Value PublicUser
	Set   bool
}

// IsSet returns true if OptPublicUser was set.
func (o OptPublicUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPublicUser) Reset() {
	var v PublicUser
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPublicUser) SetTo(v PublicUser) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPublicUser) Get() (v PublicUser, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptPublicUserPlan with value set to v.
func NewOptPublicUserPlan(v PublicUserPlan) OptPublicUserPlan {
	return OptPublicUserPlan{
		Value: v,
		Set:   true,
	}
}

// OptPublicUserPlan is generic valiant of PublicUserPlan.
type OptPublicUserPlan struct {
	Value PublicUserPlan
	Set   bool
}

// IsSet returns true if OptPublicUserPlan was set.
func (o OptPublicUserPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPublicUserPlan) Reset() {
	var v PublicUserPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPublicUserPlan) SetTo(v PublicUserPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPublicUserPlan) Get() (v PublicUserPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptPullRequestBaseRepoPermissions with value set to v.
func NewOptPullRequestBaseRepoPermissions(v PullRequestBaseRepoPermissions) OptPullRequestBaseRepoPermissions {
	return OptPullRequestBaseRepoPermissions{
		Value: v,
		Set:   true,
	}
}

// OptPullRequestBaseRepoPermissions is generic valiant of PullRequestBaseRepoPermissions.
type OptPullRequestBaseRepoPermissions struct {
	Value PullRequestBaseRepoPermissions
	Set   bool
}

// IsSet returns true if OptPullRequestBaseRepoPermissions was set.
func (o OptPullRequestBaseRepoPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullRequestBaseRepoPermissions) Reset() {
	var v PullRequestBaseRepoPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullRequestBaseRepoPermissions) SetTo(v PullRequestBaseRepoPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullRequestBaseRepoPermissions) Get() (v PullRequestBaseRepoPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptPullRequestHeadRepoPermissions with value set to v.
func NewOptPullRequestHeadRepoPermissions(v PullRequestHeadRepoPermissions) OptPullRequestHeadRepoPermissions {
	return OptPullRequestHeadRepoPermissions{
		Value: v,
		Set:   true,
	}
}

// OptPullRequestHeadRepoPermissions is generic valiant of PullRequestHeadRepoPermissions.
type OptPullRequestHeadRepoPermissions struct {
	Value PullRequestHeadRepoPermissions
	Set   bool
}

// IsSet returns true if OptPullRequestHeadRepoPermissions was set.
func (o OptPullRequestHeadRepoPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullRequestHeadRepoPermissions) Reset() {
	var v PullRequestHeadRepoPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullRequestHeadRepoPermissions) SetTo(v PullRequestHeadRepoPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullRequestHeadRepoPermissions) Get() (v PullRequestHeadRepoPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptPullRequestReviewCommentSide with value set to v.
func NewOptPullRequestReviewCommentSide(v PullRequestReviewCommentSide) OptPullRequestReviewCommentSide {
	return OptPullRequestReviewCommentSide{
		Value: v,
		Set:   true,
	}
}

// OptPullRequestReviewCommentSide is generic valiant of PullRequestReviewCommentSide.
type OptPullRequestReviewCommentSide struct {
	Value PullRequestReviewCommentSide
	Set   bool
}

// IsSet returns true if OptPullRequestReviewCommentSide was set.
func (o OptPullRequestReviewCommentSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullRequestReviewCommentSide) Reset() {
	var v PullRequestReviewCommentSide
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullRequestReviewCommentSide) SetTo(v PullRequestReviewCommentSide) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullRequestReviewCommentSide) Get() (v PullRequestReviewCommentSide, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptPullsCreateReviewApplicationJSONRequestEvent with value set to v.
func NewOptPullsCreateReviewApplicationJSONRequestEvent(v PullsCreateReviewApplicationJSONRequestEvent) OptPullsCreateReviewApplicationJSONRequestEvent {
	return OptPullsCreateReviewApplicationJSONRequestEvent{
		Value: v,
		Set:   true,
	}
}

// OptPullsCreateReviewApplicationJSONRequestEvent is generic valiant of PullsCreateReviewApplicationJSONRequestEvent.
type OptPullsCreateReviewApplicationJSONRequestEvent struct {
	Value PullsCreateReviewApplicationJSONRequestEvent
	Set   bool
}

// IsSet returns true if OptPullsCreateReviewApplicationJSONRequestEvent was set.
func (o OptPullsCreateReviewApplicationJSONRequestEvent) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsCreateReviewApplicationJSONRequestEvent) Reset() {
	var v PullsCreateReviewApplicationJSONRequestEvent
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsCreateReviewApplicationJSONRequestEvent) SetTo(v PullsCreateReviewApplicationJSONRequestEvent) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsCreateReviewApplicationJSONRequestEvent) Get() (v PullsCreateReviewApplicationJSONRequestEvent, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptPullsCreateReviewCommentApplicationJSONRequestSide with value set to v.
func NewOptPullsCreateReviewCommentApplicationJSONRequestSide(v PullsCreateReviewCommentApplicationJSONRequestSide) OptPullsCreateReviewCommentApplicationJSONRequestSide {
	return OptPullsCreateReviewCommentApplicationJSONRequestSide{
		Value: v,
		Set:   true,
	}
}

// OptPullsCreateReviewCommentApplicationJSONRequestSide is generic valiant of PullsCreateReviewCommentApplicationJSONRequestSide.
type OptPullsCreateReviewCommentApplicationJSONRequestSide struct {
	Value PullsCreateReviewCommentApplicationJSONRequestSide
	Set   bool
}

// IsSet returns true if OptPullsCreateReviewCommentApplicationJSONRequestSide was set.
func (o OptPullsCreateReviewCommentApplicationJSONRequestSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsCreateReviewCommentApplicationJSONRequestSide) Reset() {
	var v PullsCreateReviewCommentApplicationJSONRequestSide
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsCreateReviewCommentApplicationJSONRequestSide) SetTo(v PullsCreateReviewCommentApplicationJSONRequestSide) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsCreateReviewCommentApplicationJSONRequestSide) Get() (v PullsCreateReviewCommentApplicationJSONRequestSide, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptPullsCreateReviewCommentApplicationJSONRequestStartSide with value set to v.
func NewOptPullsCreateReviewCommentApplicationJSONRequestStartSide(v PullsCreateReviewCommentApplicationJSONRequestStartSide) OptPullsCreateReviewCommentApplicationJSONRequestStartSide {
	return OptPullsCreateReviewCommentApplicationJSONRequestStartSide{
		Value: v,
		Set:   true,
	}
}

// OptPullsCreateReviewCommentApplicationJSONRequestStartSide is generic valiant of PullsCreateReviewCommentApplicationJSONRequestStartSide.
type OptPullsCreateReviewCommentApplicationJSONRequestStartSide struct {
	Value PullsCreateReviewCommentApplicationJSONRequestStartSide
	Set   bool
}

// IsSet returns true if OptPullsCreateReviewCommentApplicationJSONRequestStartSide was set.
func (o OptPullsCreateReviewCommentApplicationJSONRequestStartSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsCreateReviewCommentApplicationJSONRequestStartSide) Reset() {
	var v PullsCreateReviewCommentApplicationJSONRequestStartSide
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsCreateReviewCommentApplicationJSONRequestStartSide) SetTo(v PullsCreateReviewCommentApplicationJSONRequestStartSide) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsCreateReviewCommentApplicationJSONRequestStartSide) Get() (v PullsCreateReviewCommentApplicationJSONRequestStartSide, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptPullsMergeApplicationJSONRequestMergeMethod with value set to v.
func NewOptPullsMergeApplicationJSONRequestMergeMethod(v PullsMergeApplicationJSONRequestMergeMethod) OptPullsMergeApplicationJSONRequestMergeMethod {
	return OptPullsMergeApplicationJSONRequestMergeMethod{
		Value: v,
		Set:   true,
	}
}

// OptPullsMergeApplicationJSONRequestMergeMethod is generic valiant of PullsMergeApplicationJSONRequestMergeMethod.
type OptPullsMergeApplicationJSONRequestMergeMethod struct {
	Value PullsMergeApplicationJSONRequestMergeMethod
	Set   bool
}

// IsSet returns true if OptPullsMergeApplicationJSONRequestMergeMethod was set.
func (o OptPullsMergeApplicationJSONRequestMergeMethod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsMergeApplicationJSONRequestMergeMethod) Reset() {
	var v PullsMergeApplicationJSONRequestMergeMethod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsMergeApplicationJSONRequestMergeMethod) SetTo(v PullsMergeApplicationJSONRequestMergeMethod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsMergeApplicationJSONRequestMergeMethod) Get() (v PullsMergeApplicationJSONRequestMergeMethod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptPullsUpdateApplicationJSONRequestState with value set to v.
func NewOptPullsUpdateApplicationJSONRequestState(v PullsUpdateApplicationJSONRequestState) OptPullsUpdateApplicationJSONRequestState {
	return OptPullsUpdateApplicationJSONRequestState{
		Value: v,
		Set:   true,
	}
}

// OptPullsUpdateApplicationJSONRequestState is generic valiant of PullsUpdateApplicationJSONRequestState.
type OptPullsUpdateApplicationJSONRequestState struct {
	Value PullsUpdateApplicationJSONRequestState
	Set   bool
}

// IsSet returns true if OptPullsUpdateApplicationJSONRequestState was set.
func (o OptPullsUpdateApplicationJSONRequestState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsUpdateApplicationJSONRequestState) Reset() {
	var v PullsUpdateApplicationJSONRequestState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsUpdateApplicationJSONRequestState) SetTo(v PullsUpdateApplicationJSONRequestState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsUpdateApplicationJSONRequestState) Get() (v PullsUpdateApplicationJSONRequestState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptRateLimit with value set to v.
func NewOptRateLimit(v RateLimit) OptRateLimit {
	return OptRateLimit{
		Value: v,
		Set:   true,
	}
}

// OptRateLimit is generic valiant of RateLimit.
type OptRateLimit struct {
	Value RateLimit
	Set   bool
}

// IsSet returns true if OptRateLimit was set.
func (o OptRateLimit) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRateLimit) Reset() {
	var v RateLimit
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRateLimit) SetTo(v RateLimit) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRateLimit) Get() (v RateLimit, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReactionRollup with value set to v.
func NewOptReactionRollup(v ReactionRollup) OptReactionRollup {
	return OptReactionRollup{
		Value: v,
		Set:   true,
	}
}

// OptReactionRollup is generic valiant of ReactionRollup.
type OptReactionRollup struct {
	Value ReactionRollup
	Set   bool
}

// IsSet returns true if OptReactionRollup was set.
func (o OptReactionRollup) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReactionRollup) Reset() {
	var v ReactionRollup
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReactionRollup) SetTo(v ReactionRollup) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReactionRollup) Get() (v ReactionRollup, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReposAddCollaboratorApplicationJSONRequestPermission with value set to v.
func NewOptReposAddCollaboratorApplicationJSONRequestPermission(v ReposAddCollaboratorApplicationJSONRequestPermission) OptReposAddCollaboratorApplicationJSONRequestPermission {
	return OptReposAddCollaboratorApplicationJSONRequestPermission{
		Value: v,
		Set:   true,
	}
}

// OptReposAddCollaboratorApplicationJSONRequestPermission is generic valiant of ReposAddCollaboratorApplicationJSONRequestPermission.
type OptReposAddCollaboratorApplicationJSONRequestPermission struct {
	Value ReposAddCollaboratorApplicationJSONRequestPermission
	Set   bool
}

// IsSet returns true if OptReposAddCollaboratorApplicationJSONRequestPermission was set.
func (o OptReposAddCollaboratorApplicationJSONRequestPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposAddCollaboratorApplicationJSONRequestPermission) Reset() {
	var v ReposAddCollaboratorApplicationJSONRequestPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposAddCollaboratorApplicationJSONRequestPermission) SetTo(v ReposAddCollaboratorApplicationJSONRequestPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposAddCollaboratorApplicationJSONRequestPermission) Get() (v ReposAddCollaboratorApplicationJSONRequestPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReposCreateDeploymentStatusApplicationJSONRequestEnvironment with value set to v.
func NewOptReposCreateDeploymentStatusApplicationJSONRequestEnvironment(v ReposCreateDeploymentStatusApplicationJSONRequestEnvironment) OptReposCreateDeploymentStatusApplicationJSONRequestEnvironment {
	return OptReposCreateDeploymentStatusApplicationJSONRequestEnvironment{
		Value: v,
		Set:   true,
	}
}

// OptReposCreateDeploymentStatusApplicationJSONRequestEnvironment is generic valiant of ReposCreateDeploymentStatusApplicationJSONRequestEnvironment.
type OptReposCreateDeploymentStatusApplicationJSONRequestEnvironment struct {
	Value ReposCreateDeploymentStatusApplicationJSONRequestEnvironment
	Set   bool
}

// IsSet returns true if OptReposCreateDeploymentStatusApplicationJSONRequestEnvironment was set.
func (o OptReposCreateDeploymentStatusApplicationJSONRequestEnvironment) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreateDeploymentStatusApplicationJSONRequestEnvironment) Reset() {
	var v ReposCreateDeploymentStatusApplicationJSONRequestEnvironment
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreateDeploymentStatusApplicationJSONRequestEnvironment) SetTo(v ReposCreateDeploymentStatusApplicationJSONRequestEnvironment) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreateDeploymentStatusApplicationJSONRequestEnvironment) Get() (v ReposCreateDeploymentStatusApplicationJSONRequestEnvironment, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReposCreateInOrgApplicationJSONRequestVisibility with value set to v.
func NewOptReposCreateInOrgApplicationJSONRequestVisibility(v ReposCreateInOrgApplicationJSONRequestVisibility) OptReposCreateInOrgApplicationJSONRequestVisibility {
	return OptReposCreateInOrgApplicationJSONRequestVisibility{
		Value: v,
		Set:   true,
	}
}

// OptReposCreateInOrgApplicationJSONRequestVisibility is generic valiant of ReposCreateInOrgApplicationJSONRequestVisibility.
type OptReposCreateInOrgApplicationJSONRequestVisibility struct {
	Value ReposCreateInOrgApplicationJSONRequestVisibility
	Set   bool
}

// IsSet returns true if OptReposCreateInOrgApplicationJSONRequestVisibility was set.
func (o OptReposCreateInOrgApplicationJSONRequestVisibility) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreateInOrgApplicationJSONRequestVisibility) Reset() {
	var v ReposCreateInOrgApplicationJSONRequestVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreateInOrgApplicationJSONRequestVisibility) SetTo(v ReposCreateInOrgApplicationJSONRequestVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreateInOrgApplicationJSONRequestVisibility) Get() (v ReposCreateInOrgApplicationJSONRequestVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor with value set to v.
func NewOptReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor(v ReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor) OptReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor {
	return OptReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor{
		Value: v,
		Set:   true,
	}
}

// OptReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor is generic valiant of ReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor.
type OptReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor struct {
	Value ReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor
	Set   bool
}

// IsSet returns true if OptReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor was set.
func (o OptReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor) Reset() {
	var v ReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor) SetTo(v ReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor) Get() (v ReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter with value set to v.
func NewOptReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter(v ReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter) OptReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter {
	return OptReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter{
		Value: v,
		Set:   true,
	}
}

// OptReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter is generic valiant of ReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter.
type OptReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter struct {
	Value ReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter
	Set   bool
}

// IsSet returns true if OptReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter was set.
func (o OptReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter) Reset() {
	var v ReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter) SetTo(v ReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter) Get() (v ReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReposCreatePagesSiteApplicationJSONRequestSourcePath with value set to v.
func NewOptReposCreatePagesSiteApplicationJSONRequestSourcePath(v ReposCreatePagesSiteApplicationJSONRequestSourcePath) OptReposCreatePagesSiteApplicationJSONRequestSourcePath {
	return OptReposCreatePagesSiteApplicationJSONRequestSourcePath{
		Value: v,
		Set:   true,
	}
}

// OptReposCreatePagesSiteApplicationJSONRequestSourcePath is generic valiant of ReposCreatePagesSiteApplicationJSONRequestSourcePath.
type OptReposCreatePagesSiteApplicationJSONRequestSourcePath struct {
	Value ReposCreatePagesSiteApplicationJSONRequestSourcePath
	Set   bool
}

// IsSet returns true if OptReposCreatePagesSiteApplicationJSONRequestSourcePath was set.
func (o OptReposCreatePagesSiteApplicationJSONRequestSourcePath) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreatePagesSiteApplicationJSONRequestSourcePath) Reset() {
	var v ReposCreatePagesSiteApplicationJSONRequestSourcePath
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreatePagesSiteApplicationJSONRequestSourcePath) SetTo(v ReposCreatePagesSiteApplicationJSONRequestSourcePath) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreatePagesSiteApplicationJSONRequestSourcePath) Get() (v ReposCreatePagesSiteApplicationJSONRequestSourcePath, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReposDeleteFileApplicationJSONRequestAuthor with value set to v.
func NewOptReposDeleteFileApplicationJSONRequestAuthor(v ReposDeleteFileApplicationJSONRequestAuthor) OptReposDeleteFileApplicationJSONRequestAuthor {
	return OptReposDeleteFileApplicationJSONRequestAuthor{
		Value: v,
		Set:   true,
	}
}

// OptReposDeleteFileApplicationJSONRequestAuthor is generic valiant of ReposDeleteFileApplicationJSONRequestAuthor.
type OptReposDeleteFileApplicationJSONRequestAuthor struct {
	Value ReposDeleteFileApplicationJSONRequestAuthor
	Set   bool
}

// IsSet returns true if OptReposDeleteFileApplicationJSONRequestAuthor was set.
func (o OptReposDeleteFileApplicationJSONRequestAuthor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposDeleteFileApplicationJSONRequestAuthor) Reset() {
	var v ReposDeleteFileApplicationJSONRequestAuthor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposDeleteFileApplicationJSONRequestAuthor) SetTo(v ReposDeleteFileApplicationJSONRequestAuthor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposDeleteFileApplicationJSONRequestAuthor) Get() (v ReposDeleteFileApplicationJSONRequestAuthor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReposDeleteFileApplicationJSONRequestCommitter with value set to v.
func NewOptReposDeleteFileApplicationJSONRequestCommitter(v ReposDeleteFileApplicationJSONRequestCommitter) OptReposDeleteFileApplicationJSONRequestCommitter {
	return OptReposDeleteFileApplicationJSONRequestCommitter{
		Value: v,
		Set:   true,
	}
}

// OptReposDeleteFileApplicationJSONRequestCommitter is generic valiant of ReposDeleteFileApplicationJSONRequestCommitter.
type OptReposDeleteFileApplicationJSONRequestCommitter struct {
	Value ReposDeleteFileApplicationJSONRequestCommitter
	Set   bool
}

// IsSet returns true if OptReposDeleteFileApplicationJSONRequestCommitter was set.
func (o OptReposDeleteFileApplicationJSONRequestCommitter) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposDeleteFileApplicationJSONRequestCommitter) Reset() {
	var v ReposDeleteFileApplicationJSONRequestCommitter
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposDeleteFileApplicationJSONRequestCommitter) SetTo(v ReposDeleteFileApplicationJSONRequestCommitter) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposDeleteFileApplicationJSONRequestCommitter) Get() (v ReposDeleteFileApplicationJSONRequestCommitter, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity with value set to v.
func NewOptReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity(v ReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity) OptReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity {
	return OptReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity is generic valiant of ReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity.
type OptReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity struct {
	Value ReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity
	Set   bool
}

// IsSet returns true if OptReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity was set.
func (o OptReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity) Reset() {
	var v ReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity) SetTo(v ReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity) Get() (v ReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning with value set to v.
func NewOptReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning(v ReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning) OptReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning {
	return OptReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning is generic valiant of ReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning.
type OptReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning struct {
	Value ReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning
	Set   bool
}

// IsSet returns true if OptReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning was set.
func (o OptReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning) Reset() {
	var v ReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning) SetTo(v ReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning) Get() (v ReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReposUpdateApplicationJSONRequestVisibility with value set to v.
func NewOptReposUpdateApplicationJSONRequestVisibility(v ReposUpdateApplicationJSONRequestVisibility) OptReposUpdateApplicationJSONRequestVisibility {
	return OptReposUpdateApplicationJSONRequestVisibility{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateApplicationJSONRequestVisibility is generic valiant of ReposUpdateApplicationJSONRequestVisibility.
type OptReposUpdateApplicationJSONRequestVisibility struct {
	Value ReposUpdateApplicationJSONRequestVisibility
	Set   bool
}

// IsSet returns true if OptReposUpdateApplicationJSONRequestVisibility was set.
func (o OptReposUpdateApplicationJSONRequestVisibility) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposUpdateApplicationJSONRequestVisibility) Reset() {
	var v ReposUpdateApplicationJSONRequestVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateApplicationJSONRequestVisibility) SetTo(v ReposUpdateApplicationJSONRequestVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateApplicationJSONRequestVisibility) Get() (v ReposUpdateApplicationJSONRequestVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions with value set to v.
func NewOptReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions(v ReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions) OptReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions {
	return OptReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions is generic valiant of ReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions.
type OptReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions struct {
	Value ReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions
	Set   bool
}

// IsSet returns true if OptReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions was set.
func (o OptReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions) Reset() {
	var v ReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions) SetTo(v ReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions) Get() (v ReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReposUpdateInvitationApplicationJSONRequestPermissions with value set to v.
func NewOptReposUpdateInvitationApplicationJSONRequestPermissions(v ReposUpdateInvitationApplicationJSONRequestPermissions) OptReposUpdateInvitationApplicationJSONRequestPermissions {
	return OptReposUpdateInvitationApplicationJSONRequestPermissions{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateInvitationApplicationJSONRequestPermissions is generic valiant of ReposUpdateInvitationApplicationJSONRequestPermissions.
type OptReposUpdateInvitationApplicationJSONRequestPermissions struct {
	Value ReposUpdateInvitationApplicationJSONRequestPermissions
	Set   bool
}

// IsSet returns true if OptReposUpdateInvitationApplicationJSONRequestPermissions was set.
func (o OptReposUpdateInvitationApplicationJSONRequestPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposUpdateInvitationApplicationJSONRequestPermissions) Reset() {
	var v ReposUpdateInvitationApplicationJSONRequestPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateInvitationApplicationJSONRequestPermissions) SetTo(v ReposUpdateInvitationApplicationJSONRequestPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateInvitationApplicationJSONRequestPermissions) Get() (v ReposUpdateInvitationApplicationJSONRequestPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions with value set to v.
func NewOptReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions(v ReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions) OptReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions {
	return OptReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions is generic valiant of ReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions.
type OptReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions struct {
	Value ReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions
	Set   bool
}

// IsSet returns true if OptReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions was set.
func (o OptReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions) Reset() {
	var v ReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions) SetTo(v ReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions) Get() (v ReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptRepository with value set to v.
func NewOptRepository(v Repository) OptRepository {
	return OptRepository{
		Value: v,
		Set:   true,
	}
}

// OptRepository is generic valiant of Repository.
type OptRepository struct {
	Value Repository
	Set   bool
}

// IsSet returns true if OptRepository was set.
func (o OptRepository) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRepository) Reset() {
	var v Repository
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRepository) SetTo(v Repository) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRepository) Get() (v Repository, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptRepositoryPermissions with value set to v.
func NewOptRepositoryPermissions(v RepositoryPermissions) OptRepositoryPermissions {
	return OptRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptRepositoryPermissions is generic valiant of RepositoryPermissions.
type OptRepositoryPermissions struct {
	Value RepositoryPermissions
	Set   bool
}

// IsSet returns true if OptRepositoryPermissions was set.
func (o OptRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRepositoryPermissions) Reset() {
	var v RepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRepositoryPermissions) SetTo(v RepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRepositoryPermissions) Get() (v RepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptRepositoryTemplateRepositoryOwner with value set to v.
func NewOptRepositoryTemplateRepositoryOwner(v RepositoryTemplateRepositoryOwner) OptRepositoryTemplateRepositoryOwner {
	return OptRepositoryTemplateRepositoryOwner{
		Value: v,
		Set:   true,
	}
}

// OptRepositoryTemplateRepositoryOwner is generic valiant of RepositoryTemplateRepositoryOwner.
type OptRepositoryTemplateRepositoryOwner struct {
	Value RepositoryTemplateRepositoryOwner
	Set   bool
}

// IsSet returns true if OptRepositoryTemplateRepositoryOwner was set.
func (o OptRepositoryTemplateRepositoryOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRepositoryTemplateRepositoryOwner) Reset() {
	var v RepositoryTemplateRepositoryOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRepositoryTemplateRepositoryOwner) SetTo(v RepositoryTemplateRepositoryOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRepositoryTemplateRepositoryOwner) Get() (v RepositoryTemplateRepositoryOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptRepositoryTemplateRepositoryPermissions with value set to v.
func NewOptRepositoryTemplateRepositoryPermissions(v RepositoryTemplateRepositoryPermissions) OptRepositoryTemplateRepositoryPermissions {
	return OptRepositoryTemplateRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptRepositoryTemplateRepositoryPermissions is generic valiant of RepositoryTemplateRepositoryPermissions.
type OptRepositoryTemplateRepositoryPermissions struct {
	Value RepositoryTemplateRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptRepositoryTemplateRepositoryPermissions was set.
func (o OptRepositoryTemplateRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRepositoryTemplateRepositoryPermissions) Reset() {
	var v RepositoryTemplateRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRepositoryTemplateRepositoryPermissions) SetTo(v RepositoryTemplateRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRepositoryTemplateRepositoryPermissions) Get() (v RepositoryTemplateRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptReviewCommentSide with value set to v.
func NewOptReviewCommentSide(v ReviewCommentSide) OptReviewCommentSide {
	return OptReviewCommentSide{
		Value: v,
		Set:   true,
	}
}

// OptReviewCommentSide is generic valiant of ReviewCommentSide.
type OptReviewCommentSide struct {
	Value ReviewCommentSide
	Set   bool
}

// IsSet returns true if OptReviewCommentSide was set.
func (o OptReviewCommentSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReviewCommentSide) Reset() {
	var v ReviewCommentSide
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReviewCommentSide) SetTo(v ReviewCommentSide) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReviewCommentSide) Get() (v ReviewCommentSide, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptRunnerLabelsItemType with value set to v.
func NewOptRunnerLabelsItemType(v RunnerLabelsItemType) OptRunnerLabelsItemType {
	return OptRunnerLabelsItemType{
		Value: v,
		Set:   true,
	}
}

// OptRunnerLabelsItemType is generic valiant of RunnerLabelsItemType.
type OptRunnerLabelsItemType struct {
	Value RunnerLabelsItemType
	Set   bool
}

// IsSet returns true if OptRunnerLabelsItemType was set.
func (o OptRunnerLabelsItemType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRunnerLabelsItemType) Reset() {
	var v RunnerLabelsItemType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRunnerLabelsItemType) SetTo(v RunnerLabelsItemType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRunnerLabelsItemType) Get() (v RunnerLabelsItemType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptScimEnterpriseGroupMeta with value set to v.
func NewOptScimEnterpriseGroupMeta(v ScimEnterpriseGroupMeta) OptScimEnterpriseGroupMeta {
	return OptScimEnterpriseGroupMeta{
		Value: v,
		Set:   true,
	}
}

// OptScimEnterpriseGroupMeta is generic valiant of ScimEnterpriseGroupMeta.
type OptScimEnterpriseGroupMeta struct {
	Value ScimEnterpriseGroupMeta
	Set   bool
}

// IsSet returns true if OptScimEnterpriseGroupMeta was set.
func (o OptScimEnterpriseGroupMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimEnterpriseGroupMeta) Reset() {
	var v ScimEnterpriseGroupMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimEnterpriseGroupMeta) SetTo(v ScimEnterpriseGroupMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimEnterpriseGroupMeta) Get() (v ScimEnterpriseGroupMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptScimEnterpriseUserMeta with value set to v.
func NewOptScimEnterpriseUserMeta(v ScimEnterpriseUserMeta) OptScimEnterpriseUserMeta {
	return OptScimEnterpriseUserMeta{
		Value: v,
		Set:   true,
	}
}

// OptScimEnterpriseUserMeta is generic valiant of ScimEnterpriseUserMeta.
type OptScimEnterpriseUserMeta struct {
	Value ScimEnterpriseUserMeta
	Set   bool
}

// IsSet returns true if OptScimEnterpriseUserMeta was set.
func (o OptScimEnterpriseUserMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimEnterpriseUserMeta) Reset() {
	var v ScimEnterpriseUserMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimEnterpriseUserMeta) SetTo(v ScimEnterpriseUserMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimEnterpriseUserMeta) Get() (v ScimEnterpriseUserMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptScimEnterpriseUserName with value set to v.
func NewOptScimEnterpriseUserName(v ScimEnterpriseUserName) OptScimEnterpriseUserName {
	return OptScimEnterpriseUserName{
		Value: v,
		Set:   true,
	}
}

// OptScimEnterpriseUserName is generic valiant of ScimEnterpriseUserName.
type OptScimEnterpriseUserName struct {
	Value ScimEnterpriseUserName
	Set   bool
}

// IsSet returns true if OptScimEnterpriseUserName was set.
func (o OptScimEnterpriseUserName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimEnterpriseUserName) Reset() {
	var v ScimEnterpriseUserName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimEnterpriseUserName) SetTo(v ScimEnterpriseUserName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimEnterpriseUserName) Get() (v ScimEnterpriseUserName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptScimGroupListEnterpriseResourcesItemMeta with value set to v.
func NewOptScimGroupListEnterpriseResourcesItemMeta(v ScimGroupListEnterpriseResourcesItemMeta) OptScimGroupListEnterpriseResourcesItemMeta {
	return OptScimGroupListEnterpriseResourcesItemMeta{
		Value: v,
		Set:   true,
	}
}

// OptScimGroupListEnterpriseResourcesItemMeta is generic valiant of ScimGroupListEnterpriseResourcesItemMeta.
type OptScimGroupListEnterpriseResourcesItemMeta struct {
	Value ScimGroupListEnterpriseResourcesItemMeta
	Set   bool
}

// IsSet returns true if OptScimGroupListEnterpriseResourcesItemMeta was set.
func (o OptScimGroupListEnterpriseResourcesItemMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimGroupListEnterpriseResourcesItemMeta) Reset() {
	var v ScimGroupListEnterpriseResourcesItemMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimGroupListEnterpriseResourcesItemMeta) SetTo(v ScimGroupListEnterpriseResourcesItemMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimGroupListEnterpriseResourcesItemMeta) Get() (v ScimGroupListEnterpriseResourcesItemMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptScimUserListEnterpriseResourcesItemMeta with value set to v.
func NewOptScimUserListEnterpriseResourcesItemMeta(v ScimUserListEnterpriseResourcesItemMeta) OptScimUserListEnterpriseResourcesItemMeta {
	return OptScimUserListEnterpriseResourcesItemMeta{
		Value: v,
		Set:   true,
	}
}

// OptScimUserListEnterpriseResourcesItemMeta is generic valiant of ScimUserListEnterpriseResourcesItemMeta.
type OptScimUserListEnterpriseResourcesItemMeta struct {
	Value ScimUserListEnterpriseResourcesItemMeta
	Set   bool
}

// IsSet returns true if OptScimUserListEnterpriseResourcesItemMeta was set.
func (o OptScimUserListEnterpriseResourcesItemMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimUserListEnterpriseResourcesItemMeta) Reset() {
	var v ScimUserListEnterpriseResourcesItemMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimUserListEnterpriseResourcesItemMeta) SetTo(v ScimUserListEnterpriseResourcesItemMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimUserListEnterpriseResourcesItemMeta) Get() (v ScimUserListEnterpriseResourcesItemMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptScimUserListEnterpriseResourcesItemName with value set to v.
func NewOptScimUserListEnterpriseResourcesItemName(v ScimUserListEnterpriseResourcesItemName) OptScimUserListEnterpriseResourcesItemName {
	return OptScimUserListEnterpriseResourcesItemName{
		Value: v,
		Set:   true,
	}
}

// OptScimUserListEnterpriseResourcesItemName is generic valiant of ScimUserListEnterpriseResourcesItemName.
type OptScimUserListEnterpriseResourcesItemName struct {
	Value ScimUserListEnterpriseResourcesItemName
	Set   bool
}

// IsSet returns true if OptScimUserListEnterpriseResourcesItemName was set.
func (o OptScimUserListEnterpriseResourcesItemName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimUserListEnterpriseResourcesItemName) Reset() {
	var v ScimUserListEnterpriseResourcesItemName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimUserListEnterpriseResourcesItemName) SetTo(v ScimUserListEnterpriseResourcesItemName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimUserListEnterpriseResourcesItemName) Get() (v ScimUserListEnterpriseResourcesItemName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptSecretScanningAlertResolution with value set to v.
func NewOptSecretScanningAlertResolution(v SecretScanningAlertResolution) OptSecretScanningAlertResolution {
	return OptSecretScanningAlertResolution{
		Value: v,
		Set:   true,
	}
}

// OptSecretScanningAlertResolution is generic valiant of SecretScanningAlertResolution.
type OptSecretScanningAlertResolution struct {
	Value SecretScanningAlertResolution
	Set   bool
}

// IsSet returns true if OptSecretScanningAlertResolution was set.
func (o OptSecretScanningAlertResolution) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSecretScanningAlertResolution) Reset() {
	var v SecretScanningAlertResolution
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSecretScanningAlertResolution) SetTo(v SecretScanningAlertResolution) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSecretScanningAlertResolution) Get() (v SecretScanningAlertResolution, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptSecretScanningAlertState with value set to v.
func NewOptSecretScanningAlertState(v SecretScanningAlertState) OptSecretScanningAlertState {
	return OptSecretScanningAlertState{
		Value: v,
		Set:   true,
	}
}

// OptSecretScanningAlertState is generic valiant of SecretScanningAlertState.
type OptSecretScanningAlertState struct {
	Value SecretScanningAlertState
	Set   bool
}

// IsSet returns true if OptSecretScanningAlertState was set.
func (o OptSecretScanningAlertState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSecretScanningAlertState) Reset() {
	var v SecretScanningAlertState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSecretScanningAlertState) SetTo(v SecretScanningAlertState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSecretScanningAlertState) Get() (v SecretScanningAlertState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptSimpleUser with value set to v.
func NewOptSimpleUser(v SimpleUser) OptSimpleUser {
	return OptSimpleUser{
		Value: v,
		Set:   true,
	}
}

// OptSimpleUser is generic valiant of SimpleUser.
type OptSimpleUser struct {
	Value SimpleUser
	Set   bool
}

// IsSet returns true if OptSimpleUser was set.
func (o OptSimpleUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSimpleUser) Reset() {
	var v SimpleUser
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSimpleUser) SetTo(v SimpleUser) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSimpleUser) Get() (v SimpleUser, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptStatusCheckPolicy with value set to v.
func NewOptStatusCheckPolicy(v StatusCheckPolicy) OptStatusCheckPolicy {
	return OptStatusCheckPolicy{
		Value: v,
		Set:   true,
	}
}

// OptStatusCheckPolicy is generic valiant of StatusCheckPolicy.
type OptStatusCheckPolicy struct {
	Value StatusCheckPolicy
	Set   bool
}

// IsSet returns true if OptStatusCheckPolicy was set.
func (o OptStatusCheckPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStatusCheckPolicy) Reset() {
	var v StatusCheckPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStatusCheckPolicy) SetTo(v StatusCheckPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStatusCheckPolicy) Get() (v StatusCheckPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is generic valiant of string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeam with value set to v.
func NewOptTeam(v Team) OptTeam {
	return OptTeam{
		Value: v,
		Set:   true,
	}
}

// OptTeam is generic valiant of Team.
type OptTeam struct {
	Value Team
	Set   bool
}

// IsSet returns true if OptTeam was set.
func (o OptTeam) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeam) Reset() {
	var v Team
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeam) SetTo(v Team) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeam) Get() (v Team, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamFullPrivacy with value set to v.
func NewOptTeamFullPrivacy(v TeamFullPrivacy) OptTeamFullPrivacy {
	return OptTeamFullPrivacy{
		Value: v,
		Set:   true,
	}
}

// OptTeamFullPrivacy is generic valiant of TeamFullPrivacy.
type OptTeamFullPrivacy struct {
	Value TeamFullPrivacy
	Set   bool
}

// IsSet returns true if OptTeamFullPrivacy was set.
func (o OptTeamFullPrivacy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamFullPrivacy) Reset() {
	var v TeamFullPrivacy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamFullPrivacy) SetTo(v TeamFullPrivacy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamFullPrivacy) Get() (v TeamFullPrivacy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamPermissions with value set to v.
func NewOptTeamPermissions(v TeamPermissions) OptTeamPermissions {
	return OptTeamPermissions{
		Value: v,
		Set:   true,
	}
}

// OptTeamPermissions is generic valiant of TeamPermissions.
type OptTeamPermissions struct {
	Value TeamPermissions
	Set   bool
}

// IsSet returns true if OptTeamPermissions was set.
func (o OptTeamPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamPermissions) Reset() {
	var v TeamPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamPermissions) SetTo(v TeamPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamPermissions) Get() (v TeamPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamRepositoryPermissions with value set to v.
func NewOptTeamRepositoryPermissions(v TeamRepositoryPermissions) OptTeamRepositoryPermissions {
	return OptTeamRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptTeamRepositoryPermissions is generic valiant of TeamRepositoryPermissions.
type OptTeamRepositoryPermissions struct {
	Value TeamRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptTeamRepositoryPermissions was set.
func (o OptTeamRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamRepositoryPermissions) Reset() {
	var v TeamRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamRepositoryPermissions) SetTo(v TeamRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamRepositoryPermissions) Get() (v TeamRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole with value set to v.
func NewOptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole(v TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole) OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole {
	return OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole is generic valiant of TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole.
type OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole struct {
	Value TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole was set.
func (o OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole) Reset() {
	var v TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole) SetTo(v TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole) Get() (v TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole with value set to v.
func NewOptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole(v TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole) OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole {
	return OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole is generic valiant of TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole.
type OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole struct {
	Value TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole was set.
func (o OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole) Reset() {
	var v TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole) SetTo(v TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole) Get() (v TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission with value set to v.
func NewOptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission(v TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission) OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission {
	return OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission is generic valiant of TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission.
type OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission struct {
	Value TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission was set.
func (o OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission) Reset() {
	var v TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission) SetTo(v TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission) Get() (v TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission with value set to v.
func NewOptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission(v TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission) OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission {
	return OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission is generic valiant of TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission.
type OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission struct {
	Value TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission was set.
func (o OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission) Reset() {
	var v TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission) SetTo(v TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission) Get() (v TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission with value set to v.
func NewOptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission(v TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission) OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission {
	return OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission is generic valiant of TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission.
type OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission struct {
	Value TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission was set.
func (o OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission) Reset() {
	var v TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission) SetTo(v TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission) Get() (v TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission with value set to v.
func NewOptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission(v TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission) OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission {
	return OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission is generic valiant of TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission.
type OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission struct {
	Value TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission was set.
func (o OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission) Reset() {
	var v TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission) SetTo(v TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission) Get() (v TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamsCreateApplicationJSONRequestPermission with value set to v.
func NewOptTeamsCreateApplicationJSONRequestPermission(v TeamsCreateApplicationJSONRequestPermission) OptTeamsCreateApplicationJSONRequestPermission {
	return OptTeamsCreateApplicationJSONRequestPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsCreateApplicationJSONRequestPermission is generic valiant of TeamsCreateApplicationJSONRequestPermission.
type OptTeamsCreateApplicationJSONRequestPermission struct {
	Value TeamsCreateApplicationJSONRequestPermission
	Set   bool
}

// IsSet returns true if OptTeamsCreateApplicationJSONRequestPermission was set.
func (o OptTeamsCreateApplicationJSONRequestPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsCreateApplicationJSONRequestPermission) Reset() {
	var v TeamsCreateApplicationJSONRequestPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsCreateApplicationJSONRequestPermission) SetTo(v TeamsCreateApplicationJSONRequestPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsCreateApplicationJSONRequestPermission) Get() (v TeamsCreateApplicationJSONRequestPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamsCreateApplicationJSONRequestPrivacy with value set to v.
func NewOptTeamsCreateApplicationJSONRequestPrivacy(v TeamsCreateApplicationJSONRequestPrivacy) OptTeamsCreateApplicationJSONRequestPrivacy {
	return OptTeamsCreateApplicationJSONRequestPrivacy{
		Value: v,
		Set:   true,
	}
}

// OptTeamsCreateApplicationJSONRequestPrivacy is generic valiant of TeamsCreateApplicationJSONRequestPrivacy.
type OptTeamsCreateApplicationJSONRequestPrivacy struct {
	Value TeamsCreateApplicationJSONRequestPrivacy
	Set   bool
}

// IsSet returns true if OptTeamsCreateApplicationJSONRequestPrivacy was set.
func (o OptTeamsCreateApplicationJSONRequestPrivacy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsCreateApplicationJSONRequestPrivacy) Reset() {
	var v TeamsCreateApplicationJSONRequestPrivacy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsCreateApplicationJSONRequestPrivacy) SetTo(v TeamsCreateApplicationJSONRequestPrivacy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsCreateApplicationJSONRequestPrivacy) Get() (v TeamsCreateApplicationJSONRequestPrivacy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamsUpdateInOrgApplicationJSONRequestPermission with value set to v.
func NewOptTeamsUpdateInOrgApplicationJSONRequestPermission(v TeamsUpdateInOrgApplicationJSONRequestPermission) OptTeamsUpdateInOrgApplicationJSONRequestPermission {
	return OptTeamsUpdateInOrgApplicationJSONRequestPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsUpdateInOrgApplicationJSONRequestPermission is generic valiant of TeamsUpdateInOrgApplicationJSONRequestPermission.
type OptTeamsUpdateInOrgApplicationJSONRequestPermission struct {
	Value TeamsUpdateInOrgApplicationJSONRequestPermission
	Set   bool
}

// IsSet returns true if OptTeamsUpdateInOrgApplicationJSONRequestPermission was set.
func (o OptTeamsUpdateInOrgApplicationJSONRequestPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsUpdateInOrgApplicationJSONRequestPermission) Reset() {
	var v TeamsUpdateInOrgApplicationJSONRequestPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsUpdateInOrgApplicationJSONRequestPermission) SetTo(v TeamsUpdateInOrgApplicationJSONRequestPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsUpdateInOrgApplicationJSONRequestPermission) Get() (v TeamsUpdateInOrgApplicationJSONRequestPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamsUpdateInOrgApplicationJSONRequestPrivacy with value set to v.
func NewOptTeamsUpdateInOrgApplicationJSONRequestPrivacy(v TeamsUpdateInOrgApplicationJSONRequestPrivacy) OptTeamsUpdateInOrgApplicationJSONRequestPrivacy {
	return OptTeamsUpdateInOrgApplicationJSONRequestPrivacy{
		Value: v,
		Set:   true,
	}
}

// OptTeamsUpdateInOrgApplicationJSONRequestPrivacy is generic valiant of TeamsUpdateInOrgApplicationJSONRequestPrivacy.
type OptTeamsUpdateInOrgApplicationJSONRequestPrivacy struct {
	Value TeamsUpdateInOrgApplicationJSONRequestPrivacy
	Set   bool
}

// IsSet returns true if OptTeamsUpdateInOrgApplicationJSONRequestPrivacy was set.
func (o OptTeamsUpdateInOrgApplicationJSONRequestPrivacy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsUpdateInOrgApplicationJSONRequestPrivacy) Reset() {
	var v TeamsUpdateInOrgApplicationJSONRequestPrivacy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsUpdateInOrgApplicationJSONRequestPrivacy) SetTo(v TeamsUpdateInOrgApplicationJSONRequestPrivacy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsUpdateInOrgApplicationJSONRequestPrivacy) Get() (v TeamsUpdateInOrgApplicationJSONRequestPrivacy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamsUpdateLegacyApplicationJSONRequestPermission with value set to v.
func NewOptTeamsUpdateLegacyApplicationJSONRequestPermission(v TeamsUpdateLegacyApplicationJSONRequestPermission) OptTeamsUpdateLegacyApplicationJSONRequestPermission {
	return OptTeamsUpdateLegacyApplicationJSONRequestPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsUpdateLegacyApplicationJSONRequestPermission is generic valiant of TeamsUpdateLegacyApplicationJSONRequestPermission.
type OptTeamsUpdateLegacyApplicationJSONRequestPermission struct {
	Value TeamsUpdateLegacyApplicationJSONRequestPermission
	Set   bool
}

// IsSet returns true if OptTeamsUpdateLegacyApplicationJSONRequestPermission was set.
func (o OptTeamsUpdateLegacyApplicationJSONRequestPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsUpdateLegacyApplicationJSONRequestPermission) Reset() {
	var v TeamsUpdateLegacyApplicationJSONRequestPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsUpdateLegacyApplicationJSONRequestPermission) SetTo(v TeamsUpdateLegacyApplicationJSONRequestPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsUpdateLegacyApplicationJSONRequestPermission) Get() (v TeamsUpdateLegacyApplicationJSONRequestPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTeamsUpdateLegacyApplicationJSONRequestPrivacy with value set to v.
func NewOptTeamsUpdateLegacyApplicationJSONRequestPrivacy(v TeamsUpdateLegacyApplicationJSONRequestPrivacy) OptTeamsUpdateLegacyApplicationJSONRequestPrivacy {
	return OptTeamsUpdateLegacyApplicationJSONRequestPrivacy{
		Value: v,
		Set:   true,
	}
}

// OptTeamsUpdateLegacyApplicationJSONRequestPrivacy is generic valiant of TeamsUpdateLegacyApplicationJSONRequestPrivacy.
type OptTeamsUpdateLegacyApplicationJSONRequestPrivacy struct {
	Value TeamsUpdateLegacyApplicationJSONRequestPrivacy
	Set   bool
}

// IsSet returns true if OptTeamsUpdateLegacyApplicationJSONRequestPrivacy was set.
func (o OptTeamsUpdateLegacyApplicationJSONRequestPrivacy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsUpdateLegacyApplicationJSONRequestPrivacy) Reset() {
	var v TeamsUpdateLegacyApplicationJSONRequestPrivacy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsUpdateLegacyApplicationJSONRequestPrivacy) SetTo(v TeamsUpdateLegacyApplicationJSONRequestPrivacy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsUpdateLegacyApplicationJSONRequestPrivacy) Get() (v TeamsUpdateLegacyApplicationJSONRequestPrivacy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTime with value set to v.
func NewOptTime(v time.Time) OptTime {
	return OptTime{
		Value: v,
		Set:   true,
	}
}

// OptTime is generic valiant of time.Time.
type OptTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptTime was set.
func (o OptTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTopicSearchResultItemAliasesItemTopicRelation with value set to v.
func NewOptTopicSearchResultItemAliasesItemTopicRelation(v TopicSearchResultItemAliasesItemTopicRelation) OptTopicSearchResultItemAliasesItemTopicRelation {
	return OptTopicSearchResultItemAliasesItemTopicRelation{
		Value: v,
		Set:   true,
	}
}

// OptTopicSearchResultItemAliasesItemTopicRelation is generic valiant of TopicSearchResultItemAliasesItemTopicRelation.
type OptTopicSearchResultItemAliasesItemTopicRelation struct {
	Value TopicSearchResultItemAliasesItemTopicRelation
	Set   bool
}

// IsSet returns true if OptTopicSearchResultItemAliasesItemTopicRelation was set.
func (o OptTopicSearchResultItemAliasesItemTopicRelation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTopicSearchResultItemAliasesItemTopicRelation) Reset() {
	var v TopicSearchResultItemAliasesItemTopicRelation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTopicSearchResultItemAliasesItemTopicRelation) SetTo(v TopicSearchResultItemAliasesItemTopicRelation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTopicSearchResultItemAliasesItemTopicRelation) Get() (v TopicSearchResultItemAliasesItemTopicRelation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptTopicSearchResultItemRelatedItemTopicRelation with value set to v.
func NewOptTopicSearchResultItemRelatedItemTopicRelation(v TopicSearchResultItemRelatedItemTopicRelation) OptTopicSearchResultItemRelatedItemTopicRelation {
	return OptTopicSearchResultItemRelatedItemTopicRelation{
		Value: v,
		Set:   true,
	}
}

// OptTopicSearchResultItemRelatedItemTopicRelation is generic valiant of TopicSearchResultItemRelatedItemTopicRelation.
type OptTopicSearchResultItemRelatedItemTopicRelation struct {
	Value TopicSearchResultItemRelatedItemTopicRelation
	Set   bool
}

// IsSet returns true if OptTopicSearchResultItemRelatedItemTopicRelation was set.
func (o OptTopicSearchResultItemRelatedItemTopicRelation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTopicSearchResultItemRelatedItemTopicRelation) Reset() {
	var v TopicSearchResultItemRelatedItemTopicRelation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTopicSearchResultItemRelatedItemTopicRelation) SetTo(v TopicSearchResultItemRelatedItemTopicRelation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTopicSearchResultItemRelatedItemTopicRelation) Get() (v TopicSearchResultItemRelatedItemTopicRelation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptURL with value set to v.
func NewOptURL(v url.URL) OptURL {
	return OptURL{
		Value: v,
		Set:   true,
	}
}

// OptURL is generic valiant of url.URL.
type OptURL struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURL was set.
func (o OptURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURL) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURL) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURL) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptVerification with value set to v.
func NewOptVerification(v Verification) OptVerification {
	return OptVerification{
		Value: v,
		Set:   true,
	}
}

// OptVerification is generic valiant of Verification.
type OptVerification struct {
	Value Verification
	Set   bool
}

// IsSet returns true if OptVerification was set.
func (o OptVerification) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVerification) Reset() {
	var v Verification
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVerification) SetTo(v Verification) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVerification) Get() (v Verification, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptWorkflowRunUsageBillableMACOS with value set to v.
func NewOptWorkflowRunUsageBillableMACOS(v WorkflowRunUsageBillableMACOS) OptWorkflowRunUsageBillableMACOS {
	return OptWorkflowRunUsageBillableMACOS{
		Value: v,
		Set:   true,
	}
}

// OptWorkflowRunUsageBillableMACOS is generic valiant of WorkflowRunUsageBillableMACOS.
type OptWorkflowRunUsageBillableMACOS struct {
	Value WorkflowRunUsageBillableMACOS
	Set   bool
}

// IsSet returns true if OptWorkflowRunUsageBillableMACOS was set.
func (o OptWorkflowRunUsageBillableMACOS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWorkflowRunUsageBillableMACOS) Reset() {
	var v WorkflowRunUsageBillableMACOS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWorkflowRunUsageBillableMACOS) SetTo(v WorkflowRunUsageBillableMACOS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWorkflowRunUsageBillableMACOS) Get() (v WorkflowRunUsageBillableMACOS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptWorkflowRunUsageBillableUBUNTU with value set to v.
func NewOptWorkflowRunUsageBillableUBUNTU(v WorkflowRunUsageBillableUBUNTU) OptWorkflowRunUsageBillableUBUNTU {
	return OptWorkflowRunUsageBillableUBUNTU{
		Value: v,
		Set:   true,
	}
}

// OptWorkflowRunUsageBillableUBUNTU is generic valiant of WorkflowRunUsageBillableUBUNTU.
type OptWorkflowRunUsageBillableUBUNTU struct {
	Value WorkflowRunUsageBillableUBUNTU
	Set   bool
}

// IsSet returns true if OptWorkflowRunUsageBillableUBUNTU was set.
func (o OptWorkflowRunUsageBillableUBUNTU) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWorkflowRunUsageBillableUBUNTU) Reset() {
	var v WorkflowRunUsageBillableUBUNTU
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWorkflowRunUsageBillableUBUNTU) SetTo(v WorkflowRunUsageBillableUBUNTU) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWorkflowRunUsageBillableUBUNTU) Get() (v WorkflowRunUsageBillableUBUNTU, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// New returns new OptWorkflowRunUsageBillableWINDOWS with value set to v.
func NewOptWorkflowRunUsageBillableWINDOWS(v WorkflowRunUsageBillableWINDOWS) OptWorkflowRunUsageBillableWINDOWS {
	return OptWorkflowRunUsageBillableWINDOWS{
		Value: v,
		Set:   true,
	}
}

// OptWorkflowRunUsageBillableWINDOWS is generic valiant of WorkflowRunUsageBillableWINDOWS.
type OptWorkflowRunUsageBillableWINDOWS struct {
	Value WorkflowRunUsageBillableWINDOWS
	Set   bool
}

// IsSet returns true if OptWorkflowRunUsageBillableWINDOWS was set.
func (o OptWorkflowRunUsageBillableWINDOWS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWorkflowRunUsageBillableWINDOWS) Reset() {
	var v WorkflowRunUsageBillableWINDOWS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWorkflowRunUsageBillableWINDOWS) SetTo(v WorkflowRunUsageBillableWINDOWS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWorkflowRunUsageBillableWINDOWS) Get() (v WorkflowRunUsageBillableWINDOWS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// OrgHook describes #/components/schemas/org-hook.
type OrgHook struct {
	Active        bool          `json:"active"`
	Config        OrgHookConfig `json:"config"`
	CreatedAt     time.Time     `json:"created_at"`
	DeliveriesURL OptURL        `json:"deliveries_url"`
	Events        []string      `json:"events"`
	ID            int           `json:"id"`
	Name          string        `json:"name"`
	PingURL       url.URL       `json:"ping_url"`
	Type          string        `json:"type"`
	URL           url.URL       `json:"url"`
	UpdatedAt     time.Time     `json:"updated_at"`
}

func (*OrgHook) orgsGetWebhookResponse() {}

type OrgHookConfig struct {
	ContentType OptString `json:"content_type"`
	InsecureSsl OptString `json:"insecure_ssl"`
	Secret      OptString `json:"secret"`
	URL         OptString `json:"url"`
}

// OrgMembership describes #/components/schemas/org-membership.
type OrgMembership struct {
	Organization    OrganizationSimple          `json:"organization"`
	OrganizationURL url.URL                     `json:"organization_url"`
	Permissions     OptOrgMembershipPermissions `json:"permissions"`
	Role            OrgMembershipRole           `json:"role"`
	State           OrgMembershipState          `json:"state"`
	URL             url.URL                     `json:"url"`
	User            NullableSimpleUser          `json:"user"`
}

func (*OrgMembership) orgsGetMembershipForAuthenticatedUserResponse() {}
func (*OrgMembership) orgsGetMembershipForUserResponse()              {}

type OrgMembershipPermissions struct {
	CanCreateRepository bool `json:"can_create_repository"`
}

type OrgMembershipRole string

const (
	OrgMembershipRoleAdmin          OrgMembershipRole = "admin"
	OrgMembershipRoleMember         OrgMembershipRole = "member"
	OrgMembershipRoleBillingManager OrgMembershipRole = "billing_manager"
)

type OrgMembershipState string

const (
	OrgMembershipStateActive  OrgMembershipState = "active"
	OrgMembershipStatePending OrgMembershipState = "pending"
)

// OrganizationActionsSecret describes #/components/schemas/organization-actions-secret.
type OrganizationActionsSecret struct {
	CreatedAt               time.Time                           `json:"created_at"`
	Name                    string                              `json:"name"`
	SelectedRepositoriesURL OptURL                              `json:"selected_repositories_url"`
	UpdatedAt               time.Time                           `json:"updated_at"`
	Visibility              OrganizationActionsSecretVisibility `json:"visibility"`
}

type OrganizationActionsSecretVisibility string

const (
	OrganizationActionsSecretVisibilityAll      OrganizationActionsSecretVisibility = "all"
	OrganizationActionsSecretVisibilityPrivate  OrganizationActionsSecretVisibility = "private"
	OrganizationActionsSecretVisibilitySelected OrganizationActionsSecretVisibility = "selected"
)

// OrganizationFull describes #/components/schemas/organization-full.
type OrganizationFull struct {
	AvatarURL                            string                  `json:"avatar_url"`
	BillingEmail                         OptNilString            `json:"billing_email"`
	Blog                                 OptURL                  `json:"blog"`
	Collaborators                        OptNilInt               `json:"collaborators"`
	Company                              OptString               `json:"company"`
	CreatedAt                            time.Time               `json:"created_at"`
	DefaultRepositoryPermission          OptNilString            `json:"default_repository_permission"`
	Description                          NilString               `json:"description"`
	DiskUsage                            OptNilInt               `json:"disk_usage"`
	Email                                OptString               `json:"email"`
	EventsURL                            url.URL                 `json:"events_url"`
	Followers                            int                     `json:"followers"`
	Following                            int                     `json:"following"`
	HTMLURL                              url.URL                 `json:"html_url"`
	HasOrganizationProjects              bool                    `json:"has_organization_projects"`
	HasRepositoryProjects                bool                    `json:"has_repository_projects"`
	HooksURL                             string                  `json:"hooks_url"`
	ID                                   int                     `json:"id"`
	IsVerified                           OptBool                 `json:"is_verified"`
	IssuesURL                            string                  `json:"issues_url"`
	Location                             OptString               `json:"location"`
	Login                                string                  `json:"login"`
	MembersAllowedRepositoryCreationType OptString               `json:"members_allowed_repository_creation_type"`
	MembersCanCreateInternalRepositories OptBool                 `json:"members_can_create_internal_repositories"`
	MembersCanCreatePages                OptBool                 `json:"members_can_create_pages"`
	MembersCanCreatePrivatePages         OptBool                 `json:"members_can_create_private_pages"`
	MembersCanCreatePrivateRepositories  OptBool                 `json:"members_can_create_private_repositories"`
	MembersCanCreatePublicPages          OptBool                 `json:"members_can_create_public_pages"`
	MembersCanCreatePublicRepositories   OptBool                 `json:"members_can_create_public_repositories"`
	MembersCanCreateRepositories         OptNilBool              `json:"members_can_create_repositories"`
	MembersURL                           string                  `json:"members_url"`
	Name                                 OptString               `json:"name"`
	NodeID                               string                  `json:"node_id"`
	OwnedPrivateRepos                    OptInt                  `json:"owned_private_repos"`
	Plan                                 OptOrganizationFullPlan `json:"plan"`
	PrivateGists                         OptNilInt               `json:"private_gists"`
	PublicGists                          int                     `json:"public_gists"`
	PublicMembersURL                     string                  `json:"public_members_url"`
	PublicRepos                          int                     `json:"public_repos"`
	ReposURL                             url.URL                 `json:"repos_url"`
	TotalPrivateRepos                    OptInt                  `json:"total_private_repos"`
	TwitterUsername                      OptNilString            `json:"twitter_username"`
	TwoFactorRequirementEnabled          OptNilBool              `json:"two_factor_requirement_enabled"`
	Type                                 string                  `json:"type"`
	URL                                  url.URL                 `json:"url"`
	UpdatedAt                            time.Time               `json:"updated_at"`
}

func (*OrganizationFull) orgsGetResponse() {}

type OrganizationFullPlan struct {
	FilledSeats  OptInt `json:"filled_seats"`
	Name         string `json:"name"`
	PrivateRepos int    `json:"private_repos"`
	Seats        OptInt `json:"seats"`
	Space        int    `json:"space"`
}

// OrganizationInvitation describes #/components/schemas/organization-invitation.
type OrganizationInvitation struct {
	CreatedAt          string       `json:"created_at"`
	Email              NilString    `json:"email"`
	FailedAt           OptNilString `json:"failed_at"`
	FailedReason       OptNilString `json:"failed_reason"`
	ID                 int          `json:"id"`
	InvitationTeamsURL string       `json:"invitation_teams_url"`
	Inviter            SimpleUser   `json:"inviter"`
	Login              NilString    `json:"login"`
	NodeID             string       `json:"node_id"`
	Role               string       `json:"role"`
	TeamCount          int          `json:"team_count"`
}

// OrganizationSimple describes #/components/schemas/organization-simple.
type OrganizationSimple struct {
	AvatarURL        string    `json:"avatar_url"`
	Description      NilString `json:"description"`
	EventsURL        url.URL   `json:"events_url"`
	HooksURL         string    `json:"hooks_url"`
	ID               int       `json:"id"`
	IssuesURL        string    `json:"issues_url"`
	Login            string    `json:"login"`
	MembersURL       string    `json:"members_url"`
	NodeID           string    `json:"node_id"`
	PublicMembersURL string    `json:"public_members_url"`
	ReposURL         url.URL   `json:"repos_url"`
	URL              url.URL   `json:"url"`
}

type OrgsBlockUserNoContent struct{}

type OrgsCancelInvitationNoContent struct{}

type OrgsCheckBlockedUserNoContent struct{}

func (*OrgsCheckBlockedUserNoContent) orgsCheckBlockedUserResponse() {}

type OrgsCheckMembershipForUserFound struct{}

func (*OrgsCheckMembershipForUserFound) orgsCheckMembershipForUserResponse() {}

type OrgsCheckMembershipForUserNoContent struct{}

func (*OrgsCheckMembershipForUserNoContent) orgsCheckMembershipForUserResponse() {}

type OrgsCheckMembershipForUserNotFound struct{}

func (*OrgsCheckMembershipForUserNotFound) orgsCheckMembershipForUserResponse() {}

type OrgsCheckPublicMembershipForUserNoContent struct{}

func (*OrgsCheckPublicMembershipForUserNoContent) orgsCheckPublicMembershipForUserResponse() {}

type OrgsCheckPublicMembershipForUserNotFound struct{}

func (*OrgsCheckPublicMembershipForUserNotFound) orgsCheckPublicMembershipForUserResponse() {}

type OrgsConvertMemberToOutsideCollaboratorAccepted struct{}

func (*OrgsConvertMemberToOutsideCollaboratorAccepted) orgsConvertMemberToOutsideCollaboratorResponse() {
}

type OrgsConvertMemberToOutsideCollaboratorForbidden struct{}

func (*OrgsConvertMemberToOutsideCollaboratorForbidden) orgsConvertMemberToOutsideCollaboratorResponse() {
}

type OrgsConvertMemberToOutsideCollaboratorNoContent struct{}

func (*OrgsConvertMemberToOutsideCollaboratorNoContent) orgsConvertMemberToOutsideCollaboratorResponse() {
}

type OrgsCreateInvitationApplicationJSONRequest struct {
	Email     OptString                                         `json:"email"`
	InviteeID OptInt                                            `json:"invitee_id"`
	Role      OptOrgsCreateInvitationApplicationJSONRequestRole `json:"role"`
	TeamIds   *[]int                                            `json:"team_ids"`
}

func (*OrgsCreateInvitationApplicationJSONRequest) orgsCreateInvitationRequest() {}

type OrgsCreateInvitationApplicationJSONRequestRole string

const (
	OrgsCreateInvitationApplicationJSONRequestRoleAdmin          OrgsCreateInvitationApplicationJSONRequestRole = "admin"
	OrgsCreateInvitationApplicationJSONRequestRoleDirectMember   OrgsCreateInvitationApplicationJSONRequestRole = "direct_member"
	OrgsCreateInvitationApplicationJSONRequestRoleBillingManager OrgsCreateInvitationApplicationJSONRequestRole = "billing_manager"
)

type OrgsDeleteWebhookNoContent struct{}

func (*OrgsDeleteWebhookNoContent) orgsDeleteWebhookResponse() {}

type OrgsGetMembershipForAuthenticatedUserApplicationJSONForbidden BasicError

func (*OrgsGetMembershipForAuthenticatedUserApplicationJSONForbidden) orgsGetMembershipForAuthenticatedUserResponse() {
}

type OrgsGetMembershipForAuthenticatedUserApplicationJSONNotFound BasicError

func (*OrgsGetMembershipForAuthenticatedUserApplicationJSONNotFound) orgsGetMembershipForAuthenticatedUserResponse() {
}

type OrgsGetMembershipForUserApplicationJSONForbidden BasicError

func (*OrgsGetMembershipForUserApplicationJSONForbidden) orgsGetMembershipForUserResponse() {}

type OrgsGetMembershipForUserApplicationJSONNotFound BasicError

func (*OrgsGetMembershipForUserApplicationJSONNotFound) orgsGetMembershipForUserResponse() {}

type OrgsListBlockedUsersOK []SimpleUser

func (*OrgsListBlockedUsersOK) orgsListBlockedUsersResponse() {}

type OrgsListFailedInvitationsOK []OrganizationInvitation

func (*OrgsListFailedInvitationsOK) orgsListFailedInvitationsResponse() {}

type OrgsListForAuthenticatedUserApplicationJSONForbidden BasicError

func (*OrgsListForAuthenticatedUserApplicationJSONForbidden) orgsListForAuthenticatedUserResponse() {}

type OrgsListForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*OrgsListForAuthenticatedUserApplicationJSONUnauthorized) orgsListForAuthenticatedUserResponse() {
}

type OrgsListForAuthenticatedUserOK []OrganizationSimple

func (*OrgsListForAuthenticatedUserOK) orgsListForAuthenticatedUserResponse() {}

type OrgsListInvitationTeamsOK []Team

func (*OrgsListInvitationTeamsOK) orgsListInvitationTeamsResponse() {}

type OrgsListOK []OrganizationSimple

func (*OrgsListOK) orgsListResponse() {}

type OrgsListPendingInvitationsOK []OrganizationInvitation

func (*OrgsListPendingInvitationsOK) orgsListPendingInvitationsResponse() {}

type OrgsListWebhookDeliveriesOK []HookDeliveryItem

type OrgsListWebhooksOK []OrgHook

func (*OrgsListWebhooksOK) orgsListWebhooksResponse() {}

type OrgsPingWebhookNoContent struct{}

func (*OrgsPingWebhookNoContent) orgsPingWebhookResponse() {}

type OrgsRemoveMemberNoContent struct{}

func (*OrgsRemoveMemberNoContent) orgsRemoveMemberResponse() {}

type OrgsRemoveMembershipForUserApplicationJSONForbidden BasicError

func (*OrgsRemoveMembershipForUserApplicationJSONForbidden) orgsRemoveMembershipForUserResponse() {}

type OrgsRemoveMembershipForUserApplicationJSONNotFound BasicError

func (*OrgsRemoveMembershipForUserApplicationJSONNotFound) orgsRemoveMembershipForUserResponse() {}

type OrgsRemoveMembershipForUserNoContent struct{}

func (*OrgsRemoveMembershipForUserNoContent) orgsRemoveMembershipForUserResponse() {}

type OrgsRemoveOutsideCollaboratorNoContent struct{}

func (*OrgsRemoveOutsideCollaboratorNoContent) orgsRemoveOutsideCollaboratorResponse() {}

type OrgsRemoveOutsideCollaboratorUnprocessableEntity struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*OrgsRemoveOutsideCollaboratorUnprocessableEntity) orgsRemoveOutsideCollaboratorResponse() {}

type OrgsRemovePublicMembershipForAuthenticatedUser struct{}

type OrgsRemoveSamlSSOAuthorizationNoContent struct{}

func (*OrgsRemoveSamlSSOAuthorizationNoContent) orgsRemoveSamlSSOAuthorizationResponse() {}

type OrgsSetMembershipForUserApplicationJSONRequest struct {
	Role OptOrgsSetMembershipForUserApplicationJSONRequestRole `json:"role"`
}

func (*OrgsSetMembershipForUserApplicationJSONRequest) orgsSetMembershipForUserRequest() {}

type OrgsSetMembershipForUserApplicationJSONRequestRole string

const (
	OrgsSetMembershipForUserApplicationJSONRequestRoleAdmin  OrgsSetMembershipForUserApplicationJSONRequestRole = "admin"
	OrgsSetMembershipForUserApplicationJSONRequestRoleMember OrgsSetMembershipForUserApplicationJSONRequestRole = "member"
)

type OrgsSetPublicMembershipForAuthenticatedUserNoContent struct{}

func (*OrgsSetPublicMembershipForAuthenticatedUserNoContent) orgsSetPublicMembershipForAuthenticatedUserResponse() {
}

type OrgsUnblockUser struct{}

type OrgsUpdateApplicationJSONRequest struct {
	BillingEmail                         OptString                                                               `json:"billing_email"`
	Blog                                 OptString                                                               `json:"blog"`
	Company                              OptString                                                               `json:"company"`
	DefaultRepositoryPermission          OptOrgsUpdateApplicationJSONRequestDefaultRepositoryPermission          `json:"default_repository_permission"`
	Description                          OptString                                                               `json:"description"`
	Email                                OptString                                                               `json:"email"`
	HasOrganizationProjects              OptBool                                                                 `json:"has_organization_projects"`
	HasRepositoryProjects                OptBool                                                                 `json:"has_repository_projects"`
	Location                             OptString                                                               `json:"location"`
	MembersAllowedRepositoryCreationType OptOrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType `json:"members_allowed_repository_creation_type"`
	MembersCanCreateInternalRepositories OptBool                                                                 `json:"members_can_create_internal_repositories"`
	MembersCanCreatePages                OptBool                                                                 `json:"members_can_create_pages"`
	MembersCanCreatePrivatePages         OptBool                                                                 `json:"members_can_create_private_pages"`
	MembersCanCreatePrivateRepositories  OptBool                                                                 `json:"members_can_create_private_repositories"`
	MembersCanCreatePublicPages          OptBool                                                                 `json:"members_can_create_public_pages"`
	MembersCanCreatePublicRepositories   OptBool                                                                 `json:"members_can_create_public_repositories"`
	MembersCanCreateRepositories         OptBool                                                                 `json:"members_can_create_repositories"`
	Name                                 OptString                                                               `json:"name"`
	TwitterUsername                      OptString                                                               `json:"twitter_username"`
}

func (*OrgsUpdateApplicationJSONRequest) orgsUpdateRequest() {}

type OrgsUpdateApplicationJSONRequestDefaultRepositoryPermission string

const (
	OrgsUpdateApplicationJSONRequestDefaultRepositoryPermissionRead  OrgsUpdateApplicationJSONRequestDefaultRepositoryPermission = "read"
	OrgsUpdateApplicationJSONRequestDefaultRepositoryPermissionWrite OrgsUpdateApplicationJSONRequestDefaultRepositoryPermission = "write"
	OrgsUpdateApplicationJSONRequestDefaultRepositoryPermissionAdmin OrgsUpdateApplicationJSONRequestDefaultRepositoryPermission = "admin"
	OrgsUpdateApplicationJSONRequestDefaultRepositoryPermissionNone  OrgsUpdateApplicationJSONRequestDefaultRepositoryPermission = "none"
)

type OrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType string

const (
	OrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationTypeAll     OrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType = "all"
	OrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationTypePrivate OrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType = "private"
	OrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationTypeNone    OrgsUpdateApplicationJSONRequestMembersAllowedRepositoryCreationType = "none"
)

type OrgsUpdateMembershipForAuthenticatedUserApplicationJSONRequest struct {
	State OrgsUpdateMembershipForAuthenticatedUserApplicationJSONRequestState `json:"state"`
}

func (*OrgsUpdateMembershipForAuthenticatedUserApplicationJSONRequest) orgsUpdateMembershipForAuthenticatedUserRequest() {
}

type OrgsUpdateMembershipForAuthenticatedUserApplicationJSONRequestState string

const (
	OrgsUpdateMembershipForAuthenticatedUserApplicationJSONRequestStateActive OrgsUpdateMembershipForAuthenticatedUserApplicationJSONRequestState = "active"
)

// PackagesBillingUsage describes #/components/schemas/packages-billing-usage.
type PackagesBillingUsage struct {
	IncludedGigabytesBandwidth      int `json:"included_gigabytes_bandwidth"`
	TotalGigabytesBandwidthUsed     int `json:"total_gigabytes_bandwidth_used"`
	TotalPaidGigabytesBandwidthUsed int `json:"total_paid_gigabytes_bandwidth_used"`
}

// Page describes #/components/schemas/page.
type Page struct {
	Cname                     NilString                      `json:"cname"`
	Custom404                 bool                           `json:"custom_404"`
	HTMLURL                   OptURL                         `json:"html_url"`
	HTTPSCertificate          OptPagesHTTPSCertificate       `json:"https_certificate"`
	HTTPSEnforced             OptBool                        `json:"https_enforced"`
	PendingDomainUnverifiedAt OptNilTime                     `json:"pending_domain_unverified_at"`
	ProtectedDomainState      OptNilPageProtectedDomainState `json:"protected_domain_state"`
	Public                    bool                           `json:"public"`
	Source                    OptPagesSourceHash             `json:"source"`
	Status                    NilPageStatus                  `json:"status"`
	URL                       url.URL                        `json:"url"`
}

func (*Page) reposGetPagesResponse() {}

// PageBuild describes #/components/schemas/page-build.
type PageBuild struct {
	Commit    string             `json:"commit"`
	CreatedAt time.Time          `json:"created_at"`
	Duration  int                `json:"duration"`
	Error     PageBuildError     `json:"error"`
	Pusher    NullableSimpleUser `json:"pusher"`
	Status    string             `json:"status"`
	URL       url.URL            `json:"url"`
	UpdatedAt time.Time          `json:"updated_at"`
}

type PageBuildError struct {
	Message NilString `json:"message"`
}

// PageBuildStatus describes #/components/schemas/page-build-status.
type PageBuildStatus struct {
	Status string  `json:"status"`
	URL    url.URL `json:"url"`
}

type PageProtectedDomainState string

const (
	PageProtectedDomainStatePending    PageProtectedDomainState = "pending"
	PageProtectedDomainStateVerified   PageProtectedDomainState = "verified"
	PageProtectedDomainStateUnverified PageProtectedDomainState = "unverified"
)

type PageStatus string

const (
	PageStatusBuilt    PageStatus = "built"
	PageStatusBuilding PageStatus = "building"
	PageStatusErrored  PageStatus = "errored"
)

// PagesHTTPSCertificate describes #/components/schemas/pages-https-certificate.
type PagesHTTPSCertificate struct {
	Description string                     `json:"description"`
	Domains     []string                   `json:"domains"`
	ExpiresAt   OptTime                    `json:"expires_at"`
	State       PagesHTTPSCertificateState `json:"state"`
}

type PagesHTTPSCertificateState string

const (
	PagesHTTPSCertificateStateNew                  PagesHTTPSCertificateState = "new"
	PagesHTTPSCertificateStateAuthorizationCreated PagesHTTPSCertificateState = "authorization_created"
	PagesHTTPSCertificateStateAuthorizationPending PagesHTTPSCertificateState = "authorization_pending"
	PagesHTTPSCertificateStateAuthorized           PagesHTTPSCertificateState = "authorized"
	PagesHTTPSCertificateStateAuthorizationRevoked PagesHTTPSCertificateState = "authorization_revoked"
	PagesHTTPSCertificateStateIssued               PagesHTTPSCertificateState = "issued"
	PagesHTTPSCertificateStateUploaded             PagesHTTPSCertificateState = "uploaded"
	PagesHTTPSCertificateStateApproved             PagesHTTPSCertificateState = "approved"
	PagesHTTPSCertificateStateErrored              PagesHTTPSCertificateState = "errored"
	PagesHTTPSCertificateStateBadAuthz             PagesHTTPSCertificateState = "bad_authz"
	PagesHTTPSCertificateStateDestroyPending       PagesHTTPSCertificateState = "destroy_pending"
	PagesHTTPSCertificateStateDNSChanged           PagesHTTPSCertificateState = "dns_changed"
)

// PagesHealthCheck describes #/components/schemas/pages-health-check.
type PagesHealthCheck struct {
	AltDomain OptNilPagesHealthCheckAltDomain `json:"alt_domain"`
	Domain    OptPagesHealthCheckDomain       `json:"domain"`
}

func (*PagesHealthCheck) reposGetPagesHealthCheckResponse() {}

type PagesHealthCheckAltDomain struct {
	CaaError                      OptNilString `json:"caa_error"`
	DNSResolves                   OptBool      `json:"dns_resolves"`
	EnforcesHTTPS                 OptBool      `json:"enforces_https"`
	HTTPSError                    OptNilString `json:"https_error"`
	HasCnameRecord                OptNilBool   `json:"has_cname_record"`
	HasMxRecordsPresent           OptNilBool   `json:"has_mx_records_present"`
	Host                          OptString    `json:"host"`
	IsARecord                     OptNilBool   `json:"is_a_record"`
	IsApexDomain                  OptBool      `json:"is_apex_domain"`
	IsCloudflareIP                OptNilBool   `json:"is_cloudflare_ip"`
	IsCnameToFastly               OptNilBool   `json:"is_cname_to_fastly"`
	IsCnameToGithubUserDomain     OptNilBool   `json:"is_cname_to_github_user_domain"`
	IsCnameToPagesDotGithubDotCom OptNilBool   `json:"is_cname_to_pages_dot_github_dot_com"`
	IsFastlyIP                    OptNilBool   `json:"is_fastly_ip"`
	IsHTTPSEligible               OptNilBool   `json:"is_https_eligible"`
	IsNonGithubPagesIPPresent     OptNilBool   `json:"is_non_github_pages_ip_present"`
	IsOldIPAddress                OptNilBool   `json:"is_old_ip_address"`
	IsPagesDomain                 OptBool      `json:"is_pages_domain"`
	IsPointedToGithubPagesIP      OptNilBool   `json:"is_pointed_to_github_pages_ip"`
	IsProxied                     OptNilBool   `json:"is_proxied"`
	IsServedByPages               OptNilBool   `json:"is_served_by_pages"`
	IsValid                       OptBool      `json:"is_valid"`
	IsValidDomain                 OptBool      `json:"is_valid_domain"`
	Nameservers                   OptString    `json:"nameservers"`
	Reason                        OptNilString `json:"reason"`
	RespondsToHTTPS               OptBool      `json:"responds_to_https"`
	ShouldBeARecord               OptNilBool   `json:"should_be_a_record"`
	URI                           OptString    `json:"uri"`
}

type PagesHealthCheckDomain struct {
	CaaError                      OptNilString `json:"caa_error"`
	DNSResolves                   OptBool      `json:"dns_resolves"`
	EnforcesHTTPS                 OptBool      `json:"enforces_https"`
	HTTPSError                    OptNilString `json:"https_error"`
	HasCnameRecord                OptNilBool   `json:"has_cname_record"`
	HasMxRecordsPresent           OptNilBool   `json:"has_mx_records_present"`
	Host                          OptString    `json:"host"`
	IsARecord                     OptNilBool   `json:"is_a_record"`
	IsApexDomain                  OptBool      `json:"is_apex_domain"`
	IsCloudflareIP                OptNilBool   `json:"is_cloudflare_ip"`
	IsCnameToFastly               OptNilBool   `json:"is_cname_to_fastly"`
	IsCnameToGithubUserDomain     OptNilBool   `json:"is_cname_to_github_user_domain"`
	IsCnameToPagesDotGithubDotCom OptNilBool   `json:"is_cname_to_pages_dot_github_dot_com"`
	IsFastlyIP                    OptNilBool   `json:"is_fastly_ip"`
	IsHTTPSEligible               OptNilBool   `json:"is_https_eligible"`
	IsNonGithubPagesIPPresent     OptNilBool   `json:"is_non_github_pages_ip_present"`
	IsOldIPAddress                OptNilBool   `json:"is_old_ip_address"`
	IsPagesDomain                 OptBool      `json:"is_pages_domain"`
	IsPointedToGithubPagesIP      OptNilBool   `json:"is_pointed_to_github_pages_ip"`
	IsProxied                     OptNilBool   `json:"is_proxied"`
	IsServedByPages               OptNilBool   `json:"is_served_by_pages"`
	IsValid                       OptBool      `json:"is_valid"`
	IsValidDomain                 OptBool      `json:"is_valid_domain"`
	Nameservers                   OptString    `json:"nameservers"`
	Reason                        OptNilString `json:"reason"`
	RespondsToHTTPS               OptBool      `json:"responds_to_https"`
	ShouldBeARecord               OptNilBool   `json:"should_be_a_record"`
	URI                           OptString    `json:"uri"`
}

// PagesSourceHash describes #/components/schemas/pages-source-hash.
type PagesSourceHash struct {
	Branch string `json:"branch"`
	Path   string `json:"path"`
}

// ParticipationStats describes #/components/schemas/participation-stats.
type ParticipationStats struct {
	All   []int `json:"all"`
	Owner []int `json:"owner"`
}

func (*ParticipationStats) reposGetParticipationStatsResponse() {}

// PorterAuthor describes #/components/schemas/porter-author.
type PorterAuthor struct {
	Email      string  `json:"email"`
	ID         int     `json:"id"`
	ImportURL  url.URL `json:"import_url"`
	Name       string  `json:"name"`
	RemoteID   string  `json:"remote_id"`
	RemoteName string  `json:"remote_name"`
	URL        url.URL `json:"url"`
}

// PorterLargeFile describes #/components/schemas/porter-large-file.
type PorterLargeFile struct {
	Oid     string `json:"oid"`
	Path    string `json:"path"`
	RefName string `json:"ref_name"`
	Size    int    `json:"size"`
}

type PreviewHeaderMissing struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*PreviewHeaderMissing) appsGetBySlugResponse()                      {}
func (*PreviewHeaderMissing) orgsListBlockedUsersResponse()               {}
func (*PreviewHeaderMissing) projectsCreateForAuthenticatedUserResponse() {}
func (*PreviewHeaderMissing) reactionsDeleteLegacyResponse()              {}
func (*PreviewHeaderMissing) reposGetAllTopicsResponse()                  {}
func (*PreviewHeaderMissing) reposGetBranchResponse()                     {}
func (*PreviewHeaderMissing) reposGetDeploymentStatusResponse()           {}
func (*PreviewHeaderMissing) reposGetReleaseAssetResponse()               {}
func (*PreviewHeaderMissing) reposReplaceAllTopicsResponse()              {}
func (*PreviewHeaderMissing) searchTopicsResponse()                       {}
func (*PreviewHeaderMissing) usersListBlockedByAuthenticatedResponse()    {}

// PrivateUser describes #/components/schemas/private-user.
type PrivateUser struct {
	AvatarURL               url.URL            `json:"avatar_url"`
	Bio                     NilString          `json:"bio"`
	Blog                    NilString          `json:"blog"`
	BusinessPlus            OptBool            `json:"business_plus"`
	Collaborators           int                `json:"collaborators"`
	Company                 NilString          `json:"company"`
	CreatedAt               time.Time          `json:"created_at"`
	DiskUsage               int                `json:"disk_usage"`
	Email                   NilString          `json:"email"`
	EventsURL               string             `json:"events_url"`
	Followers               int                `json:"followers"`
	FollowersURL            url.URL            `json:"followers_url"`
	Following               int                `json:"following"`
	FollowingURL            string             `json:"following_url"`
	GistsURL                string             `json:"gists_url"`
	GravatarID              NilString          `json:"gravatar_id"`
	HTMLURL                 url.URL            `json:"html_url"`
	Hireable                NilBool            `json:"hireable"`
	ID                      int                `json:"id"`
	LdapDn                  OptString          `json:"ldap_dn"`
	Location                NilString          `json:"location"`
	Login                   string             `json:"login"`
	Name                    NilString          `json:"name"`
	NodeID                  string             `json:"node_id"`
	OrganizationsURL        url.URL            `json:"organizations_url"`
	OwnedPrivateRepos       int                `json:"owned_private_repos"`
	Plan                    OptPrivateUserPlan `json:"plan"`
	PrivateGists            int                `json:"private_gists"`
	PublicGists             int                `json:"public_gists"`
	PublicRepos             int                `json:"public_repos"`
	ReceivedEventsURL       url.URL            `json:"received_events_url"`
	ReposURL                url.URL            `json:"repos_url"`
	SiteAdmin               bool               `json:"site_admin"`
	StarredURL              string             `json:"starred_url"`
	SubscriptionsURL        url.URL            `json:"subscriptions_url"`
	SuspendedAt             OptNilTime         `json:"suspended_at"`
	TotalPrivateRepos       int                `json:"total_private_repos"`
	TwitterUsername         OptNilString       `json:"twitter_username"`
	TwoFactorAuthentication bool               `json:"two_factor_authentication"`
	Type                    string             `json:"type"`
	URL                     url.URL            `json:"url"`
	UpdatedAt               time.Time          `json:"updated_at"`
}

type PrivateUserPlan struct {
	Collaborators int    `json:"collaborators"`
	Name          string `json:"name"`
	PrivateRepos  int    `json:"private_repos"`
	Space         int    `json:"space"`
}

// Project describes #/components/schemas/project.
type Project struct {
	Body                   NilString                        `json:"body"`
	ColumnsURL             url.URL                          `json:"columns_url"`
	CreatedAt              time.Time                        `json:"created_at"`
	Creator                NullableSimpleUser               `json:"creator"`
	HTMLURL                url.URL                          `json:"html_url"`
	ID                     int                              `json:"id"`
	Name                   string                           `json:"name"`
	NodeID                 string                           `json:"node_id"`
	Number                 int                              `json:"number"`
	OrganizationPermission OptProjectOrganizationPermission `json:"organization_permission"`
	OwnerURL               url.URL                          `json:"owner_url"`
	Private                OptBool                          `json:"private"`
	State                  string                           `json:"state"`
	URL                    url.URL                          `json:"url"`
	UpdatedAt              time.Time                        `json:"updated_at"`
}

func (*Project) projectsCreateForAuthenticatedUserResponse() {}
func (*Project) projectsCreateForOrgResponse()               {}
func (*Project) projectsCreateForRepoResponse()              {}
func (*Project) projectsGetResponse()                        {}
func (*Project) projectsUpdateResponse()                     {}

// ProjectCard describes #/components/schemas/project-card.
type ProjectCard struct {
	Archived   OptBool            `json:"archived"`
	ColumnName OptString          `json:"column_name"`
	ColumnURL  url.URL            `json:"column_url"`
	ContentURL OptURL             `json:"content_url"`
	CreatedAt  time.Time          `json:"created_at"`
	Creator    NullableSimpleUser `json:"creator"`
	ID         int                `json:"id"`
	NodeID     string             `json:"node_id"`
	Note       NilString          `json:"note"`
	ProjectID  OptString          `json:"project_id"`
	ProjectURL url.URL            `json:"project_url"`
	URL        url.URL            `json:"url"`
	UpdatedAt  time.Time          `json:"updated_at"`
}

func (*ProjectCard) projectsGetCardResponse()    {}
func (*ProjectCard) projectsUpdateCardResponse() {}

// ProjectColumn describes #/components/schemas/project-column.
type ProjectColumn struct {
	CardsURL   url.URL   `json:"cards_url"`
	CreatedAt  time.Time `json:"created_at"`
	ID         int       `json:"id"`
	Name       string    `json:"name"`
	NodeID     string    `json:"node_id"`
	ProjectURL url.URL   `json:"project_url"`
	URL        url.URL   `json:"url"`
	UpdatedAt  time.Time `json:"updated_at"`
}

func (*ProjectColumn) projectsCreateColumnResponse() {}
func (*ProjectColumn) projectsGetColumnResponse()    {}
func (*ProjectColumn) projectsUpdateColumnResponse() {}

type ProjectOrganizationPermission string

const (
	ProjectOrganizationPermissionRead  ProjectOrganizationPermission = "read"
	ProjectOrganizationPermissionWrite ProjectOrganizationPermission = "write"
	ProjectOrganizationPermissionAdmin ProjectOrganizationPermission = "admin"
	ProjectOrganizationPermissionNone  ProjectOrganizationPermission = "none"
)

type ProjectsAddCollaboratorApplicationJSONRequest struct {
	Permission OptProjectsAddCollaboratorApplicationJSONRequestPermission `json:"permission"`
}

func (*ProjectsAddCollaboratorApplicationJSONRequest) projectsAddCollaboratorRequest() {}

type ProjectsAddCollaboratorApplicationJSONRequestPermission string

const (
	ProjectsAddCollaboratorApplicationJSONRequestPermissionRead  ProjectsAddCollaboratorApplicationJSONRequestPermission = "read"
	ProjectsAddCollaboratorApplicationJSONRequestPermissionWrite ProjectsAddCollaboratorApplicationJSONRequestPermission = "write"
	ProjectsAddCollaboratorApplicationJSONRequestPermissionAdmin ProjectsAddCollaboratorApplicationJSONRequestPermission = "admin"
)

type ProjectsAddCollaboratorNoContent struct{}

type ProjectsCreateColumnApplicationJSONForbidden BasicError

func (*ProjectsCreateColumnApplicationJSONForbidden) projectsCreateColumnResponse() {}

type ProjectsCreateColumnApplicationJSONRequest struct {
	Name string `json:"name"`
}

type ProjectsCreateColumnApplicationJSONUnauthorized BasicError

func (*ProjectsCreateColumnApplicationJSONUnauthorized) projectsCreateColumnResponse() {}

type ProjectsCreateForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ProjectsCreateForAuthenticatedUserApplicationJSONForbidden) projectsCreateForAuthenticatedUserResponse() {
}

type ProjectsCreateForAuthenticatedUserApplicationJSONRequest struct {
	Body OptNilString `json:"body"`
	Name string       `json:"name"`
}

type ProjectsCreateForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ProjectsCreateForAuthenticatedUserApplicationJSONUnauthorized) projectsCreateForAuthenticatedUserResponse() {
}

type ProjectsCreateForOrgApplicationJSONForbidden BasicError

func (*ProjectsCreateForOrgApplicationJSONForbidden) projectsCreateForOrgResponse() {}

type ProjectsCreateForOrgApplicationJSONGone BasicError

func (*ProjectsCreateForOrgApplicationJSONGone) projectsCreateForOrgResponse() {}

type ProjectsCreateForOrgApplicationJSONNotFound BasicError

func (*ProjectsCreateForOrgApplicationJSONNotFound) projectsCreateForOrgResponse() {}

type ProjectsCreateForOrgApplicationJSONRequest struct {
	Body OptString `json:"body"`
	Name string    `json:"name"`
}

type ProjectsCreateForOrgApplicationJSONUnauthorized BasicError

func (*ProjectsCreateForOrgApplicationJSONUnauthorized) projectsCreateForOrgResponse() {}

type ProjectsCreateForRepoApplicationJSONForbidden BasicError

func (*ProjectsCreateForRepoApplicationJSONForbidden) projectsCreateForRepoResponse() {}

type ProjectsCreateForRepoApplicationJSONGone BasicError

func (*ProjectsCreateForRepoApplicationJSONGone) projectsCreateForRepoResponse() {}

type ProjectsCreateForRepoApplicationJSONNotFound BasicError

func (*ProjectsCreateForRepoApplicationJSONNotFound) projectsCreateForRepoResponse() {}

type ProjectsCreateForRepoApplicationJSONRequest struct {
	Body OptString `json:"body"`
	Name string    `json:"name"`
}

type ProjectsCreateForRepoApplicationJSONUnauthorized BasicError

func (*ProjectsCreateForRepoApplicationJSONUnauthorized) projectsCreateForRepoResponse() {}

type ProjectsDeleteApplicationJSONGone BasicError

func (*ProjectsDeleteApplicationJSONGone) projectsDeleteResponse() {}

type ProjectsDeleteApplicationJSONNotFound BasicError

func (*ProjectsDeleteApplicationJSONNotFound) projectsDeleteResponse() {}

type ProjectsDeleteApplicationJSONUnauthorized BasicError

func (*ProjectsDeleteApplicationJSONUnauthorized) projectsDeleteResponse() {}

type ProjectsDeleteCardApplicationJSONNotFound BasicError

func (*ProjectsDeleteCardApplicationJSONNotFound) projectsDeleteCardResponse() {}

type ProjectsDeleteCardApplicationJSONUnauthorized BasicError

func (*ProjectsDeleteCardApplicationJSONUnauthorized) projectsDeleteCardResponse() {}

type ProjectsDeleteCardForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Errors           *[]string `json:"errors"`
	Message          OptString `json:"message"`
}

func (*ProjectsDeleteCardForbidden) projectsDeleteCardResponse() {}

type ProjectsDeleteCardNoContent struct{}

func (*ProjectsDeleteCardNoContent) projectsDeleteCardResponse() {}

type ProjectsDeleteColumnApplicationJSONForbidden BasicError

func (*ProjectsDeleteColumnApplicationJSONForbidden) projectsDeleteColumnResponse() {}

type ProjectsDeleteColumnApplicationJSONUnauthorized BasicError

func (*ProjectsDeleteColumnApplicationJSONUnauthorized) projectsDeleteColumnResponse() {}

type ProjectsDeleteColumnNoContent struct{}

func (*ProjectsDeleteColumnNoContent) projectsDeleteColumnResponse() {}

type ProjectsDeleteForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Errors           *[]string `json:"errors"`
	Message          OptString `json:"message"`
}

func (*ProjectsDeleteForbidden) projectsDeleteResponse() {}

type ProjectsDeleteNoContent struct{}

func (*ProjectsDeleteNoContent) projectsDeleteResponse() {}

type ProjectsGetApplicationJSONForbidden BasicError

func (*ProjectsGetApplicationJSONForbidden) projectsGetResponse() {}

type ProjectsGetApplicationJSONUnauthorized BasicError

func (*ProjectsGetApplicationJSONUnauthorized) projectsGetResponse() {}

type ProjectsGetCardApplicationJSONForbidden BasicError

func (*ProjectsGetCardApplicationJSONForbidden) projectsGetCardResponse() {}

type ProjectsGetCardApplicationJSONNotFound BasicError

func (*ProjectsGetCardApplicationJSONNotFound) projectsGetCardResponse() {}

type ProjectsGetCardApplicationJSONUnauthorized BasicError

func (*ProjectsGetCardApplicationJSONUnauthorized) projectsGetCardResponse() {}

type ProjectsGetColumnApplicationJSONForbidden BasicError

func (*ProjectsGetColumnApplicationJSONForbidden) projectsGetColumnResponse() {}

type ProjectsGetColumnApplicationJSONNotFound BasicError

func (*ProjectsGetColumnApplicationJSONNotFound) projectsGetColumnResponse() {}

type ProjectsGetColumnApplicationJSONUnauthorized BasicError

func (*ProjectsGetColumnApplicationJSONUnauthorized) projectsGetColumnResponse() {}

type ProjectsListColumnsApplicationJSONForbidden BasicError

func (*ProjectsListColumnsApplicationJSONForbidden) projectsListColumnsResponse() {}

type ProjectsListColumnsApplicationJSONUnauthorized BasicError

func (*ProjectsListColumnsApplicationJSONUnauthorized) projectsListColumnsResponse() {}

type ProjectsListColumnsOK []ProjectColumn

func (*ProjectsListColumnsOK) projectsListColumnsResponse() {}

type ProjectsMoveCardApplicationJSONRequest struct {
	ColumnID OptInt `json:"column_id"`
	Position string `json:"position"`
}

func (*ProjectsMoveCardApplicationJSONRequest) projectsMoveCardRequest() {}

type ProjectsMoveCardCreated struct{}

type ProjectsMoveCardForbidden struct {
	DocumentationURL OptString                              `json:"documentation_url"`
	Errors           *[]ProjectsMoveCardForbiddenErrorsItem `json:"errors"`
	Message          OptString                              `json:"message"`
}

type ProjectsMoveCardForbiddenErrorsItem struct {
	Code     OptString `json:"code"`
	Field    OptString `json:"field"`
	Message  OptString `json:"message"`
	Resource OptString `json:"resource"`
}

type ProjectsMoveColumnApplicationJSONForbidden BasicError

func (*ProjectsMoveColumnApplicationJSONForbidden) projectsMoveColumnResponse() {}

type ProjectsMoveColumnApplicationJSONRequest struct {
	Position string `json:"position"`
}

type ProjectsMoveColumnApplicationJSONUnauthorized BasicError

func (*ProjectsMoveColumnApplicationJSONUnauthorized) projectsMoveColumnResponse() {}

type ProjectsMoveColumnCreated struct{}

func (*ProjectsMoveColumnCreated) projectsMoveColumnResponse() {}

type ProjectsRemoveCollaboratorNoContent struct{}

type ProjectsUpdateApplicationJSONGone BasicError

func (*ProjectsUpdateApplicationJSONGone) projectsUpdateResponse() {}

type ProjectsUpdateApplicationJSONRequest struct {
	Body                   OptNilString                                                  `json:"body"`
	Name                   OptString                                                     `json:"name"`
	OrganizationPermission OptProjectsUpdateApplicationJSONRequestOrganizationPermission `json:"organization_permission"`
	Private                OptBool                                                       `json:"private"`
	State                  OptString                                                     `json:"state"`
}

type ProjectsUpdateApplicationJSONRequestOrganizationPermission string

const (
	ProjectsUpdateApplicationJSONRequestOrganizationPermissionRead  ProjectsUpdateApplicationJSONRequestOrganizationPermission = "read"
	ProjectsUpdateApplicationJSONRequestOrganizationPermissionWrite ProjectsUpdateApplicationJSONRequestOrganizationPermission = "write"
	ProjectsUpdateApplicationJSONRequestOrganizationPermissionAdmin ProjectsUpdateApplicationJSONRequestOrganizationPermission = "admin"
	ProjectsUpdateApplicationJSONRequestOrganizationPermissionNone  ProjectsUpdateApplicationJSONRequestOrganizationPermission = "none"
)

type ProjectsUpdateApplicationJSONUnauthorized BasicError

func (*ProjectsUpdateApplicationJSONUnauthorized) projectsUpdateResponse() {}

type ProjectsUpdateCardApplicationJSONForbidden BasicError

func (*ProjectsUpdateCardApplicationJSONForbidden) projectsUpdateCardResponse() {}

type ProjectsUpdateCardApplicationJSONNotFound BasicError

func (*ProjectsUpdateCardApplicationJSONNotFound) projectsUpdateCardResponse() {}

type ProjectsUpdateCardApplicationJSONRequest struct {
	Archived OptBool      `json:"archived"`
	Note     OptNilString `json:"note"`
}

type ProjectsUpdateCardApplicationJSONUnauthorized BasicError

func (*ProjectsUpdateCardApplicationJSONUnauthorized) projectsUpdateCardResponse() {}

type ProjectsUpdateColumnApplicationJSONForbidden BasicError

func (*ProjectsUpdateColumnApplicationJSONForbidden) projectsUpdateColumnResponse() {}

type ProjectsUpdateColumnApplicationJSONRequest struct {
	Name string `json:"name"`
}

type ProjectsUpdateColumnApplicationJSONUnauthorized BasicError

func (*ProjectsUpdateColumnApplicationJSONUnauthorized) projectsUpdateColumnResponse() {}

type ProjectsUpdateForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Errors           *[]string `json:"errors"`
	Message          OptString `json:"message"`
}

func (*ProjectsUpdateForbidden) projectsUpdateResponse() {}

type ProjectsUpdateNotFound struct{}

func (*ProjectsUpdateNotFound) projectsUpdateResponse() {}

// ProtectedBranch describes #/components/schemas/protected-branch.
type ProtectedBranch struct {
	AllowDeletions                 OptProtectedBranchAllowDeletions                 `json:"allow_deletions"`
	AllowForcePushes               OptProtectedBranchAllowForcePushes               `json:"allow_force_pushes"`
	EnforceAdmins                  OptProtectedBranchEnforceAdmins                  `json:"enforce_admins"`
	RequiredConversationResolution OptProtectedBranchRequiredConversationResolution `json:"required_conversation_resolution"`
	RequiredLinearHistory          OptProtectedBranchRequiredLinearHistory          `json:"required_linear_history"`
	RequiredPullRequestReviews     OptProtectedBranchRequiredPullRequestReviews     `json:"required_pull_request_reviews"`
	RequiredSignatures             OptProtectedBranchRequiredSignatures             `json:"required_signatures"`
	RequiredStatusChecks           OptStatusCheckPolicy                             `json:"required_status_checks"`
	Restrictions                   OptBranchRestrictionPolicy                       `json:"restrictions"`
	URL                            url.URL                                          `json:"url"`
}

func (*ProtectedBranch) reposUpdateBranchProtectionResponse() {}

// ProtectedBranchAdminEnforced describes #/components/schemas/protected-branch-admin-enforced.
type ProtectedBranchAdminEnforced struct {
	Enabled bool    `json:"enabled"`
	URL     url.URL `json:"url"`
}

func (*ProtectedBranchAdminEnforced) reposCreateCommitSignatureProtectionResponse() {}
func (*ProtectedBranchAdminEnforced) reposGetCommitSignatureProtectionResponse()    {}

type ProtectedBranchAllowDeletions struct {
	Enabled bool `json:"enabled"`
}

type ProtectedBranchAllowForcePushes struct {
	Enabled bool `json:"enabled"`
}

type ProtectedBranchEnforceAdmins struct {
	Enabled bool    `json:"enabled"`
	URL     url.URL `json:"url"`
}

// ProtectedBranchPullRequestReview describes #/components/schemas/protected-branch-pull-request-review.
type ProtectedBranchPullRequestReview struct {
	DismissStaleReviews          bool                                                     `json:"dismiss_stale_reviews"`
	DismissalRestrictions        OptProtectedBranchPullRequestReviewDismissalRestrictions `json:"dismissal_restrictions"`
	RequireCodeOwnerReviews      bool                                                     `json:"require_code_owner_reviews"`
	RequiredApprovingReviewCount OptInt                                                   `json:"required_approving_review_count"`
	URL                          OptURL                                                   `json:"url"`
}

type ProtectedBranchPullRequestReviewDismissalRestrictions struct {
	Teams    *[]Team       `json:"teams"`
	TeamsURL OptString     `json:"teams_url"`
	URL      OptString     `json:"url"`
	Users    *[]SimpleUser `json:"users"`
	UsersURL OptString     `json:"users_url"`
}

type ProtectedBranchRequiredConversationResolution struct {
	Enabled OptBool `json:"enabled"`
}

type ProtectedBranchRequiredLinearHistory struct {
	Enabled bool `json:"enabled"`
}

type ProtectedBranchRequiredPullRequestReviews struct {
	DismissStaleReviews          OptBool                                                           `json:"dismiss_stale_reviews"`
	DismissalRestrictions        OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions `json:"dismissal_restrictions"`
	RequireCodeOwnerReviews      OptBool                                                           `json:"require_code_owner_reviews"`
	RequiredApprovingReviewCount OptInt                                                            `json:"required_approving_review_count"`
	URL                          url.URL                                                           `json:"url"`
}

type ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions struct {
	Teams    []Team       `json:"teams"`
	TeamsURL url.URL      `json:"teams_url"`
	URL      url.URL      `json:"url"`
	Users    []SimpleUser `json:"users"`
	UsersURL url.URL      `json:"users_url"`
}

type ProtectedBranchRequiredSignatures struct {
	Enabled bool    `json:"enabled"`
	URL     url.URL `json:"url"`
}

// PublicUser describes #/components/schemas/public-user.
type PublicUser struct {
	AvatarURL         url.URL           `json:"avatar_url"`
	Bio               NilString         `json:"bio"`
	Blog              NilString         `json:"blog"`
	Collaborators     OptInt            `json:"collaborators"`
	Company           NilString         `json:"company"`
	CreatedAt         time.Time         `json:"created_at"`
	DiskUsage         OptInt            `json:"disk_usage"`
	Email             NilString         `json:"email"`
	EventsURL         string            `json:"events_url"`
	Followers         int               `json:"followers"`
	FollowersURL      url.URL           `json:"followers_url"`
	Following         int               `json:"following"`
	FollowingURL      string            `json:"following_url"`
	GistsURL          string            `json:"gists_url"`
	GravatarID        NilString         `json:"gravatar_id"`
	HTMLURL           url.URL           `json:"html_url"`
	Hireable          NilBool           `json:"hireable"`
	ID                int               `json:"id"`
	Location          NilString         `json:"location"`
	Login             string            `json:"login"`
	Name              NilString         `json:"name"`
	NodeID            string            `json:"node_id"`
	OrganizationsURL  url.URL           `json:"organizations_url"`
	OwnedPrivateRepos OptInt            `json:"owned_private_repos"`
	Plan              OptPublicUserPlan `json:"plan"`
	PrivateGists      OptInt            `json:"private_gists"`
	PublicGists       int               `json:"public_gists"`
	PublicRepos       int               `json:"public_repos"`
	ReceivedEventsURL url.URL           `json:"received_events_url"`
	ReposURL          url.URL           `json:"repos_url"`
	SiteAdmin         bool              `json:"site_admin"`
	StarredURL        string            `json:"starred_url"`
	SubscriptionsURL  url.URL           `json:"subscriptions_url"`
	SuspendedAt       OptNilTime        `json:"suspended_at"`
	TotalPrivateRepos OptInt            `json:"total_private_repos"`
	TwitterUsername   OptNilString      `json:"twitter_username"`
	Type              string            `json:"type"`
	URL               url.URL           `json:"url"`
	UpdatedAt         time.Time         `json:"updated_at"`
}

type PublicUserPlan struct {
	Collaborators int    `json:"collaborators"`
	Name          string `json:"name"`
	PrivateRepos  int    `json:"private_repos"`
	Space         int    `json:"space"`
}

// PullRequest describes #/components/schemas/pull-request.
type PullRequest struct {
	ActiveLockReason    OptNilString            `json:"active_lock_reason"`
	Additions           int                     `json:"additions"`
	Assignee            NullableSimpleUser      `json:"assignee"`
	Assignees           *[]SimpleUser           `json:"assignees"`
	AuthorAssociation   AuthorAssociation       `json:"author_association"`
	AutoMerge           AutoMerge               `json:"auto_merge"`
	Base                PullRequestBase         `json:"base"`
	Body                NilString               `json:"body"`
	ChangedFiles        int                     `json:"changed_files"`
	ClosedAt            NilTime                 `json:"closed_at"`
	Comments            int                     `json:"comments"`
	CommentsURL         url.URL                 `json:"comments_url"`
	Commits             int                     `json:"commits"`
	CommitsURL          url.URL                 `json:"commits_url"`
	CreatedAt           time.Time               `json:"created_at"`
	Deletions           int                     `json:"deletions"`
	DiffURL             url.URL                 `json:"diff_url"`
	Draft               OptBool                 `json:"draft"`
	HTMLURL             url.URL                 `json:"html_url"`
	Head                PullRequestHead         `json:"head"`
	ID                  int                     `json:"id"`
	IssueURL            url.URL                 `json:"issue_url"`
	Labels              []PullRequestLabelsItem `json:"labels"`
	Links               PullRequestLinks        `json:"_links"`
	Locked              bool                    `json:"locked"`
	MaintainerCanModify bool                    `json:"maintainer_can_modify"`
	MergeCommitSha      NilString               `json:"merge_commit_sha"`
	Mergeable           NilBool                 `json:"mergeable"`
	MergeableState      string                  `json:"mergeable_state"`
	Merged              bool                    `json:"merged"`
	MergedAt            NilTime                 `json:"merged_at"`
	MergedBy            NullableSimpleUser      `json:"merged_by"`
	Milestone           NullableMilestone       `json:"milestone"`
	NodeID              string                  `json:"node_id"`
	Number              int                     `json:"number"`
	PatchURL            url.URL                 `json:"patch_url"`
	Rebaseable          OptNilBool              `json:"rebaseable"`
	RequestedReviewers  *[]SimpleUser           `json:"requested_reviewers"`
	RequestedTeams      *[]TeamSimple           `json:"requested_teams"`
	ReviewCommentURL    string                  `json:"review_comment_url"`
	ReviewComments      int                     `json:"review_comments"`
	ReviewCommentsURL   url.URL                 `json:"review_comments_url"`
	State               PullRequestState        `json:"state"`
	StatusesURL         url.URL                 `json:"statuses_url"`
	Title               string                  `json:"title"`
	URL                 url.URL                 `json:"url"`
	UpdatedAt           time.Time               `json:"updated_at"`
	User                NullableSimpleUser      `json:"user"`
}

func (*PullRequest) pullsGetResponse() {}

type PullRequestBase struct {
	Label string              `json:"label"`
	Ref   string              `json:"ref"`
	Repo  PullRequestBaseRepo `json:"repo"`
	Sha   string              `json:"sha"`
	User  PullRequestBaseUser `json:"user"`
}

type PullRequestBaseRepo struct {
	AllowForking     OptBool                           `json:"allow_forking"`
	AllowMergeCommit OptBool                           `json:"allow_merge_commit"`
	AllowRebaseMerge OptBool                           `json:"allow_rebase_merge"`
	AllowSquashMerge OptBool                           `json:"allow_squash_merge"`
	ArchiveURL       string                            `json:"archive_url"`
	Archived         bool                              `json:"archived"`
	AssigneesURL     string                            `json:"assignees_url"`
	BlobsURL         string                            `json:"blobs_url"`
	BranchesURL      string                            `json:"branches_url"`
	CloneURL         string                            `json:"clone_url"`
	CollaboratorsURL string                            `json:"collaborators_url"`
	CommentsURL      string                            `json:"comments_url"`
	CommitsURL       string                            `json:"commits_url"`
	CompareURL       string                            `json:"compare_url"`
	ContentsURL      string                            `json:"contents_url"`
	ContributorsURL  url.URL                           `json:"contributors_url"`
	CreatedAt        time.Time                         `json:"created_at"`
	DefaultBranch    string                            `json:"default_branch"`
	DeploymentsURL   url.URL                           `json:"deployments_url"`
	Description      NilString                         `json:"description"`
	Disabled         bool                              `json:"disabled"`
	DownloadsURL     url.URL                           `json:"downloads_url"`
	EventsURL        url.URL                           `json:"events_url"`
	Fork             bool                              `json:"fork"`
	Forks            int                               `json:"forks"`
	ForksCount       int                               `json:"forks_count"`
	ForksURL         url.URL                           `json:"forks_url"`
	FullName         string                            `json:"full_name"`
	GitCommitsURL    string                            `json:"git_commits_url"`
	GitRefsURL       string                            `json:"git_refs_url"`
	GitTagsURL       string                            `json:"git_tags_url"`
	GitURL           string                            `json:"git_url"`
	HTMLURL          url.URL                           `json:"html_url"`
	HasDownloads     bool                              `json:"has_downloads"`
	HasIssues        bool                              `json:"has_issues"`
	HasPages         bool                              `json:"has_pages"`
	HasProjects      bool                              `json:"has_projects"`
	HasWiki          bool                              `json:"has_wiki"`
	Homepage         NilURL                            `json:"homepage"`
	HooksURL         url.URL                           `json:"hooks_url"`
	ID               int                               `json:"id"`
	IssueCommentURL  string                            `json:"issue_comment_url"`
	IssueEventsURL   string                            `json:"issue_events_url"`
	IssuesURL        string                            `json:"issues_url"`
	KeysURL          string                            `json:"keys_url"`
	LabelsURL        string                            `json:"labels_url"`
	Language         NilString                         `json:"language"`
	LanguagesURL     url.URL                           `json:"languages_url"`
	License          NullableLicenseSimple             `json:"license"`
	MasterBranch     OptString                         `json:"master_branch"`
	MergesURL        url.URL                           `json:"merges_url"`
	MilestonesURL    string                            `json:"milestones_url"`
	MirrorURL        NilURL                            `json:"mirror_url"`
	Name             string                            `json:"name"`
	NodeID           string                            `json:"node_id"`
	NotificationsURL string                            `json:"notifications_url"`
	OpenIssues       int                               `json:"open_issues"`
	OpenIssuesCount  int                               `json:"open_issues_count"`
	Owner            PullRequestBaseRepoOwner          `json:"owner"`
	Permissions      OptPullRequestBaseRepoPermissions `json:"permissions"`
	Private          bool                              `json:"private"`
	PullsURL         string                            `json:"pulls_url"`
	PushedAt         time.Time                         `json:"pushed_at"`
	ReleasesURL      string                            `json:"releases_url"`
	SSHURL           string                            `json:"ssh_url"`
	Size             int                               `json:"size"`
	StargazersCount  int                               `json:"stargazers_count"`
	StargazersURL    url.URL                           `json:"stargazers_url"`
	StatusesURL      string                            `json:"statuses_url"`
	SubscribersURL   url.URL                           `json:"subscribers_url"`
	SubscriptionURL  url.URL                           `json:"subscription_url"`
	SvnURL           url.URL                           `json:"svn_url"`
	TagsURL          url.URL                           `json:"tags_url"`
	TeamsURL         url.URL                           `json:"teams_url"`
	TempCloneToken   OptString                         `json:"temp_clone_token"`
	Topics           *[]string                         `json:"topics"`
	TreesURL         string                            `json:"trees_url"`
	URL              url.URL                           `json:"url"`
	UpdatedAt        time.Time                         `json:"updated_at"`
	Watchers         int                               `json:"watchers"`
	WatchersCount    int                               `json:"watchers_count"`
}

type PullRequestBaseRepoOwner struct {
	AvatarURL         url.URL   `json:"avatar_url"`
	EventsURL         string    `json:"events_url"`
	FollowersURL      url.URL   `json:"followers_url"`
	FollowingURL      string    `json:"following_url"`
	GistsURL          string    `json:"gists_url"`
	GravatarID        NilString `json:"gravatar_id"`
	HTMLURL           url.URL   `json:"html_url"`
	ID                int       `json:"id"`
	Login             string    `json:"login"`
	NodeID            string    `json:"node_id"`
	OrganizationsURL  url.URL   `json:"organizations_url"`
	ReceivedEventsURL url.URL   `json:"received_events_url"`
	ReposURL          url.URL   `json:"repos_url"`
	SiteAdmin         bool      `json:"site_admin"`
	StarredURL        string    `json:"starred_url"`
	SubscriptionsURL  url.URL   `json:"subscriptions_url"`
	Type              string    `json:"type"`
	URL               url.URL   `json:"url"`
}

type PullRequestBaseRepoPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

type PullRequestBaseUser struct {
	AvatarURL         url.URL   `json:"avatar_url"`
	EventsURL         string    `json:"events_url"`
	FollowersURL      url.URL   `json:"followers_url"`
	FollowingURL      string    `json:"following_url"`
	GistsURL          string    `json:"gists_url"`
	GravatarID        NilString `json:"gravatar_id"`
	HTMLURL           url.URL   `json:"html_url"`
	ID                int       `json:"id"`
	Login             string    `json:"login"`
	NodeID            string    `json:"node_id"`
	OrganizationsURL  url.URL   `json:"organizations_url"`
	ReceivedEventsURL url.URL   `json:"received_events_url"`
	ReposURL          url.URL   `json:"repos_url"`
	SiteAdmin         bool      `json:"site_admin"`
	StarredURL        string    `json:"starred_url"`
	SubscriptionsURL  url.URL   `json:"subscriptions_url"`
	Type              string    `json:"type"`
	URL               url.URL   `json:"url"`
}

type PullRequestHead struct {
	Label string                 `json:"label"`
	Ref   string                 `json:"ref"`
	Repo  NilPullRequestHeadRepo `json:"repo"`
	Sha   string                 `json:"sha"`
	User  PullRequestHeadUser    `json:"user"`
}

type PullRequestHeadRepo struct {
	AllowForking     OptBool                           `json:"allow_forking"`
	AllowMergeCommit OptBool                           `json:"allow_merge_commit"`
	AllowRebaseMerge OptBool                           `json:"allow_rebase_merge"`
	AllowSquashMerge OptBool                           `json:"allow_squash_merge"`
	ArchiveURL       string                            `json:"archive_url"`
	Archived         bool                              `json:"archived"`
	AssigneesURL     string                            `json:"assignees_url"`
	BlobsURL         string                            `json:"blobs_url"`
	BranchesURL      string                            `json:"branches_url"`
	CloneURL         string                            `json:"clone_url"`
	CollaboratorsURL string                            `json:"collaborators_url"`
	CommentsURL      string                            `json:"comments_url"`
	CommitsURL       string                            `json:"commits_url"`
	CompareURL       string                            `json:"compare_url"`
	ContentsURL      string                            `json:"contents_url"`
	ContributorsURL  url.URL                           `json:"contributors_url"`
	CreatedAt        time.Time                         `json:"created_at"`
	DefaultBranch    string                            `json:"default_branch"`
	DeploymentsURL   url.URL                           `json:"deployments_url"`
	Description      NilString                         `json:"description"`
	Disabled         bool                              `json:"disabled"`
	DownloadsURL     url.URL                           `json:"downloads_url"`
	EventsURL        url.URL                           `json:"events_url"`
	Fork             bool                              `json:"fork"`
	Forks            int                               `json:"forks"`
	ForksCount       int                               `json:"forks_count"`
	ForksURL         url.URL                           `json:"forks_url"`
	FullName         string                            `json:"full_name"`
	GitCommitsURL    string                            `json:"git_commits_url"`
	GitRefsURL       string                            `json:"git_refs_url"`
	GitTagsURL       string                            `json:"git_tags_url"`
	GitURL           string                            `json:"git_url"`
	HTMLURL          url.URL                           `json:"html_url"`
	HasDownloads     bool                              `json:"has_downloads"`
	HasIssues        bool                              `json:"has_issues"`
	HasPages         bool                              `json:"has_pages"`
	HasProjects      bool                              `json:"has_projects"`
	HasWiki          bool                              `json:"has_wiki"`
	Homepage         NilURL                            `json:"homepage"`
	HooksURL         url.URL                           `json:"hooks_url"`
	ID               int                               `json:"id"`
	IssueCommentURL  string                            `json:"issue_comment_url"`
	IssueEventsURL   string                            `json:"issue_events_url"`
	IssuesURL        string                            `json:"issues_url"`
	KeysURL          string                            `json:"keys_url"`
	LabelsURL        string                            `json:"labels_url"`
	Language         NilString                         `json:"language"`
	LanguagesURL     url.URL                           `json:"languages_url"`
	License          NilPullRequestHeadRepoLicense     `json:"license"`
	MasterBranch     OptString                         `json:"master_branch"`
	MergesURL        url.URL                           `json:"merges_url"`
	MilestonesURL    string                            `json:"milestones_url"`
	MirrorURL        NilURL                            `json:"mirror_url"`
	Name             string                            `json:"name"`
	NodeID           string                            `json:"node_id"`
	NotificationsURL string                            `json:"notifications_url"`
	OpenIssues       int                               `json:"open_issues"`
	OpenIssuesCount  int                               `json:"open_issues_count"`
	Owner            PullRequestHeadRepoOwner          `json:"owner"`
	Permissions      OptPullRequestHeadRepoPermissions `json:"permissions"`
	Private          bool                              `json:"private"`
	PullsURL         string                            `json:"pulls_url"`
	PushedAt         time.Time                         `json:"pushed_at"`
	ReleasesURL      string                            `json:"releases_url"`
	SSHURL           string                            `json:"ssh_url"`
	Size             int                               `json:"size"`
	StargazersCount  int                               `json:"stargazers_count"`
	StargazersURL    url.URL                           `json:"stargazers_url"`
	StatusesURL      string                            `json:"statuses_url"`
	SubscribersURL   url.URL                           `json:"subscribers_url"`
	SubscriptionURL  url.URL                           `json:"subscription_url"`
	SvnURL           url.URL                           `json:"svn_url"`
	TagsURL          url.URL                           `json:"tags_url"`
	TeamsURL         url.URL                           `json:"teams_url"`
	TempCloneToken   OptString                         `json:"temp_clone_token"`
	Topics           *[]string                         `json:"topics"`
	TreesURL         string                            `json:"trees_url"`
	URL              url.URL                           `json:"url"`
	UpdatedAt        time.Time                         `json:"updated_at"`
	Watchers         int                               `json:"watchers"`
	WatchersCount    int                               `json:"watchers_count"`
}

type PullRequestHeadRepoLicense struct {
	Key    string    `json:"key"`
	Name   string    `json:"name"`
	NodeID string    `json:"node_id"`
	SpdxID NilString `json:"spdx_id"`
	URL    NilURL    `json:"url"`
}

type PullRequestHeadRepoOwner struct {
	AvatarURL         url.URL   `json:"avatar_url"`
	EventsURL         string    `json:"events_url"`
	FollowersURL      url.URL   `json:"followers_url"`
	FollowingURL      string    `json:"following_url"`
	GistsURL          string    `json:"gists_url"`
	GravatarID        NilString `json:"gravatar_id"`
	HTMLURL           url.URL   `json:"html_url"`
	ID                int       `json:"id"`
	Login             string    `json:"login"`
	NodeID            string    `json:"node_id"`
	OrganizationsURL  url.URL   `json:"organizations_url"`
	ReceivedEventsURL url.URL   `json:"received_events_url"`
	ReposURL          url.URL   `json:"repos_url"`
	SiteAdmin         bool      `json:"site_admin"`
	StarredURL        string    `json:"starred_url"`
	SubscriptionsURL  url.URL   `json:"subscriptions_url"`
	Type              string    `json:"type"`
	URL               url.URL   `json:"url"`
}

type PullRequestHeadRepoPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

type PullRequestHeadUser struct {
	AvatarURL         url.URL   `json:"avatar_url"`
	EventsURL         string    `json:"events_url"`
	FollowersURL      url.URL   `json:"followers_url"`
	FollowingURL      string    `json:"following_url"`
	GistsURL          string    `json:"gists_url"`
	GravatarID        NilString `json:"gravatar_id"`
	HTMLURL           url.URL   `json:"html_url"`
	ID                int       `json:"id"`
	Login             string    `json:"login"`
	NodeID            string    `json:"node_id"`
	OrganizationsURL  url.URL   `json:"organizations_url"`
	ReceivedEventsURL url.URL   `json:"received_events_url"`
	ReposURL          url.URL   `json:"repos_url"`
	SiteAdmin         bool      `json:"site_admin"`
	StarredURL        string    `json:"starred_url"`
	SubscriptionsURL  url.URL   `json:"subscriptions_url"`
	Type              string    `json:"type"`
	URL               url.URL   `json:"url"`
}

type PullRequestLabelsItem struct {
	Color       OptString    `json:"color"`
	Default     OptBool      `json:"default"`
	Description OptNilString `json:"description"`
	ID          OptInt64     `json:"id"`
	Name        OptString    `json:"name"`
	NodeID      OptString    `json:"node_id"`
	URL         OptString    `json:"url"`
}

type PullRequestLinks struct {
	Comments       Link `json:"comments"`
	Commits        Link `json:"commits"`
	HTML           Link `json:"html"`
	Issue          Link `json:"issue"`
	ReviewComment  Link `json:"review_comment"`
	ReviewComments Link `json:"review_comments"`
	Self           Link `json:"self"`
	Statuses       Link `json:"statuses"`
}

// PullRequestMergeResult describes #/components/schemas/pull-request-merge-result.
type PullRequestMergeResult struct {
	Merged  bool   `json:"merged"`
	Message string `json:"message"`
	Sha     string `json:"sha"`
}

// PullRequestMinimal describes #/components/schemas/pull-request-minimal.
type PullRequestMinimal struct {
	Base   PullRequestMinimalBase `json:"base"`
	Head   PullRequestMinimalHead `json:"head"`
	ID     int                    `json:"id"`
	Number int                    `json:"number"`
	URL    string                 `json:"url"`
}

type PullRequestMinimalBase struct {
	Ref  string                     `json:"ref"`
	Repo PullRequestMinimalBaseRepo `json:"repo"`
	Sha  string                     `json:"sha"`
}

type PullRequestMinimalBaseRepo struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
	URL  string `json:"url"`
}

type PullRequestMinimalHead struct {
	Ref  string                     `json:"ref"`
	Repo PullRequestMinimalHeadRepo `json:"repo"`
	Sha  string                     `json:"sha"`
}

type PullRequestMinimalHeadRepo struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
	URL  string `json:"url"`
}

// PullRequestReview describes #/components/schemas/pull-request-review.
type PullRequestReview struct {
	AuthorAssociation AuthorAssociation      `json:"author_association"`
	Body              string                 `json:"body"`
	BodyHTML          OptString              `json:"body_html"`
	BodyText          OptString              `json:"body_text"`
	CommitID          string                 `json:"commit_id"`
	HTMLURL           url.URL                `json:"html_url"`
	ID                int                    `json:"id"`
	Links             PullRequestReviewLinks `json:"_links"`
	NodeID            string                 `json:"node_id"`
	PullRequestURL    url.URL                `json:"pull_request_url"`
	State             string                 `json:"state"`
	SubmittedAt       OptTime                `json:"submitted_at"`
	User              NullableSimpleUser     `json:"user"`
}

func (*PullRequestReview) pullsCreateReviewResponse()        {}
func (*PullRequestReview) pullsDeletePendingReviewResponse() {}
func (*PullRequestReview) pullsDismissReviewResponse()       {}
func (*PullRequestReview) pullsGetReviewResponse()           {}
func (*PullRequestReview) pullsSubmitReviewResponse()        {}
func (*PullRequestReview) pullsUpdateReviewResponse()        {}

// PullRequestReviewComment describes #/components/schemas/pull-request-review-comment.
type PullRequestReviewComment struct {
	AuthorAssociation   AuthorAssociation                       `json:"author_association"`
	Body                string                                  `json:"body"`
	BodyHTML            OptString                               `json:"body_html"`
	BodyText            OptString                               `json:"body_text"`
	CommitID            string                                  `json:"commit_id"`
	CreatedAt           time.Time                               `json:"created_at"`
	DiffHunk            string                                  `json:"diff_hunk"`
	HTMLURL             url.URL                                 `json:"html_url"`
	ID                  int                                     `json:"id"`
	InReplyToID         OptInt                                  `json:"in_reply_to_id"`
	Line                OptInt                                  `json:"line"`
	Links               PullRequestReviewCommentLinks           `json:"_links"`
	NodeID              string                                  `json:"node_id"`
	OriginalCommitID    string                                  `json:"original_commit_id"`
	OriginalLine        OptInt                                  `json:"original_line"`
	OriginalPosition    int                                     `json:"original_position"`
	OriginalStartLine   OptNilInt                               `json:"original_start_line"`
	Path                string                                  `json:"path"`
	Position            int                                     `json:"position"`
	PullRequestReviewID NilInt                                  `json:"pull_request_review_id"`
	PullRequestURL      url.URL                                 `json:"pull_request_url"`
	Reactions           OptReactionRollup                       `json:"reactions"`
	Side                OptPullRequestReviewCommentSide         `json:"side"`
	StartLine           OptNilInt                               `json:"start_line"`
	StartSide           OptNilPullRequestReviewCommentStartSide `json:"start_side"`
	URL                 string                                  `json:"url"`
	UpdatedAt           time.Time                               `json:"updated_at"`
	User                SimpleUser                              `json:"user"`
}

func (*PullRequestReviewComment) pullsCreateReplyForReviewCommentResponse() {}
func (*PullRequestReviewComment) pullsGetReviewCommentResponse()            {}

type PullRequestReviewCommentLinks struct {
	HTML        PullRequestReviewCommentLinksHTML        `json:"html"`
	PullRequest PullRequestReviewCommentLinksPullRequest `json:"pull_request"`
	Self        PullRequestReviewCommentLinksSelf        `json:"self"`
}

type PullRequestReviewCommentLinksHTML struct {
	Href url.URL `json:"href"`
}

type PullRequestReviewCommentLinksPullRequest struct {
	Href url.URL `json:"href"`
}

type PullRequestReviewCommentLinksSelf struct {
	Href url.URL `json:"href"`
}

type PullRequestReviewCommentSide string

const (
	PullRequestReviewCommentSideLEFT  PullRequestReviewCommentSide = "LEFT"
	PullRequestReviewCommentSideRIGHT PullRequestReviewCommentSide = "RIGHT"
)

type PullRequestReviewCommentStartSide string

const (
	PullRequestReviewCommentStartSideLEFT  PullRequestReviewCommentStartSide = "LEFT"
	PullRequestReviewCommentStartSideRIGHT PullRequestReviewCommentStartSide = "RIGHT"
)

type PullRequestReviewLinks struct {
	HTML        PullRequestReviewLinksHTML        `json:"html"`
	PullRequest PullRequestReviewLinksPullRequest `json:"pull_request"`
}

type PullRequestReviewLinksHTML struct {
	Href string `json:"href"`
}

type PullRequestReviewLinksPullRequest struct {
	Href string `json:"href"`
}

// PullRequestReviewRequest describes #/components/schemas/pull-request-review-request.
type PullRequestReviewRequest struct {
	Teams []Team       `json:"teams"`
	Users []SimpleUser `json:"users"`
}

// PullRequestSimple describes #/components/schemas/pull-request-simple.
type PullRequestSimple struct {
	ActiveLockReason   OptNilString                  `json:"active_lock_reason"`
	Assignee           NullableSimpleUser            `json:"assignee"`
	Assignees          *[]SimpleUser                 `json:"assignees"`
	AuthorAssociation  AuthorAssociation             `json:"author_association"`
	AutoMerge          AutoMerge                     `json:"auto_merge"`
	Base               PullRequestSimpleBase         `json:"base"`
	Body               NilString                     `json:"body"`
	ClosedAt           NilTime                       `json:"closed_at"`
	CommentsURL        url.URL                       `json:"comments_url"`
	CommitsURL         url.URL                       `json:"commits_url"`
	CreatedAt          time.Time                     `json:"created_at"`
	DiffURL            url.URL                       `json:"diff_url"`
	Draft              OptBool                       `json:"draft"`
	HTMLURL            url.URL                       `json:"html_url"`
	Head               PullRequestSimpleHead         `json:"head"`
	ID                 int                           `json:"id"`
	IssueURL           url.URL                       `json:"issue_url"`
	Labels             []PullRequestSimpleLabelsItem `json:"labels"`
	Links              PullRequestSimpleLinks        `json:"_links"`
	Locked             bool                          `json:"locked"`
	MergeCommitSha     NilString                     `json:"merge_commit_sha"`
	MergedAt           NilTime                       `json:"merged_at"`
	Milestone          NullableMilestone             `json:"milestone"`
	NodeID             string                        `json:"node_id"`
	Number             int                           `json:"number"`
	PatchURL           url.URL                       `json:"patch_url"`
	RequestedReviewers *[]SimpleUser                 `json:"requested_reviewers"`
	RequestedTeams     *[]Team                       `json:"requested_teams"`
	ReviewCommentURL   string                        `json:"review_comment_url"`
	ReviewCommentsURL  url.URL                       `json:"review_comments_url"`
	State              string                        `json:"state"`
	StatusesURL        url.URL                       `json:"statuses_url"`
	Title              string                        `json:"title"`
	URL                url.URL                       `json:"url"`
	UpdatedAt          time.Time                     `json:"updated_at"`
	User               NullableSimpleUser            `json:"user"`
}

type PullRequestSimpleBase struct {
	Label string             `json:"label"`
	Ref   string             `json:"ref"`
	Repo  Repository         `json:"repo"`
	Sha   string             `json:"sha"`
	User  NullableSimpleUser `json:"user"`
}

type PullRequestSimpleHead struct {
	Label string             `json:"label"`
	Ref   string             `json:"ref"`
	Repo  Repository         `json:"repo"`
	Sha   string             `json:"sha"`
	User  NullableSimpleUser `json:"user"`
}

type PullRequestSimpleLabelsItem struct {
	Color       OptString `json:"color"`
	Default     OptBool   `json:"default"`
	Description OptString `json:"description"`
	ID          OptInt64  `json:"id"`
	Name        OptString `json:"name"`
	NodeID      OptString `json:"node_id"`
	URL         OptString `json:"url"`
}

type PullRequestSimpleLinks struct {
	Comments       Link `json:"comments"`
	Commits        Link `json:"commits"`
	HTML           Link `json:"html"`
	Issue          Link `json:"issue"`
	ReviewComment  Link `json:"review_comment"`
	ReviewComments Link `json:"review_comments"`
	Self           Link `json:"self"`
	Statuses       Link `json:"statuses"`
}

type PullRequestState string

const (
	PullRequestStateOpen   PullRequestState = "open"
	PullRequestStateClosed PullRequestState = "closed"
)

type PullsCheckIfMergedNoContent struct{}

func (*PullsCheckIfMergedNoContent) pullsCheckIfMergedResponse() {}

type PullsCheckIfMergedNotFound struct{}

func (*PullsCheckIfMergedNotFound) pullsCheckIfMergedResponse() {}

type PullsCreateApplicationJSONRequest struct {
	Base                string    `json:"base"`
	Body                OptString `json:"body"`
	Draft               OptBool   `json:"draft"`
	Head                string    `json:"head"`
	Issue               OptInt    `json:"issue"`
	MaintainerCanModify OptBool   `json:"maintainer_can_modify"`
	Title               OptString `json:"title"`
}

func (*PullsCreateApplicationJSONRequest) pullsCreateRequest() {}

type PullsCreateReplyForReviewCommentApplicationJSONRequest struct {
	Body string `json:"body"`
}

type PullsCreateReviewApplicationJSONRequest struct {
	Body     OptString                                              `json:"body"`
	Comments *[]PullsCreateReviewApplicationJSONRequestCommentsItem `json:"comments"`
	CommitID OptString                                              `json:"commit_id"`
	Event    OptPullsCreateReviewApplicationJSONRequestEvent        `json:"event"`
}

type PullsCreateReviewApplicationJSONRequestCommentsItem struct {
	Body      string    `json:"body"`
	Line      OptInt    `json:"line"`
	Path      string    `json:"path"`
	Position  OptInt    `json:"position"`
	Side      OptString `json:"side"`
	StartLine OptInt    `json:"start_line"`
	StartSide OptString `json:"start_side"`
}

type PullsCreateReviewApplicationJSONRequestEvent string

const (
	PullsCreateReviewApplicationJSONRequestEventAPPROVE        PullsCreateReviewApplicationJSONRequestEvent = "APPROVE"
	PullsCreateReviewApplicationJSONRequestEventREQUESTCHANGES PullsCreateReviewApplicationJSONRequestEvent = "REQUEST_CHANGES"
	PullsCreateReviewApplicationJSONRequestEventCOMMENT        PullsCreateReviewApplicationJSONRequestEvent = "COMMENT"
)

type PullsCreateReviewCommentApplicationJSONRequest struct {
	Body      string                                                     `json:"body"`
	CommitID  OptString                                                  `json:"commit_id"`
	InReplyTo OptInt                                                     `json:"in_reply_to"`
	Line      OptInt                                                     `json:"line"`
	Path      OptString                                                  `json:"path"`
	Position  OptInt                                                     `json:"position"`
	Side      OptPullsCreateReviewCommentApplicationJSONRequestSide      `json:"side"`
	StartLine OptInt                                                     `json:"start_line"`
	StartSide OptPullsCreateReviewCommentApplicationJSONRequestStartSide `json:"start_side"`
}

func (*PullsCreateReviewCommentApplicationJSONRequest) pullsCreateReviewCommentRequest() {}

type PullsCreateReviewCommentApplicationJSONRequestSide string

const (
	PullsCreateReviewCommentApplicationJSONRequestSideLEFT  PullsCreateReviewCommentApplicationJSONRequestSide = "LEFT"
	PullsCreateReviewCommentApplicationJSONRequestSideRIGHT PullsCreateReviewCommentApplicationJSONRequestSide = "RIGHT"
)

type PullsCreateReviewCommentApplicationJSONRequestStartSide string

const (
	PullsCreateReviewCommentApplicationJSONRequestStartSideLEFT  PullsCreateReviewCommentApplicationJSONRequestStartSide = "LEFT"
	PullsCreateReviewCommentApplicationJSONRequestStartSideRIGHT PullsCreateReviewCommentApplicationJSONRequestStartSide = "RIGHT"
	PullsCreateReviewCommentApplicationJSONRequestStartSideSide  PullsCreateReviewCommentApplicationJSONRequestStartSide = "side"
)

type PullsDeleteReviewCommentNoContent struct{}

func (*PullsDeleteReviewCommentNoContent) pullsDeleteReviewCommentResponse() {}

type PullsDismissReviewApplicationJSONRequest struct {
	Event   OptString `json:"event"`
	Message string    `json:"message"`
}

type PullsGetApplicationJSONInternalServerError BasicError

func (*PullsGetApplicationJSONInternalServerError) pullsGetResponse() {}

type PullsGetApplicationJSONNotFound BasicError

func (*PullsGetApplicationJSONNotFound) pullsGetResponse() {}

type PullsListCommentsForReviewOK []ReviewComment

func (*PullsListCommentsForReviewOK) pullsListCommentsForReviewResponse() {}

type PullsListFilesOK []DiffEntry

type PullsMergeApplicationJSONRequest struct {
	CommitMessage OptString                                      `json:"commit_message"`
	CommitTitle   OptString                                      `json:"commit_title"`
	MergeMethod   OptPullsMergeApplicationJSONRequestMergeMethod `json:"merge_method"`
	Sha           OptString                                      `json:"sha"`
}

func (*PullsMergeApplicationJSONRequest) pullsMergeRequest() {}

type PullsMergeApplicationJSONRequestMergeMethod string

const (
	PullsMergeApplicationJSONRequestMergeMethodMerge  PullsMergeApplicationJSONRequestMergeMethod = "merge"
	PullsMergeApplicationJSONRequestMergeMethodSquash PullsMergeApplicationJSONRequestMergeMethod = "squash"
	PullsMergeApplicationJSONRequestMergeMethodRebase PullsMergeApplicationJSONRequestMergeMethod = "rebase"
)

type PullsMergeConflict struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

type PullsMergeMethodNotAllowed struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

type PullsRemoveRequestedReviewersApplicationJSONRequest struct {
	Reviewers     []string  `json:"reviewers"`
	TeamReviewers *[]string `json:"team_reviewers"`
}

func (*PullsRemoveRequestedReviewersApplicationJSONRequest) pullsRemoveRequestedReviewersRequest() {}

type PullsSubmitReviewApplicationJSONForbidden BasicError

func (*PullsSubmitReviewApplicationJSONForbidden) pullsSubmitReviewResponse() {}

type PullsSubmitReviewApplicationJSONNotFound BasicError

func (*PullsSubmitReviewApplicationJSONNotFound) pullsSubmitReviewResponse() {}

type PullsSubmitReviewApplicationJSONRequest struct {
	Body  OptString                                    `json:"body"`
	Event PullsSubmitReviewApplicationJSONRequestEvent `json:"event"`
}

type PullsSubmitReviewApplicationJSONRequestEvent string

const (
	PullsSubmitReviewApplicationJSONRequestEventAPPROVE        PullsSubmitReviewApplicationJSONRequestEvent = "APPROVE"
	PullsSubmitReviewApplicationJSONRequestEventREQUESTCHANGES PullsSubmitReviewApplicationJSONRequestEvent = "REQUEST_CHANGES"
	PullsSubmitReviewApplicationJSONRequestEventCOMMENT        PullsSubmitReviewApplicationJSONRequestEvent = "COMMENT"
)

type PullsUpdateApplicationJSONRequest struct {
	Base                OptString                                 `json:"base"`
	Body                OptString                                 `json:"body"`
	MaintainerCanModify OptBool                                   `json:"maintainer_can_modify"`
	State               OptPullsUpdateApplicationJSONRequestState `json:"state"`
	Title               OptString                                 `json:"title"`
}

func (*PullsUpdateApplicationJSONRequest) pullsUpdateRequest() {}

type PullsUpdateApplicationJSONRequestState string

const (
	PullsUpdateApplicationJSONRequestStateOpen   PullsUpdateApplicationJSONRequestState = "open"
	PullsUpdateApplicationJSONRequestStateClosed PullsUpdateApplicationJSONRequestState = "closed"
)

type PullsUpdateBranchAccepted struct {
	Message OptString `json:"message"`
	URL     OptString `json:"url"`
}

type PullsUpdateBranchApplicationJSONRequest struct {
	ExpectedHeadSha OptString `json:"expected_head_sha"`
}

func (*PullsUpdateBranchApplicationJSONRequest) pullsUpdateBranchRequest() {}

type PullsUpdateReviewApplicationJSONRequest struct {
	Body string `json:"body"`
}

type PullsUpdateReviewCommentApplicationJSONRequest struct {
	Body string `json:"body"`
}

// RateLimit describes #/components/schemas/rate-limit.
type RateLimit struct {
	Limit     int `json:"limit"`
	Remaining int `json:"remaining"`
	Reset     int `json:"reset"`
	Used      int `json:"used"`
}

// RateLimitOverview describes #/components/schemas/rate-limit-overview.
type RateLimitOverview struct {
	Rate      RateLimit                  `json:"rate"`
	Resources RateLimitOverviewResources `json:"resources"`
}

func (*RateLimitOverview) rateLimitGetResponse() {}

type RateLimitOverviewResources struct {
	ActionsRunnerRegistration OptRateLimit `json:"actions_runner_registration"`
	CodeScanningUpload        OptRateLimit `json:"code_scanning_upload"`
	Core                      RateLimit    `json:"core"`
	Graphql                   OptRateLimit `json:"graphql"`
	IntegrationManifest       OptRateLimit `json:"integration_manifest"`
	Search                    RateLimit    `json:"search"`
	SourceImport              OptRateLimit `json:"source_import"`
}

// Reaction describes #/components/schemas/reaction.
type Reaction struct {
	Content   ReactionContent    `json:"content"`
	CreatedAt time.Time          `json:"created_at"`
	ID        int                `json:"id"`
	NodeID    string             `json:"node_id"`
	User      NullableSimpleUser `json:"user"`
}

type ReactionContent string

const (
	ReactionContentPlus1    ReactionContent = "+1"
	ReactionContentMinus1   ReactionContent = "-1"
	ReactionContentLaugh    ReactionContent = "laugh"
	ReactionContentConfused ReactionContent = "confused"
	ReactionContentHeart    ReactionContent = "heart"
	ReactionContentHooray   ReactionContent = "hooray"
	ReactionContentRocket   ReactionContent = "rocket"
	ReactionContentEyes     ReactionContent = "eyes"
)

// ReactionRollup describes #/components/schemas/reaction-rollup.
type ReactionRollup struct {
	Confused   int     `json:"confused"`
	Eyes       int     `json:"eyes"`
	Heart      int     `json:"heart"`
	Hooray     int     `json:"hooray"`
	Laugh      int     `json:"laugh"`
	Minus1     int     `json:"-1"`
	Plus1      int     `json:"+1"`
	Rocket     int     `json:"rocket"`
	TotalCount int     `json:"total_count"`
	URL        url.URL `json:"url"`
}

type ReactionsCreateForCommitCommentApplicationJSONRequest struct {
	Content ReactionsCreateForCommitCommentApplicationJSONRequestContent `json:"content"`
}

func (*ReactionsCreateForCommitCommentApplicationJSONRequest) reactionsCreateForCommitCommentRequest() {
}

type ReactionsCreateForCommitCommentApplicationJSONRequestContent string

const (
	ReactionsCreateForCommitCommentApplicationJSONRequestContentPlus1    ReactionsCreateForCommitCommentApplicationJSONRequestContent = "+1"
	ReactionsCreateForCommitCommentApplicationJSONRequestContentMinus1   ReactionsCreateForCommitCommentApplicationJSONRequestContent = "-1"
	ReactionsCreateForCommitCommentApplicationJSONRequestContentLaugh    ReactionsCreateForCommitCommentApplicationJSONRequestContent = "laugh"
	ReactionsCreateForCommitCommentApplicationJSONRequestContentConfused ReactionsCreateForCommitCommentApplicationJSONRequestContent = "confused"
	ReactionsCreateForCommitCommentApplicationJSONRequestContentHeart    ReactionsCreateForCommitCommentApplicationJSONRequestContent = "heart"
	ReactionsCreateForCommitCommentApplicationJSONRequestContentHooray   ReactionsCreateForCommitCommentApplicationJSONRequestContent = "hooray"
	ReactionsCreateForCommitCommentApplicationJSONRequestContentRocket   ReactionsCreateForCommitCommentApplicationJSONRequestContent = "rocket"
	ReactionsCreateForCommitCommentApplicationJSONRequestContentEyes     ReactionsCreateForCommitCommentApplicationJSONRequestContent = "eyes"
)

type ReactionsCreateForIssueApplicationJSONRequest struct {
	Content ReactionsCreateForIssueApplicationJSONRequestContent `json:"content"`
}

func (*ReactionsCreateForIssueApplicationJSONRequest) reactionsCreateForIssueRequest() {}

type ReactionsCreateForIssueApplicationJSONRequestContent string

const (
	ReactionsCreateForIssueApplicationJSONRequestContentPlus1    ReactionsCreateForIssueApplicationJSONRequestContent = "+1"
	ReactionsCreateForIssueApplicationJSONRequestContentMinus1   ReactionsCreateForIssueApplicationJSONRequestContent = "-1"
	ReactionsCreateForIssueApplicationJSONRequestContentLaugh    ReactionsCreateForIssueApplicationJSONRequestContent = "laugh"
	ReactionsCreateForIssueApplicationJSONRequestContentConfused ReactionsCreateForIssueApplicationJSONRequestContent = "confused"
	ReactionsCreateForIssueApplicationJSONRequestContentHeart    ReactionsCreateForIssueApplicationJSONRequestContent = "heart"
	ReactionsCreateForIssueApplicationJSONRequestContentHooray   ReactionsCreateForIssueApplicationJSONRequestContent = "hooray"
	ReactionsCreateForIssueApplicationJSONRequestContentRocket   ReactionsCreateForIssueApplicationJSONRequestContent = "rocket"
	ReactionsCreateForIssueApplicationJSONRequestContentEyes     ReactionsCreateForIssueApplicationJSONRequestContent = "eyes"
)

type ReactionsCreateForIssueCommentApplicationJSONRequest struct {
	Content ReactionsCreateForIssueCommentApplicationJSONRequestContent `json:"content"`
}

func (*ReactionsCreateForIssueCommentApplicationJSONRequest) reactionsCreateForIssueCommentRequest() {
}

type ReactionsCreateForIssueCommentApplicationJSONRequestContent string

const (
	ReactionsCreateForIssueCommentApplicationJSONRequestContentPlus1    ReactionsCreateForIssueCommentApplicationJSONRequestContent = "+1"
	ReactionsCreateForIssueCommentApplicationJSONRequestContentMinus1   ReactionsCreateForIssueCommentApplicationJSONRequestContent = "-1"
	ReactionsCreateForIssueCommentApplicationJSONRequestContentLaugh    ReactionsCreateForIssueCommentApplicationJSONRequestContent = "laugh"
	ReactionsCreateForIssueCommentApplicationJSONRequestContentConfused ReactionsCreateForIssueCommentApplicationJSONRequestContent = "confused"
	ReactionsCreateForIssueCommentApplicationJSONRequestContentHeart    ReactionsCreateForIssueCommentApplicationJSONRequestContent = "heart"
	ReactionsCreateForIssueCommentApplicationJSONRequestContentHooray   ReactionsCreateForIssueCommentApplicationJSONRequestContent = "hooray"
	ReactionsCreateForIssueCommentApplicationJSONRequestContentRocket   ReactionsCreateForIssueCommentApplicationJSONRequestContent = "rocket"
	ReactionsCreateForIssueCommentApplicationJSONRequestContentEyes     ReactionsCreateForIssueCommentApplicationJSONRequestContent = "eyes"
)

type ReactionsCreateForPullRequestReviewCommentApplicationJSONRequest struct {
	Content ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContent `json:"content"`
}

func (*ReactionsCreateForPullRequestReviewCommentApplicationJSONRequest) reactionsCreateForPullRequestReviewCommentRequest() {
}

type ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContent string

const (
	ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContentPlus1    ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContent = "+1"
	ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContentMinus1   ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContent = "-1"
	ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContentLaugh    ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContent = "laugh"
	ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContentConfused ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContent = "confused"
	ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContentHeart    ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContent = "heart"
	ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContentHooray   ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContent = "hooray"
	ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContentRocket   ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContent = "rocket"
	ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContentEyes     ReactionsCreateForPullRequestReviewCommentApplicationJSONRequestContent = "eyes"
)

type ReactionsCreateForReleaseApplicationJSONRequest struct {
	Content ReactionsCreateForReleaseApplicationJSONRequestContent `json:"content"`
}

func (*ReactionsCreateForReleaseApplicationJSONRequest) reactionsCreateForReleaseRequest() {}

type ReactionsCreateForReleaseApplicationJSONRequestContent string

const (
	ReactionsCreateForReleaseApplicationJSONRequestContentPlus1  ReactionsCreateForReleaseApplicationJSONRequestContent = "+1"
	ReactionsCreateForReleaseApplicationJSONRequestContentLaugh  ReactionsCreateForReleaseApplicationJSONRequestContent = "laugh"
	ReactionsCreateForReleaseApplicationJSONRequestContentHeart  ReactionsCreateForReleaseApplicationJSONRequestContent = "heart"
	ReactionsCreateForReleaseApplicationJSONRequestContentHooray ReactionsCreateForReleaseApplicationJSONRequestContent = "hooray"
	ReactionsCreateForReleaseApplicationJSONRequestContentRocket ReactionsCreateForReleaseApplicationJSONRequestContent = "rocket"
	ReactionsCreateForReleaseApplicationJSONRequestContentEyes   ReactionsCreateForReleaseApplicationJSONRequestContent = "eyes"
)

type ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONCreated Reaction

func (*ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONCreated) reactionsCreateForTeamDiscussionCommentInOrgResponse() {
}

type ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONOK Reaction

func (*ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONOK) reactionsCreateForTeamDiscussionCommentInOrgResponse() {
}

type ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequest struct {
	Content ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContent `json:"content"`
}

type ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContent string

const (
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContentPlus1    ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContent = "+1"
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContentMinus1   ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContent = "-1"
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContentLaugh    ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContent = "laugh"
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContentConfused ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContent = "confused"
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContentHeart    ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContent = "heart"
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContentHooray   ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContent = "hooray"
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContentRocket   ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContent = "rocket"
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContentEyes     ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONRequestContent = "eyes"
)

type ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequest struct {
	Content ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContent `json:"content"`
}

type ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContent string

const (
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContentPlus1    ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContent = "+1"
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContentMinus1   ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContent = "-1"
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContentLaugh    ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContent = "laugh"
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContentConfused ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContent = "confused"
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContentHeart    ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContent = "heart"
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContentHooray   ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContent = "hooray"
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContentRocket   ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContent = "rocket"
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContentEyes     ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONRequestContent = "eyes"
)

type ReactionsCreateForTeamDiscussionInOrgApplicationJSONCreated Reaction

func (*ReactionsCreateForTeamDiscussionInOrgApplicationJSONCreated) reactionsCreateForTeamDiscussionInOrgResponse() {
}

type ReactionsCreateForTeamDiscussionInOrgApplicationJSONOK Reaction

func (*ReactionsCreateForTeamDiscussionInOrgApplicationJSONOK) reactionsCreateForTeamDiscussionInOrgResponse() {
}

type ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequest struct {
	Content ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContent `json:"content"`
}

type ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContent string

const (
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContentPlus1    ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContent = "+1"
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContentMinus1   ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContent = "-1"
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContentLaugh    ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContent = "laugh"
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContentConfused ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContent = "confused"
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContentHeart    ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContent = "heart"
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContentHooray   ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContent = "hooray"
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContentRocket   ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContent = "rocket"
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContentEyes     ReactionsCreateForTeamDiscussionInOrgApplicationJSONRequestContent = "eyes"
)

type ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequest struct {
	Content ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContent `json:"content"`
}

type ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContent string

const (
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContentPlus1    ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContent = "+1"
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContentMinus1   ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContent = "-1"
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContentLaugh    ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContent = "laugh"
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContentConfused ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContent = "confused"
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContentHeart    ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContent = "heart"
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContentHooray   ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContent = "hooray"
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContentRocket   ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContent = "rocket"
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContentEyes     ReactionsCreateForTeamDiscussionLegacyApplicationJSONRequestContent = "eyes"
)

type ReactionsDeleteForCommitComment struct{}

type ReactionsDeleteForIssue struct{}

type ReactionsDeleteForIssueComment struct{}

type ReactionsDeleteForPullRequestComment struct{}

type ReactionsDeleteForTeamDiscussion struct{}

type ReactionsDeleteForTeamDiscussionComment struct{}

type ReactionsDeleteLegacyApplicationJSONForbidden BasicError

func (*ReactionsDeleteLegacyApplicationJSONForbidden) reactionsDeleteLegacyResponse() {}

type ReactionsDeleteLegacyApplicationJSONGone BasicError

func (*ReactionsDeleteLegacyApplicationJSONGone) reactionsDeleteLegacyResponse() {}

type ReactionsDeleteLegacyApplicationJSONUnauthorized BasicError

func (*ReactionsDeleteLegacyApplicationJSONUnauthorized) reactionsDeleteLegacyResponse() {}

type ReactionsDeleteLegacyNoContent struct{}

func (*ReactionsDeleteLegacyNoContent) reactionsDeleteLegacyResponse() {}

// ReferrerTraffic describes #/components/schemas/referrer-traffic.
type ReferrerTraffic struct {
	Count    int    `json:"count"`
	Referrer string `json:"referrer"`
	Uniques  int    `json:"uniques"`
}

// Release describes #/components/schemas/release.
type Release struct {
	Assets          []ReleaseAsset    `json:"assets"`
	AssetsURL       url.URL           `json:"assets_url"`
	Author          SimpleUser        `json:"author"`
	Body            OptNilString      `json:"body"`
	BodyHTML        OptString         `json:"body_html"`
	BodyText        OptString         `json:"body_text"`
	CreatedAt       time.Time         `json:"created_at"`
	DiscussionURL   OptURL            `json:"discussion_url"`
	Draft           bool              `json:"draft"`
	HTMLURL         url.URL           `json:"html_url"`
	ID              int               `json:"id"`
	MentionsCount   OptInt            `json:"mentions_count"`
	Name            NilString         `json:"name"`
	NodeID          string            `json:"node_id"`
	Prerelease      bool              `json:"prerelease"`
	PublishedAt     NilTime           `json:"published_at"`
	Reactions       OptReactionRollup `json:"reactions"`
	TagName         string            `json:"tag_name"`
	TarballURL      NilURL            `json:"tarball_url"`
	TargetCommitish string            `json:"target_commitish"`
	URL             url.URL           `json:"url"`
	UploadURL       string            `json:"upload_url"`
	ZipballURL      NilURL            `json:"zipball_url"`
}

func (*Release) reposGetReleaseByTagResponse() {}
func (*Release) reposGetReleaseResponse()      {}
func (*Release) reposUpdateReleaseResponse()   {}

// ReleaseAsset describes #/components/schemas/release-asset.
type ReleaseAsset struct {
	BrowserDownloadURL url.URL            `json:"browser_download_url"`
	ContentType        string             `json:"content_type"`
	CreatedAt          time.Time          `json:"created_at"`
	DownloadCount      int                `json:"download_count"`
	ID                 int                `json:"id"`
	Label              NilString          `json:"label"`
	Name               string             `json:"name"`
	NodeID             string             `json:"node_id"`
	Size               int                `json:"size"`
	State              ReleaseAssetState  `json:"state"`
	URL                url.URL            `json:"url"`
	UpdatedAt          time.Time          `json:"updated_at"`
	Uploader           NullableSimpleUser `json:"uploader"`
}

func (*ReleaseAsset) reposGetReleaseAssetResponse() {}

type ReleaseAssetState string

const (
	ReleaseAssetStateUploaded ReleaseAssetState = "uploaded"
	ReleaseAssetStateOpen     ReleaseAssetState = "open"
)

type ReposAcceptInvitationApplicationJSONConflict BasicError

func (*ReposAcceptInvitationApplicationJSONConflict) reposAcceptInvitationResponse() {}

type ReposAcceptInvitationApplicationJSONForbidden BasicError

func (*ReposAcceptInvitationApplicationJSONForbidden) reposAcceptInvitationResponse() {}

type ReposAcceptInvitationApplicationJSONNotFound BasicError

func (*ReposAcceptInvitationApplicationJSONNotFound) reposAcceptInvitationResponse() {}

type ReposAcceptInvitationNoContent struct{}

func (*ReposAcceptInvitationNoContent) reposAcceptInvitationResponse() {}

type ReposAddCollaboratorApplicationJSONRequest struct {
	Permission  OptReposAddCollaboratorApplicationJSONRequestPermission `json:"permission"`
	Permissions OptString                                               `json:"permissions"`
}

func (*ReposAddCollaboratorApplicationJSONRequest) reposAddCollaboratorRequest() {}

type ReposAddCollaboratorApplicationJSONRequestPermission string

const (
	ReposAddCollaboratorApplicationJSONRequestPermissionPull     ReposAddCollaboratorApplicationJSONRequestPermission = "pull"
	ReposAddCollaboratorApplicationJSONRequestPermissionPush     ReposAddCollaboratorApplicationJSONRequestPermission = "push"
	ReposAddCollaboratorApplicationJSONRequestPermissionAdmin    ReposAddCollaboratorApplicationJSONRequestPermission = "admin"
	ReposAddCollaboratorApplicationJSONRequestPermissionMaintain ReposAddCollaboratorApplicationJSONRequestPermission = "maintain"
	ReposAddCollaboratorApplicationJSONRequestPermissionTriage   ReposAddCollaboratorApplicationJSONRequestPermission = "triage"
)

type ReposAddCollaboratorNoContent struct{}

type ReposCheckCollaboratorNoContent struct{}

func (*ReposCheckCollaboratorNoContent) reposCheckCollaboratorResponse() {}

type ReposCheckCollaboratorNotFound struct{}

func (*ReposCheckCollaboratorNotFound) reposCheckCollaboratorResponse() {}

type ReposCheckVulnerabilityAlertsNoContent struct{}

func (*ReposCheckVulnerabilityAlertsNoContent) reposCheckVulnerabilityAlertsResponse() {}

type ReposCheckVulnerabilityAlertsNotFound struct{}

func (*ReposCheckVulnerabilityAlertsNotFound) reposCheckVulnerabilityAlertsResponse() {}

type ReposCompareCommitsApplicationJSONInternalServerError BasicError

func (*ReposCompareCommitsApplicationJSONInternalServerError) reposCompareCommitsResponse() {}

type ReposCompareCommitsApplicationJSONNotFound BasicError

func (*ReposCompareCommitsApplicationJSONNotFound) reposCompareCommitsResponse() {}

type ReposCreateAutolinkApplicationJSONRequest struct {
	KeyPrefix   string `json:"key_prefix"`
	URLTemplate string `json:"url_template"`
}

func (*ReposCreateAutolinkApplicationJSONRequest) reposCreateAutolinkRequest() {}

type ReposCreateCommitCommentApplicationJSONRequest struct {
	Body     string    `json:"body"`
	Line     OptInt    `json:"line"`
	Path     OptString `json:"path"`
	Position OptInt    `json:"position"`
}

func (*ReposCreateCommitCommentApplicationJSONRequest) reposCreateCommitCommentRequest() {}

type ReposCreateCommitStatusApplicationJSONRequest struct {
	Context     OptString                                          `json:"context"`
	Description OptString                                          `json:"description"`
	State       ReposCreateCommitStatusApplicationJSONRequestState `json:"state"`
	TargetURL   OptString                                          `json:"target_url"`
}

type ReposCreateCommitStatusApplicationJSONRequestState string

const (
	ReposCreateCommitStatusApplicationJSONRequestStateError   ReposCreateCommitStatusApplicationJSONRequestState = "error"
	ReposCreateCommitStatusApplicationJSONRequestStateFailure ReposCreateCommitStatusApplicationJSONRequestState = "failure"
	ReposCreateCommitStatusApplicationJSONRequestStatePending ReposCreateCommitStatusApplicationJSONRequestState = "pending"
	ReposCreateCommitStatusApplicationJSONRequestStateSuccess ReposCreateCommitStatusApplicationJSONRequestState = "success"
)

type ReposCreateDeployKeyApplicationJSONRequest struct {
	Key      string    `json:"key"`
	ReadOnly OptBool   `json:"read_only"`
	Title    OptString `json:"title"`
}

func (*ReposCreateDeployKeyApplicationJSONRequest) reposCreateDeployKeyRequest() {}

type ReposCreateDeploymentStatusApplicationJSONRequest struct {
	AutoInactive   OptBool                                                         `json:"auto_inactive"`
	Description    OptString                                                       `json:"description"`
	Environment    OptReposCreateDeploymentStatusApplicationJSONRequestEnvironment `json:"environment"`
	EnvironmentURL OptString                                                       `json:"environment_url"`
	LogURL         OptString                                                       `json:"log_url"`
	State          ReposCreateDeploymentStatusApplicationJSONRequestState          `json:"state"`
	TargetURL      OptString                                                       `json:"target_url"`
}

func (*ReposCreateDeploymentStatusApplicationJSONRequest) reposCreateDeploymentStatusRequest() {}

type ReposCreateDeploymentStatusApplicationJSONRequestEnvironment string

const (
	ReposCreateDeploymentStatusApplicationJSONRequestEnvironmentProduction ReposCreateDeploymentStatusApplicationJSONRequestEnvironment = "production"
	ReposCreateDeploymentStatusApplicationJSONRequestEnvironmentStaging    ReposCreateDeploymentStatusApplicationJSONRequestEnvironment = "staging"
	ReposCreateDeploymentStatusApplicationJSONRequestEnvironmentQa         ReposCreateDeploymentStatusApplicationJSONRequestEnvironment = "qa"
)

type ReposCreateDeploymentStatusApplicationJSONRequestState string

const (
	ReposCreateDeploymentStatusApplicationJSONRequestStateError      ReposCreateDeploymentStatusApplicationJSONRequestState = "error"
	ReposCreateDeploymentStatusApplicationJSONRequestStateFailure    ReposCreateDeploymentStatusApplicationJSONRequestState = "failure"
	ReposCreateDeploymentStatusApplicationJSONRequestStateInactive   ReposCreateDeploymentStatusApplicationJSONRequestState = "inactive"
	ReposCreateDeploymentStatusApplicationJSONRequestStateInProgress ReposCreateDeploymentStatusApplicationJSONRequestState = "in_progress"
	ReposCreateDeploymentStatusApplicationJSONRequestStateQueued     ReposCreateDeploymentStatusApplicationJSONRequestState = "queued"
	ReposCreateDeploymentStatusApplicationJSONRequestStatePending    ReposCreateDeploymentStatusApplicationJSONRequestState = "pending"
	ReposCreateDeploymentStatusApplicationJSONRequestStateSuccess    ReposCreateDeploymentStatusApplicationJSONRequestState = "success"
)

type ReposCreateDispatchEventApplicationJSONRequest struct {
	ClientPayload *struct{} `json:"client_payload"`
	EventType     string    `json:"event_type"`
}

func (*ReposCreateDispatchEventApplicationJSONRequest) reposCreateDispatchEventRequest() {}

type ReposCreateDispatchEventNoContent struct{}

type ReposCreateForAuthenticatedUserApplicationJSONRequest struct {
	AllowAutoMerge      OptBool   `json:"allow_auto_merge"`
	AllowMergeCommit    OptBool   `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool   `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool   `json:"allow_squash_merge"`
	AutoInit            OptBool   `json:"auto_init"`
	DeleteBranchOnMerge OptBool   `json:"delete_branch_on_merge"`
	Description         OptString `json:"description"`
	GitignoreTemplate   OptString `json:"gitignore_template"`
	HasDownloads        OptBool   `json:"has_downloads"`
	HasIssues           OptBool   `json:"has_issues"`
	HasProjects         OptBool   `json:"has_projects"`
	HasWiki             OptBool   `json:"has_wiki"`
	Homepage            OptString `json:"homepage"`
	IsTemplate          OptBool   `json:"is_template"`
	LicenseTemplate     OptString `json:"license_template"`
	Name                string    `json:"name"`
	Private             OptBool   `json:"private"`
	TeamID              OptInt    `json:"team_id"`
}

func (*ReposCreateForAuthenticatedUserApplicationJSONRequest) reposCreateForAuthenticatedUserRequest() {
}

type ReposCreateForkApplicationJSONRequest struct {
	Organization OptString `json:"organization"`
}

func (*ReposCreateForkApplicationJSONRequest) reposCreateForkRequest() {}

type ReposCreateInOrgApplicationJSONRequest struct {
	AllowAutoMerge      OptBool                                             `json:"allow_auto_merge"`
	AllowMergeCommit    OptBool                                             `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                                             `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                                             `json:"allow_squash_merge"`
	AutoInit            OptBool                                             `json:"auto_init"`
	DeleteBranchOnMerge OptBool                                             `json:"delete_branch_on_merge"`
	Description         OptString                                           `json:"description"`
	GitignoreTemplate   OptString                                           `json:"gitignore_template"`
	HasIssues           OptBool                                             `json:"has_issues"`
	HasProjects         OptBool                                             `json:"has_projects"`
	HasWiki             OptBool                                             `json:"has_wiki"`
	Homepage            OptString                                           `json:"homepage"`
	IsTemplate          OptBool                                             `json:"is_template"`
	LicenseTemplate     OptString                                           `json:"license_template"`
	Name                string                                              `json:"name"`
	Private             OptBool                                             `json:"private"`
	TeamID              OptInt                                              `json:"team_id"`
	Visibility          OptReposCreateInOrgApplicationJSONRequestVisibility `json:"visibility"`
}

func (*ReposCreateInOrgApplicationJSONRequest) reposCreateInOrgRequest() {}

type ReposCreateInOrgApplicationJSONRequestVisibility string

const (
	ReposCreateInOrgApplicationJSONRequestVisibilityPublic     ReposCreateInOrgApplicationJSONRequestVisibility = "public"
	ReposCreateInOrgApplicationJSONRequestVisibilityPrivate    ReposCreateInOrgApplicationJSONRequestVisibility = "private"
	ReposCreateInOrgApplicationJSONRequestVisibilityVisibility ReposCreateInOrgApplicationJSONRequestVisibility = "visibility"
	ReposCreateInOrgApplicationJSONRequestVisibilityInternal   ReposCreateInOrgApplicationJSONRequestVisibility = "internal"
)

type ReposCreateOrUpdateEnvironmentApplicationJSONRequest struct {
	DeploymentBranchPolicy OptDeploymentBranchPolicy                                            `json:"deployment_branch_policy"`
	Reviewers              *[]ReposCreateOrUpdateEnvironmentApplicationJSONRequestReviewersItem `json:"reviewers"`
	WaitTimer              *WaitTimer                                                           `json:"wait_timer"`
}

func (*ReposCreateOrUpdateEnvironmentApplicationJSONRequest) reposCreateOrUpdateEnvironmentRequest() {
}

type ReposCreateOrUpdateEnvironmentApplicationJSONRequestReviewersItem struct {
	ID   OptInt                    `json:"id"`
	Type OptDeploymentReviewerType `json:"type"`
}

type ReposCreateOrUpdateFileContentsApplicationJSONRequest struct {
	Author    OptReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor    `json:"author"`
	Branch    OptString                                                         `json:"branch"`
	Committer OptReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter `json:"committer"`
	Content   string                                                            `json:"content"`
	Message   string                                                            `json:"message"`
	Sha       OptString                                                         `json:"sha"`
}

func (*ReposCreateOrUpdateFileContentsApplicationJSONRequest) reposCreateOrUpdateFileContentsRequest() {
}

type ReposCreateOrUpdateFileContentsApplicationJSONRequestAuthor struct {
	Date  OptString `json:"date"`
	Email string    `json:"email"`
	Name  string    `json:"name"`
}

type ReposCreateOrUpdateFileContentsApplicationJSONRequestCommitter struct {
	Date  OptString `json:"date"`
	Email string    `json:"email"`
	Name  string    `json:"name"`
}

type ReposCreatePagesSiteApplicationJSONRequest struct {
	Source ReposCreatePagesSiteApplicationJSONRequestSource `json:"source"`
}

func (*ReposCreatePagesSiteApplicationJSONRequest) reposCreatePagesSiteRequest() {}

type ReposCreatePagesSiteApplicationJSONRequestSource struct {
	Branch string                                                  `json:"branch"`
	Path   OptReposCreatePagesSiteApplicationJSONRequestSourcePath `json:"path"`
}

type ReposCreatePagesSiteApplicationJSONRequestSourcePath string

const (
	ReposCreatePagesSiteApplicationJSONRequestSourcePathSlash     ReposCreatePagesSiteApplicationJSONRequestSourcePath = "/"
	ReposCreatePagesSiteApplicationJSONRequestSourcePathSlashDocs ReposCreatePagesSiteApplicationJSONRequestSourcePath = "/docs"
)

type ReposCreateReleaseApplicationJSONRequest struct {
	Body                   OptString `json:"body"`
	DiscussionCategoryName OptString `json:"discussion_category_name"`
	Draft                  OptBool   `json:"draft"`
	Name                   OptString `json:"name"`
	Prerelease             OptBool   `json:"prerelease"`
	TagName                string    `json:"tag_name"`
	TargetCommitish        OptString `json:"target_commitish"`
}

func (*ReposCreateReleaseApplicationJSONRequest) reposCreateReleaseRequest() {}

type ReposCreateUsingTemplateApplicationJSONRequest struct {
	Description        OptString `json:"description"`
	IncludeAllBranches OptBool   `json:"include_all_branches"`
	Name               string    `json:"name"`
	Owner              OptString `json:"owner"`
	Private            OptBool   `json:"private"`
}

type ReposDeclineInvitationApplicationJSONConflict BasicError

func (*ReposDeclineInvitationApplicationJSONConflict) reposDeclineInvitationResponse() {}

type ReposDeclineInvitationApplicationJSONForbidden BasicError

func (*ReposDeclineInvitationApplicationJSONForbidden) reposDeclineInvitationResponse() {}

type ReposDeclineInvitationApplicationJSONNotFound BasicError

func (*ReposDeclineInvitationApplicationJSONNotFound) reposDeclineInvitationResponse() {}

type ReposDeclineInvitationNoContent struct{}

func (*ReposDeclineInvitationNoContent) reposDeclineInvitationResponse() {}

type ReposDeleteAccessRestrictions struct{}

type ReposDeleteAdminBranchProtectionNoContent struct{}

func (*ReposDeleteAdminBranchProtectionNoContent) reposDeleteAdminBranchProtectionResponse() {}

type ReposDeleteAnEnvironment struct{}

type ReposDeleteApplicationJSONNotFound BasicError

func (*ReposDeleteApplicationJSONNotFound) reposDeleteResponse() {}

type ReposDeleteApplicationJSONTemporaryRedirect BasicError

func (*ReposDeleteApplicationJSONTemporaryRedirect) reposDeleteResponse() {}

type ReposDeleteAutolinkNoContent struct{}

func (*ReposDeleteAutolinkNoContent) reposDeleteAutolinkResponse() {}

type ReposDeleteBranchProtectionNoContent struct{}

func (*ReposDeleteBranchProtectionNoContent) reposDeleteBranchProtectionResponse() {}

type ReposDeleteCommitCommentNoContent struct{}

func (*ReposDeleteCommitCommentNoContent) reposDeleteCommitCommentResponse() {}

type ReposDeleteCommitSignatureProtectionNoContent struct{}

func (*ReposDeleteCommitSignatureProtectionNoContent) reposDeleteCommitSignatureProtectionResponse() {
}

type ReposDeleteDeployKey struct{}

type ReposDeleteDeploymentNoContent struct{}

func (*ReposDeleteDeploymentNoContent) reposDeleteDeploymentResponse() {}

type ReposDeleteFileApplicationJSONRequest struct {
	Author    OptReposDeleteFileApplicationJSONRequestAuthor    `json:"author"`
	Branch    OptString                                         `json:"branch"`
	Committer OptReposDeleteFileApplicationJSONRequestCommitter `json:"committer"`
	Message   string                                            `json:"message"`
	Sha       string                                            `json:"sha"`
}

func (*ReposDeleteFileApplicationJSONRequest) reposDeleteFileRequest() {}

type ReposDeleteFileApplicationJSONRequestAuthor struct {
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type ReposDeleteFileApplicationJSONRequestCommitter struct {
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type ReposDeleteForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*ReposDeleteForbidden) reposDeleteResponse() {}

type ReposDeleteInvitation struct{}

type ReposDeleteNoContent struct{}

func (*ReposDeleteNoContent) reposDeleteResponse() {}

type ReposDeletePagesSiteNoContent struct{}

type ReposDeletePullRequestReviewProtectionNoContent struct{}

func (*ReposDeletePullRequestReviewProtectionNoContent) reposDeletePullRequestReviewProtectionResponse() {
}

type ReposDeleteRelease struct{}

type ReposDeleteReleaseAsset struct{}

type ReposDeleteWebhookNoContent struct{}

func (*ReposDeleteWebhookNoContent) reposDeleteWebhookResponse() {}

type ReposDisableAutomatedSecurityFixes struct{}

type ReposDisableLfsForRepo struct{}

type ReposDisableVulnerabilityAlerts struct{}

type ReposDownloadTarballArchive struct{}

type ReposDownloadZipballArchive struct{}

type ReposEnableAutomatedSecurityFixes struct{}

type ReposEnableLfsForRepoForbidden struct{}

func (*ReposEnableLfsForRepoForbidden) reposEnableLfsForRepoResponse() {}

type ReposEnableVulnerabilityAlerts struct{}

type ReposGetAllStatusCheckContextsOK []string

func (*ReposGetAllStatusCheckContextsOK) reposGetAllStatusCheckContextsResponse() {}

type ReposGetApplicationJSONForbidden BasicError

func (*ReposGetApplicationJSONForbidden) reposGetResponse() {}

type ReposGetApplicationJSONMovedPermanently BasicError

func (*ReposGetApplicationJSONMovedPermanently) reposGetResponse() {}

type ReposGetApplicationJSONNotFound BasicError

func (*ReposGetApplicationJSONNotFound) reposGetResponse() {}

type ReposGetAppsWithAccessToProtectedBranchOK []Integration

func (*ReposGetAppsWithAccessToProtectedBranchOK) reposGetAppsWithAccessToProtectedBranchResponse() {}

type ReposGetBranchApplicationJSONMovedPermanently BasicError

func (*ReposGetBranchApplicationJSONMovedPermanently) reposGetBranchResponse() {}

type ReposGetBranchApplicationJSONNotFound BasicError

func (*ReposGetBranchApplicationJSONNotFound) reposGetBranchResponse() {}

type ReposGetCodeFrequencyStatsOK []CodeFrequencyStat

func (*ReposGetCodeFrequencyStatsOK) reposGetCodeFrequencyStatsResponse() {}

type ReposGetCommitActivityStatsOK []CommitActivity

func (*ReposGetCommitActivityStatsOK) reposGetCommitActivityStatsResponse() {}

type ReposGetContributorsStatsOK []ContributorActivity

func (*ReposGetContributorsStatsOK) reposGetContributorsStatsResponse() {}

type ReposGetPagesHealthCheckBadRequest struct{}

func (*ReposGetPagesHealthCheckBadRequest) reposGetPagesHealthCheckResponse() {}

type ReposGetPagesHealthCheckUnprocessableEntity struct{}

func (*ReposGetPagesHealthCheckUnprocessableEntity) reposGetPagesHealthCheckResponse() {}

type ReposGetPunchCardStatsOK []CodeFrequencyStat

func (*ReposGetPunchCardStatsOK) reposGetPunchCardStatsResponse() {}

type ReposGetTeamsWithAccessToProtectedBranchOK []Team

func (*ReposGetTeamsWithAccessToProtectedBranchOK) reposGetTeamsWithAccessToProtectedBranchResponse() {
}

type ReposGetTopPathsOK []ContentTraffic

func (*ReposGetTopPathsOK) reposGetTopPathsResponse() {}

type ReposGetTopReferrersOK []ReferrerTraffic

func (*ReposGetTopReferrersOK) reposGetTopReferrersResponse() {}

type ReposGetUsersWithAccessToProtectedBranchOK []SimpleUser

func (*ReposGetUsersWithAccessToProtectedBranchOK) reposGetUsersWithAccessToProtectedBranchResponse() {
}

type ReposListBranchesForHeadCommitOK []BranchShort

type ReposListBranchesOK []ShortBranch

func (*ReposListBranchesOK) reposListBranchesResponse() {}

type ReposListCommitStatusesForRefOK []Status

func (*ReposListCommitStatusesForRefOK) reposListCommitStatusesForRefResponse() {}

type ReposListCommitsApplicationJSONBadRequest BasicError

func (*ReposListCommitsApplicationJSONBadRequest) reposListCommitsResponse() {}

type ReposListCommitsApplicationJSONConflict BasicError

func (*ReposListCommitsApplicationJSONConflict) reposListCommitsResponse() {}

type ReposListCommitsApplicationJSONInternalServerError BasicError

func (*ReposListCommitsApplicationJSONInternalServerError) reposListCommitsResponse() {}

type ReposListCommitsApplicationJSONNotFound BasicError

func (*ReposListCommitsApplicationJSONNotFound) reposListCommitsResponse() {}

type ReposListCommitsOK []Commit

func (*ReposListCommitsOK) reposListCommitsResponse() {}

type ReposListContributorsApplicationJSONForbidden BasicError

func (*ReposListContributorsApplicationJSONForbidden) reposListContributorsResponse() {}

type ReposListContributorsApplicationJSONNotFound BasicError

func (*ReposListContributorsApplicationJSONNotFound) reposListContributorsResponse() {}

type ReposListContributorsNoContent struct{}

func (*ReposListContributorsNoContent) reposListContributorsResponse() {}

type ReposListContributorsOK []Contributor

func (*ReposListContributorsOK) reposListContributorsResponse() {}

type ReposListDeploymentStatusesOK []DeploymentStatus

func (*ReposListDeploymentStatusesOK) reposListDeploymentStatusesResponse() {}

type ReposListInvitationsForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ReposListInvitationsForAuthenticatedUserApplicationJSONForbidden) reposListInvitationsForAuthenticatedUserResponse() {
}

type ReposListInvitationsForAuthenticatedUserApplicationJSONNotFound BasicError

func (*ReposListInvitationsForAuthenticatedUserApplicationJSONNotFound) reposListInvitationsForAuthenticatedUserResponse() {
}

type ReposListInvitationsForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ReposListInvitationsForAuthenticatedUserApplicationJSONUnauthorized) reposListInvitationsForAuthenticatedUserResponse() {
}

type ReposListInvitationsForAuthenticatedUserOK []RepositoryInvitation

func (*ReposListInvitationsForAuthenticatedUserOK) reposListInvitationsForAuthenticatedUserResponse() {
}

type ReposListPublicOK []MinimalRepository

type ReposListReleasesOK []Release

func (*ReposListReleasesOK) reposListReleasesResponse() {}

type ReposListWebhookDeliveriesOK []HookDeliveryItem

type ReposMergeApplicationJSONRequest struct {
	Base          string    `json:"base"`
	CommitMessage OptString `json:"commit_message"`
	Head          string    `json:"head"`
}

func (*ReposMergeApplicationJSONRequest) reposMergeRequest() {}

type ReposMergeConflict struct{}

type ReposMergeNoContent struct{}

type ReposMergeNotFound struct{}

type ReposMergeUpstreamApplicationJSONRequest struct {
	Branch string `json:"branch"`
}

type ReposMergeUpstreamConflict struct{}

func (*ReposMergeUpstreamConflict) reposMergeUpstreamResponse() {}

type ReposMergeUpstreamUnprocessableEntity struct{}

func (*ReposMergeUpstreamUnprocessableEntity) reposMergeUpstreamResponse() {}

type ReposPingWebhookNoContent struct{}

func (*ReposPingWebhookNoContent) reposPingWebhookResponse() {}

type ReposRemoveCollaborator struct{}

type ReposRemoveStatusCheckProtection struct{}

type ReposRenameBranchApplicationJSONRequest struct {
	NewName string `json:"new_name"`
}

func (*ReposRenameBranchApplicationJSONRequest) reposRenameBranchRequest() {}

type ReposReplaceAllTopicsApplicationJSONRequest struct {
	Names []string `json:"names"`
}

type ReposTestPushWebhookNoContent struct{}

func (*ReposTestPushWebhookNoContent) reposTestPushWebhookResponse() {}

type ReposTransferApplicationJSONRequest struct {
	NewOwner string `json:"new_owner"`
	TeamIds  *[]int `json:"team_ids"`
}

type ReposUpdateApplicationJSONRequest struct {
	AllowAutoMerge      OptBool                                                    `json:"allow_auto_merge"`
	AllowForking        OptBool                                                    `json:"allow_forking"`
	AllowMergeCommit    OptBool                                                    `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                                                    `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                                                    `json:"allow_squash_merge"`
	Archived            OptBool                                                    `json:"archived"`
	DefaultBranch       OptString                                                  `json:"default_branch"`
	DeleteBranchOnMerge OptBool                                                    `json:"delete_branch_on_merge"`
	Description         OptString                                                  `json:"description"`
	HasIssues           OptBool                                                    `json:"has_issues"`
	HasProjects         OptBool                                                    `json:"has_projects"`
	HasWiki             OptBool                                                    `json:"has_wiki"`
	Homepage            OptString                                                  `json:"homepage"`
	IsTemplate          OptBool                                                    `json:"is_template"`
	Name                OptString                                                  `json:"name"`
	Private             OptBool                                                    `json:"private"`
	SecurityAndAnalysis OptNilReposUpdateApplicationJSONRequestSecurityAndAnalysis `json:"security_and_analysis"`
	Visibility          OptReposUpdateApplicationJSONRequestVisibility             `json:"visibility"`
}

func (*ReposUpdateApplicationJSONRequest) reposUpdateRequest() {}

type ReposUpdateApplicationJSONRequestSecurityAndAnalysis struct {
	AdvancedSecurity OptReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity `json:"advanced_security"`
	SecretScanning   OptReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning   `json:"secret_scanning"`
}

type ReposUpdateApplicationJSONRequestSecurityAndAnalysisAdvancedSecurity struct {
	Status OptString `json:"status"`
}

type ReposUpdateApplicationJSONRequestSecurityAndAnalysisSecretScanning struct {
	Status OptString `json:"status"`
}

type ReposUpdateApplicationJSONRequestVisibility string

const (
	ReposUpdateApplicationJSONRequestVisibilityPublic     ReposUpdateApplicationJSONRequestVisibility = "public"
	ReposUpdateApplicationJSONRequestVisibilityPrivate    ReposUpdateApplicationJSONRequestVisibility = "private"
	ReposUpdateApplicationJSONRequestVisibilityVisibility ReposUpdateApplicationJSONRequestVisibility = "visibility"
	ReposUpdateApplicationJSONRequestVisibilityInternal   ReposUpdateApplicationJSONRequestVisibility = "internal"
)

type ReposUpdateBranchProtectionApplicationJSONForbidden BasicError

func (*ReposUpdateBranchProtectionApplicationJSONForbidden) reposUpdateBranchProtectionResponse() {}

type ReposUpdateBranchProtectionApplicationJSONNotFound BasicError

func (*ReposUpdateBranchProtectionApplicationJSONNotFound) reposUpdateBranchProtectionResponse() {}

type ReposUpdateBranchProtectionApplicationJSONRequest struct {
	AllowDeletions                 OptBool                                                                        `json:"allow_deletions"`
	AllowForcePushes               OptNilBool                                                                     `json:"allow_force_pushes"`
	EnforceAdmins                  NilBool                                                                        `json:"enforce_admins"`
	RequiredConversationResolution OptBool                                                                        `json:"required_conversation_resolution"`
	RequiredLinearHistory          OptBool                                                                        `json:"required_linear_history"`
	RequiredPullRequestReviews     NilReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews `json:"required_pull_request_reviews"`
	RequiredStatusChecks           NilReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks       `json:"required_status_checks"`
	Restrictions                   NilReposUpdateBranchProtectionApplicationJSONRequestRestrictions               `json:"restrictions"`
}

type ReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviews struct {
	DismissStaleReviews          OptBool                                                                                             `json:"dismiss_stale_reviews"`
	DismissalRestrictions        OptReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions `json:"dismissal_restrictions"`
	RequireCodeOwnerReviews      OptBool                                                                                             `json:"require_code_owner_reviews"`
	RequiredApprovingReviewCount OptInt                                                                                              `json:"required_approving_review_count"`
}

type ReposUpdateBranchProtectionApplicationJSONRequestRequiredPullRequestReviewsDismissalRestrictions struct {
	Teams *[]string `json:"teams"`
	Users *[]string `json:"users"`
}

type ReposUpdateBranchProtectionApplicationJSONRequestRequiredStatusChecks struct {
	Contexts []string `json:"contexts"`
	Strict   bool     `json:"strict"`
}

type ReposUpdateBranchProtectionApplicationJSONRequestRestrictions struct {
	Apps  *[]string `json:"apps"`
	Teams []string  `json:"teams"`
	Users []string  `json:"users"`
}

type ReposUpdateCommitCommentApplicationJSONRequest struct {
	Body string `json:"body"`
}

type ReposUpdateInvitationApplicationJSONRequest struct {
	Permissions OptReposUpdateInvitationApplicationJSONRequestPermissions `json:"permissions"`
}

type ReposUpdateInvitationApplicationJSONRequestPermissions string

const (
	ReposUpdateInvitationApplicationJSONRequestPermissionsRead     ReposUpdateInvitationApplicationJSONRequestPermissions = "read"
	ReposUpdateInvitationApplicationJSONRequestPermissionsWrite    ReposUpdateInvitationApplicationJSONRequestPermissions = "write"
	ReposUpdateInvitationApplicationJSONRequestPermissionsMaintain ReposUpdateInvitationApplicationJSONRequestPermissions = "maintain"
	ReposUpdateInvitationApplicationJSONRequestPermissionsTriage   ReposUpdateInvitationApplicationJSONRequestPermissions = "triage"
	ReposUpdateInvitationApplicationJSONRequestPermissionsAdmin    ReposUpdateInvitationApplicationJSONRequestPermissions = "admin"
)

type ReposUpdatePullRequestReviewProtectionApplicationJSONRequest struct {
	DismissStaleReviews          OptBool                                                                              `json:"dismiss_stale_reviews"`
	DismissalRestrictions        OptReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions `json:"dismissal_restrictions"`
	RequireCodeOwnerReviews      OptBool                                                                              `json:"require_code_owner_reviews"`
	RequiredApprovingReviewCount OptInt                                                                               `json:"required_approving_review_count"`
}

func (*ReposUpdatePullRequestReviewProtectionApplicationJSONRequest) reposUpdatePullRequestReviewProtectionRequest() {
}

type ReposUpdatePullRequestReviewProtectionApplicationJSONRequestDismissalRestrictions struct {
	Teams *[]string `json:"teams"`
	Users *[]string `json:"users"`
}

type ReposUpdateReleaseApplicationJSONRequest struct {
	Body                   OptString `json:"body"`
	DiscussionCategoryName OptString `json:"discussion_category_name"`
	Draft                  OptBool   `json:"draft"`
	Name                   OptString `json:"name"`
	Prerelease             OptBool   `json:"prerelease"`
	TagName                OptString `json:"tag_name"`
	TargetCommitish        OptString `json:"target_commitish"`
}

type ReposUpdateReleaseAssetApplicationJSONRequest struct {
	Label OptString `json:"label"`
	Name  OptString `json:"name"`
	State OptString `json:"state"`
}

type ReposUpdateStatusCheckProtectionApplicationJSONRequest struct {
	Contexts *[]string `json:"contexts"`
	Strict   OptBool   `json:"strict"`
}

func (*ReposUpdateStatusCheckProtectionApplicationJSONRequest) reposUpdateStatusCheckProtectionRequest() {
}

// Repository describes #/components/schemas/repository.
type Repository struct {
	AllowAutoMerge      OptBool                            `json:"allow_auto_merge"`
	AllowForking        OptBool                            `json:"allow_forking"`
	AllowMergeCommit    OptBool                            `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                            `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                            `json:"allow_squash_merge"`
	ArchiveURL          string                             `json:"archive_url"`
	Archived            bool                               `json:"archived"`
	AssigneesURL        string                             `json:"assignees_url"`
	BlobsURL            string                             `json:"blobs_url"`
	BranchesURL         string                             `json:"branches_url"`
	CloneURL            string                             `json:"clone_url"`
	CollaboratorsURL    string                             `json:"collaborators_url"`
	CommentsURL         string                             `json:"comments_url"`
	CommitsURL          string                             `json:"commits_url"`
	CompareURL          string                             `json:"compare_url"`
	ContentsURL         string                             `json:"contents_url"`
	ContributorsURL     url.URL                            `json:"contributors_url"`
	CreatedAt           NilTime                            `json:"created_at"`
	DefaultBranch       string                             `json:"default_branch"`
	DeleteBranchOnMerge OptBool                            `json:"delete_branch_on_merge"`
	DeploymentsURL      url.URL                            `json:"deployments_url"`
	Description         NilString                          `json:"description"`
	Disabled            bool                               `json:"disabled"`
	DownloadsURL        url.URL                            `json:"downloads_url"`
	EventsURL           url.URL                            `json:"events_url"`
	Fork                bool                               `json:"fork"`
	Forks               int                                `json:"forks"`
	ForksCount          int                                `json:"forks_count"`
	ForksURL            url.URL                            `json:"forks_url"`
	FullName            string                             `json:"full_name"`
	GitCommitsURL       string                             `json:"git_commits_url"`
	GitRefsURL          string                             `json:"git_refs_url"`
	GitTagsURL          string                             `json:"git_tags_url"`
	GitURL              string                             `json:"git_url"`
	HTMLURL             url.URL                            `json:"html_url"`
	HasDownloads        bool                               `json:"has_downloads"`
	HasIssues           bool                               `json:"has_issues"`
	HasPages            bool                               `json:"has_pages"`
	HasProjects         bool                               `json:"has_projects"`
	HasWiki             bool                               `json:"has_wiki"`
	Homepage            NilURL                             `json:"homepage"`
	HooksURL            url.URL                            `json:"hooks_url"`
	ID                  int                                `json:"id"`
	IsTemplate          OptBool                            `json:"is_template"`
	IssueCommentURL     string                             `json:"issue_comment_url"`
	IssueEventsURL      string                             `json:"issue_events_url"`
	IssuesURL           string                             `json:"issues_url"`
	KeysURL             string                             `json:"keys_url"`
	LabelsURL           string                             `json:"labels_url"`
	Language            NilString                          `json:"language"`
	LanguagesURL        url.URL                            `json:"languages_url"`
	License             NullableLicenseSimple              `json:"license"`
	MasterBranch        OptString                          `json:"master_branch"`
	MergesURL           url.URL                            `json:"merges_url"`
	MilestonesURL       string                             `json:"milestones_url"`
	MirrorURL           NilURL                             `json:"mirror_url"`
	Name                string                             `json:"name"`
	NetworkCount        OptInt                             `json:"network_count"`
	NodeID              string                             `json:"node_id"`
	NotificationsURL    string                             `json:"notifications_url"`
	OpenIssues          int                                `json:"open_issues"`
	OpenIssuesCount     int                                `json:"open_issues_count"`
	Organization        OptNullableSimpleUser              `json:"organization"`
	Owner               SimpleUser                         `json:"owner"`
	Permissions         OptRepositoryPermissions           `json:"permissions"`
	Private             bool                               `json:"private"`
	PullsURL            string                             `json:"pulls_url"`
	PushedAt            NilTime                            `json:"pushed_at"`
	ReleasesURL         string                             `json:"releases_url"`
	SSHURL              string                             `json:"ssh_url"`
	Size                int                                `json:"size"`
	StargazersCount     int                                `json:"stargazers_count"`
	StargazersURL       url.URL                            `json:"stargazers_url"`
	StarredAt           OptString                          `json:"starred_at"`
	StatusesURL         string                             `json:"statuses_url"`
	SubscribersCount    OptInt                             `json:"subscribers_count"`
	SubscribersURL      url.URL                            `json:"subscribers_url"`
	SubscriptionURL     url.URL                            `json:"subscription_url"`
	SvnURL              url.URL                            `json:"svn_url"`
	TagsURL             url.URL                            `json:"tags_url"`
	TeamsURL            url.URL                            `json:"teams_url"`
	TempCloneToken      OptString                          `json:"temp_clone_token"`
	TemplateRepository  OptNilRepositoryTemplateRepository `json:"template_repository"`
	Topics              *[]string                          `json:"topics"`
	TreesURL            string                             `json:"trees_url"`
	URL                 url.URL                            `json:"url"`
	UpdatedAt           NilTime                            `json:"updated_at"`
	Visibility          OptString                          `json:"visibility"`
	Watchers            int                                `json:"watchers"`
	WatchersCount       int                                `json:"watchers_count"`
}

// RepositoryCollaboratorPermission describes #/components/schemas/repository-collaborator-permission.
type RepositoryCollaboratorPermission struct {
	Permission string             `json:"permission"`
	User       NullableSimpleUser `json:"user"`
}

func (*RepositoryCollaboratorPermission) reposGetCollaboratorPermissionLevelResponse() {}

// RepositoryInvitation describes #/components/schemas/repository-invitation.
type RepositoryInvitation struct {
	CreatedAt   time.Time                       `json:"created_at"`
	Expired     OptBool                         `json:"expired"`
	HTMLURL     string                          `json:"html_url"`
	ID          int                             `json:"id"`
	Invitee     NullableSimpleUser              `json:"invitee"`
	Inviter     NullableSimpleUser              `json:"inviter"`
	NodeID      string                          `json:"node_id"`
	Permissions RepositoryInvitationPermissions `json:"permissions"`
	Repository  MinimalRepository               `json:"repository"`
	URL         string                          `json:"url"`
}

type RepositoryInvitationPermissions string

const (
	RepositoryInvitationPermissionsRead     RepositoryInvitationPermissions = "read"
	RepositoryInvitationPermissionsWrite    RepositoryInvitationPermissions = "write"
	RepositoryInvitationPermissionsAdmin    RepositoryInvitationPermissions = "admin"
	RepositoryInvitationPermissionsTriage   RepositoryInvitationPermissions = "triage"
	RepositoryInvitationPermissionsMaintain RepositoryInvitationPermissions = "maintain"
)

type RepositoryPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

// RepositorySubscription describes #/components/schemas/repository-subscription.
type RepositorySubscription struct {
	CreatedAt     time.Time `json:"created_at"`
	Ignored       bool      `json:"ignored"`
	Reason        NilString `json:"reason"`
	RepositoryURL url.URL   `json:"repository_url"`
	Subscribed    bool      `json:"subscribed"`
	URL           url.URL   `json:"url"`
}

func (*RepositorySubscription) activityGetRepoSubscriptionResponse() {}

type RepositoryTemplateRepository struct {
	AllowAutoMerge      OptBool                                    `json:"allow_auto_merge"`
	AllowMergeCommit    OptBool                                    `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                                    `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                                    `json:"allow_squash_merge"`
	ArchiveURL          OptString                                  `json:"archive_url"`
	Archived            OptBool                                    `json:"archived"`
	AssigneesURL        OptString                                  `json:"assignees_url"`
	BlobsURL            OptString                                  `json:"blobs_url"`
	BranchesURL         OptString                                  `json:"branches_url"`
	CloneURL            OptString                                  `json:"clone_url"`
	CollaboratorsURL    OptString                                  `json:"collaborators_url"`
	CommentsURL         OptString                                  `json:"comments_url"`
	CommitsURL          OptString                                  `json:"commits_url"`
	CompareURL          OptString                                  `json:"compare_url"`
	ContentsURL         OptString                                  `json:"contents_url"`
	ContributorsURL     OptString                                  `json:"contributors_url"`
	CreatedAt           OptString                                  `json:"created_at"`
	DefaultBranch       OptString                                  `json:"default_branch"`
	DeleteBranchOnMerge OptBool                                    `json:"delete_branch_on_merge"`
	DeploymentsURL      OptString                                  `json:"deployments_url"`
	Description         OptString                                  `json:"description"`
	Disabled            OptBool                                    `json:"disabled"`
	DownloadsURL        OptString                                  `json:"downloads_url"`
	EventsURL           OptString                                  `json:"events_url"`
	Fork                OptBool                                    `json:"fork"`
	ForksCount          OptInt                                     `json:"forks_count"`
	ForksURL            OptString                                  `json:"forks_url"`
	FullName            OptString                                  `json:"full_name"`
	GitCommitsURL       OptString                                  `json:"git_commits_url"`
	GitRefsURL          OptString                                  `json:"git_refs_url"`
	GitTagsURL          OptString                                  `json:"git_tags_url"`
	GitURL              OptString                                  `json:"git_url"`
	HTMLURL             OptString                                  `json:"html_url"`
	HasDownloads        OptBool                                    `json:"has_downloads"`
	HasIssues           OptBool                                    `json:"has_issues"`
	HasPages            OptBool                                    `json:"has_pages"`
	HasProjects         OptBool                                    `json:"has_projects"`
	HasWiki             OptBool                                    `json:"has_wiki"`
	Homepage            OptString                                  `json:"homepage"`
	HooksURL            OptString                                  `json:"hooks_url"`
	ID                  OptInt                                     `json:"id"`
	IsTemplate          OptBool                                    `json:"is_template"`
	IssueCommentURL     OptString                                  `json:"issue_comment_url"`
	IssueEventsURL      OptString                                  `json:"issue_events_url"`
	IssuesURL           OptString                                  `json:"issues_url"`
	KeysURL             OptString                                  `json:"keys_url"`
	LabelsURL           OptString                                  `json:"labels_url"`
	Language            OptString                                  `json:"language"`
	LanguagesURL        OptString                                  `json:"languages_url"`
	MergesURL           OptString                                  `json:"merges_url"`
	MilestonesURL       OptString                                  `json:"milestones_url"`
	MirrorURL           OptString                                  `json:"mirror_url"`
	Name                OptString                                  `json:"name"`
	NetworkCount        OptInt                                     `json:"network_count"`
	NodeID              OptString                                  `json:"node_id"`
	NotificationsURL    OptString                                  `json:"notifications_url"`
	OpenIssuesCount     OptInt                                     `json:"open_issues_count"`
	Owner               OptRepositoryTemplateRepositoryOwner       `json:"owner"`
	Permissions         OptRepositoryTemplateRepositoryPermissions `json:"permissions"`
	Private             OptBool                                    `json:"private"`
	PullsURL            OptString                                  `json:"pulls_url"`
	PushedAt            OptString                                  `json:"pushed_at"`
	ReleasesURL         OptString                                  `json:"releases_url"`
	SSHURL              OptString                                  `json:"ssh_url"`
	Size                OptInt                                     `json:"size"`
	StargazersCount     OptInt                                     `json:"stargazers_count"`
	StargazersURL       OptString                                  `json:"stargazers_url"`
	StatusesURL         OptString                                  `json:"statuses_url"`
	SubscribersCount    OptInt                                     `json:"subscribers_count"`
	SubscribersURL      OptString                                  `json:"subscribers_url"`
	SubscriptionURL     OptString                                  `json:"subscription_url"`
	SvnURL              OptString                                  `json:"svn_url"`
	TagsURL             OptString                                  `json:"tags_url"`
	TeamsURL            OptString                                  `json:"teams_url"`
	TempCloneToken      OptString                                  `json:"temp_clone_token"`
	Topics              *[]string                                  `json:"topics"`
	TreesURL            OptString                                  `json:"trees_url"`
	URL                 OptString                                  `json:"url"`
	UpdatedAt           OptString                                  `json:"updated_at"`
	Visibility          OptString                                  `json:"visibility"`
	WatchersCount       OptInt                                     `json:"watchers_count"`
}

type RepositoryTemplateRepositoryOwner struct {
	AvatarURL         OptString `json:"avatar_url"`
	EventsURL         OptString `json:"events_url"`
	FollowersURL      OptString `json:"followers_url"`
	FollowingURL      OptString `json:"following_url"`
	GistsURL          OptString `json:"gists_url"`
	GravatarID        OptString `json:"gravatar_id"`
	HTMLURL           OptString `json:"html_url"`
	ID                OptInt    `json:"id"`
	Login             OptString `json:"login"`
	NodeID            OptString `json:"node_id"`
	OrganizationsURL  OptString `json:"organizations_url"`
	ReceivedEventsURL OptString `json:"received_events_url"`
	ReposURL          OptString `json:"repos_url"`
	SiteAdmin         OptBool   `json:"site_admin"`
	StarredURL        OptString `json:"starred_url"`
	SubscriptionsURL  OptString `json:"subscriptions_url"`
	Type              OptString `json:"type"`
	URL               OptString `json:"url"`
}

type RepositoryTemplateRepositoryPermissions struct {
	Admin    OptBool `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     OptBool `json:"pull"`
	Push     OptBool `json:"push"`
	Triage   OptBool `json:"triage"`
}

// ReviewComment describes #/components/schemas/review-comment.
type ReviewComment struct {
	AuthorAssociation   AuthorAssociation            `json:"author_association"`
	Body                string                       `json:"body"`
	BodyHTML            OptString                    `json:"body_html"`
	BodyText            OptString                    `json:"body_text"`
	CommitID            string                       `json:"commit_id"`
	CreatedAt           time.Time                    `json:"created_at"`
	DiffHunk            string                       `json:"diff_hunk"`
	HTMLURL             url.URL                      `json:"html_url"`
	ID                  int                          `json:"id"`
	InReplyToID         OptInt                       `json:"in_reply_to_id"`
	Line                OptInt                       `json:"line"`
	Links               ReviewCommentLinks           `json:"_links"`
	NodeID              string                       `json:"node_id"`
	OriginalCommitID    string                       `json:"original_commit_id"`
	OriginalLine        OptInt                       `json:"original_line"`
	OriginalPosition    int                          `json:"original_position"`
	OriginalStartLine   OptNilInt                    `json:"original_start_line"`
	Path                string                       `json:"path"`
	Position            NilInt                       `json:"position"`
	PullRequestReviewID NilInt                       `json:"pull_request_review_id"`
	PullRequestURL      url.URL                      `json:"pull_request_url"`
	Reactions           OptReactionRollup            `json:"reactions"`
	Side                OptReviewCommentSide         `json:"side"`
	StartLine           OptNilInt                    `json:"start_line"`
	StartSide           OptNilReviewCommentStartSide `json:"start_side"`
	URL                 url.URL                      `json:"url"`
	UpdatedAt           time.Time                    `json:"updated_at"`
	User                NullableSimpleUser           `json:"user"`
}

type ReviewCommentLinks struct {
	HTML        Link `json:"html"`
	PullRequest Link `json:"pull_request"`
	Self        Link `json:"self"`
}

type ReviewCommentSide string

const (
	ReviewCommentSideLEFT  ReviewCommentSide = "LEFT"
	ReviewCommentSideRIGHT ReviewCommentSide = "RIGHT"
)

type ReviewCommentStartSide string

const (
	ReviewCommentStartSideLEFT  ReviewCommentStartSide = "LEFT"
	ReviewCommentStartSideRIGHT ReviewCommentStartSide = "RIGHT"
)

// Runner describes #/components/schemas/runner.
type Runner struct {
	Busy   bool               `json:"busy"`
	ID     int                `json:"id"`
	Labels []RunnerLabelsItem `json:"labels"`
	Name   string             `json:"name"`
	Os     string             `json:"os"`
	Status string             `json:"status"`
}

// RunnerApplication describes #/components/schemas/runner-application.
type RunnerApplication struct {
	Architecture      string    `json:"architecture"`
	DownloadURL       string    `json:"download_url"`
	Filename          string    `json:"filename"`
	Os                string    `json:"os"`
	SHA256Checksum    OptString `json:"sha256_checksum"`
	TempDownloadToken OptString `json:"temp_download_token"`
}

// RunnerGroupsEnterprise describes #/components/schemas/runner-groups-enterprise.
type RunnerGroupsEnterprise struct {
	AllowsPublicRepositories bool      `json:"allows_public_repositories"`
	Default                  bool      `json:"default"`
	ID                       float64   `json:"id"`
	Name                     string    `json:"name"`
	RunnersURL               string    `json:"runners_url"`
	SelectedOrganizationsURL OptString `json:"selected_organizations_url"`
	Visibility               string    `json:"visibility"`
}

// RunnerGroupsOrg describes #/components/schemas/runner-groups-org.
type RunnerGroupsOrg struct {
	AllowsPublicRepositories          bool      `json:"allows_public_repositories"`
	Default                           bool      `json:"default"`
	ID                                float64   `json:"id"`
	Inherited                         bool      `json:"inherited"`
	InheritedAllowsPublicRepositories OptBool   `json:"inherited_allows_public_repositories"`
	Name                              string    `json:"name"`
	RunnersURL                        string    `json:"runners_url"`
	SelectedRepositoriesURL           OptString `json:"selected_repositories_url"`
	Visibility                        string    `json:"visibility"`
}

type RunnerLabelsItem struct {
	ID   OptInt                  `json:"id"`
	Name OptString               `json:"name"`
	Type OptRunnerLabelsItemType `json:"type"`
}

type RunnerLabelsItemType string

const (
	RunnerLabelsItemTypeReadMinusOnly RunnerLabelsItemType = "read-only"
	RunnerLabelsItemTypeCustom        RunnerLabelsItemType = "custom"
)

type ScimDeleteUserFromOrgApplicationJSONForbidden ScimError

func (*ScimDeleteUserFromOrgApplicationJSONForbidden) scimDeleteUserFromOrgResponse() {}

type ScimDeleteUserFromOrgApplicationJSONNotFound ScimError

func (*ScimDeleteUserFromOrgApplicationJSONNotFound) scimDeleteUserFromOrgResponse() {}

type ScimDeleteUserFromOrgApplicationScimJSONForbidden ScimError

func (*ScimDeleteUserFromOrgApplicationScimJSONForbidden) scimDeleteUserFromOrgResponse() {}

type ScimDeleteUserFromOrgApplicationScimJSONNotFound ScimError

func (*ScimDeleteUserFromOrgApplicationScimJSONNotFound) scimDeleteUserFromOrgResponse() {}

type ScimDeleteUserFromOrgNoContent struct{}

func (*ScimDeleteUserFromOrgNoContent) scimDeleteUserFromOrgResponse() {}

// ScimEnterpriseGroup describes #/components/schemas/scim-enterprise-group.
type ScimEnterpriseGroup struct {
	DisplayName OptString                         `json:"displayName"`
	ExternalId  OptNilString                      `json:"externalId"`
	ID          string                            `json:"id"`
	Members     *[]ScimEnterpriseGroupMembersItem `json:"members"`
	Meta        OptScimEnterpriseGroupMeta        `json:"meta"`
	Schemas     []string                          `json:"schemas"`
}

type ScimEnterpriseGroupMembersItem struct {
	Display OptString `json:"display"`
	Ref     OptString `json:"$ref"`
	Value   OptString `json:"value"`
}

type ScimEnterpriseGroupMeta struct {
	Created      OptString `json:"created"`
	LastModified OptString `json:"lastModified"`
	Location     OptString `json:"location"`
	ResourceType OptString `json:"resourceType"`
}

// ScimEnterpriseUser describes #/components/schemas/scim-enterprise-user.
type ScimEnterpriseUser struct {
	Active     OptBool                         `json:"active"`
	Emails     *[]ScimEnterpriseUserEmailsItem `json:"emails"`
	ExternalId OptString                       `json:"externalId"`
	Groups     *[]ScimEnterpriseUserGroupsItem `json:"groups"`
	ID         string                          `json:"id"`
	Meta       OptScimEnterpriseUserMeta       `json:"meta"`
	Name       OptScimEnterpriseUserName       `json:"name"`
	Schemas    []string                        `json:"schemas"`
	UserName   OptString                       `json:"userName"`
}

type ScimEnterpriseUserEmailsItem struct {
	Primary OptBool   `json:"primary"`
	Type    OptString `json:"type"`
	Value   OptString `json:"value"`
}

type ScimEnterpriseUserGroupsItem struct {
	Value OptString `json:"value"`
}

type ScimEnterpriseUserMeta struct {
	Created      OptString `json:"created"`
	LastModified OptString `json:"lastModified"`
	Location     OptString `json:"location"`
	ResourceType OptString `json:"resourceType"`
}

type ScimEnterpriseUserName struct {
	FamilyName OptString `json:"familyName"`
	GivenName  OptString `json:"givenName"`
}

// ScimError describes #/components/schemas/scim-error.
type ScimError struct {
	Detail           OptNilString `json:"detail"`
	DocumentationURL OptNilString `json:"documentation_url"`
	Message          OptNilString `json:"message"`
	Schemas          *[]string    `json:"schemas"`
	ScimType         OptNilString `json:"scimType"`
	Status           OptInt       `json:"status"`
}

func (*ScimError) codeScanningDeleteAnalysisResponse() {}
func (*ScimError) reposListCommitsResponse()           {}

// ScimGroupListEnterprise describes #/components/schemas/scim-group-list-enterprise.
type ScimGroupListEnterprise struct {
	ItemsPerPage float64                                `json:"itemsPerPage"`
	Resources    []ScimGroupListEnterpriseResourcesItem `json:"Resources"`
	Schemas      []string                               `json:"schemas"`
	StartIndex   float64                                `json:"startIndex"`
	TotalResults float64                                `json:"totalResults"`
}

type ScimGroupListEnterpriseResourcesItem struct {
	DisplayName OptString                                          `json:"displayName"`
	ExternalId  OptNilString                                       `json:"externalId"`
	ID          string                                             `json:"id"`
	Members     *[]ScimGroupListEnterpriseResourcesItemMembersItem `json:"members"`
	Meta        OptScimGroupListEnterpriseResourcesItemMeta        `json:"meta"`
	Schemas     []string                                           `json:"schemas"`
}

type ScimGroupListEnterpriseResourcesItemMembersItem struct {
	Display OptString `json:"display"`
	Ref     OptString `json:"$ref"`
	Value   OptString `json:"value"`
}

type ScimGroupListEnterpriseResourcesItemMeta struct {
	Created      OptString `json:"created"`
	LastModified OptString `json:"lastModified"`
	Location     OptString `json:"location"`
	ResourceType OptString `json:"resourceType"`
}

type ScimProvisionAndInviteUserApplicationJSONRequest struct {
	Active      OptBool                                                      `json:"active"`
	DisplayName OptString                                                    `json:"displayName"`
	Emails      []ScimProvisionAndInviteUserApplicationJSONRequestEmailsItem `json:"emails"`
	ExternalId  OptString                                                    `json:"externalId"`
	Groups      *[]string                                                    `json:"groups"`
	Name        ScimProvisionAndInviteUserApplicationJSONRequestName         `json:"name"`
	Schemas     *[]string                                                    `json:"schemas"`
	UserName    string                                                       `json:"userName"`
}

func (*ScimProvisionAndInviteUserApplicationJSONRequest) scimProvisionAndInviteUserRequest() {}

type ScimProvisionAndInviteUserApplicationJSONRequestEmailsItem struct {
	Primary OptBool   `json:"primary"`
	Type    OptString `json:"type"`
	Value   string    `json:"value"`
}

type ScimProvisionAndInviteUserApplicationJSONRequestName struct {
	FamilyName string    `json:"familyName"`
	Formatted  OptString `json:"formatted"`
	GivenName  string    `json:"givenName"`
}

type ScimSetInformationForProvisionedUserApplicationJSONRequest struct {
	Active      OptBool                                                                `json:"active"`
	DisplayName OptString                                                              `json:"displayName"`
	Emails      []ScimSetInformationForProvisionedUserApplicationJSONRequestEmailsItem `json:"emails"`
	ExternalId  OptString                                                              `json:"externalId"`
	Groups      *[]string                                                              `json:"groups"`
	Name        ScimSetInformationForProvisionedUserApplicationJSONRequestName         `json:"name"`
	Schemas     *[]string                                                              `json:"schemas"`
	UserName    string                                                                 `json:"userName"`
}

func (*ScimSetInformationForProvisionedUserApplicationJSONRequest) scimSetInformationForProvisionedUserRequest() {
}

type ScimSetInformationForProvisionedUserApplicationJSONRequestEmailsItem struct {
	Primary OptBool   `json:"primary"`
	Type    OptString `json:"type"`
	Value   string    `json:"value"`
}

type ScimSetInformationForProvisionedUserApplicationJSONRequestName struct {
	FamilyName string    `json:"familyName"`
	Formatted  OptString `json:"formatted"`
	GivenName  string    `json:"givenName"`
}

// ScimUserListEnterprise describes #/components/schemas/scim-user-list-enterprise.
type ScimUserListEnterprise struct {
	ItemsPerPage float64                               `json:"itemsPerPage"`
	Resources    []ScimUserListEnterpriseResourcesItem `json:"Resources"`
	Schemas      []string                              `json:"schemas"`
	StartIndex   float64                               `json:"startIndex"`
	TotalResults float64                               `json:"totalResults"`
}

type ScimUserListEnterpriseResourcesItem struct {
	Active     OptBool                                          `json:"active"`
	Emails     *[]ScimUserListEnterpriseResourcesItemEmailsItem `json:"emails"`
	ExternalId OptString                                        `json:"externalId"`
	Groups     *[]ScimUserListEnterpriseResourcesItemGroupsItem `json:"groups"`
	ID         string                                           `json:"id"`
	Meta       OptScimUserListEnterpriseResourcesItemMeta       `json:"meta"`
	Name       OptScimUserListEnterpriseResourcesItemName       `json:"name"`
	Schemas    []string                                         `json:"schemas"`
	UserName   OptString                                        `json:"userName"`
}

type ScimUserListEnterpriseResourcesItemEmailsItem struct {
	Primary OptBool   `json:"primary"`
	Type    OptString `json:"type"`
	Value   OptString `json:"value"`
}

type ScimUserListEnterpriseResourcesItemGroupsItem struct {
	Value OptString `json:"value"`
}

type ScimUserListEnterpriseResourcesItemMeta struct {
	Created      OptString `json:"created"`
	LastModified OptString `json:"lastModified"`
	Location     OptString `json:"location"`
	ResourceType OptString `json:"resourceType"`
}

type ScimUserListEnterpriseResourcesItemName struct {
	FamilyName OptString `json:"familyName"`
	GivenName  OptString `json:"givenName"`
}

type SearchResultTextMatches []SearchResultTextMatchesItem

type SearchResultTextMatchesItem struct {
	Fragment   OptString                                 `json:"fragment"`
	Matches    *[]SearchResultTextMatchesItemMatchesItem `json:"matches"`
	ObjectType OptNilString                              `json:"object_type"`
	ObjectURL  OptString                                 `json:"object_url"`
	Property   OptString                                 `json:"property"`
}

type SearchResultTextMatchesItemMatchesItem struct {
	Indices *[]int    `json:"indices"`
	Text    OptString `json:"text"`
}

type SearchTopicsOK struct {
	IncompleteResults bool                    `json:"incomplete_results"`
	Items             []TopicSearchResultItem `json:"items"`
	TotalCount        int                     `json:"total_count"`
}

func (*SearchTopicsOK) searchTopicsResponse() {}

// SecretScanningAlert describes #/components/schemas/secret-scanning-alert.
type SecretScanningAlert struct {
	CreatedAt    *AlertCreatedAt                  `json:"created_at"`
	HTMLURL      *AlertHTMLURL                    `json:"html_url"`
	LocationsURL OptURL                           `json:"locations_url"`
	Number       *AlertNumber                     `json:"number"`
	Resolution   OptSecretScanningAlertResolution `json:"resolution"`
	ResolvedAt   OptNilTime                       `json:"resolved_at"`
	ResolvedBy   OptNullableSimpleUser            `json:"resolved_by"`
	Secret       OptString                        `json:"secret"`
	SecretType   OptString                        `json:"secret_type"`
	State        OptSecretScanningAlertState      `json:"state"`
	URL          *AlertURL                        `json:"url"`
}

func (*SecretScanningAlert) secretScanningGetAlertResponse()    {}
func (*SecretScanningAlert) secretScanningUpdateAlertResponse() {}

type SecretScanningAlertResolution string

const (
	SecretScanningAlertResolutionFalsePositive SecretScanningAlertResolution = "false_positive"
	SecretScanningAlertResolutionWontFix       SecretScanningAlertResolution = "wont_fix"
	SecretScanningAlertResolutionRevoked       SecretScanningAlertResolution = "revoked"
	SecretScanningAlertResolutionUsedInTests   SecretScanningAlertResolution = "used_in_tests"
)

type SecretScanningAlertState string

const (
	SecretScanningAlertStateOpen     SecretScanningAlertState = "open"
	SecretScanningAlertStateResolved SecretScanningAlertState = "resolved"
)

type SecretScanningGetAlertNotFound struct{}

func (*SecretScanningGetAlertNotFound) secretScanningGetAlertResponse() {}

type SecretScanningUpdateAlertApplicationJSONRequest struct {
	Resolution OptSecretScanningAlertResolution `json:"resolution"`
	State      SecretScanningAlertState         `json:"state"`
}

type SecretScanningUpdateAlertNotFound struct{}

func (*SecretScanningUpdateAlertNotFound) secretScanningUpdateAlertResponse() {}

type SecretScanningUpdateAlertUnprocessableEntity struct{}

func (*SecretScanningUpdateAlertUnprocessableEntity) secretScanningUpdateAlertResponse() {}

// SelectedActions describes #/components/schemas/selected-actions.
type SelectedActions struct {
	GithubOwnedAllowed OptBool   `json:"github_owned_allowed"`
	PatternsAllowed    *[]string `json:"patterns_allowed"`
	VerifiedAllowed    OptBool   `json:"verified_allowed"`
}

type SelectedActionsURL string

type ServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*ServiceUnavailable) activityListPublicEventsResponse()       {}
func (*ServiceUnavailable) codeScanningDeleteAnalysisResponse()     {}
func (*ServiceUnavailable) codeScanningGetAlertResponse()           {}
func (*ServiceUnavailable) codeScanningGetAnalysisResponse()        {}
func (*ServiceUnavailable) codeScanningGetSarifResponse()           {}
func (*ServiceUnavailable) codeScanningListAlertInstancesResponse() {}
func (*ServiceUnavailable) codeScanningListRecentAnalysesResponse() {}
func (*ServiceUnavailable) codeScanningUpdateAlertResponse()        {}
func (*ServiceUnavailable) codeScanningUploadSarifResponse()        {}
func (*ServiceUnavailable) secretScanningGetAlertResponse()         {}
func (*ServiceUnavailable) secretScanningUpdateAlertResponse()      {}

// ShortBlob describes #/components/schemas/short-blob.
type ShortBlob struct {
	Sha string `json:"sha"`
	URL string `json:"url"`
}

// ShortBranch describes #/components/schemas/short-branch.
type ShortBranch struct {
	Commit        ShortBranchCommit   `json:"commit"`
	Name          string              `json:"name"`
	Protected     bool                `json:"protected"`
	Protection    OptBranchProtection `json:"protection"`
	ProtectionURL OptURL              `json:"protection_url"`
}

type ShortBranchCommit struct {
	Sha string  `json:"sha"`
	URL url.URL `json:"url"`
}

// SimpleCommit describes #/components/schemas/simple-commit.
type SimpleCommit struct {
	Author    NilSimpleCommitAuthor    `json:"author"`
	Committer NilSimpleCommitCommitter `json:"committer"`
	ID        string                   `json:"id"`
	Message   string                   `json:"message"`
	Timestamp time.Time                `json:"timestamp"`
	TreeID    string                   `json:"tree_id"`
}

type SimpleCommitAuthor struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

type SimpleCommitCommitter struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

// SimpleCommitStatus describes #/components/schemas/simple-commit-status.
type SimpleCommitStatus struct {
	AvatarURL   NilURL     `json:"avatar_url"`
	Context     string     `json:"context"`
	CreatedAt   time.Time  `json:"created_at"`
	Description NilString  `json:"description"`
	ID          int        `json:"id"`
	NodeID      string     `json:"node_id"`
	Required    OptNilBool `json:"required"`
	State       string     `json:"state"`
	TargetURL   url.URL    `json:"target_url"`
	URL         url.URL    `json:"url"`
	UpdatedAt   time.Time  `json:"updated_at"`
}

// SimpleUser describes #/components/schemas/simple-user.
type SimpleUser struct {
	AvatarURL         url.URL      `json:"avatar_url"`
	Email             OptNilString `json:"email"`
	EventsURL         string       `json:"events_url"`
	FollowersURL      url.URL      `json:"followers_url"`
	FollowingURL      string       `json:"following_url"`
	GistsURL          string       `json:"gists_url"`
	GravatarID        NilString    `json:"gravatar_id"`
	HTMLURL           url.URL      `json:"html_url"`
	ID                int          `json:"id"`
	Login             string       `json:"login"`
	Name              OptNilString `json:"name"`
	NodeID            string       `json:"node_id"`
	OrganizationsURL  url.URL      `json:"organizations_url"`
	ReceivedEventsURL url.URL      `json:"received_events_url"`
	ReposURL          url.URL      `json:"repos_url"`
	SiteAdmin         bool         `json:"site_admin"`
	StarredAt         OptString    `json:"starred_at"`
	StarredURL        string       `json:"starred_url"`
	SubscriptionsURL  url.URL      `json:"subscriptions_url"`
	Type              string       `json:"type"`
	URL               url.URL      `json:"url"`
}

// Status describes #/components/schemas/status.
type Status struct {
	AvatarURL   NilString          `json:"avatar_url"`
	Context     string             `json:"context"`
	CreatedAt   string             `json:"created_at"`
	Creator     NullableSimpleUser `json:"creator"`
	Description string             `json:"description"`
	ID          int                `json:"id"`
	NodeID      string             `json:"node_id"`
	State       string             `json:"state"`
	TargetURL   string             `json:"target_url"`
	URL         string             `json:"url"`
	UpdatedAt   string             `json:"updated_at"`
}

// StatusCheckPolicy describes #/components/schemas/status-check-policy.
type StatusCheckPolicy struct {
	Contexts    []string `json:"contexts"`
	ContextsURL url.URL  `json:"contexts_url"`
	Strict      bool     `json:"strict"`
	URL         url.URL  `json:"url"`
}

func (*StatusCheckPolicy) reposGetStatusChecksProtectionResponse() {}

// Tag describes #/components/schemas/tag.
type Tag struct {
	Commit     TagCommit `json:"commit"`
	Name       string    `json:"name"`
	NodeID     string    `json:"node_id"`
	TarballURL url.URL   `json:"tarball_url"`
	ZipballURL url.URL   `json:"zipball_url"`
}

type TagCommit struct {
	Sha string  `json:"sha"`
	URL url.URL `json:"url"`
}

// Team describes #/components/schemas/team.
type Team struct {
	Description     NilString          `json:"description"`
	HTMLURL         url.URL            `json:"html_url"`
	ID              int                `json:"id"`
	MembersURL      string             `json:"members_url"`
	Name            string             `json:"name"`
	NodeID          string             `json:"node_id"`
	Parent          NullableTeamSimple `json:"parent"`
	Permission      string             `json:"permission"`
	Permissions     OptTeamPermissions `json:"permissions"`
	Privacy         OptString          `json:"privacy"`
	RepositoriesURL url.URL            `json:"repositories_url"`
	Slug            string             `json:"slug"`
	URL             url.URL            `json:"url"`
}

// TeamDiscussion describes #/components/schemas/team-discussion.
type TeamDiscussion struct {
	Author        NullableSimpleUser `json:"author"`
	Body          string             `json:"body"`
	BodyHTML      string             `json:"body_html"`
	BodyVersion   string             `json:"body_version"`
	CommentsCount int                `json:"comments_count"`
	CommentsURL   url.URL            `json:"comments_url"`
	CreatedAt     time.Time          `json:"created_at"`
	HTMLURL       url.URL            `json:"html_url"`
	LastEditedAt  NilTime            `json:"last_edited_at"`
	NodeID        string             `json:"node_id"`
	Number        int                `json:"number"`
	Pinned        bool               `json:"pinned"`
	Private       bool               `json:"private"`
	Reactions     OptReactionRollup  `json:"reactions"`
	TeamURL       url.URL            `json:"team_url"`
	Title         string             `json:"title"`
	URL           url.URL            `json:"url"`
	UpdatedAt     time.Time          `json:"updated_at"`
}

// TeamDiscussionComment describes #/components/schemas/team-discussion-comment.
type TeamDiscussionComment struct {
	Author        NullableSimpleUser `json:"author"`
	Body          string             `json:"body"`
	BodyHTML      string             `json:"body_html"`
	BodyVersion   string             `json:"body_version"`
	CreatedAt     time.Time          `json:"created_at"`
	DiscussionURL url.URL            `json:"discussion_url"`
	HTMLURL       url.URL            `json:"html_url"`
	LastEditedAt  NilTime            `json:"last_edited_at"`
	NodeID        string             `json:"node_id"`
	Number        int                `json:"number"`
	Reactions     OptReactionRollup  `json:"reactions"`
	URL           url.URL            `json:"url"`
	UpdatedAt     time.Time          `json:"updated_at"`
}

// TeamFull describes #/components/schemas/team-full.
type TeamFull struct {
	CreatedAt       time.Time             `json:"created_at"`
	Description     NilString             `json:"description"`
	HTMLURL         url.URL               `json:"html_url"`
	ID              int                   `json:"id"`
	LdapDn          OptString             `json:"ldap_dn"`
	MembersCount    int                   `json:"members_count"`
	MembersURL      string                `json:"members_url"`
	Name            string                `json:"name"`
	NodeID          string                `json:"node_id"`
	Organization    OrganizationFull      `json:"organization"`
	Parent          OptNullableTeamSimple `json:"parent"`
	Permission      string                `json:"permission"`
	Privacy         OptTeamFullPrivacy    `json:"privacy"`
	ReposCount      int                   `json:"repos_count"`
	RepositoriesURL url.URL               `json:"repositories_url"`
	Slug            string                `json:"slug"`
	URL             url.URL               `json:"url"`
	UpdatedAt       time.Time             `json:"updated_at"`
}

func (*TeamFull) teamsGetByNameResponse() {}
func (*TeamFull) teamsGetLegacyResponse() {}

type TeamFullPrivacy string

const (
	TeamFullPrivacyClosed TeamFullPrivacy = "closed"
	TeamFullPrivacySecret TeamFullPrivacy = "secret"
)

// TeamMembership describes #/components/schemas/team-membership.
type TeamMembership struct {
	Role  TeamMembershipRole  `json:"role"`
	State TeamMembershipState `json:"state"`
	URL   url.URL             `json:"url"`
}

func (*TeamMembership) teamsAddOrUpdateMembershipForUserInOrgResponse()  {}
func (*TeamMembership) teamsAddOrUpdateMembershipForUserLegacyResponse() {}
func (*TeamMembership) teamsGetMembershipForUserInOrgResponse()          {}
func (*TeamMembership) teamsGetMembershipForUserLegacyResponse()         {}

type TeamMembershipRole string

const (
	TeamMembershipRoleMember     TeamMembershipRole = "member"
	TeamMembershipRoleMaintainer TeamMembershipRole = "maintainer"
)

type TeamMembershipState string

const (
	TeamMembershipStateActive  TeamMembershipState = "active"
	TeamMembershipStatePending TeamMembershipState = "pending"
)

type TeamPermissions struct {
	Admin    bool `json:"admin"`
	Maintain bool `json:"maintain"`
	Pull     bool `json:"pull"`
	Push     bool `json:"push"`
	Triage   bool `json:"triage"`
}

// TeamProject describes #/components/schemas/team-project.
type TeamProject struct {
	Body                   NilString              `json:"body"`
	ColumnsURL             string                 `json:"columns_url"`
	CreatedAt              string                 `json:"created_at"`
	Creator                SimpleUser             `json:"creator"`
	HTMLURL                string                 `json:"html_url"`
	ID                     int                    `json:"id"`
	Name                   string                 `json:"name"`
	NodeID                 string                 `json:"node_id"`
	Number                 int                    `json:"number"`
	OrganizationPermission OptString              `json:"organization_permission"`
	OwnerURL               string                 `json:"owner_url"`
	Permissions            TeamProjectPermissions `json:"permissions"`
	Private                OptBool                `json:"private"`
	State                  string                 `json:"state"`
	URL                    string                 `json:"url"`
	UpdatedAt              string                 `json:"updated_at"`
}

func (*TeamProject) teamsCheckPermissionsForProjectInOrgResponse()  {}
func (*TeamProject) teamsCheckPermissionsForProjectLegacyResponse() {}

type TeamProjectPermissions struct {
	Admin bool `json:"admin"`
	Read  bool `json:"read"`
	Write bool `json:"write"`
}

// TeamRepository describes #/components/schemas/team-repository.
type TeamRepository struct {
	AllowAutoMerge      OptBool                      `json:"allow_auto_merge"`
	AllowForking        OptBool                      `json:"allow_forking"`
	AllowMergeCommit    OptBool                      `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                      `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                      `json:"allow_squash_merge"`
	ArchiveURL          string                       `json:"archive_url"`
	Archived            bool                         `json:"archived"`
	AssigneesURL        string                       `json:"assignees_url"`
	BlobsURL            string                       `json:"blobs_url"`
	BranchesURL         string                       `json:"branches_url"`
	CloneURL            string                       `json:"clone_url"`
	CollaboratorsURL    string                       `json:"collaborators_url"`
	CommentsURL         string                       `json:"comments_url"`
	CommitsURL          string                       `json:"commits_url"`
	CompareURL          string                       `json:"compare_url"`
	ContentsURL         string                       `json:"contents_url"`
	ContributorsURL     url.URL                      `json:"contributors_url"`
	CreatedAt           NilTime                      `json:"created_at"`
	DefaultBranch       string                       `json:"default_branch"`
	DeleteBranchOnMerge OptBool                      `json:"delete_branch_on_merge"`
	DeploymentsURL      url.URL                      `json:"deployments_url"`
	Description         NilString                    `json:"description"`
	Disabled            bool                         `json:"disabled"`
	DownloadsURL        url.URL                      `json:"downloads_url"`
	EventsURL           url.URL                      `json:"events_url"`
	Fork                bool                         `json:"fork"`
	Forks               int                          `json:"forks"`
	ForksCount          int                          `json:"forks_count"`
	ForksURL            url.URL                      `json:"forks_url"`
	FullName            string                       `json:"full_name"`
	GitCommitsURL       string                       `json:"git_commits_url"`
	GitRefsURL          string                       `json:"git_refs_url"`
	GitTagsURL          string                       `json:"git_tags_url"`
	GitURL              string                       `json:"git_url"`
	HTMLURL             url.URL                      `json:"html_url"`
	HasDownloads        bool                         `json:"has_downloads"`
	HasIssues           bool                         `json:"has_issues"`
	HasPages            bool                         `json:"has_pages"`
	HasProjects         bool                         `json:"has_projects"`
	HasWiki             bool                         `json:"has_wiki"`
	Homepage            NilURL                       `json:"homepage"`
	HooksURL            url.URL                      `json:"hooks_url"`
	ID                  int                          `json:"id"`
	IsTemplate          OptBool                      `json:"is_template"`
	IssueCommentURL     string                       `json:"issue_comment_url"`
	IssueEventsURL      string                       `json:"issue_events_url"`
	IssuesURL           string                       `json:"issues_url"`
	KeysURL             string                       `json:"keys_url"`
	LabelsURL           string                       `json:"labels_url"`
	Language            NilString                    `json:"language"`
	LanguagesURL        url.URL                      `json:"languages_url"`
	License             NullableLicenseSimple        `json:"license"`
	MasterBranch        OptString                    `json:"master_branch"`
	MergesURL           url.URL                      `json:"merges_url"`
	MilestonesURL       string                       `json:"milestones_url"`
	MirrorURL           NilURL                       `json:"mirror_url"`
	Name                string                       `json:"name"`
	NetworkCount        OptInt                       `json:"network_count"`
	NodeID              string                       `json:"node_id"`
	NotificationsURL    string                       `json:"notifications_url"`
	OpenIssues          int                          `json:"open_issues"`
	OpenIssuesCount     int                          `json:"open_issues_count"`
	Owner               NullableSimpleUser           `json:"owner"`
	Permissions         OptTeamRepositoryPermissions `json:"permissions"`
	Private             bool                         `json:"private"`
	PullsURL            string                       `json:"pulls_url"`
	PushedAt            NilTime                      `json:"pushed_at"`
	ReleasesURL         string                       `json:"releases_url"`
	SSHURL              string                       `json:"ssh_url"`
	Size                int                          `json:"size"`
	StargazersCount     int                          `json:"stargazers_count"`
	StargazersURL       url.URL                      `json:"stargazers_url"`
	StatusesURL         string                       `json:"statuses_url"`
	SubscribersCount    OptInt                       `json:"subscribers_count"`
	SubscribersURL      url.URL                      `json:"subscribers_url"`
	SubscriptionURL     url.URL                      `json:"subscription_url"`
	SvnURL              url.URL                      `json:"svn_url"`
	TagsURL             url.URL                      `json:"tags_url"`
	TeamsURL            url.URL                      `json:"teams_url"`
	TempCloneToken      OptString                    `json:"temp_clone_token"`
	TemplateRepository  OptNullableRepository        `json:"template_repository"`
	Topics              *[]string                    `json:"topics"`
	TreesURL            string                       `json:"trees_url"`
	URL                 url.URL                      `json:"url"`
	UpdatedAt           NilTime                      `json:"updated_at"`
	Visibility          OptString                    `json:"visibility"`
	Watchers            int                          `json:"watchers"`
	WatchersCount       int                          `json:"watchers_count"`
}

func (*TeamRepository) teamsCheckPermissionsForRepoInOrgResponse()  {}
func (*TeamRepository) teamsCheckPermissionsForRepoLegacyResponse() {}

type TeamRepositoryPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

// TeamSimple describes #/components/schemas/team-simple.
type TeamSimple struct {
	Description     NilString `json:"description"`
	HTMLURL         url.URL   `json:"html_url"`
	ID              int       `json:"id"`
	LdapDn          OptString `json:"ldap_dn"`
	MembersURL      string    `json:"members_url"`
	Name            string    `json:"name"`
	NodeID          string    `json:"node_id"`
	Permission      string    `json:"permission"`
	Privacy         OptString `json:"privacy"`
	RepositoriesURL url.URL   `json:"repositories_url"`
	Slug            string    `json:"slug"`
	URL             url.URL   `json:"url"`
}

type TeamsAddMemberLegacyNoContent struct{}

func (*TeamsAddMemberLegacyNoContent) teamsAddMemberLegacyResponse() {}

type TeamsAddMemberLegacyNotFound struct{}

func (*TeamsAddMemberLegacyNotFound) teamsAddMemberLegacyResponse() {}

type TeamsAddMemberLegacyUnprocessableEntity struct{}

func (*TeamsAddMemberLegacyUnprocessableEntity) teamsAddMemberLegacyResponse() {}

type TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequest struct {
	Role OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole `json:"role"`
}

type TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole string

const (
	TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRoleMember     TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole = "member"
	TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRoleMaintainer TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONRequestRole = "maintainer"
)

type TeamsAddOrUpdateMembershipForUserInOrgForbidden struct{}

func (*TeamsAddOrUpdateMembershipForUserInOrgForbidden) teamsAddOrUpdateMembershipForUserInOrgResponse() {
}

type TeamsAddOrUpdateMembershipForUserInOrgUnprocessableEntity struct{}

func (*TeamsAddOrUpdateMembershipForUserInOrgUnprocessableEntity) teamsAddOrUpdateMembershipForUserInOrgResponse() {
}

type TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequest struct {
	Role OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole `json:"role"`
}

type TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole string

const (
	TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRoleMember     TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole = "member"
	TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRoleMaintainer TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONRequestRole = "maintainer"
)

type TeamsAddOrUpdateMembershipForUserLegacyForbidden struct{}

func (*TeamsAddOrUpdateMembershipForUserLegacyForbidden) teamsAddOrUpdateMembershipForUserLegacyResponse() {
}

type TeamsAddOrUpdateMembershipForUserLegacyUnprocessableEntity struct{}

func (*TeamsAddOrUpdateMembershipForUserLegacyUnprocessableEntity) teamsAddOrUpdateMembershipForUserLegacyResponse() {
}

type TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequest struct {
	Permission OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission `json:"permission"`
}

type TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission string

const (
	TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermissionRead  TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission = "read"
	TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermissionWrite TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission = "write"
	TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermissionAdmin TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONRequestPermission = "admin"
)

type TeamsAddOrUpdateProjectPermissionsInOrgForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*TeamsAddOrUpdateProjectPermissionsInOrgForbidden) teamsAddOrUpdateProjectPermissionsInOrgResponse() {
}

type TeamsAddOrUpdateProjectPermissionsInOrgNoContent struct{}

func (*TeamsAddOrUpdateProjectPermissionsInOrgNoContent) teamsAddOrUpdateProjectPermissionsInOrgResponse() {
}

type TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequest struct {
	Permission OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission `json:"permission"`
}

func (*TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequest) teamsAddOrUpdateProjectPermissionsLegacyRequest() {
}

type TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission string

const (
	TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermissionRead  TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission = "read"
	TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermissionWrite TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission = "write"
	TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermissionAdmin TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONRequestPermission = "admin"
)

type TeamsAddOrUpdateProjectPermissionsLegacyForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

type TeamsAddOrUpdateProjectPermissionsLegacyNoContent struct{}

type TeamsAddOrUpdateRepoPermissionsInOrg struct{}

type TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequest struct {
	Permission OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission `json:"permission"`
}

type TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission string

const (
	TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermissionPull     TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission = "pull"
	TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermissionPush     TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission = "push"
	TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermissionAdmin    TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission = "admin"
	TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermissionMaintain TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission = "maintain"
	TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermissionTriage   TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONRequestPermission = "triage"
)

type TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequest struct {
	Permission OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission `json:"permission"`
}

func (*TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequest) teamsAddOrUpdateRepoPermissionsLegacyRequest() {
}

type TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission string

const (
	TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermissionPull  TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission = "pull"
	TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermissionPush  TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission = "push"
	TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermissionAdmin TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONRequestPermission = "admin"
)

type TeamsAddOrUpdateRepoPermissionsLegacyNoContent struct{}

type TeamsCheckPermissionsForProjectInOrgNotFound struct{}

func (*TeamsCheckPermissionsForProjectInOrgNotFound) teamsCheckPermissionsForProjectInOrgResponse() {}

type TeamsCheckPermissionsForProjectLegacyNotFound struct{}

func (*TeamsCheckPermissionsForProjectLegacyNotFound) teamsCheckPermissionsForProjectLegacyResponse() {
}

type TeamsCheckPermissionsForRepoInOrgNoContent struct{}

func (*TeamsCheckPermissionsForRepoInOrgNoContent) teamsCheckPermissionsForRepoInOrgResponse() {}

type TeamsCheckPermissionsForRepoInOrgNotFound struct{}

func (*TeamsCheckPermissionsForRepoInOrgNotFound) teamsCheckPermissionsForRepoInOrgResponse() {}

type TeamsCheckPermissionsForRepoLegacyNoContent struct{}

func (*TeamsCheckPermissionsForRepoLegacyNoContent) teamsCheckPermissionsForRepoLegacyResponse() {}

type TeamsCheckPermissionsForRepoLegacyNotFound struct{}

func (*TeamsCheckPermissionsForRepoLegacyNotFound) teamsCheckPermissionsForRepoLegacyResponse() {}

type TeamsCreateApplicationJSONRequest struct {
	Description  OptString                                      `json:"description"`
	Maintainers  *[]string                                      `json:"maintainers"`
	Name         string                                         `json:"name"`
	ParentTeamID OptInt                                         `json:"parent_team_id"`
	Permission   OptTeamsCreateApplicationJSONRequestPermission `json:"permission"`
	Privacy      OptTeamsCreateApplicationJSONRequestPrivacy    `json:"privacy"`
	RepoNames    *[]string                                      `json:"repo_names"`
}

func (*TeamsCreateApplicationJSONRequest) teamsCreateRequest() {}

type TeamsCreateApplicationJSONRequestPermission string

const (
	TeamsCreateApplicationJSONRequestPermissionPull  TeamsCreateApplicationJSONRequestPermission = "pull"
	TeamsCreateApplicationJSONRequestPermissionPush  TeamsCreateApplicationJSONRequestPermission = "push"
	TeamsCreateApplicationJSONRequestPermissionAdmin TeamsCreateApplicationJSONRequestPermission = "admin"
)

type TeamsCreateApplicationJSONRequestPrivacy string

const (
	TeamsCreateApplicationJSONRequestPrivacySecret TeamsCreateApplicationJSONRequestPrivacy = "secret"
	TeamsCreateApplicationJSONRequestPrivacyClosed TeamsCreateApplicationJSONRequestPrivacy = "closed"
)

type TeamsCreateDiscussionCommentInOrgApplicationJSONRequest struct {
	Body string `json:"body"`
}

type TeamsCreateDiscussionCommentLegacyApplicationJSONRequest struct {
	Body string `json:"body"`
}

type TeamsCreateDiscussionInOrgApplicationJSONRequest struct {
	Body    string  `json:"body"`
	Private OptBool `json:"private"`
	Title   string  `json:"title"`
}

type TeamsCreateDiscussionLegacyApplicationJSONRequest struct {
	Body    string  `json:"body"`
	Private OptBool `json:"private"`
	Title   string  `json:"title"`
}

type TeamsCreateOrUpdateIdpGroupConnectionsInOrgApplicationJSONRequest struct {
	Groups *[]TeamsCreateOrUpdateIdpGroupConnectionsInOrgApplicationJSONRequestGroupsItem `json:"groups"`
}

type TeamsCreateOrUpdateIdpGroupConnectionsInOrgApplicationJSONRequestGroupsItem struct {
	GroupDescription string `json:"group_description"`
	GroupID          string `json:"group_id"`
	GroupName        string `json:"group_name"`
}

type TeamsCreateOrUpdateIdpGroupConnectionsLegacyApplicationJSONRequest struct {
	Groups   []TeamsCreateOrUpdateIdpGroupConnectionsLegacyApplicationJSONRequestGroupsItem `json:"groups"`
	SyncedAt OptString                                                                      `json:"synced_at"`
}

func (*TeamsCreateOrUpdateIdpGroupConnectionsLegacyApplicationJSONRequest) teamsCreateOrUpdateIdpGroupConnectionsLegacyRequest() {
}

type TeamsCreateOrUpdateIdpGroupConnectionsLegacyApplicationJSONRequestGroupsItem struct {
	Description      OptString `json:"description"`
	GroupDescription string    `json:"group_description"`
	GroupID          string    `json:"group_id"`
	GroupName        string    `json:"group_name"`
	ID               OptString `json:"id"`
	Name             OptString `json:"name"`
}

type TeamsDeleteDiscussionCommentInOrg struct{}

type TeamsDeleteDiscussionCommentLegacy struct{}

type TeamsDeleteDiscussionInOrg struct{}

type TeamsDeleteDiscussionLegacy struct{}

type TeamsDeleteInOrg struct{}

type TeamsDeleteLegacyNoContent struct{}

type TeamsGetMemberLegacyNoContent struct{}

func (*TeamsGetMemberLegacyNoContent) teamsGetMemberLegacyResponse() {}

type TeamsGetMemberLegacyNotFound struct{}

func (*TeamsGetMemberLegacyNotFound) teamsGetMemberLegacyResponse() {}

type TeamsGetMembershipForUserInOrgNotFound struct{}

func (*TeamsGetMembershipForUserInOrgNotFound) teamsGetMembershipForUserInOrgResponse() {}

type TeamsListChildLegacyOK []Team

type TeamsListForAuthenticatedUserApplicationJSONForbidden BasicError

func (*TeamsListForAuthenticatedUserApplicationJSONForbidden) teamsListForAuthenticatedUserResponse() {
}

type TeamsListForAuthenticatedUserApplicationJSONNotFound BasicError

func (*TeamsListForAuthenticatedUserApplicationJSONNotFound) teamsListForAuthenticatedUserResponse() {
}

type TeamsListForAuthenticatedUserOK []TeamFull

func (*TeamsListForAuthenticatedUserOK) teamsListForAuthenticatedUserResponse() {}

type TeamsListIdpGroupsForLegacyApplicationJSONForbidden BasicError

func (*TeamsListIdpGroupsForLegacyApplicationJSONForbidden) teamsListIdpGroupsForLegacyResponse() {}

type TeamsListIdpGroupsForLegacyApplicationJSONNotFound BasicError

func (*TeamsListIdpGroupsForLegacyApplicationJSONNotFound) teamsListIdpGroupsForLegacyResponse() {}

type TeamsListOK []Team

func (*TeamsListOK) teamsListResponse() {}

type TeamsListProjectsLegacyOK []TeamProject

func (*TeamsListProjectsLegacyOK) teamsListProjectsLegacyResponse() {}

type TeamsListReposLegacyOK []MinimalRepository

func (*TeamsListReposLegacyOK) teamsListReposLegacyResponse() {}

type TeamsRemoveMemberLegacyNoContent struct{}

func (*TeamsRemoveMemberLegacyNoContent) teamsRemoveMemberLegacyResponse() {}

type TeamsRemoveMemberLegacyNotFound struct{}

func (*TeamsRemoveMemberLegacyNotFound) teamsRemoveMemberLegacyResponse() {}

type TeamsRemoveMembershipForUserInOrgForbidden struct{}

func (*TeamsRemoveMembershipForUserInOrgForbidden) teamsRemoveMembershipForUserInOrgResponse() {}

type TeamsRemoveMembershipForUserInOrgNoContent struct{}

func (*TeamsRemoveMembershipForUserInOrgNoContent) teamsRemoveMembershipForUserInOrgResponse() {}

type TeamsRemoveMembershipForUserLegacyForbidden struct{}

func (*TeamsRemoveMembershipForUserLegacyForbidden) teamsRemoveMembershipForUserLegacyResponse() {}

type TeamsRemoveMembershipForUserLegacyNoContent struct{}

func (*TeamsRemoveMembershipForUserLegacyNoContent) teamsRemoveMembershipForUserLegacyResponse() {}

type TeamsRemoveProjectInOrg struct{}

type TeamsRemoveProjectLegacyNoContent struct{}

type TeamsRemoveRepoInOrg struct{}

type TeamsRemoveRepoLegacy struct{}

type TeamsUpdateDiscussionCommentInOrgApplicationJSONRequest struct {
	Body string `json:"body"`
}

type TeamsUpdateDiscussionCommentLegacyApplicationJSONRequest struct {
	Body string `json:"body"`
}

type TeamsUpdateDiscussionInOrgApplicationJSONRequest struct {
	Body  OptString `json:"body"`
	Title OptString `json:"title"`
}

type TeamsUpdateDiscussionLegacyApplicationJSONRequest struct {
	Body  OptString `json:"body"`
	Title OptString `json:"title"`
}

type TeamsUpdateInOrgApplicationJSONRequest struct {
	Description  OptString                                           `json:"description"`
	Name         OptString                                           `json:"name"`
	ParentTeamID OptNilInt                                           `json:"parent_team_id"`
	Permission   OptTeamsUpdateInOrgApplicationJSONRequestPermission `json:"permission"`
	Privacy      OptTeamsUpdateInOrgApplicationJSONRequestPrivacy    `json:"privacy"`
}

type TeamsUpdateInOrgApplicationJSONRequestPermission string

const (
	TeamsUpdateInOrgApplicationJSONRequestPermissionPull  TeamsUpdateInOrgApplicationJSONRequestPermission = "pull"
	TeamsUpdateInOrgApplicationJSONRequestPermissionPush  TeamsUpdateInOrgApplicationJSONRequestPermission = "push"
	TeamsUpdateInOrgApplicationJSONRequestPermissionAdmin TeamsUpdateInOrgApplicationJSONRequestPermission = "admin"
)

type TeamsUpdateInOrgApplicationJSONRequestPrivacy string

const (
	TeamsUpdateInOrgApplicationJSONRequestPrivacySecret TeamsUpdateInOrgApplicationJSONRequestPrivacy = "secret"
	TeamsUpdateInOrgApplicationJSONRequestPrivacyClosed TeamsUpdateInOrgApplicationJSONRequestPrivacy = "closed"
)

type TeamsUpdateLegacyApplicationJSONRequest struct {
	Description  OptString                                            `json:"description"`
	Name         string                                               `json:"name"`
	ParentTeamID OptNilInt                                            `json:"parent_team_id"`
	Permission   OptTeamsUpdateLegacyApplicationJSONRequestPermission `json:"permission"`
	Privacy      OptTeamsUpdateLegacyApplicationJSONRequestPrivacy    `json:"privacy"`
}

func (*TeamsUpdateLegacyApplicationJSONRequest) teamsUpdateLegacyRequest() {}

type TeamsUpdateLegacyApplicationJSONRequestPermission string

const (
	TeamsUpdateLegacyApplicationJSONRequestPermissionPull  TeamsUpdateLegacyApplicationJSONRequestPermission = "pull"
	TeamsUpdateLegacyApplicationJSONRequestPermissionPush  TeamsUpdateLegacyApplicationJSONRequestPermission = "push"
	TeamsUpdateLegacyApplicationJSONRequestPermissionAdmin TeamsUpdateLegacyApplicationJSONRequestPermission = "admin"
)

type TeamsUpdateLegacyApplicationJSONRequestPrivacy string

const (
	TeamsUpdateLegacyApplicationJSONRequestPrivacySecret TeamsUpdateLegacyApplicationJSONRequestPrivacy = "secret"
	TeamsUpdateLegacyApplicationJSONRequestPrivacyClosed TeamsUpdateLegacyApplicationJSONRequestPrivacy = "closed"
)

// Thread describes #/components/schemas/thread.
type Thread struct {
	ID              string            `json:"id"`
	LastReadAt      NilString         `json:"last_read_at"`
	Reason          string            `json:"reason"`
	Repository      MinimalRepository `json:"repository"`
	Subject         ThreadSubject     `json:"subject"`
	SubscriptionURL string            `json:"subscription_url"`
	URL             string            `json:"url"`
	Unread          bool              `json:"unread"`
	UpdatedAt       string            `json:"updated_at"`
}

func (*Thread) activityGetThreadResponse() {}

type ThreadSubject struct {
	LatestCommentURL string `json:"latest_comment_url"`
	Title            string `json:"title"`
	Type             string `json:"type"`
	URL              string `json:"url"`
}

// ThreadSubscription describes #/components/schemas/thread-subscription.
type ThreadSubscription struct {
	CreatedAt     NilTime   `json:"created_at"`
	Ignored       bool      `json:"ignored"`
	Reason        NilString `json:"reason"`
	RepositoryURL OptURL    `json:"repository_url"`
	Subscribed    bool      `json:"subscribed"`
	ThreadURL     OptURL    `json:"thread_url"`
	URL           url.URL   `json:"url"`
}

func (*ThreadSubscription) activityGetThreadSubscriptionForAuthenticatedUserResponse() {}
func (*ThreadSubscription) activitySetThreadSubscriptionResponse()                     {}

// Topic describes #/components/schemas/topic.
type Topic struct {
	Names []string `json:"names"`
}

func (*Topic) reposGetAllTopicsResponse()     {}
func (*Topic) reposReplaceAllTopicsResponse() {}

// TopicSearchResultItem describes #/components/schemas/topic-search-result-item.
type TopicSearchResultItem struct {
	Aliases          *[]TopicSearchResultItemAliasesItem `json:"aliases"`
	CreatedAt        time.Time                           `json:"created_at"`
	CreatedBy        NilString                           `json:"created_by"`
	Curated          bool                                `json:"curated"`
	Description      NilString                           `json:"description"`
	DisplayName      NilString                           `json:"display_name"`
	Featured         bool                                `json:"featured"`
	LogoURL          OptNilURL                           `json:"logo_url"`
	Name             string                              `json:"name"`
	Related          *[]TopicSearchResultItemRelatedItem `json:"related"`
	Released         NilString                           `json:"released"`
	RepositoryCount  OptNilInt                           `json:"repository_count"`
	Score            float64                             `json:"score"`
	ShortDescription NilString                           `json:"short_description"`
	TextMatches      *SearchResultTextMatches            `json:"text_matches"`
	UpdatedAt        time.Time                           `json:"updated_at"`
}

type TopicSearchResultItemAliasesItem struct {
	TopicRelation OptTopicSearchResultItemAliasesItemTopicRelation `json:"topic_relation"`
}

type TopicSearchResultItemAliasesItemTopicRelation struct {
	ID           OptInt    `json:"id"`
	Name         OptString `json:"name"`
	RelationType OptString `json:"relation_type"`
	TopicID      OptInt    `json:"topic_id"`
}

type TopicSearchResultItemRelatedItem struct {
	TopicRelation OptTopicSearchResultItemRelatedItemTopicRelation `json:"topic_relation"`
}

type TopicSearchResultItemRelatedItemTopicRelation struct {
	ID           OptInt    `json:"id"`
	Name         OptString `json:"name"`
	RelationType OptString `json:"relation_type"`
	TopicID      OptInt    `json:"topic_id"`
}

// UserMarketplacePurchase describes #/components/schemas/user-marketplace-purchase.
type UserMarketplacePurchase struct {
	Account         MarketplaceAccount     `json:"account"`
	BillingCycle    string                 `json:"billing_cycle"`
	FreeTrialEndsOn NilTime                `json:"free_trial_ends_on"`
	NextBillingDate NilTime                `json:"next_billing_date"`
	OnFreeTrial     bool                   `json:"on_free_trial"`
	Plan            MarketplaceListingPlan `json:"plan"`
	UnitCount       NilInt                 `json:"unit_count"`
	UpdatedAt       NilTime                `json:"updated_at"`
}

type UsersBlockNoContent struct{}

type UsersCheckBlockedApplicationJSONForbidden BasicError

func (*UsersCheckBlockedApplicationJSONForbidden) usersCheckBlockedResponse() {}

type UsersCheckBlockedApplicationJSONNotFound BasicError

func (*UsersCheckBlockedApplicationJSONNotFound) usersCheckBlockedResponse() {}

type UsersCheckBlockedApplicationJSONUnauthorized BasicError

func (*UsersCheckBlockedApplicationJSONUnauthorized) usersCheckBlockedResponse() {}

type UsersCheckBlockedNoContent struct{}

func (*UsersCheckBlockedNoContent) usersCheckBlockedResponse() {}

type UsersCheckFollowingForUserNoContent struct{}

func (*UsersCheckFollowingForUserNoContent) usersCheckFollowingForUserResponse() {}

type UsersCheckFollowingForUserNotFound struct{}

func (*UsersCheckFollowingForUserNotFound) usersCheckFollowingForUserResponse() {}

type UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONForbidden BasicError

func (*UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONForbidden) usersCheckPersonIsFollowedByAuthenticatedResponse() {
}

type UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONNotFound BasicError

func (*UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONNotFound) usersCheckPersonIsFollowedByAuthenticatedResponse() {
}

type UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONUnauthorized) usersCheckPersonIsFollowedByAuthenticatedResponse() {
}

type UsersCheckPersonIsFollowedByAuthenticatedNoContent struct{}

func (*UsersCheckPersonIsFollowedByAuthenticatedNoContent) usersCheckPersonIsFollowedByAuthenticatedResponse() {
}

type UsersCreateGpgKeyForAuthenticatedApplicationJSONRequest struct {
	ArmoredPublicKey string `json:"armored_public_key"`
}

func (*UsersCreateGpgKeyForAuthenticatedApplicationJSONRequest) usersCreateGpgKeyForAuthenticatedRequest() {
}

type UsersCreatePublicSSHKeyForAuthenticatedApplicationJSONRequest struct {
	Key   string    `json:"key"`
	Title OptString `json:"title"`
}

func (*UsersCreatePublicSSHKeyForAuthenticatedApplicationJSONRequest) usersCreatePublicSSHKeyForAuthenticatedRequest() {
}

type UsersDeleteGpgKeyForAuthenticatedNoContent struct{}

type UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONForbidden) usersDeletePublicSSHKeyForAuthenticatedResponse() {
}

type UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONNotFound) usersDeletePublicSSHKeyForAuthenticatedResponse() {
}

type UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONUnauthorized) usersDeletePublicSSHKeyForAuthenticatedResponse() {
}

type UsersDeletePublicSSHKeyForAuthenticatedNoContent struct{}

func (*UsersDeletePublicSSHKeyForAuthenticatedNoContent) usersDeletePublicSSHKeyForAuthenticatedResponse() {
}

type UsersFollowApplicationJSONForbidden BasicError

func (*UsersFollowApplicationJSONForbidden) usersFollowResponse() {}

type UsersFollowApplicationJSONNotFound BasicError

func (*UsersFollowApplicationJSONNotFound) usersFollowResponse() {}

type UsersFollowApplicationJSONUnauthorized BasicError

func (*UsersFollowApplicationJSONUnauthorized) usersFollowResponse() {}

type UsersFollowNoContent struct{}

func (*UsersFollowNoContent) usersFollowResponse() {}

type UsersGetGpgKeyForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersGetGpgKeyForAuthenticatedApplicationJSONForbidden) usersGetGpgKeyForAuthenticatedResponse() {
}

type UsersGetGpgKeyForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersGetGpgKeyForAuthenticatedApplicationJSONNotFound) usersGetGpgKeyForAuthenticatedResponse() {
}

type UsersGetGpgKeyForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersGetGpgKeyForAuthenticatedApplicationJSONUnauthorized) usersGetGpgKeyForAuthenticatedResponse() {
}

type UsersGetPublicSSHKeyForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersGetPublicSSHKeyForAuthenticatedApplicationJSONForbidden) usersGetPublicSSHKeyForAuthenticatedResponse() {
}

type UsersGetPublicSSHKeyForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersGetPublicSSHKeyForAuthenticatedApplicationJSONNotFound) usersGetPublicSSHKeyForAuthenticatedResponse() {
}

type UsersGetPublicSSHKeyForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersGetPublicSSHKeyForAuthenticatedApplicationJSONUnauthorized) usersGetPublicSSHKeyForAuthenticatedResponse() {
}

type UsersListBlockedByAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListBlockedByAuthenticatedApplicationJSONForbidden) usersListBlockedByAuthenticatedResponse() {
}

type UsersListBlockedByAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListBlockedByAuthenticatedApplicationJSONNotFound) usersListBlockedByAuthenticatedResponse() {
}

type UsersListBlockedByAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListBlockedByAuthenticatedApplicationJSONUnauthorized) usersListBlockedByAuthenticatedResponse() {
}

type UsersListBlockedByAuthenticatedOK []SimpleUser

func (*UsersListBlockedByAuthenticatedOK) usersListBlockedByAuthenticatedResponse() {}

type UsersListEmailsForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListEmailsForAuthenticatedApplicationJSONForbidden) usersListEmailsForAuthenticatedResponse() {
}

type UsersListEmailsForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListEmailsForAuthenticatedApplicationJSONNotFound) usersListEmailsForAuthenticatedResponse() {
}

type UsersListEmailsForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListEmailsForAuthenticatedApplicationJSONUnauthorized) usersListEmailsForAuthenticatedResponse() {
}

type UsersListEmailsForAuthenticatedOK []Email

func (*UsersListEmailsForAuthenticatedOK) usersListEmailsForAuthenticatedResponse() {}

type UsersListFollowedByAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListFollowedByAuthenticatedApplicationJSONForbidden) usersListFollowedByAuthenticatedResponse() {
}

type UsersListFollowedByAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListFollowedByAuthenticatedApplicationJSONUnauthorized) usersListFollowedByAuthenticatedResponse() {
}

type UsersListFollowedByAuthenticatedOK []SimpleUser

func (*UsersListFollowedByAuthenticatedOK) usersListFollowedByAuthenticatedResponse() {}

type UsersListFollowersForAuthenticatedUserApplicationJSONForbidden BasicError

func (*UsersListFollowersForAuthenticatedUserApplicationJSONForbidden) usersListFollowersForAuthenticatedUserResponse() {
}

type UsersListFollowersForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*UsersListFollowersForAuthenticatedUserApplicationJSONUnauthorized) usersListFollowersForAuthenticatedUserResponse() {
}

type UsersListFollowersForAuthenticatedUserOK []SimpleUser

func (*UsersListFollowersForAuthenticatedUserOK) usersListFollowersForAuthenticatedUserResponse() {}

type UsersListGpgKeysForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListGpgKeysForAuthenticatedApplicationJSONForbidden) usersListGpgKeysForAuthenticatedResponse() {
}

type UsersListGpgKeysForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListGpgKeysForAuthenticatedApplicationJSONNotFound) usersListGpgKeysForAuthenticatedResponse() {
}

type UsersListGpgKeysForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListGpgKeysForAuthenticatedApplicationJSONUnauthorized) usersListGpgKeysForAuthenticatedResponse() {
}

type UsersListGpgKeysForAuthenticatedOK []GpgKey

func (*UsersListGpgKeysForAuthenticatedOK) usersListGpgKeysForAuthenticatedResponse() {}

type UsersListOK []SimpleUser

func (*UsersListOK) usersListResponse() {}

type UsersListPublicEmailsForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListPublicEmailsForAuthenticatedApplicationJSONForbidden) usersListPublicEmailsForAuthenticatedResponse() {
}

type UsersListPublicEmailsForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListPublicEmailsForAuthenticatedApplicationJSONNotFound) usersListPublicEmailsForAuthenticatedResponse() {
}

type UsersListPublicEmailsForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListPublicEmailsForAuthenticatedApplicationJSONUnauthorized) usersListPublicEmailsForAuthenticatedResponse() {
}

type UsersListPublicEmailsForAuthenticatedOK []Email

func (*UsersListPublicEmailsForAuthenticatedOK) usersListPublicEmailsForAuthenticatedResponse() {}

type UsersListPublicSSHKeysForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListPublicSSHKeysForAuthenticatedApplicationJSONForbidden) usersListPublicSSHKeysForAuthenticatedResponse() {
}

type UsersListPublicSSHKeysForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListPublicSSHKeysForAuthenticatedApplicationJSONNotFound) usersListPublicSSHKeysForAuthenticatedResponse() {
}

type UsersListPublicSSHKeysForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListPublicSSHKeysForAuthenticatedApplicationJSONUnauthorized) usersListPublicSSHKeysForAuthenticatedResponse() {
}

type UsersListPublicSSHKeysForAuthenticatedOK []Key

func (*UsersListPublicSSHKeysForAuthenticatedOK) usersListPublicSSHKeysForAuthenticatedResponse() {}

type UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONRequest struct {
	Visibility UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONRequestVisibility `json:"visibility"`
}

func (*UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONRequest) usersSetPrimaryEmailVisibilityForAuthenticatedRequest() {
}

type UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONRequestVisibility string

const (
	UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONRequestVisibilityPublic  UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONRequestVisibility = "public"
	UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONRequestVisibilityPrivate UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONRequestVisibility = "private"
)

type UsersSetPrimaryEmailVisibilityForAuthenticatedOK []Email

type UsersUnblockApplicationJSONForbidden BasicError

func (*UsersUnblockApplicationJSONForbidden) usersUnblockResponse() {}

type UsersUnblockApplicationJSONNotFound BasicError

func (*UsersUnblockApplicationJSONNotFound) usersUnblockResponse() {}

type UsersUnblockApplicationJSONUnauthorized BasicError

func (*UsersUnblockApplicationJSONUnauthorized) usersUnblockResponse() {}

type UsersUnblockNoContent struct{}

func (*UsersUnblockNoContent) usersUnblockResponse() {}

type UsersUnfollowApplicationJSONForbidden BasicError

func (*UsersUnfollowApplicationJSONForbidden) usersUnfollowResponse() {}

type UsersUnfollowApplicationJSONNotFound BasicError

func (*UsersUnfollowApplicationJSONNotFound) usersUnfollowResponse() {}

type UsersUnfollowApplicationJSONUnauthorized BasicError

func (*UsersUnfollowApplicationJSONUnauthorized) usersUnfollowResponse() {}

type UsersUnfollowNoContent struct{}

func (*UsersUnfollowNoContent) usersUnfollowResponse() {}

type UsersUpdateAuthenticatedApplicationJSONRequest struct {
	Bio             OptString    `json:"bio"`
	Blog            OptString    `json:"blog"`
	Company         OptString    `json:"company"`
	Email           OptString    `json:"email"`
	Hireable        OptBool      `json:"hireable"`
	Location        OptString    `json:"location"`
	Name            OptString    `json:"name"`
	TwitterUsername OptNilString `json:"twitter_username"`
}

func (*UsersUpdateAuthenticatedApplicationJSONRequest) usersUpdateAuthenticatedRequest() {}

// ValidationErrorSimple describes #/components/schemas/validation-error-simple.
type ValidationErrorSimple struct {
	DocumentationURL string    `json:"documentation_url"`
	Errors           *[]string `json:"errors"`
	Message          string    `json:"message"`
}

func (*ValidationErrorSimple) projectsCreateColumnResponse()               {}
func (*ValidationErrorSimple) projectsCreateForAuthenticatedUserResponse() {}
func (*ValidationErrorSimple) projectsCreateForOrgResponse()               {}
func (*ValidationErrorSimple) projectsCreateForRepoResponse()              {}
func (*ValidationErrorSimple) projectsMoveColumnResponse()                 {}
func (*ValidationErrorSimple) projectsUpdateCardResponse()                 {}
func (*ValidationErrorSimple) projectsUpdateResponse()                     {}
func (*ValidationErrorSimple) pullsCreateReviewResponse()                  {}
func (*ValidationErrorSimple) pullsDeletePendingReviewResponse()           {}
func (*ValidationErrorSimple) pullsDismissReviewResponse()                 {}
func (*ValidationErrorSimple) pullsSubmitReviewResponse()                  {}
func (*ValidationErrorSimple) pullsUpdateReviewResponse()                  {}
func (*ValidationErrorSimple) reposDeleteDeploymentResponse()              {}
func (*ValidationErrorSimple) reposReplaceAllTopicsResponse()              {}
func (*ValidationErrorSimple) reposUpdateBranchProtectionResponse()        {}

// Verification describes #/components/schemas/verification.
type Verification struct {
	Payload   NilString `json:"payload"`
	Reason    string    `json:"reason"`
	Signature NilString `json:"signature"`
	Verified  bool      `json:"verified"`
}

type WaitTimer int

// Workflow describes #/components/schemas/workflow.
type Workflow struct {
	BadgeURL  string        `json:"badge_url"`
	CreatedAt time.Time     `json:"created_at"`
	DeletedAt OptTime       `json:"deleted_at"`
	HTMLURL   string        `json:"html_url"`
	ID        int           `json:"id"`
	Name      string        `json:"name"`
	NodeID    string        `json:"node_id"`
	Path      string        `json:"path"`
	State     WorkflowState `json:"state"`
	URL       string        `json:"url"`
	UpdatedAt time.Time     `json:"updated_at"`
}

// WorkflowRun describes #/components/schemas/workflow-run.
type WorkflowRun struct {
	ArtifactsURL       string               `json:"artifacts_url"`
	CancelURL          string               `json:"cancel_url"`
	CheckSuiteID       OptInt               `json:"check_suite_id"`
	CheckSuiteNodeID   OptString            `json:"check_suite_node_id"`
	CheckSuiteURL      string               `json:"check_suite_url"`
	Conclusion         NilString            `json:"conclusion"`
	CreatedAt          time.Time            `json:"created_at"`
	Event              string               `json:"event"`
	HTMLURL            string               `json:"html_url"`
	HeadBranch         NilString            `json:"head_branch"`
	HeadCommit         NullableSimpleCommit `json:"head_commit"`
	HeadRepository     MinimalRepository    `json:"head_repository"`
	HeadRepositoryID   OptInt               `json:"head_repository_id"`
	HeadSha            string               `json:"head_sha"`
	ID                 int                  `json:"id"`
	JobsURL            string               `json:"jobs_url"`
	LogsURL            string               `json:"logs_url"`
	Name               OptNilString         `json:"name"`
	NodeID             string               `json:"node_id"`
	PreviousAttemptURL OptNilString         `json:"previous_attempt_url"`
	PullRequests       []PullRequestMinimal `json:"pull_requests"`
	Repository         MinimalRepository    `json:"repository"`
	RerunURL           string               `json:"rerun_url"`
	RunAttempt         OptInt               `json:"run_attempt"`
	RunNumber          int                  `json:"run_number"`
	Status             NilString            `json:"status"`
	URL                string               `json:"url"`
	UpdatedAt          time.Time            `json:"updated_at"`
	WorkflowID         int                  `json:"workflow_id"`
	WorkflowURL        string               `json:"workflow_url"`
}

// WorkflowRunUsage describes #/components/schemas/workflow-run-usage.
type WorkflowRunUsage struct {
	Billable      WorkflowRunUsageBillable `json:"billable"`
	RunDurationMs OptInt                   `json:"run_duration_ms"`
}

type WorkflowRunUsageBillable struct {
	MACOS   OptWorkflowRunUsageBillableMACOS   `json:"MACOS"`
	UBUNTU  OptWorkflowRunUsageBillableUBUNTU  `json:"UBUNTU"`
	WINDOWS OptWorkflowRunUsageBillableWINDOWS `json:"WINDOWS"`
}

type WorkflowRunUsageBillableMACOS struct {
	Jobs    int `json:"jobs"`
	TotalMs int `json:"total_ms"`
}

type WorkflowRunUsageBillableUBUNTU struct {
	Jobs    int `json:"jobs"`
	TotalMs int `json:"total_ms"`
}

type WorkflowRunUsageBillableWINDOWS struct {
	Jobs    int `json:"jobs"`
	TotalMs int `json:"total_ms"`
}

type WorkflowState string

const (
	WorkflowStateActive             WorkflowState = "active"
	WorkflowStateDeleted            WorkflowState = "deleted"
	WorkflowStateDisabledFork       WorkflowState = "disabled_fork"
	WorkflowStateDisabledInactivity WorkflowState = "disabled_inactivity"
	WorkflowStateDisabledManually   WorkflowState = "disabled_manually"
)
