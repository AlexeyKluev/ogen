// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
)

// Ref: #/components/schemas/api-overview
type APIOverview struct {
	Actions                          []string                         `json:"actions"`
	API                              []string                         `json:"api"`
	Dependabot                       []string                         `json:"dependabot"`
	Git                              []string                         `json:"git"`
	Hooks                            []string                         `json:"hooks"`
	Importer                         []string                         `json:"importer"`
	Packages                         []string                         `json:"packages"`
	Pages                            []string                         `json:"pages"`
	SSHKeyFingerprints               OptAPIOverviewSSHKeyFingerprints `json:"ssh_key_fingerprints"`
	VerifiablePasswordAuthentication bool                             `json:"verifiable_password_authentication"`
	Web                              []string                         `json:"web"`
}

func (*APIOverview) metaGetRes() {}

type APIOverviewSSHKeyFingerprints struct {
	SHA256DSA     OptString `json:"SHA256_DSA"`
	SHA256ECDSA   OptString `json:"SHA256_ECDSA"`
	SHA256ED25519 OptString `json:"SHA256_ED25519"`
	SHA256RSA     OptString `json:"SHA256_RSA"`
}

// ActionsAddRepoAccessToSelfHostedRunnerGroupInOrgNoContent is response for ActionsAddRepoAccessToSelfHostedRunnerGroupInOrg operation.
type ActionsAddRepoAccessToSelfHostedRunnerGroupInOrgNoContent struct{}

// ActionsAddSelectedRepoToOrgSecretConflict is response for ActionsAddSelectedRepoToOrgSecret operation.
type ActionsAddSelectedRepoToOrgSecretConflict struct{}

func (*ActionsAddSelectedRepoToOrgSecretConflict) actionsAddSelectedRepoToOrgSecretRes() {}

// ActionsAddSelectedRepoToOrgSecretNoContent is response for ActionsAddSelectedRepoToOrgSecret operation.
type ActionsAddSelectedRepoToOrgSecretNoContent struct{}

func (*ActionsAddSelectedRepoToOrgSecretNoContent) actionsAddSelectedRepoToOrgSecretRes() {}

// ActionsAddSelfHostedRunnerToGroupForOrgNoContent is response for ActionsAddSelfHostedRunnerToGroupForOrg operation.
type ActionsAddSelfHostedRunnerToGroupForOrgNoContent struct{}

type ActionsApproveWorkflowRunApplicationJSONForbidden BasicError

func (*ActionsApproveWorkflowRunApplicationJSONForbidden) actionsApproveWorkflowRunRes() {}

type ActionsApproveWorkflowRunApplicationJSONNotFound BasicError

func (*ActionsApproveWorkflowRunApplicationJSONNotFound) actionsApproveWorkflowRunRes() {}

// Ref: #/components/schemas/actions-billing-usage
type ActionsBillingUsage struct {
	IncludedMinutes      int                                     `json:"included_minutes"`
	MinutesUsedBreakdown ActionsBillingUsageMinutesUsedBreakdown `json:"minutes_used_breakdown"`
	TotalMinutesUsed     int                                     `json:"total_minutes_used"`
	TotalPaidMinutesUsed int                                     `json:"total_paid_minutes_used"`
}

type ActionsBillingUsageMinutesUsedBreakdown struct {
	MACOS   OptInt `json:"MACOS"`
	UBUNTU  OptInt `json:"UBUNTU"`
	WINDOWS OptInt `json:"WINDOWS"`
}

type ActionsCancelWorkflowRunAccepted struct{}

// ActionsCreateOrUpdateEnvironmentSecretNoContent is response for ActionsCreateOrUpdateEnvironmentSecret operation.
type ActionsCreateOrUpdateEnvironmentSecretNoContent struct{}

func (*ActionsCreateOrUpdateEnvironmentSecretNoContent) actionsCreateOrUpdateEnvironmentSecretRes() {}

type ActionsCreateOrUpdateEnvironmentSecretReq struct {
	EncryptedValue string `json:"encrypted_value"`
	KeyID          string `json:"key_id"`
}

// ActionsCreateOrUpdateOrgSecretNoContent is response for ActionsCreateOrUpdateOrgSecret operation.
type ActionsCreateOrUpdateOrgSecretNoContent struct{}

func (*ActionsCreateOrUpdateOrgSecretNoContent) actionsCreateOrUpdateOrgSecretRes() {}

type ActionsCreateOrUpdateOrgSecretReq struct {
	EncryptedValue        OptString                                   `json:"encrypted_value"`
	KeyID                 OptString                                   `json:"key_id"`
	SelectedRepositoryIds []string                                    `json:"selected_repository_ids"`
	Visibility            ActionsCreateOrUpdateOrgSecretReqVisibility `json:"visibility"`
}

type ActionsCreateOrUpdateOrgSecretReqVisibility string

const (
	ActionsCreateOrUpdateOrgSecretReqVisibilityAll      ActionsCreateOrUpdateOrgSecretReqVisibility = "all"
	ActionsCreateOrUpdateOrgSecretReqVisibilityPrivate  ActionsCreateOrUpdateOrgSecretReqVisibility = "private"
	ActionsCreateOrUpdateOrgSecretReqVisibilitySelected ActionsCreateOrUpdateOrgSecretReqVisibility = "selected"
)

type ActionsCreateOrUpdateRepoSecretCreated struct{}

func (*ActionsCreateOrUpdateRepoSecretCreated) actionsCreateOrUpdateRepoSecretRes() {}

// ActionsCreateOrUpdateRepoSecretNoContent is response for ActionsCreateOrUpdateRepoSecret operation.
type ActionsCreateOrUpdateRepoSecretNoContent struct{}

func (*ActionsCreateOrUpdateRepoSecretNoContent) actionsCreateOrUpdateRepoSecretRes() {}

type ActionsCreateOrUpdateRepoSecretReq struct {
	EncryptedValue OptString `json:"encrypted_value"`
	KeyID          OptString `json:"key_id"`
}

type ActionsCreateSelfHostedRunnerGroupForOrgReq struct {
	Name                  string                                                   `json:"name"`
	Runners               []int                                                    `json:"runners"`
	SelectedRepositoryIds []int                                                    `json:"selected_repository_ids"`
	Visibility            OptActionsCreateSelfHostedRunnerGroupForOrgReqVisibility `json:"visibility"`
}

type ActionsCreateSelfHostedRunnerGroupForOrgReqVisibility string

const (
	ActionsCreateSelfHostedRunnerGroupForOrgReqVisibilitySelected ActionsCreateSelfHostedRunnerGroupForOrgReqVisibility = "selected"
	ActionsCreateSelfHostedRunnerGroupForOrgReqVisibilityAll      ActionsCreateSelfHostedRunnerGroupForOrgReqVisibility = "all"
	ActionsCreateSelfHostedRunnerGroupForOrgReqVisibilityPrivate  ActionsCreateSelfHostedRunnerGroupForOrgReqVisibility = "private"
)

// ActionsCreateWorkflowDispatchWorkflowID represents sum type.
type ActionsCreateWorkflowDispatchWorkflowID struct {
	Type   ActionsCreateWorkflowDispatchWorkflowIDType // switch on this field
	Int    int
	String string
}

// ActionsCreateWorkflowDispatchWorkflowIDType is oneOf type of ActionsCreateWorkflowDispatchWorkflowID.
type ActionsCreateWorkflowDispatchWorkflowIDType string

// Possible values for ActionsCreateWorkflowDispatchWorkflowIDType.
const (
	IntActionsCreateWorkflowDispatchWorkflowID    ActionsCreateWorkflowDispatchWorkflowIDType = "int"
	StringActionsCreateWorkflowDispatchWorkflowID ActionsCreateWorkflowDispatchWorkflowIDType = "string"
)

// IsInt reports whether ActionsCreateWorkflowDispatchWorkflowID is int.
func (s ActionsCreateWorkflowDispatchWorkflowID) IsInt() bool {
	return s.Type == IntActionsCreateWorkflowDispatchWorkflowID
}

// IsString reports whether ActionsCreateWorkflowDispatchWorkflowID is string.
func (s ActionsCreateWorkflowDispatchWorkflowID) IsString() bool {
	return s.Type == StringActionsCreateWorkflowDispatchWorkflowID
}

// SetInt sets ActionsCreateWorkflowDispatchWorkflowID to int.
func (s *ActionsCreateWorkflowDispatchWorkflowID) SetInt(v int) {
	s.Type = IntActionsCreateWorkflowDispatchWorkflowID
	s.Int = v
}

// GetInt returns int and true boolean if ActionsCreateWorkflowDispatchWorkflowID is int.
func (s ActionsCreateWorkflowDispatchWorkflowID) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntActionsCreateWorkflowDispatchWorkflowID returns new ActionsCreateWorkflowDispatchWorkflowID from int.
func NewIntActionsCreateWorkflowDispatchWorkflowID(v int) ActionsCreateWorkflowDispatchWorkflowID {
	var s ActionsCreateWorkflowDispatchWorkflowID
	s.SetInt(v)
	return s
}

// SetString sets ActionsCreateWorkflowDispatchWorkflowID to string.
func (s *ActionsCreateWorkflowDispatchWorkflowID) SetString(v string) {
	s.Type = StringActionsCreateWorkflowDispatchWorkflowID
	s.String = v
}

// GetString returns string and true boolean if ActionsCreateWorkflowDispatchWorkflowID is string.
func (s ActionsCreateWorkflowDispatchWorkflowID) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringActionsCreateWorkflowDispatchWorkflowID returns new ActionsCreateWorkflowDispatchWorkflowID from string.
func NewStringActionsCreateWorkflowDispatchWorkflowID(v string) ActionsCreateWorkflowDispatchWorkflowID {
	var s ActionsCreateWorkflowDispatchWorkflowID
	s.SetString(v)
	return s
}

// ActionsDeleteArtifactNoContent is response for ActionsDeleteArtifact operation.
type ActionsDeleteArtifactNoContent struct{}

// ActionsDeleteEnvironmentSecretNoContent is response for ActionsDeleteEnvironmentSecret operation.
type ActionsDeleteEnvironmentSecretNoContent struct{}

// ActionsDeleteOrgSecretNoContent is response for ActionsDeleteOrgSecret operation.
type ActionsDeleteOrgSecretNoContent struct{}

// ActionsDeleteRepoSecretNoContent is response for ActionsDeleteRepoSecret operation.
type ActionsDeleteRepoSecretNoContent struct{}

// ActionsDeleteSelfHostedRunnerFromOrgNoContent is response for ActionsDeleteSelfHostedRunnerFromOrg operation.
type ActionsDeleteSelfHostedRunnerFromOrgNoContent struct{}

// ActionsDeleteSelfHostedRunnerFromRepoNoContent is response for ActionsDeleteSelfHostedRunnerFromRepo operation.
type ActionsDeleteSelfHostedRunnerFromRepoNoContent struct{}

// ActionsDeleteSelfHostedRunnerGroupFromOrgNoContent is response for ActionsDeleteSelfHostedRunnerGroupFromOrg operation.
type ActionsDeleteSelfHostedRunnerGroupFromOrgNoContent struct{}

// ActionsDeleteWorkflowRunLogsNoContent is response for ActionsDeleteWorkflowRunLogs operation.
type ActionsDeleteWorkflowRunLogsNoContent struct{}

// ActionsDeleteWorkflowRunNoContent is response for ActionsDeleteWorkflowRun operation.
type ActionsDeleteWorkflowRunNoContent struct{}

// ActionsDisableSelectedRepositoryGithubActionsOrganizationNoContent is response for ActionsDisableSelectedRepositoryGithubActionsOrganization operation.
type ActionsDisableSelectedRepositoryGithubActionsOrganizationNoContent struct{}

// ActionsDisableWorkflowWorkflowID represents sum type.
type ActionsDisableWorkflowWorkflowID struct {
	Type   ActionsDisableWorkflowWorkflowIDType // switch on this field
	Int    int
	String string
}

// ActionsDisableWorkflowWorkflowIDType is oneOf type of ActionsDisableWorkflowWorkflowID.
type ActionsDisableWorkflowWorkflowIDType string

// Possible values for ActionsDisableWorkflowWorkflowIDType.
const (
	IntActionsDisableWorkflowWorkflowID    ActionsDisableWorkflowWorkflowIDType = "int"
	StringActionsDisableWorkflowWorkflowID ActionsDisableWorkflowWorkflowIDType = "string"
)

// IsInt reports whether ActionsDisableWorkflowWorkflowID is int.
func (s ActionsDisableWorkflowWorkflowID) IsInt() bool {
	return s.Type == IntActionsDisableWorkflowWorkflowID
}

// IsString reports whether ActionsDisableWorkflowWorkflowID is string.
func (s ActionsDisableWorkflowWorkflowID) IsString() bool {
	return s.Type == StringActionsDisableWorkflowWorkflowID
}

// SetInt sets ActionsDisableWorkflowWorkflowID to int.
func (s *ActionsDisableWorkflowWorkflowID) SetInt(v int) {
	s.Type = IntActionsDisableWorkflowWorkflowID
	s.Int = v
}

// GetInt returns int and true boolean if ActionsDisableWorkflowWorkflowID is int.
func (s ActionsDisableWorkflowWorkflowID) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntActionsDisableWorkflowWorkflowID returns new ActionsDisableWorkflowWorkflowID from int.
func NewIntActionsDisableWorkflowWorkflowID(v int) ActionsDisableWorkflowWorkflowID {
	var s ActionsDisableWorkflowWorkflowID
	s.SetInt(v)
	return s
}

// SetString sets ActionsDisableWorkflowWorkflowID to string.
func (s *ActionsDisableWorkflowWorkflowID) SetString(v string) {
	s.Type = StringActionsDisableWorkflowWorkflowID
	s.String = v
}

// GetString returns string and true boolean if ActionsDisableWorkflowWorkflowID is string.
func (s ActionsDisableWorkflowWorkflowID) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringActionsDisableWorkflowWorkflowID returns new ActionsDisableWorkflowWorkflowID from string.
func NewStringActionsDisableWorkflowWorkflowID(v string) ActionsDisableWorkflowWorkflowID {
	var s ActionsDisableWorkflowWorkflowID
	s.SetString(v)
	return s
}

// ActionsDownloadArtifactFound is response for ActionsDownloadArtifact operation.
type ActionsDownloadArtifactFound struct{}

// ActionsDownloadJobLogsForWorkflowRunFound is response for ActionsDownloadJobLogsForWorkflowRun operation.
type ActionsDownloadJobLogsForWorkflowRunFound struct{}

// ActionsDownloadWorkflowRunLogsFound is response for ActionsDownloadWorkflowRunLogs operation.
type ActionsDownloadWorkflowRunLogsFound struct{}

// ActionsEnableSelectedRepositoryGithubActionsOrganizationNoContent is response for ActionsEnableSelectedRepositoryGithubActionsOrganization operation.
type ActionsEnableSelectedRepositoryGithubActionsOrganizationNoContent struct{}

// ActionsEnableWorkflowWorkflowID represents sum type.
type ActionsEnableWorkflowWorkflowID struct {
	Type   ActionsEnableWorkflowWorkflowIDType // switch on this field
	Int    int
	String string
}

// ActionsEnableWorkflowWorkflowIDType is oneOf type of ActionsEnableWorkflowWorkflowID.
type ActionsEnableWorkflowWorkflowIDType string

// Possible values for ActionsEnableWorkflowWorkflowIDType.
const (
	IntActionsEnableWorkflowWorkflowID    ActionsEnableWorkflowWorkflowIDType = "int"
	StringActionsEnableWorkflowWorkflowID ActionsEnableWorkflowWorkflowIDType = "string"
)

// IsInt reports whether ActionsEnableWorkflowWorkflowID is int.
func (s ActionsEnableWorkflowWorkflowID) IsInt() bool {
	return s.Type == IntActionsEnableWorkflowWorkflowID
}

// IsString reports whether ActionsEnableWorkflowWorkflowID is string.
func (s ActionsEnableWorkflowWorkflowID) IsString() bool {
	return s.Type == StringActionsEnableWorkflowWorkflowID
}

// SetInt sets ActionsEnableWorkflowWorkflowID to int.
func (s *ActionsEnableWorkflowWorkflowID) SetInt(v int) {
	s.Type = IntActionsEnableWorkflowWorkflowID
	s.Int = v
}

// GetInt returns int and true boolean if ActionsEnableWorkflowWorkflowID is int.
func (s ActionsEnableWorkflowWorkflowID) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntActionsEnableWorkflowWorkflowID returns new ActionsEnableWorkflowWorkflowID from int.
func NewIntActionsEnableWorkflowWorkflowID(v int) ActionsEnableWorkflowWorkflowID {
	var s ActionsEnableWorkflowWorkflowID
	s.SetInt(v)
	return s
}

// SetString sets ActionsEnableWorkflowWorkflowID to string.
func (s *ActionsEnableWorkflowWorkflowID) SetString(v string) {
	s.Type = StringActionsEnableWorkflowWorkflowID
	s.String = v
}

// GetString returns string and true boolean if ActionsEnableWorkflowWorkflowID is string.
func (s ActionsEnableWorkflowWorkflowID) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringActionsEnableWorkflowWorkflowID returns new ActionsEnableWorkflowWorkflowID from string.
func NewStringActionsEnableWorkflowWorkflowID(v string) ActionsEnableWorkflowWorkflowID {
	var s ActionsEnableWorkflowWorkflowID
	s.SetString(v)
	return s
}

type ActionsEnabled bool

// Ref: #/components/schemas/actions-enterprise-permissions
type ActionsEnterprisePermissions struct {
	AllowedActions           OptAllowedActions     `json:"allowed_actions"`
	EnabledOrganizations     EnabledOrganizations  `json:"enabled_organizations"`
	SelectedActionsURL       OptSelectedActionsURL `json:"selected_actions_url"`
	SelectedOrganizationsURL OptString             `json:"selected_organizations_url"`
}

// ActionsGetWorkflowUsageWorkflowID represents sum type.
type ActionsGetWorkflowUsageWorkflowID struct {
	Type   ActionsGetWorkflowUsageWorkflowIDType // switch on this field
	Int    int
	String string
}

// ActionsGetWorkflowUsageWorkflowIDType is oneOf type of ActionsGetWorkflowUsageWorkflowID.
type ActionsGetWorkflowUsageWorkflowIDType string

// Possible values for ActionsGetWorkflowUsageWorkflowIDType.
const (
	IntActionsGetWorkflowUsageWorkflowID    ActionsGetWorkflowUsageWorkflowIDType = "int"
	StringActionsGetWorkflowUsageWorkflowID ActionsGetWorkflowUsageWorkflowIDType = "string"
)

// IsInt reports whether ActionsGetWorkflowUsageWorkflowID is int.
func (s ActionsGetWorkflowUsageWorkflowID) IsInt() bool {
	return s.Type == IntActionsGetWorkflowUsageWorkflowID
}

// IsString reports whether ActionsGetWorkflowUsageWorkflowID is string.
func (s ActionsGetWorkflowUsageWorkflowID) IsString() bool {
	return s.Type == StringActionsGetWorkflowUsageWorkflowID
}

// SetInt sets ActionsGetWorkflowUsageWorkflowID to int.
func (s *ActionsGetWorkflowUsageWorkflowID) SetInt(v int) {
	s.Type = IntActionsGetWorkflowUsageWorkflowID
	s.Int = v
}

// GetInt returns int and true boolean if ActionsGetWorkflowUsageWorkflowID is int.
func (s ActionsGetWorkflowUsageWorkflowID) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntActionsGetWorkflowUsageWorkflowID returns new ActionsGetWorkflowUsageWorkflowID from int.
func NewIntActionsGetWorkflowUsageWorkflowID(v int) ActionsGetWorkflowUsageWorkflowID {
	var s ActionsGetWorkflowUsageWorkflowID
	s.SetInt(v)
	return s
}

// SetString sets ActionsGetWorkflowUsageWorkflowID to string.
func (s *ActionsGetWorkflowUsageWorkflowID) SetString(v string) {
	s.Type = StringActionsGetWorkflowUsageWorkflowID
	s.String = v
}

// GetString returns string and true boolean if ActionsGetWorkflowUsageWorkflowID is string.
func (s ActionsGetWorkflowUsageWorkflowID) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringActionsGetWorkflowUsageWorkflowID returns new ActionsGetWorkflowUsageWorkflowID from string.
func NewStringActionsGetWorkflowUsageWorkflowID(v string) ActionsGetWorkflowUsageWorkflowID {
	var s ActionsGetWorkflowUsageWorkflowID
	s.SetString(v)
	return s
}

// ActionsGetWorkflowWorkflowID represents sum type.
type ActionsGetWorkflowWorkflowID struct {
	Type   ActionsGetWorkflowWorkflowIDType // switch on this field
	Int    int
	String string
}

// ActionsGetWorkflowWorkflowIDType is oneOf type of ActionsGetWorkflowWorkflowID.
type ActionsGetWorkflowWorkflowIDType string

// Possible values for ActionsGetWorkflowWorkflowIDType.
const (
	IntActionsGetWorkflowWorkflowID    ActionsGetWorkflowWorkflowIDType = "int"
	StringActionsGetWorkflowWorkflowID ActionsGetWorkflowWorkflowIDType = "string"
)

// IsInt reports whether ActionsGetWorkflowWorkflowID is int.
func (s ActionsGetWorkflowWorkflowID) IsInt() bool { return s.Type == IntActionsGetWorkflowWorkflowID }

// IsString reports whether ActionsGetWorkflowWorkflowID is string.
func (s ActionsGetWorkflowWorkflowID) IsString() bool {
	return s.Type == StringActionsGetWorkflowWorkflowID
}

// SetInt sets ActionsGetWorkflowWorkflowID to int.
func (s *ActionsGetWorkflowWorkflowID) SetInt(v int) {
	s.Type = IntActionsGetWorkflowWorkflowID
	s.Int = v
}

// GetInt returns int and true boolean if ActionsGetWorkflowWorkflowID is int.
func (s ActionsGetWorkflowWorkflowID) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntActionsGetWorkflowWorkflowID returns new ActionsGetWorkflowWorkflowID from int.
func NewIntActionsGetWorkflowWorkflowID(v int) ActionsGetWorkflowWorkflowID {
	var s ActionsGetWorkflowWorkflowID
	s.SetInt(v)
	return s
}

// SetString sets ActionsGetWorkflowWorkflowID to string.
func (s *ActionsGetWorkflowWorkflowID) SetString(v string) {
	s.Type = StringActionsGetWorkflowWorkflowID
	s.String = v
}

// GetString returns string and true boolean if ActionsGetWorkflowWorkflowID is string.
func (s ActionsGetWorkflowWorkflowID) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringActionsGetWorkflowWorkflowID returns new ActionsGetWorkflowWorkflowID from string.
func NewStringActionsGetWorkflowWorkflowID(v string) ActionsGetWorkflowWorkflowID {
	var s ActionsGetWorkflowWorkflowID
	s.SetString(v)
	return s
}

type ActionsListArtifactsForRepoOK struct {
	Artifacts  []Artifact `json:"artifacts"`
	TotalCount int        `json:"total_count"`
}

type ActionsListEnvironmentSecretsOK struct {
	Secrets    []ActionsSecret `json:"secrets"`
	TotalCount int             `json:"total_count"`
}

type ActionsListJobsForWorkflowRunFilter string

const (
	ActionsListJobsForWorkflowRunFilterLatest ActionsListJobsForWorkflowRunFilter = "latest"
	ActionsListJobsForWorkflowRunFilterAll    ActionsListJobsForWorkflowRunFilter = "all"
)

type ActionsListJobsForWorkflowRunOK struct {
	Jobs       []Job `json:"jobs"`
	TotalCount int   `json:"total_count"`
}

type ActionsListOrgSecretsOK struct {
	Secrets    []OrganizationActionsSecret `json:"secrets"`
	TotalCount int                         `json:"total_count"`
}

type ActionsListRepoAccessToSelfHostedRunnerGroupInOrgOK struct {
	Repositories []MinimalRepository `json:"repositories"`
	TotalCount   float64             `json:"total_count"`
}

type ActionsListRepoSecretsOK struct {
	Secrets    []ActionsSecret `json:"secrets"`
	TotalCount int             `json:"total_count"`
}

type ActionsListRepoWorkflowsOK struct {
	TotalCount int        `json:"total_count"`
	Workflows  []Workflow `json:"workflows"`
}

type ActionsListSelectedReposForOrgSecretOK struct {
	Repositories []MinimalRepository `json:"repositories"`
	TotalCount   int                 `json:"total_count"`
}

type ActionsListSelectedRepositoriesEnabledGithubActionsOrganizationOK struct {
	Repositories []Repository `json:"repositories"`
	TotalCount   float64      `json:"total_count"`
}

type ActionsListSelfHostedRunnerGroupsForOrgOK struct {
	RunnerGroups []RunnerGroupsOrg `json:"runner_groups"`
	TotalCount   float64           `json:"total_count"`
}

type ActionsListSelfHostedRunnersForOrgOK struct {
	Runners    []Runner `json:"runners"`
	TotalCount int      `json:"total_count"`
}

type ActionsListSelfHostedRunnersForRepoOK struct {
	Runners    []Runner `json:"runners"`
	TotalCount int      `json:"total_count"`
}

type ActionsListSelfHostedRunnersInGroupForOrgOK struct {
	Runners    []Runner `json:"runners"`
	TotalCount float64  `json:"total_count"`
}

type ActionsListWorkflowRunArtifactsOK struct {
	Artifacts  []Artifact `json:"artifacts"`
	TotalCount int        `json:"total_count"`
}

type ActionsListWorkflowRunsForRepoOK struct {
	TotalCount   int           `json:"total_count"`
	WorkflowRuns []WorkflowRun `json:"workflow_runs"`
}

type ActionsListWorkflowRunsForRepoStatus string

const (
	ActionsListWorkflowRunsForRepoStatusCompleted      ActionsListWorkflowRunsForRepoStatus = "completed"
	ActionsListWorkflowRunsForRepoStatusActionRequired ActionsListWorkflowRunsForRepoStatus = "action_required"
	ActionsListWorkflowRunsForRepoStatusCancelled      ActionsListWorkflowRunsForRepoStatus = "cancelled"
	ActionsListWorkflowRunsForRepoStatusFailure        ActionsListWorkflowRunsForRepoStatus = "failure"
	ActionsListWorkflowRunsForRepoStatusNeutral        ActionsListWorkflowRunsForRepoStatus = "neutral"
	ActionsListWorkflowRunsForRepoStatusSkipped        ActionsListWorkflowRunsForRepoStatus = "skipped"
	ActionsListWorkflowRunsForRepoStatusStale          ActionsListWorkflowRunsForRepoStatus = "stale"
	ActionsListWorkflowRunsForRepoStatusSuccess        ActionsListWorkflowRunsForRepoStatus = "success"
	ActionsListWorkflowRunsForRepoStatusTimedOut       ActionsListWorkflowRunsForRepoStatus = "timed_out"
	ActionsListWorkflowRunsForRepoStatusInProgress     ActionsListWorkflowRunsForRepoStatus = "in_progress"
	ActionsListWorkflowRunsForRepoStatusQueued         ActionsListWorkflowRunsForRepoStatus = "queued"
	ActionsListWorkflowRunsForRepoStatusRequested      ActionsListWorkflowRunsForRepoStatus = "requested"
	ActionsListWorkflowRunsForRepoStatusWaiting        ActionsListWorkflowRunsForRepoStatus = "waiting"
)

// ActionsListWorkflowRunsWorkflowID represents sum type.
type ActionsListWorkflowRunsWorkflowID struct {
	Type   ActionsListWorkflowRunsWorkflowIDType // switch on this field
	Int    int
	String string
}

// ActionsListWorkflowRunsWorkflowIDType is oneOf type of ActionsListWorkflowRunsWorkflowID.
type ActionsListWorkflowRunsWorkflowIDType string

// Possible values for ActionsListWorkflowRunsWorkflowIDType.
const (
	IntActionsListWorkflowRunsWorkflowID    ActionsListWorkflowRunsWorkflowIDType = "int"
	StringActionsListWorkflowRunsWorkflowID ActionsListWorkflowRunsWorkflowIDType = "string"
)

// IsInt reports whether ActionsListWorkflowRunsWorkflowID is int.
func (s ActionsListWorkflowRunsWorkflowID) IsInt() bool {
	return s.Type == IntActionsListWorkflowRunsWorkflowID
}

// IsString reports whether ActionsListWorkflowRunsWorkflowID is string.
func (s ActionsListWorkflowRunsWorkflowID) IsString() bool {
	return s.Type == StringActionsListWorkflowRunsWorkflowID
}

// SetInt sets ActionsListWorkflowRunsWorkflowID to int.
func (s *ActionsListWorkflowRunsWorkflowID) SetInt(v int) {
	s.Type = IntActionsListWorkflowRunsWorkflowID
	s.Int = v
}

// GetInt returns int and true boolean if ActionsListWorkflowRunsWorkflowID is int.
func (s ActionsListWorkflowRunsWorkflowID) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntActionsListWorkflowRunsWorkflowID returns new ActionsListWorkflowRunsWorkflowID from int.
func NewIntActionsListWorkflowRunsWorkflowID(v int) ActionsListWorkflowRunsWorkflowID {
	var s ActionsListWorkflowRunsWorkflowID
	s.SetInt(v)
	return s
}

// SetString sets ActionsListWorkflowRunsWorkflowID to string.
func (s *ActionsListWorkflowRunsWorkflowID) SetString(v string) {
	s.Type = StringActionsListWorkflowRunsWorkflowID
	s.String = v
}

// GetString returns string and true boolean if ActionsListWorkflowRunsWorkflowID is string.
func (s ActionsListWorkflowRunsWorkflowID) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringActionsListWorkflowRunsWorkflowID returns new ActionsListWorkflowRunsWorkflowID from string.
func NewStringActionsListWorkflowRunsWorkflowID(v string) ActionsListWorkflowRunsWorkflowID {
	var s ActionsListWorkflowRunsWorkflowID
	s.SetString(v)
	return s
}

// Ref: #/components/schemas/actions-organization-permissions
type ActionsOrganizationPermissions struct {
	AllowedActions          OptAllowedActions     `json:"allowed_actions"`
	EnabledRepositories     EnabledRepositories   `json:"enabled_repositories"`
	SelectedActionsURL      OptSelectedActionsURL `json:"selected_actions_url"`
	SelectedRepositoriesURL OptString             `json:"selected_repositories_url"`
}

// Ref: #/components/schemas/actions-public-key
type ActionsPublicKey struct {
	CreatedAt OptString `json:"created_at"`
	ID        OptInt    `json:"id"`
	Key       string    `json:"key"`
	KeyID     string    `json:"key_id"`
	Title     OptString `json:"title"`
	URL       OptString `json:"url"`
}

type ActionsReRunWorkflowCreated struct{}

// ActionsRemoveRepoAccessToSelfHostedRunnerGroupInOrgNoContent is response for ActionsRemoveRepoAccessToSelfHostedRunnerGroupInOrg operation.
type ActionsRemoveRepoAccessToSelfHostedRunnerGroupInOrgNoContent struct{}

// ActionsRemoveSelectedRepoFromOrgSecretConflict is response for ActionsRemoveSelectedRepoFromOrgSecret operation.
type ActionsRemoveSelectedRepoFromOrgSecretConflict struct{}

func (*ActionsRemoveSelectedRepoFromOrgSecretConflict) actionsRemoveSelectedRepoFromOrgSecretRes() {}

// ActionsRemoveSelectedRepoFromOrgSecretNoContent is response for ActionsRemoveSelectedRepoFromOrgSecret operation.
type ActionsRemoveSelectedRepoFromOrgSecretNoContent struct{}

func (*ActionsRemoveSelectedRepoFromOrgSecretNoContent) actionsRemoveSelectedRepoFromOrgSecretRes() {}

// ActionsRemoveSelfHostedRunnerFromGroupForOrgNoContent is response for ActionsRemoveSelfHostedRunnerFromGroupForOrg operation.
type ActionsRemoveSelfHostedRunnerFromGroupForOrgNoContent struct{}

// Ref: #/components/schemas/actions-repository-permissions
type ActionsRepositoryPermissions struct {
	AllowedActions     OptAllowedActions     `json:"allowed_actions"`
	Enabled            ActionsEnabled        `json:"enabled"`
	SelectedActionsURL OptSelectedActionsURL `json:"selected_actions_url"`
}

type ActionsRetryWorkflowCreated struct{}

type ActionsReviewPendingDeploymentsForRunReq struct {
	Comment        string                                        `json:"comment"`
	EnvironmentIds []int                                         `json:"environment_ids"`
	State          ActionsReviewPendingDeploymentsForRunReqState `json:"state"`
}

type ActionsReviewPendingDeploymentsForRunReqState string

const (
	ActionsReviewPendingDeploymentsForRunReqStateApproved ActionsReviewPendingDeploymentsForRunReqState = "approved"
	ActionsReviewPendingDeploymentsForRunReqStateRejected ActionsReviewPendingDeploymentsForRunReqState = "rejected"
)

// Ref: #/components/schemas/actions-secret
type ActionsSecret struct {
	CreatedAt time.Time `json:"created_at"`
	Name      string    `json:"name"`
	UpdatedAt time.Time `json:"updated_at"`
}

// ActionsSetAllowedActionsOrganizationNoContent is response for ActionsSetAllowedActionsOrganization operation.
type ActionsSetAllowedActionsOrganizationNoContent struct{}

// ActionsSetAllowedActionsRepositoryNoContent is response for ActionsSetAllowedActionsRepository operation.
type ActionsSetAllowedActionsRepositoryNoContent struct{}

// ActionsSetGithubActionsPermissionsOrganizationNoContent is response for ActionsSetGithubActionsPermissionsOrganization operation.
type ActionsSetGithubActionsPermissionsOrganizationNoContent struct{}

type ActionsSetGithubActionsPermissionsOrganizationReq struct {
	AllowedActions      OptAllowedActions   `json:"allowed_actions"`
	EnabledRepositories EnabledRepositories `json:"enabled_repositories"`
}

// ActionsSetGithubActionsPermissionsRepositoryNoContent is response for ActionsSetGithubActionsPermissionsRepository operation.
type ActionsSetGithubActionsPermissionsRepositoryNoContent struct{}

type ActionsSetGithubActionsPermissionsRepositoryReq struct {
	AllowedActions OptAllowedActions `json:"allowed_actions"`
	Enabled        ActionsEnabled    `json:"enabled"`
}

// ActionsSetRepoAccessToSelfHostedRunnerGroupInOrgNoContent is response for ActionsSetRepoAccessToSelfHostedRunnerGroupInOrg operation.
type ActionsSetRepoAccessToSelfHostedRunnerGroupInOrgNoContent struct{}

type ActionsSetRepoAccessToSelfHostedRunnerGroupInOrgReq struct {
	SelectedRepositoryIds []int `json:"selected_repository_ids"`
}

// ActionsSetSelectedReposForOrgSecretNoContent is response for ActionsSetSelectedReposForOrgSecret operation.
type ActionsSetSelectedReposForOrgSecretNoContent struct{}

type ActionsSetSelectedReposForOrgSecretReq struct {
	SelectedRepositoryIds []int `json:"selected_repository_ids"`
}

// ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationNoContent is response for ActionsSetSelectedRepositoriesEnabledGithubActionsOrganization operation.
type ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationNoContent struct{}

type ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationReq struct {
	SelectedRepositoryIds []int `json:"selected_repository_ids"`
}

// ActionsSetSelfHostedRunnersInGroupForOrgNoContent is response for ActionsSetSelfHostedRunnersInGroupForOrg operation.
type ActionsSetSelfHostedRunnersInGroupForOrgNoContent struct{}

type ActionsSetSelfHostedRunnersInGroupForOrgReq struct {
	Runners []int `json:"runners"`
}

type ActionsUpdateSelfHostedRunnerGroupForOrgReq struct {
	Name       string                                                   `json:"name"`
	Visibility OptActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility `json:"visibility"`
}

type ActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility string

const (
	ActionsUpdateSelfHostedRunnerGroupForOrgReqVisibilitySelected ActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility = "selected"
	ActionsUpdateSelfHostedRunnerGroupForOrgReqVisibilityAll      ActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility = "all"
	ActionsUpdateSelfHostedRunnerGroupForOrgReqVisibilityPrivate  ActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility = "private"
)

type ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONForbidden) activityCheckRepoIsStarredByAuthenticatedUserRes() {
}

type ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONNotFound BasicError

func (*ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONNotFound) activityCheckRepoIsStarredByAuthenticatedUserRes() {
}

type ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONUnauthorized) activityCheckRepoIsStarredByAuthenticatedUserRes() {
}

// ActivityCheckRepoIsStarredByAuthenticatedUserNoContent is response for ActivityCheckRepoIsStarredByAuthenticatedUser operation.
type ActivityCheckRepoIsStarredByAuthenticatedUserNoContent struct{}

func (*ActivityCheckRepoIsStarredByAuthenticatedUserNoContent) activityCheckRepoIsStarredByAuthenticatedUserRes() {
}

// ActivityCheckRepoIsStarredByAuthenticatedUserNotModified is response for ActivityCheckRepoIsStarredByAuthenticatedUser operation.
type ActivityCheckRepoIsStarredByAuthenticatedUserNotModified struct{}

func (*ActivityCheckRepoIsStarredByAuthenticatedUserNotModified) activityCheckRepoIsStarredByAuthenticatedUserRes() {
}

// ActivityDeleteRepoSubscriptionNoContent is response for ActivityDeleteRepoSubscription operation.
type ActivityDeleteRepoSubscriptionNoContent struct{}

type ActivityDeleteThreadSubscriptionApplicationJSONForbidden BasicError

func (*ActivityDeleteThreadSubscriptionApplicationJSONForbidden) activityDeleteThreadSubscriptionRes() {
}

type ActivityDeleteThreadSubscriptionApplicationJSONUnauthorized BasicError

func (*ActivityDeleteThreadSubscriptionApplicationJSONUnauthorized) activityDeleteThreadSubscriptionRes() {
}

// ActivityDeleteThreadSubscriptionNoContent is response for ActivityDeleteThreadSubscription operation.
type ActivityDeleteThreadSubscriptionNoContent struct{}

func (*ActivityDeleteThreadSubscriptionNoContent) activityDeleteThreadSubscriptionRes() {}

// ActivityDeleteThreadSubscriptionNotModified is response for ActivityDeleteThreadSubscription operation.
type ActivityDeleteThreadSubscriptionNotModified struct{}

func (*ActivityDeleteThreadSubscriptionNotModified) activityDeleteThreadSubscriptionRes() {}

// ActivityGetRepoSubscriptionNotFound is response for ActivityGetRepoSubscription operation.
type ActivityGetRepoSubscriptionNotFound struct{}

func (*ActivityGetRepoSubscriptionNotFound) activityGetRepoSubscriptionRes() {}

type ActivityGetThreadApplicationJSONForbidden BasicError

func (*ActivityGetThreadApplicationJSONForbidden) activityGetThreadRes() {}

type ActivityGetThreadApplicationJSONUnauthorized BasicError

func (*ActivityGetThreadApplicationJSONUnauthorized) activityGetThreadRes() {}

// ActivityGetThreadNotModified is response for ActivityGetThread operation.
type ActivityGetThreadNotModified struct{}

func (*ActivityGetThreadNotModified) activityGetThreadRes() {}

type ActivityGetThreadSubscriptionForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityGetThreadSubscriptionForAuthenticatedUserApplicationJSONForbidden) activityGetThreadSubscriptionForAuthenticatedUserRes() {
}

type ActivityGetThreadSubscriptionForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityGetThreadSubscriptionForAuthenticatedUserApplicationJSONUnauthorized) activityGetThreadSubscriptionForAuthenticatedUserRes() {
}

// ActivityGetThreadSubscriptionForAuthenticatedUserNotModified is response for ActivityGetThreadSubscriptionForAuthenticatedUser operation.
type ActivityGetThreadSubscriptionForAuthenticatedUserNotModified struct{}

func (*ActivityGetThreadSubscriptionForAuthenticatedUserNotModified) activityGetThreadSubscriptionForAuthenticatedUserRes() {
}

// ActivityListNotificationsForAuthenticatedUserNotModified is response for ActivityListNotificationsForAuthenticatedUser operation.
type ActivityListNotificationsForAuthenticatedUserNotModified struct{}

type ActivityListPublicEventsForRepoNetworkApplicationJSONForbidden BasicError

func (*ActivityListPublicEventsForRepoNetworkApplicationJSONForbidden) activityListPublicEventsForRepoNetworkRes() {
}

type ActivityListPublicEventsForRepoNetworkApplicationJSONMovedPermanently BasicError

func (*ActivityListPublicEventsForRepoNetworkApplicationJSONMovedPermanently) activityListPublicEventsForRepoNetworkRes() {
}

type ActivityListPublicEventsForRepoNetworkApplicationJSONNotFound BasicError

func (*ActivityListPublicEventsForRepoNetworkApplicationJSONNotFound) activityListPublicEventsForRepoNetworkRes() {
}

// ActivityListPublicEventsForRepoNetworkNotModified is response for ActivityListPublicEventsForRepoNetwork operation.
type ActivityListPublicEventsForRepoNetworkNotModified struct{}

func (*ActivityListPublicEventsForRepoNetworkNotModified) activityListPublicEventsForRepoNetworkRes() {
}

type ActivityListPublicEventsForRepoNetworkOKApplicationJSON []Event

func (*ActivityListPublicEventsForRepoNetworkOKApplicationJSON) activityListPublicEventsForRepoNetworkRes() {
}

// ActivityListPublicEventsNotModified is response for ActivityListPublicEvents operation.
type ActivityListPublicEventsNotModified struct{}

func (*ActivityListPublicEventsNotModified) activityListPublicEventsRes() {}

type ActivityListPublicEventsOKApplicationJSON []Event

func (*ActivityListPublicEventsOKApplicationJSON) activityListPublicEventsRes() {}

type ActivityListPublicEventsServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*ActivityListPublicEventsServiceUnavailable) activityListPublicEventsRes() {}

type ActivityListReposStarredByAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityListReposStarredByAuthenticatedUserApplicationJSONForbidden) activityListReposStarredByAuthenticatedUserRes() {
}

type ActivityListReposStarredByAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityListReposStarredByAuthenticatedUserApplicationJSONUnauthorized) activityListReposStarredByAuthenticatedUserRes() {
}

type ActivityListReposStarredByAuthenticatedUserDirection string

const (
	ActivityListReposStarredByAuthenticatedUserDirectionAsc  ActivityListReposStarredByAuthenticatedUserDirection = "asc"
	ActivityListReposStarredByAuthenticatedUserDirectionDesc ActivityListReposStarredByAuthenticatedUserDirection = "desc"
)

// ActivityListReposStarredByAuthenticatedUserNotModified is response for ActivityListReposStarredByAuthenticatedUser operation.
type ActivityListReposStarredByAuthenticatedUserNotModified struct{}

func (*ActivityListReposStarredByAuthenticatedUserNotModified) activityListReposStarredByAuthenticatedUserRes() {
}

type ActivityListReposStarredByAuthenticatedUserOKApplicationJSON []Repository

func (*ActivityListReposStarredByAuthenticatedUserOKApplicationJSON) activityListReposStarredByAuthenticatedUserRes() {
}

type ActivityListReposStarredByAuthenticatedUserOKApplicationVndGithubV3StarJSON []StarredRepository

func (*ActivityListReposStarredByAuthenticatedUserOKApplicationVndGithubV3StarJSON) activityListReposStarredByAuthenticatedUserRes() {
}

type ActivityListReposStarredByAuthenticatedUserSort string

const (
	ActivityListReposStarredByAuthenticatedUserSortCreated ActivityListReposStarredByAuthenticatedUserSort = "created"
	ActivityListReposStarredByAuthenticatedUserSortUpdated ActivityListReposStarredByAuthenticatedUserSort = "updated"
)

type ActivityListReposStarredByUserDirection string

const (
	ActivityListReposStarredByUserDirectionAsc  ActivityListReposStarredByUserDirection = "asc"
	ActivityListReposStarredByUserDirectionDesc ActivityListReposStarredByUserDirection = "desc"
)

type ActivityListReposStarredByUserSort string

const (
	ActivityListReposStarredByUserSortCreated ActivityListReposStarredByUserSort = "created"
	ActivityListReposStarredByUserSortUpdated ActivityListReposStarredByUserSort = "updated"
)

type ActivityListWatchedReposForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityListWatchedReposForAuthenticatedUserApplicationJSONForbidden) activityListWatchedReposForAuthenticatedUserRes() {
}

type ActivityListWatchedReposForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityListWatchedReposForAuthenticatedUserApplicationJSONUnauthorized) activityListWatchedReposForAuthenticatedUserRes() {
}

// ActivityListWatchedReposForAuthenticatedUserNotModified is response for ActivityListWatchedReposForAuthenticatedUser operation.
type ActivityListWatchedReposForAuthenticatedUserNotModified struct{}

func (*ActivityListWatchedReposForAuthenticatedUserNotModified) activityListWatchedReposForAuthenticatedUserRes() {
}

type ActivityListWatchedReposForAuthenticatedUserOKApplicationJSON []MinimalRepository

func (*ActivityListWatchedReposForAuthenticatedUserOKApplicationJSON) activityListWatchedReposForAuthenticatedUserRes() {
}

type ActivityMarkNotificationsAsReadAccepted struct {
	Message OptString `json:"message"`
}

func (*ActivityMarkNotificationsAsReadAccepted) activityMarkNotificationsAsReadRes() {}

type ActivityMarkNotificationsAsReadApplicationJSONForbidden BasicError

func (*ActivityMarkNotificationsAsReadApplicationJSONForbidden) activityMarkNotificationsAsReadRes() {
}

type ActivityMarkNotificationsAsReadApplicationJSONUnauthorized BasicError

func (*ActivityMarkNotificationsAsReadApplicationJSONUnauthorized) activityMarkNotificationsAsReadRes() {
}

// ActivityMarkNotificationsAsReadNotModified is response for ActivityMarkNotificationsAsRead operation.
type ActivityMarkNotificationsAsReadNotModified struct{}

func (*ActivityMarkNotificationsAsReadNotModified) activityMarkNotificationsAsReadRes() {}

type ActivityMarkNotificationsAsReadReq struct {
	LastReadAt OptTime `json:"last_read_at"`
	Read       OptBool `json:"read"`
}

// ActivityMarkNotificationsAsReadResetContent is response for ActivityMarkNotificationsAsRead operation.
type ActivityMarkNotificationsAsReadResetContent struct{}

func (*ActivityMarkNotificationsAsReadResetContent) activityMarkNotificationsAsReadRes() {}

type ActivityMarkRepoNotificationsAsReadAccepted struct {
	Message OptString `json:"message"`
	URL     OptString `json:"url"`
}

func (*ActivityMarkRepoNotificationsAsReadAccepted) activityMarkRepoNotificationsAsReadRes() {}

type ActivityMarkRepoNotificationsAsReadReq struct {
	LastReadAt OptTime `json:"last_read_at"`
}

// ActivityMarkRepoNotificationsAsReadResetContent is response for ActivityMarkRepoNotificationsAsRead operation.
type ActivityMarkRepoNotificationsAsReadResetContent struct{}

func (*ActivityMarkRepoNotificationsAsReadResetContent) activityMarkRepoNotificationsAsReadRes() {}

// ActivityMarkThreadAsReadNotModified is response for ActivityMarkThreadAsRead operation.
type ActivityMarkThreadAsReadNotModified struct{}

func (*ActivityMarkThreadAsReadNotModified) activityMarkThreadAsReadRes() {}

// ActivityMarkThreadAsReadResetContent is response for ActivityMarkThreadAsRead operation.
type ActivityMarkThreadAsReadResetContent struct{}

func (*ActivityMarkThreadAsReadResetContent) activityMarkThreadAsReadRes() {}

type ActivitySetRepoSubscriptionReq struct {
	Ignored    OptBool `json:"ignored"`
	Subscribed OptBool `json:"subscribed"`
}

type ActivitySetThreadSubscriptionApplicationJSONForbidden BasicError

func (*ActivitySetThreadSubscriptionApplicationJSONForbidden) activitySetThreadSubscriptionRes() {}

type ActivitySetThreadSubscriptionApplicationJSONUnauthorized BasicError

func (*ActivitySetThreadSubscriptionApplicationJSONUnauthorized) activitySetThreadSubscriptionRes() {}

// ActivitySetThreadSubscriptionNotModified is response for ActivitySetThreadSubscription operation.
type ActivitySetThreadSubscriptionNotModified struct{}

func (*ActivitySetThreadSubscriptionNotModified) activitySetThreadSubscriptionRes() {}

type ActivitySetThreadSubscriptionReq struct {
	Ignored OptBool `json:"ignored"`
}

type ActivityStarRepoForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityStarRepoForAuthenticatedUserApplicationJSONForbidden) activityStarRepoForAuthenticatedUserRes() {
}

type ActivityStarRepoForAuthenticatedUserApplicationJSONNotFound BasicError

func (*ActivityStarRepoForAuthenticatedUserApplicationJSONNotFound) activityStarRepoForAuthenticatedUserRes() {
}

type ActivityStarRepoForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityStarRepoForAuthenticatedUserApplicationJSONUnauthorized) activityStarRepoForAuthenticatedUserRes() {
}

// ActivityStarRepoForAuthenticatedUserNoContent is response for ActivityStarRepoForAuthenticatedUser operation.
type ActivityStarRepoForAuthenticatedUserNoContent struct{}

func (*ActivityStarRepoForAuthenticatedUserNoContent) activityStarRepoForAuthenticatedUserRes() {}

// ActivityStarRepoForAuthenticatedUserNotModified is response for ActivityStarRepoForAuthenticatedUser operation.
type ActivityStarRepoForAuthenticatedUserNotModified struct{}

func (*ActivityStarRepoForAuthenticatedUserNotModified) activityStarRepoForAuthenticatedUserRes() {}

type ActivityUnstarRepoForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityUnstarRepoForAuthenticatedUserApplicationJSONForbidden) activityUnstarRepoForAuthenticatedUserRes() {
}

type ActivityUnstarRepoForAuthenticatedUserApplicationJSONNotFound BasicError

func (*ActivityUnstarRepoForAuthenticatedUserApplicationJSONNotFound) activityUnstarRepoForAuthenticatedUserRes() {
}

type ActivityUnstarRepoForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityUnstarRepoForAuthenticatedUserApplicationJSONUnauthorized) activityUnstarRepoForAuthenticatedUserRes() {
}

// ActivityUnstarRepoForAuthenticatedUserNoContent is response for ActivityUnstarRepoForAuthenticatedUser operation.
type ActivityUnstarRepoForAuthenticatedUserNoContent struct{}

func (*ActivityUnstarRepoForAuthenticatedUserNoContent) activityUnstarRepoForAuthenticatedUserRes() {}

// ActivityUnstarRepoForAuthenticatedUserNotModified is response for ActivityUnstarRepoForAuthenticatedUser operation.
type ActivityUnstarRepoForAuthenticatedUserNotModified struct{}

func (*ActivityUnstarRepoForAuthenticatedUserNotModified) activityUnstarRepoForAuthenticatedUserRes() {
}

// Ref: #/components/schemas/actor
type Actor struct {
	AvatarURL    url.URL   `json:"avatar_url"`
	DisplayLogin OptString `json:"display_login"`
	GravatarID   NilString `json:"gravatar_id"`
	ID           int       `json:"id"`
	Login        string    `json:"login"`
	URL          url.URL   `json:"url"`
}

type AlertCreatedAt time.Time

type AlertHTMLURL url.URL

type AlertInstancesURL url.URL

type AlertNumber int

type AlertURL url.URL

// Ref: #/components/schemas/allowed-actions
type AllowedActions string

const (
	AllowedActionsAll       AllowedActions = "all"
	AllowedActionsLocalOnly AllowedActions = "local_only"
	AllowedActionsSelected  AllowedActions = "selected"
)

// Ref: #/components/schemas/app-permissions
type AppPermissions struct {
	Actions                       OptAppPermissionsActions                       `json:"actions"`
	Administration                OptAppPermissionsAdministration                `json:"administration"`
	Checks                        OptAppPermissionsChecks                        `json:"checks"`
	ContentReferences             OptAppPermissionsContentReferences             `json:"content_references"`
	Contents                      OptAppPermissionsContents                      `json:"contents"`
	Deployments                   OptAppPermissionsDeployments                   `json:"deployments"`
	Environments                  OptAppPermissionsEnvironments                  `json:"environments"`
	Issues                        OptAppPermissionsIssues                        `json:"issues"`
	Members                       OptAppPermissionsMembers                       `json:"members"`
	Metadata                      OptAppPermissionsMetadata                      `json:"metadata"`
	OrganizationAdministration    OptAppPermissionsOrganizationAdministration    `json:"organization_administration"`
	OrganizationHooks             OptAppPermissionsOrganizationHooks             `json:"organization_hooks"`
	OrganizationPackages          OptAppPermissionsOrganizationPackages          `json:"organization_packages"`
	OrganizationPlan              OptAppPermissionsOrganizationPlan              `json:"organization_plan"`
	OrganizationProjects          OptAppPermissionsOrganizationProjects          `json:"organization_projects"`
	OrganizationSecrets           OptAppPermissionsOrganizationSecrets           `json:"organization_secrets"`
	OrganizationSelfHostedRunners OptAppPermissionsOrganizationSelfHostedRunners `json:"organization_self_hosted_runners"`
	OrganizationUserBlocking      OptAppPermissionsOrganizationUserBlocking      `json:"organization_user_blocking"`
	Packages                      OptAppPermissionsPackages                      `json:"packages"`
	Pages                         OptAppPermissionsPages                         `json:"pages"`
	PullRequests                  OptAppPermissionsPullRequests                  `json:"pull_requests"`
	RepositoryHooks               OptAppPermissionsRepositoryHooks               `json:"repository_hooks"`
	RepositoryProjects            OptAppPermissionsRepositoryProjects            `json:"repository_projects"`
	SecretScanningAlerts          OptAppPermissionsSecretScanningAlerts          `json:"secret_scanning_alerts"`
	Secrets                       OptAppPermissionsSecrets                       `json:"secrets"`
	SecurityEvents                OptAppPermissionsSecurityEvents                `json:"security_events"`
	SingleFile                    OptAppPermissionsSingleFile                    `json:"single_file"`
	Statuses                      OptAppPermissionsStatuses                      `json:"statuses"`
	TeamDiscussions               OptAppPermissionsTeamDiscussions               `json:"team_discussions"`
	VulnerabilityAlerts           OptAppPermissionsVulnerabilityAlerts           `json:"vulnerability_alerts"`
	Workflows                     OptAppPermissionsWorkflows                     `json:"workflows"`
}

type AppPermissionsActions string

const (
	AppPermissionsActionsRead  AppPermissionsActions = "read"
	AppPermissionsActionsWrite AppPermissionsActions = "write"
)

type AppPermissionsAdministration string

const (
	AppPermissionsAdministrationRead  AppPermissionsAdministration = "read"
	AppPermissionsAdministrationWrite AppPermissionsAdministration = "write"
)

type AppPermissionsChecks string

const (
	AppPermissionsChecksRead  AppPermissionsChecks = "read"
	AppPermissionsChecksWrite AppPermissionsChecks = "write"
)

type AppPermissionsContentReferences string

const (
	AppPermissionsContentReferencesRead  AppPermissionsContentReferences = "read"
	AppPermissionsContentReferencesWrite AppPermissionsContentReferences = "write"
)

type AppPermissionsContents string

const (
	AppPermissionsContentsRead  AppPermissionsContents = "read"
	AppPermissionsContentsWrite AppPermissionsContents = "write"
)

type AppPermissionsDeployments string

const (
	AppPermissionsDeploymentsRead  AppPermissionsDeployments = "read"
	AppPermissionsDeploymentsWrite AppPermissionsDeployments = "write"
)

type AppPermissionsEnvironments string

const (
	AppPermissionsEnvironmentsRead  AppPermissionsEnvironments = "read"
	AppPermissionsEnvironmentsWrite AppPermissionsEnvironments = "write"
)

type AppPermissionsIssues string

const (
	AppPermissionsIssuesRead  AppPermissionsIssues = "read"
	AppPermissionsIssuesWrite AppPermissionsIssues = "write"
)

type AppPermissionsMembers string

const (
	AppPermissionsMembersRead  AppPermissionsMembers = "read"
	AppPermissionsMembersWrite AppPermissionsMembers = "write"
)

type AppPermissionsMetadata string

const (
	AppPermissionsMetadataRead  AppPermissionsMetadata = "read"
	AppPermissionsMetadataWrite AppPermissionsMetadata = "write"
)

type AppPermissionsOrganizationAdministration string

const (
	AppPermissionsOrganizationAdministrationRead  AppPermissionsOrganizationAdministration = "read"
	AppPermissionsOrganizationAdministrationWrite AppPermissionsOrganizationAdministration = "write"
)

type AppPermissionsOrganizationHooks string

const (
	AppPermissionsOrganizationHooksRead  AppPermissionsOrganizationHooks = "read"
	AppPermissionsOrganizationHooksWrite AppPermissionsOrganizationHooks = "write"
)

type AppPermissionsOrganizationPackages string

const (
	AppPermissionsOrganizationPackagesRead  AppPermissionsOrganizationPackages = "read"
	AppPermissionsOrganizationPackagesWrite AppPermissionsOrganizationPackages = "write"
)

type AppPermissionsOrganizationPlan string

const (
	AppPermissionsOrganizationPlanRead AppPermissionsOrganizationPlan = "read"
)

type AppPermissionsOrganizationProjects string

const (
	AppPermissionsOrganizationProjectsRead  AppPermissionsOrganizationProjects = "read"
	AppPermissionsOrganizationProjectsWrite AppPermissionsOrganizationProjects = "write"
	AppPermissionsOrganizationProjectsAdmin AppPermissionsOrganizationProjects = "admin"
)

type AppPermissionsOrganizationSecrets string

const (
	AppPermissionsOrganizationSecretsRead  AppPermissionsOrganizationSecrets = "read"
	AppPermissionsOrganizationSecretsWrite AppPermissionsOrganizationSecrets = "write"
)

type AppPermissionsOrganizationSelfHostedRunners string

const (
	AppPermissionsOrganizationSelfHostedRunnersRead  AppPermissionsOrganizationSelfHostedRunners = "read"
	AppPermissionsOrganizationSelfHostedRunnersWrite AppPermissionsOrganizationSelfHostedRunners = "write"
)

type AppPermissionsOrganizationUserBlocking string

const (
	AppPermissionsOrganizationUserBlockingRead  AppPermissionsOrganizationUserBlocking = "read"
	AppPermissionsOrganizationUserBlockingWrite AppPermissionsOrganizationUserBlocking = "write"
)

type AppPermissionsPackages string

const (
	AppPermissionsPackagesRead  AppPermissionsPackages = "read"
	AppPermissionsPackagesWrite AppPermissionsPackages = "write"
)

type AppPermissionsPages string

const (
	AppPermissionsPagesRead  AppPermissionsPages = "read"
	AppPermissionsPagesWrite AppPermissionsPages = "write"
)

type AppPermissionsPullRequests string

const (
	AppPermissionsPullRequestsRead  AppPermissionsPullRequests = "read"
	AppPermissionsPullRequestsWrite AppPermissionsPullRequests = "write"
)

type AppPermissionsRepositoryHooks string

const (
	AppPermissionsRepositoryHooksRead  AppPermissionsRepositoryHooks = "read"
	AppPermissionsRepositoryHooksWrite AppPermissionsRepositoryHooks = "write"
)

type AppPermissionsRepositoryProjects string

const (
	AppPermissionsRepositoryProjectsRead  AppPermissionsRepositoryProjects = "read"
	AppPermissionsRepositoryProjectsWrite AppPermissionsRepositoryProjects = "write"
	AppPermissionsRepositoryProjectsAdmin AppPermissionsRepositoryProjects = "admin"
)

type AppPermissionsSecretScanningAlerts string

const (
	AppPermissionsSecretScanningAlertsRead  AppPermissionsSecretScanningAlerts = "read"
	AppPermissionsSecretScanningAlertsWrite AppPermissionsSecretScanningAlerts = "write"
)

type AppPermissionsSecrets string

const (
	AppPermissionsSecretsRead  AppPermissionsSecrets = "read"
	AppPermissionsSecretsWrite AppPermissionsSecrets = "write"
)

type AppPermissionsSecurityEvents string

const (
	AppPermissionsSecurityEventsRead  AppPermissionsSecurityEvents = "read"
	AppPermissionsSecurityEventsWrite AppPermissionsSecurityEvents = "write"
)

type AppPermissionsSingleFile string

const (
	AppPermissionsSingleFileRead  AppPermissionsSingleFile = "read"
	AppPermissionsSingleFileWrite AppPermissionsSingleFile = "write"
)

type AppPermissionsStatuses string

const (
	AppPermissionsStatusesRead  AppPermissionsStatuses = "read"
	AppPermissionsStatusesWrite AppPermissionsStatuses = "write"
)

type AppPermissionsTeamDiscussions string

const (
	AppPermissionsTeamDiscussionsRead  AppPermissionsTeamDiscussions = "read"
	AppPermissionsTeamDiscussionsWrite AppPermissionsTeamDiscussions = "write"
)

type AppPermissionsVulnerabilityAlerts string

const (
	AppPermissionsVulnerabilityAlertsRead AppPermissionsVulnerabilityAlerts = "read"
)

type AppPermissionsWorkflows string

const (
	AppPermissionsWorkflowsWrite AppPermissionsWorkflows = "write"
)

// Ref: #/components/schemas/application-grant
type ApplicationGrant struct {
	App       ApplicationGrantApp      `json:"app"`
	CreatedAt time.Time                `json:"created_at"`
	ID        int                      `json:"id"`
	Scopes    []string                 `json:"scopes"`
	UpdatedAt time.Time                `json:"updated_at"`
	URL       url.URL                  `json:"url"`
	User      OptNilNullableSimpleUser `json:"user"`
}

func (*ApplicationGrant) oAuthAuthorizationsGetGrantRes() {}

type ApplicationGrantApp struct {
	ClientID string  `json:"client_id"`
	Name     string  `json:"name"`
	URL      url.URL `json:"url"`
}

type AppsAddRepoToInstallationApplicationJSONForbidden BasicError

func (*AppsAddRepoToInstallationApplicationJSONForbidden) appsAddRepoToInstallationRes() {}

type AppsAddRepoToInstallationApplicationJSONNotFound BasicError

func (*AppsAddRepoToInstallationApplicationJSONNotFound) appsAddRepoToInstallationRes() {}

// AppsAddRepoToInstallationNoContent is response for AppsAddRepoToInstallation operation.
type AppsAddRepoToInstallationNoContent struct{}

func (*AppsAddRepoToInstallationNoContent) appsAddRepoToInstallationRes() {}

// AppsAddRepoToInstallationNotModified is response for AppsAddRepoToInstallation operation.
type AppsAddRepoToInstallationNotModified struct{}

func (*AppsAddRepoToInstallationNotModified) appsAddRepoToInstallationRes() {}

type AppsCheckTokenReq struct {
	AccessToken string `json:"access_token"`
}

// AppsCreateContentAttachmentNotModified is response for AppsCreateContentAttachment operation.
type AppsCreateContentAttachmentNotModified struct{}

type AppsCreateContentAttachmentReq struct {
	Body  string `json:"body"`
	Title string `json:"title"`
}

type AppsCreateContentAttachmentUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

type AppsCreateFromManifestReq struct{}

type AppsCreateInstallationAccessTokenReq struct {
	Permissions   OptAppPermissions `json:"permissions"`
	Repositories  []string          `json:"repositories"`
	RepositoryIds []int             `json:"repository_ids"`
}

type AppsCreateInstallationAccessTokenUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

// AppsDeleteAuthorizationNoContent is response for AppsDeleteAuthorization operation.
type AppsDeleteAuthorizationNoContent struct{}

type AppsDeleteAuthorizationReq struct {
	AccessToken string `json:"access_token"`
}

// AppsDeleteInstallationNoContent is response for AppsDeleteInstallation operation.
type AppsDeleteInstallationNoContent struct{}

func (*AppsDeleteInstallationNoContent) appsDeleteInstallationRes() {}

// AppsDeleteTokenNoContent is response for AppsDeleteToken operation.
type AppsDeleteTokenNoContent struct{}

type AppsDeleteTokenReq struct {
	AccessToken string `json:"access_token"`
}

type AppsGetBySlugApplicationJSONForbidden BasicError

func (*AppsGetBySlugApplicationJSONForbidden) appsGetBySlugRes() {}

type AppsGetBySlugApplicationJSONNotFound BasicError

func (*AppsGetBySlugApplicationJSONNotFound) appsGetBySlugRes() {}

type AppsGetBySlugUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*AppsGetBySlugUnsupportedMediaType) appsGetBySlugRes() {}

type AppsGetSubscriptionPlanForAccountApplicationJSONNotFound BasicError

func (*AppsGetSubscriptionPlanForAccountApplicationJSONNotFound) appsGetSubscriptionPlanForAccountRes() {
}

type AppsGetSubscriptionPlanForAccountApplicationJSONUnauthorized BasicError

func (*AppsGetSubscriptionPlanForAccountApplicationJSONUnauthorized) appsGetSubscriptionPlanForAccountRes() {
}

// AppsGetSubscriptionPlanForAccountStubbedNotFound is response for AppsGetSubscriptionPlanForAccountStubbed operation.
type AppsGetSubscriptionPlanForAccountStubbedNotFound struct{}

func (*AppsGetSubscriptionPlanForAccountStubbedNotFound) appsGetSubscriptionPlanForAccountStubbedRes() {
}

type AppsListAccountsForPlanDirection string

const (
	AppsListAccountsForPlanDirectionAsc  AppsListAccountsForPlanDirection = "asc"
	AppsListAccountsForPlanDirectionDesc AppsListAccountsForPlanDirection = "desc"
)

type AppsListAccountsForPlanSort string

const (
	AppsListAccountsForPlanSortCreated AppsListAccountsForPlanSort = "created"
	AppsListAccountsForPlanSortUpdated AppsListAccountsForPlanSort = "updated"
)

type AppsListAccountsForPlanStubbedDirection string

const (
	AppsListAccountsForPlanStubbedDirectionAsc  AppsListAccountsForPlanStubbedDirection = "asc"
	AppsListAccountsForPlanStubbedDirectionDesc AppsListAccountsForPlanStubbedDirection = "desc"
)

type AppsListAccountsForPlanStubbedOKApplicationJSON []MarketplacePurchase

func (*AppsListAccountsForPlanStubbedOKApplicationJSON) appsListAccountsForPlanStubbedRes() {}

type AppsListAccountsForPlanStubbedSort string

const (
	AppsListAccountsForPlanStubbedSortCreated AppsListAccountsForPlanStubbedSort = "created"
	AppsListAccountsForPlanStubbedSortUpdated AppsListAccountsForPlanStubbedSort = "updated"
)

type AppsListInstallationReposForAuthenticatedUserApplicationJSONForbidden BasicError

func (*AppsListInstallationReposForAuthenticatedUserApplicationJSONForbidden) appsListInstallationReposForAuthenticatedUserRes() {
}

type AppsListInstallationReposForAuthenticatedUserApplicationJSONNotFound BasicError

func (*AppsListInstallationReposForAuthenticatedUserApplicationJSONNotFound) appsListInstallationReposForAuthenticatedUserRes() {
}

// AppsListInstallationReposForAuthenticatedUserNotModified is response for AppsListInstallationReposForAuthenticatedUser operation.
type AppsListInstallationReposForAuthenticatedUserNotModified struct{}

func (*AppsListInstallationReposForAuthenticatedUserNotModified) appsListInstallationReposForAuthenticatedUserRes() {
}

type AppsListInstallationReposForAuthenticatedUserOK struct {
	Repositories        []Repository `json:"repositories"`
	RepositorySelection OptString    `json:"repository_selection"`
	TotalCount          int          `json:"total_count"`
}

func (*AppsListInstallationReposForAuthenticatedUserOK) appsListInstallationReposForAuthenticatedUserRes() {
}

type AppsListPlansApplicationJSONNotFound BasicError

func (*AppsListPlansApplicationJSONNotFound) appsListPlansRes() {}

type AppsListPlansApplicationJSONUnauthorized BasicError

func (*AppsListPlansApplicationJSONUnauthorized) appsListPlansRes() {}

type AppsListPlansOKApplicationJSON []MarketplaceListingPlan

func (*AppsListPlansOKApplicationJSON) appsListPlansRes() {}

type AppsListPlansStubbedOKApplicationJSON []MarketplaceListingPlan

func (*AppsListPlansStubbedOKApplicationJSON) appsListPlansStubbedRes() {}

type AppsListReposAccessibleToInstallationApplicationJSONForbidden BasicError

func (*AppsListReposAccessibleToInstallationApplicationJSONForbidden) appsListReposAccessibleToInstallationRes() {
}

type AppsListReposAccessibleToInstallationApplicationJSONUnauthorized BasicError

func (*AppsListReposAccessibleToInstallationApplicationJSONUnauthorized) appsListReposAccessibleToInstallationRes() {
}

// AppsListReposAccessibleToInstallationNotModified is response for AppsListReposAccessibleToInstallation operation.
type AppsListReposAccessibleToInstallationNotModified struct{}

func (*AppsListReposAccessibleToInstallationNotModified) appsListReposAccessibleToInstallationRes() {}

type AppsListReposAccessibleToInstallationOK struct {
	Repositories        []Repository `json:"repositories"`
	RepositorySelection OptString    `json:"repository_selection"`
	TotalCount          int          `json:"total_count"`
}

func (*AppsListReposAccessibleToInstallationOK) appsListReposAccessibleToInstallationRes() {}

type AppsListSubscriptionsForAuthenticatedUserApplicationJSONNotFound BasicError

func (*AppsListSubscriptionsForAuthenticatedUserApplicationJSONNotFound) appsListSubscriptionsForAuthenticatedUserRes() {
}

type AppsListSubscriptionsForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*AppsListSubscriptionsForAuthenticatedUserApplicationJSONUnauthorized) appsListSubscriptionsForAuthenticatedUserRes() {
}

// AppsListSubscriptionsForAuthenticatedUserNotModified is response for AppsListSubscriptionsForAuthenticatedUser operation.
type AppsListSubscriptionsForAuthenticatedUserNotModified struct{}

func (*AppsListSubscriptionsForAuthenticatedUserNotModified) appsListSubscriptionsForAuthenticatedUserRes() {
}

type AppsListSubscriptionsForAuthenticatedUserOKApplicationJSON []UserMarketplacePurchase

func (*AppsListSubscriptionsForAuthenticatedUserOKApplicationJSON) appsListSubscriptionsForAuthenticatedUserRes() {
}

// AppsListSubscriptionsForAuthenticatedUserStubbedNotModified is response for AppsListSubscriptionsForAuthenticatedUserStubbed operation.
type AppsListSubscriptionsForAuthenticatedUserStubbedNotModified struct{}

func (*AppsListSubscriptionsForAuthenticatedUserStubbedNotModified) appsListSubscriptionsForAuthenticatedUserStubbedRes() {
}

type AppsListSubscriptionsForAuthenticatedUserStubbedOKApplicationJSON []UserMarketplacePurchase

func (*AppsListSubscriptionsForAuthenticatedUserStubbedOKApplicationJSON) appsListSubscriptionsForAuthenticatedUserStubbedRes() {
}

type AppsRedeliverWebhookDeliveryAccepted struct{}

type AppsRemoveRepoFromInstallationApplicationJSONForbidden BasicError

func (*AppsRemoveRepoFromInstallationApplicationJSONForbidden) appsRemoveRepoFromInstallationRes() {}

type AppsRemoveRepoFromInstallationApplicationJSONNotFound BasicError

func (*AppsRemoveRepoFromInstallationApplicationJSONNotFound) appsRemoveRepoFromInstallationRes() {}

// AppsRemoveRepoFromInstallationNoContent is response for AppsRemoveRepoFromInstallation operation.
type AppsRemoveRepoFromInstallationNoContent struct{}

func (*AppsRemoveRepoFromInstallationNoContent) appsRemoveRepoFromInstallationRes() {}

// AppsRemoveRepoFromInstallationNotModified is response for AppsRemoveRepoFromInstallation operation.
type AppsRemoveRepoFromInstallationNotModified struct{}

func (*AppsRemoveRepoFromInstallationNotModified) appsRemoveRepoFromInstallationRes() {}

type AppsResetTokenReq struct {
	AccessToken string `json:"access_token"`
}

// AppsRevokeInstallationAccessTokenNoContent is response for AppsRevokeInstallationAccessToken operation.
type AppsRevokeInstallationAccessTokenNoContent struct{}

type AppsScopeTokenReq struct {
	AccessToken   string            `json:"access_token"`
	Permissions   OptAppPermissions `json:"permissions"`
	Repositories  []string          `json:"repositories"`
	RepositoryIds []int             `json:"repository_ids"`
	Target        OptString         `json:"target"`
	TargetID      OptInt            `json:"target_id"`
}

// AppsSuspendInstallationNoContent is response for AppsSuspendInstallation operation.
type AppsSuspendInstallationNoContent struct{}

func (*AppsSuspendInstallationNoContent) appsSuspendInstallationRes() {}

// AppsUnsuspendInstallationNoContent is response for AppsUnsuspendInstallation operation.
type AppsUnsuspendInstallationNoContent struct{}

func (*AppsUnsuspendInstallationNoContent) appsUnsuspendInstallationRes() {}

type AppsUpdateWebhookConfigForAppReq struct {
	ContentType OptWebhookConfigContentType `json:"content_type"`
	InsecureSsl *WebhookConfigInsecureSsl   `json:"insecure_ssl"`
	Secret      OptWebhookConfigSecret      `json:"secret"`
	URL         OptWebhookConfigURL         `json:"url"`
}

// Ref: #/components/schemas/artifact
type Artifact struct {
	ArchiveDownloadURL string  `json:"archive_download_url"`
	CreatedAt          NilTime `json:"created_at"`
	Expired            bool    `json:"expired"`
	ExpiresAt          NilTime `json:"expires_at"`
	ID                 int     `json:"id"`
	Name               string  `json:"name"`
	NodeID             string  `json:"node_id"`
	SizeInBytes        int     `json:"size_in_bytes"`
	UpdatedAt          NilTime `json:"updated_at"`
	URL                string  `json:"url"`
}

// Ref: #/components/schemas/audit-log-event
type AuditLogEvent struct {
	Timestamp             OptInt                        `json:"@timestamp"`
	DocumentID            OptString                     `json:"_document_id"`
	Action                OptString                     `json:"action"`
	Active                OptBool                       `json:"active"`
	ActiveWas             OptBool                       `json:"active_was"`
	Actor                 OptString                     `json:"actor"`
	ActorID               OptInt                        `json:"actor_id"`
	ActorLocation         OptAuditLogEventActorLocation `json:"actor_location"`
	BlockedUser           OptString                     `json:"blocked_user"`
	Business              OptString                     `json:"business"`
	Config                []string                      `json:"config"`
	ConfigWas             []string                      `json:"config_was"`
	ContentType           OptString                     `json:"content_type"`
	CreatedAt             OptInt                        `json:"created_at"`
	Data                  *AuditLogEventData            `json:"data"`
	DeployKeyFingerprint  OptString                     `json:"deploy_key_fingerprint"`
	Emoji                 OptString                     `json:"emoji"`
	Events                []string                      `json:"events"`
	EventsWere            []string                      `json:"events_were"`
	Explanation           OptString                     `json:"explanation"`
	Fingerprint           OptString                     `json:"fingerprint"`
	HookID                OptInt                        `json:"hook_id"`
	LimitedAvailability   OptBool                       `json:"limited_availability"`
	Message               OptString                     `json:"message"`
	Name                  OptString                     `json:"name"`
	OldUser               OptString                     `json:"old_user"`
	OpensshPublicKey      OptString                     `json:"openssh_public_key"`
	Org                   OptString                     `json:"org"`
	OrgID                 OptInt                        `json:"org_id"`
	PreviousVisibility    OptString                     `json:"previous_visibility"`
	ReadOnly              OptBool                       `json:"read_only"`
	Repo                  OptString                     `json:"repo"`
	Repository            OptString                     `json:"repository"`
	RepositoryPublic      OptBool                       `json:"repository_public"`
	TargetLogin           OptString                     `json:"target_login"`
	Team                  OptString                     `json:"team"`
	TransportProtocol     OptInt                        `json:"transport_protocol"`
	TransportProtocolName OptString                     `json:"transport_protocol_name"`
	User                  OptString                     `json:"user"`
	Visibility            OptString                     `json:"visibility"`
}

type AuditLogEventActorLocation struct {
	CountryName OptString `json:"country_name"`
}

type AuditLogEventData struct{}

// Ref: #/components/schemas/authentication-token
type AuthenticationToken struct {
	ExpiresAt           time.Time                                 `json:"expires_at"`
	Permissions         *AuthenticationTokenPermissions           `json:"permissions"`
	Repositories        []Repository                              `json:"repositories"`
	RepositorySelection OptAuthenticationTokenRepositorySelection `json:"repository_selection"`
	SingleFile          OptNilString                              `json:"single_file"`
	Token               string                                    `json:"token"`
}

type AuthenticationTokenPermissions struct{}

type AuthenticationTokenRepositorySelection string

const (
	AuthenticationTokenRepositorySelectionAll      AuthenticationTokenRepositorySelection = "all"
	AuthenticationTokenRepositorySelectionSelected AuthenticationTokenRepositorySelection = "selected"
)

// Ref: #/components/schemas/author_association
type AuthorAssociation string

const (
	AuthorAssociationCOLLABORATOR         AuthorAssociation = "COLLABORATOR"
	AuthorAssociationCONTRIBUTOR          AuthorAssociation = "CONTRIBUTOR"
	AuthorAssociationFIRSTTIMER           AuthorAssociation = "FIRST_TIMER"
	AuthorAssociationFIRSTTIMECONTRIBUTOR AuthorAssociation = "FIRST_TIME_CONTRIBUTOR"
	AuthorAssociationMANNEQUIN            AuthorAssociation = "MANNEQUIN"
	AuthorAssociationMEMBER               AuthorAssociation = "MEMBER"
	AuthorAssociationNONE                 AuthorAssociation = "NONE"
	AuthorAssociationOWNER                AuthorAssociation = "OWNER"
)

// Ref: #/components/schemas/authorization
type Authorization struct {
	App            AuthorizationApp                 `json:"app"`
	CreatedAt      time.Time                        `json:"created_at"`
	ExpiresAt      NilTime                          `json:"expires_at"`
	Fingerprint    NilString                        `json:"fingerprint"`
	HashedToken    NilString                        `json:"hashed_token"`
	ID             int                              `json:"id"`
	Installation   OptNilNullableScopedInstallation `json:"installation"`
	Note           NilString                        `json:"note"`
	NoteURL        NilURL                           `json:"note_url"`
	Scopes         []string                         `json:"scopes"`
	Token          string                           `json:"token"`
	TokenLastEight NilString                        `json:"token_last_eight"`
	UpdatedAt      time.Time                        `json:"updated_at"`
	URL            url.URL                          `json:"url"`
	User           OptNilNullableSimpleUser         `json:"user"`
}

func (*Authorization) oAuthAuthorizationsGetAuthorizationRes() {}

type AuthorizationApp struct {
	ClientID string  `json:"client_id"`
	Name     string  `json:"name"`
	URL      url.URL `json:"url"`
}

// Ref: #/components/schemas/auto_merge
type AutoMerge struct {
	CommitMessage string               `json:"commit_message"`
	CommitTitle   string               `json:"commit_title"`
	EnabledBy     SimpleUser           `json:"enabled_by"`
	MergeMethod   AutoMergeMergeMethod `json:"merge_method"`
}

type AutoMergeMergeMethod string

const (
	AutoMergeMergeMethodMerge  AutoMergeMergeMethod = "merge"
	AutoMergeMergeMethodSquash AutoMergeMergeMethod = "squash"
	AutoMergeMergeMethodRebase AutoMergeMergeMethod = "rebase"
)

// Ref: #/components/schemas/autolink
type Autolink struct {
	ID          int    `json:"id"`
	KeyPrefix   string `json:"key_prefix"`
	URLTemplate string `json:"url_template"`
}

func (*Autolink) reposGetAutolinkRes() {}

// Ref: #/components/schemas/base-gist
type BaseGist struct {
	Comments    int                   `json:"comments"`
	CommentsURL url.URL               `json:"comments_url"`
	CommitsURL  url.URL               `json:"commits_url"`
	CreatedAt   time.Time             `json:"created_at"`
	Description NilString             `json:"description"`
	Files       BaseGistFiles         `json:"files"`
	Forks       []string              `json:"forks"`
	ForksURL    url.URL               `json:"forks_url"`
	GitPullURL  url.URL               `json:"git_pull_url"`
	GitPushURL  url.URL               `json:"git_push_url"`
	History     []string              `json:"history"`
	HTMLURL     url.URL               `json:"html_url"`
	ID          string                `json:"id"`
	NodeID      string                `json:"node_id"`
	Owner       OptSimpleUser         `json:"owner"`
	Public      bool                  `json:"public"`
	Truncated   OptBool               `json:"truncated"`
	UpdatedAt   time.Time             `json:"updated_at"`
	URL         url.URL               `json:"url"`
	User        NilNullableSimpleUser `json:"user"`
}

type BaseGistFiles struct{}

// Ref: #/components/schemas/basic-error
type BasicError struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
	Status           OptString `json:"status"`
	URL              OptString `json:"url"`
}

func (*BasicError) activityGetRepoSubscriptionRes()                      {}
func (*BasicError) activityListPublicEventsRes()                         {}
func (*BasicError) activityMarkThreadAsReadRes()                         {}
func (*BasicError) appsDeleteInstallationRes()                           {}
func (*BasicError) appsGetSubscriptionPlanForAccountStubbedRes()         {}
func (*BasicError) appsListAccountsForPlanStubbedRes()                   {}
func (*BasicError) appsListPlansStubbedRes()                             {}
func (*BasicError) appsListSubscriptionsForAuthenticatedUserStubbedRes() {}
func (*BasicError) appsSuspendInstallationRes()                          {}
func (*BasicError) appsUnsuspendInstallationRes()                        {}
func (*BasicError) codeScanningGetSarifRes()                             {}
func (*BasicError) codesOfConductGetConductCodeRes()                     {}
func (*BasicError) gistsCheckIsStarredRes()                              {}
func (*BasicError) gistsGetCommentRes()                                  {}
func (*BasicError) gistsGetRes()                                         {}
func (*BasicError) gistsListRes()                                        {}
func (*BasicError) gistsUpdateCommentRes()                               {}
func (*BasicError) gitGetCommitRes()                                     {}
func (*BasicError) gitGetRefRes()                                        {}
func (*BasicError) gitGetTagRes()                                        {}
func (*BasicError) issuesCheckUserCanBeAssignedRes()                     {}
func (*BasicError) issuesDeleteMilestoneRes()                            {}
func (*BasicError) issuesGetCommentRes()                                 {}
func (*BasicError) issuesGetLabelRes()                                   {}
func (*BasicError) issuesGetMilestoneRes()                               {}
func (*BasicError) issuesListAssigneesRes()                              {}
func (*BasicError) issuesListLabelsForRepoRes()                          {}
func (*BasicError) issuesListLabelsOnIssueRes()                          {}
func (*BasicError) issuesListMilestonesRes()                             {}
func (*BasicError) issuesRemoveAllLabelsRes()                            {}
func (*BasicError) migrationsDeleteArchiveForOrgRes()                    {}
func (*BasicError) migrationsDownloadArchiveForOrgRes()                  {}
func (*BasicError) migrationsGetCommitAuthorsRes()                       {}
func (*BasicError) migrationsGetImportStatusRes()                        {}
func (*BasicError) migrationsGetStatusForOrgRes()                        {}
func (*BasicError) migrationsListReposForOrgRes()                        {}
func (*BasicError) migrationsListReposForUserRes()                       {}
func (*BasicError) migrationsUnlockRepoForOrgRes()                       {}
func (*BasicError) orgsCheckBlockedUserRes()                             {}
func (*BasicError) orgsConvertMemberToOutsideCollaboratorRes()           {}
func (*BasicError) orgsDeleteWebhookRes()                                {}
func (*BasicError) orgsGetRes()                                          {}
func (*BasicError) orgsGetWebhookRes()                                   {}
func (*BasicError) orgsListFailedInvitationsRes()                        {}
func (*BasicError) orgsListInvitationTeamsRes()                          {}
func (*BasicError) orgsListPendingInvitationsRes()                       {}
func (*BasicError) orgsListWebhooksRes()                                 {}
func (*BasicError) orgsPingWebhookRes()                                  {}
func (*BasicError) orgsRemoveMemberRes()                                 {}
func (*BasicError) orgsRemoveSamlSSOAuthorizationRes()                   {}
func (*BasicError) orgsSetPublicMembershipForAuthenticatedUserRes()      {}
func (*BasicError) pullsCreateReplyForReviewCommentRes()                 {}
func (*BasicError) pullsCreateReviewRes()                                {}
func (*BasicError) pullsDeletePendingReviewRes()                         {}
func (*BasicError) pullsDeleteReviewCommentRes()                         {}
func (*BasicError) pullsDismissReviewRes()                               {}
func (*BasicError) pullsGetReviewCommentRes()                            {}
func (*BasicError) pullsGetReviewRes()                                   {}
func (*BasicError) pullsListCommentsForReviewRes()                       {}
func (*BasicError) rateLimitGetRes()                                     {}
func (*BasicError) reactionsListForCommitCommentRes()                    {}
func (*BasicError) reactionsListForIssueCommentRes()                     {}
func (*BasicError) reactionsListForPullRequestReviewCommentRes()         {}
func (*BasicError) reposCreateCommitSignatureProtectionRes()             {}
func (*BasicError) reposDeleteAdminBranchProtectionRes()                 {}
func (*BasicError) reposDeleteAutolinkRes()                              {}
func (*BasicError) reposDeleteBranchProtectionRes()                      {}
func (*BasicError) reposDeleteCommitCommentRes()                         {}
func (*BasicError) reposDeleteCommitSignatureProtectionRes()             {}
func (*BasicError) reposDeleteDeploymentRes()                            {}
func (*BasicError) reposDeletePullRequestReviewProtectionRes()           {}
func (*BasicError) reposDeleteWebhookRes()                               {}
func (*BasicError) reposGetAccessRestrictionsRes()                       {}
func (*BasicError) reposGetAllStatusCheckContextsRes()                   {}
func (*BasicError) reposGetAllTopicsRes()                                {}
func (*BasicError) reposGetAppsWithAccessToProtectedBranchRes()          {}
func (*BasicError) reposGetAutolinkRes()                                 {}
func (*BasicError) reposGetBranchProtectionRes()                         {}
func (*BasicError) reposGetClonesRes()                                   {}
func (*BasicError) reposGetCollaboratorPermissionLevelRes()              {}
func (*BasicError) reposGetCombinedStatusForRefRes()                     {}
func (*BasicError) reposGetCommitCommentRes()                            {}
func (*BasicError) reposGetCommitSignatureProtectionRes()                {}
func (*BasicError) reposGetDeployKeyRes()                                {}
func (*BasicError) reposGetDeploymentStatusRes()                         {}
func (*BasicError) reposGetPagesHealthCheckRes()                         {}
func (*BasicError) reposGetPagesRes()                                    {}
func (*BasicError) reposGetParticipationStatsRes()                       {}
func (*BasicError) reposGetReleaseAssetRes()                             {}
func (*BasicError) reposGetReleaseByTagRes()                             {}
func (*BasicError) reposGetReleaseRes()                                  {}
func (*BasicError) reposGetStatusChecksProtectionRes()                   {}
func (*BasicError) reposGetTeamsWithAccessToProtectedBranchRes()         {}
func (*BasicError) reposGetTopPathsRes()                                 {}
func (*BasicError) reposGetTopReferrersRes()                             {}
func (*BasicError) reposGetUsersWithAccessToProtectedBranchRes()         {}
func (*BasicError) reposGetViewsRes()                                    {}
func (*BasicError) reposGetWebhookRes()                                  {}
func (*BasicError) reposListBranchesRes()                                {}
func (*BasicError) reposListCollaboratorsRes()                           {}
func (*BasicError) reposListCommitStatusesForRefRes()                    {}
func (*BasicError) reposListDeploymentStatusesRes()                      {}
func (*BasicError) reposListForksRes()                                   {}
func (*BasicError) reposListReleasesRes()                                {}
func (*BasicError) reposListWebhooksRes()                                {}
func (*BasicError) reposPingWebhookRes()                                 {}
func (*BasicError) reposReplaceAllTopicsRes()                            {}
func (*BasicError) reposTestPushWebhookRes()                             {}
func (*BasicError) reposUpdateCommitCommentRes()                         {}
func (*BasicError) reposUpdateReleaseRes()                               {}
func (*BasicError) secretScanningListAlertsForOrgRes()                   {}
func (*BasicError) teamsAddMemberLegacyRes()                             {}
func (*BasicError) teamsAddOrUpdateMembershipForUserLegacyRes()          {}
func (*BasicError) teamsGetByNameRes()                                   {}
func (*BasicError) teamsGetLegacyRes()                                   {}
func (*BasicError) teamsGetMembershipForUserLegacyRes()                  {}
func (*BasicError) teamsListMembersLegacyRes()                           {}
func (*BasicError) teamsListProjectsLegacyRes()                          {}
func (*BasicError) teamsListReposLegacyRes()                             {}
func (*BasicError) teamsListRes()                                        {}

// Ref: #/components/schemas/blob
type Blob struct {
	Content            string    `json:"content"`
	Encoding           string    `json:"encoding"`
	HighlightedContent OptString `json:"highlighted_content"`
	NodeID             string    `json:"node_id"`
	Sha                string    `json:"sha"`
	Size               NilInt    `json:"size"`
	URL                url.URL   `json:"url"`
}

// Ref: #/components/schemas/branch-protection
type BranchProtection struct {
	AllowDeletions                 OptBranchProtectionAllowDeletions                 `json:"allow_deletions"`
	AllowForcePushes               OptBranchProtectionAllowForcePushes               `json:"allow_force_pushes"`
	Enabled                        OptBool                                           `json:"enabled"`
	EnforceAdmins                  OptProtectedBranchAdminEnforced                   `json:"enforce_admins"`
	Name                           OptString                                         `json:"name"`
	ProtectionURL                  OptString                                         `json:"protection_url"`
	RequiredConversationResolution OptBranchProtectionRequiredConversationResolution `json:"required_conversation_resolution"`
	RequiredLinearHistory          OptBranchProtectionRequiredLinearHistory          `json:"required_linear_history"`
	RequiredPullRequestReviews     OptProtectedBranchPullRequestReview               `json:"required_pull_request_reviews"`
	RequiredSignatures             OptBranchProtectionRequiredSignatures             `json:"required_signatures"`
	RequiredStatusChecks           OptBranchProtectionRequiredStatusChecks           `json:"required_status_checks"`
	Restrictions                   OptBranchRestrictionPolicy                        `json:"restrictions"`
	URL                            OptString                                         `json:"url"`
}

func (*BranchProtection) reposGetBranchProtectionRes() {}

type BranchProtectionAllowDeletions struct {
	Enabled OptBool `json:"enabled"`
}

type BranchProtectionAllowForcePushes struct {
	Enabled OptBool `json:"enabled"`
}

type BranchProtectionRequiredConversationResolution struct {
	Enabled OptBool `json:"enabled"`
}

type BranchProtectionRequiredLinearHistory struct {
	Enabled OptBool `json:"enabled"`
}

type BranchProtectionRequiredSignatures struct {
	Enabled bool    `json:"enabled"`
	URL     url.URL `json:"url"`
}

type BranchProtectionRequiredStatusChecks struct {
	Contexts         []string  `json:"contexts"`
	ContextsURL      OptString `json:"contexts_url"`
	EnforcementLevel OptString `json:"enforcement_level"`
	Strict           OptBool   `json:"strict"`
	URL              OptString `json:"url"`
}

// Ref: #/components/schemas/branch-restriction-policy
type BranchRestrictionPolicy struct {
	Apps     []BranchRestrictionPolicyAppsItem  `json:"apps"`
	AppsURL  url.URL                            `json:"apps_url"`
	Teams    []BranchRestrictionPolicyTeamsItem `json:"teams"`
	TeamsURL url.URL                            `json:"teams_url"`
	URL      url.URL                            `json:"url"`
	Users    []BranchRestrictionPolicyUsersItem `json:"users"`
	UsersURL url.URL                            `json:"users_url"`
}

func (*BranchRestrictionPolicy) reposGetAccessRestrictionsRes() {}

type BranchRestrictionPolicyAppsItem struct {
	CreatedAt   OptString                                     `json:"created_at"`
	Description OptString                                     `json:"description"`
	Events      []string                                      `json:"events"`
	ExternalURL OptString                                     `json:"external_url"`
	HTMLURL     OptString                                     `json:"html_url"`
	ID          OptInt                                        `json:"id"`
	Name        OptString                                     `json:"name"`
	NodeID      OptString                                     `json:"node_id"`
	Owner       OptBranchRestrictionPolicyAppsItemOwner       `json:"owner"`
	Permissions OptBranchRestrictionPolicyAppsItemPermissions `json:"permissions"`
	Slug        OptString                                     `json:"slug"`
	UpdatedAt   OptString                                     `json:"updated_at"`
}

type BranchRestrictionPolicyAppsItemOwner struct {
	AvatarURL         OptString `json:"avatar_url"`
	Description       OptString `json:"description"`
	EventsURL         OptString `json:"events_url"`
	FollowersURL      OptString `json:"followers_url"`
	FollowingURL      OptString `json:"following_url"`
	GistsURL          OptString `json:"gists_url"`
	GravatarID        OptString `json:"gravatar_id"`
	HooksURL          OptString `json:"hooks_url"`
	HTMLURL           OptString `json:"html_url"`
	ID                OptInt    `json:"id"`
	IssuesURL         OptString `json:"issues_url"`
	Login             OptString `json:"login"`
	MembersURL        OptString `json:"members_url"`
	NodeID            OptString `json:"node_id"`
	OrganizationsURL  OptString `json:"organizations_url"`
	PublicMembersURL  OptString `json:"public_members_url"`
	ReceivedEventsURL OptString `json:"received_events_url"`
	ReposURL          OptString `json:"repos_url"`
	SiteAdmin         OptBool   `json:"site_admin"`
	StarredURL        OptString `json:"starred_url"`
	SubscriptionsURL  OptString `json:"subscriptions_url"`
	Type              OptString `json:"type"`
	URL               OptString `json:"url"`
}

type BranchRestrictionPolicyAppsItemPermissions struct {
	Contents   OptString `json:"contents"`
	Issues     OptString `json:"issues"`
	Metadata   OptString `json:"metadata"`
	SingleFile OptString `json:"single_file"`
}

type BranchRestrictionPolicyTeamsItem struct {
	Description     OptNilString `json:"description"`
	HTMLURL         OptString    `json:"html_url"`
	ID              OptInt       `json:"id"`
	MembersURL      OptString    `json:"members_url"`
	Name            OptString    `json:"name"`
	NodeID          OptString    `json:"node_id"`
	Parent          OptNilString `json:"parent"`
	Permission      OptString    `json:"permission"`
	Privacy         OptString    `json:"privacy"`
	RepositoriesURL OptString    `json:"repositories_url"`
	Slug            OptString    `json:"slug"`
	URL             OptString    `json:"url"`
}

type BranchRestrictionPolicyUsersItem struct {
	AvatarURL         OptString `json:"avatar_url"`
	EventsURL         OptString `json:"events_url"`
	FollowersURL      OptString `json:"followers_url"`
	FollowingURL      OptString `json:"following_url"`
	GistsURL          OptString `json:"gists_url"`
	GravatarID        OptString `json:"gravatar_id"`
	HTMLURL           OptString `json:"html_url"`
	ID                OptInt    `json:"id"`
	Login             OptString `json:"login"`
	NodeID            OptString `json:"node_id"`
	OrganizationsURL  OptString `json:"organizations_url"`
	ReceivedEventsURL OptString `json:"received_events_url"`
	ReposURL          OptString `json:"repos_url"`
	SiteAdmin         OptBool   `json:"site_admin"`
	StarredURL        OptString `json:"starred_url"`
	SubscriptionsURL  OptString `json:"subscriptions_url"`
	Type              OptString `json:"type"`
	URL               OptString `json:"url"`
}

// Ref: #/components/schemas/branch-short
type BranchShort struct {
	Commit    BranchShortCommit `json:"commit"`
	Name      string            `json:"name"`
	Protected bool              `json:"protected"`
}

type BranchShortCommit struct {
	Sha string `json:"sha"`
	URL string `json:"url"`
}

// Ref: #/components/schemas/branch-with-protection
type BranchWithProtection struct {
	Links                        BranchWithProtectionLinks `json:"_links"`
	Commit                       Commit                    `json:"commit"`
	Name                         string                    `json:"name"`
	Pattern                      OptString                 `json:"pattern"`
	Protected                    bool                      `json:"protected"`
	Protection                   BranchProtection          `json:"protection"`
	ProtectionURL                url.URL                   `json:"protection_url"`
	RequiredApprovingReviewCount OptInt                    `json:"required_approving_review_count"`
}

func (*BranchWithProtection) reposGetBranchRes() {}

type BranchWithProtectionLinks struct {
	HTML string  `json:"html"`
	Self url.URL `json:"self"`
}

// Ref: #/components/schemas/check-annotation
type CheckAnnotation struct {
	AnnotationLevel NilString `json:"annotation_level"`
	BlobHref        string    `json:"blob_href"`
	EndColumn       NilInt    `json:"end_column"`
	EndLine         int       `json:"end_line"`
	Message         NilString `json:"message"`
	Path            string    `json:"path"`
	RawDetails      NilString `json:"raw_details"`
	StartColumn     NilInt    `json:"start_column"`
	StartLine       int       `json:"start_line"`
	Title           NilString `json:"title"`
}

// Ref: #/components/schemas/check-run
type CheckRun struct {
	App          NilNullableIntegration `json:"app"`
	CheckSuite   NilCheckRunCheckSuite  `json:"check_suite"`
	CompletedAt  NilTime                `json:"completed_at"`
	Conclusion   NilCheckRunConclusion  `json:"conclusion"`
	Deployment   OptDeploymentSimple    `json:"deployment"`
	DetailsURL   NilString              `json:"details_url"`
	ExternalID   NilString              `json:"external_id"`
	HeadSha      string                 `json:"head_sha"`
	HTMLURL      NilString              `json:"html_url"`
	ID           int                    `json:"id"`
	Name         string                 `json:"name"`
	NodeID       string                 `json:"node_id"`
	Output       CheckRunOutput         `json:"output"`
	PullRequests string                 `json:"pull_requests"`
	StartedAt    NilTime                `json:"started_at"`
	Status       CheckRunStatus         `json:"status"`
	URL          string                 `json:"url"`
}

type CheckRunCheckSuite struct {
	ID int `json:"id"`
}

type CheckRunConclusion string

const (
	CheckRunConclusionSuccess        CheckRunConclusion = "success"
	CheckRunConclusionFailure        CheckRunConclusion = "failure"
	CheckRunConclusionNeutral        CheckRunConclusion = "neutral"
	CheckRunConclusionCancelled      CheckRunConclusion = "cancelled"
	CheckRunConclusionSkipped        CheckRunConclusion = "skipped"
	CheckRunConclusionTimedOut       CheckRunConclusion = "timed_out"
	CheckRunConclusionActionRequired CheckRunConclusion = "action_required"
)

type CheckRunOutput struct {
	AnnotationsCount int       `json:"annotations_count"`
	AnnotationsURL   url.URL   `json:"annotations_url"`
	Summary          NilString `json:"summary"`
	Text             NilString `json:"text"`
	Title            NilString `json:"title"`
}

type CheckRunStatus string

const (
	CheckRunStatusQueued     CheckRunStatus = "queued"
	CheckRunStatusInProgress CheckRunStatus = "in_progress"
	CheckRunStatusCompleted  CheckRunStatus = "completed"
)

// Ref: #/components/schemas/check-suite
type CheckSuite struct {
	After                NilString               `json:"after"`
	App                  NilNullableIntegration  `json:"app"`
	Before               NilString               `json:"before"`
	CheckRunsURL         string                  `json:"check_runs_url"`
	Conclusion           NilCheckSuiteConclusion `json:"conclusion"`
	CreatedAt            NilTime                 `json:"created_at"`
	HeadBranch           NilString               `json:"head_branch"`
	HeadCommit           SimpleCommit            `json:"head_commit"`
	HeadSha              string                  `json:"head_sha"`
	ID                   int                     `json:"id"`
	LatestCheckRunsCount int                     `json:"latest_check_runs_count"`
	NodeID               string                  `json:"node_id"`
	PullRequests         []PullRequestMinimal    `json:"pull_requests"`
	Repository           MinimalRepository       `json:"repository"`
	Status               NilCheckSuiteStatus     `json:"status"`
	UpdatedAt            NilTime                 `json:"updated_at"`
	URL                  NilString               `json:"url"`
}

type CheckSuiteConclusion string

const (
	CheckSuiteConclusionSuccess        CheckSuiteConclusion = "success"
	CheckSuiteConclusionFailure        CheckSuiteConclusion = "failure"
	CheckSuiteConclusionNeutral        CheckSuiteConclusion = "neutral"
	CheckSuiteConclusionCancelled      CheckSuiteConclusion = "cancelled"
	CheckSuiteConclusionSkipped        CheckSuiteConclusion = "skipped"
	CheckSuiteConclusionTimedOut       CheckSuiteConclusion = "timed_out"
	CheckSuiteConclusionActionRequired CheckSuiteConclusion = "action_required"
)

// Ref: #/components/schemas/check-suite-preference
type CheckSuitePreference struct {
	Preferences CheckSuitePreferencePreferences `json:"preferences"`
	Repository  MinimalRepository               `json:"repository"`
}

type CheckSuitePreferencePreferences struct {
	AutoTriggerChecks []CheckSuitePreferencePreferencesAutoTriggerChecksItem `json:"auto_trigger_checks"`
}

type CheckSuitePreferencePreferencesAutoTriggerChecksItem struct {
	AppID   int  `json:"app_id"`
	Setting bool `json:"setting"`
}

type CheckSuiteStatus string

const (
	CheckSuiteStatusQueued     CheckSuiteStatus = "queued"
	CheckSuiteStatusInProgress CheckSuiteStatus = "in_progress"
	CheckSuiteStatusCompleted  CheckSuiteStatus = "completed"
)

// ChecksCreateReq represents sum type.
type ChecksCreateReq struct {
	Type   ChecksCreateReqType // switch on this field
	String string
	String string
}

// ChecksCreateReqType is oneOf type of ChecksCreateReq.
type ChecksCreateReqType string

// Possible values for ChecksCreateReqType.
const (
	StringChecksCreateReq ChecksCreateReqType = "string"
	StringChecksCreateReq ChecksCreateReqType = "string"
)

// IsString reports whether ChecksCreateReq is string.
func (s ChecksCreateReq) IsString() bool { return s.Type == StringChecksCreateReq }

// IsString reports whether ChecksCreateReq is string.
func (s ChecksCreateReq) IsString() bool { return s.Type == StringChecksCreateReq }

// SetString sets ChecksCreateReq to string.
func (s *ChecksCreateReq) SetString(v string) {
	s.Type = StringChecksCreateReq
	s.String = v
}

// GetString returns string and true boolean if ChecksCreateReq is string.
func (s ChecksCreateReq) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringChecksCreateReq returns new ChecksCreateReq from string.
func NewStringChecksCreateReq(v string) ChecksCreateReq {
	var s ChecksCreateReq
	s.SetString(v)
	return s
}

// SetString sets ChecksCreateReq to string.
func (s *ChecksCreateReq) SetString(v string) {
	s.Type = StringChecksCreateReq
	s.String = v
}

// GetString returns string and true boolean if ChecksCreateReq is string.
func (s ChecksCreateReq) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringChecksCreateReq returns new ChecksCreateReq from string.
func NewStringChecksCreateReq(v string) ChecksCreateReq {
	var s ChecksCreateReq
	s.SetString(v)
	return s
}

type ChecksCreateSuiteApplicationJSONCreated CheckSuite

func (*ChecksCreateSuiteApplicationJSONCreated) checksCreateSuiteRes() {}

type ChecksCreateSuiteApplicationJSONOK CheckSuite

func (*ChecksCreateSuiteApplicationJSONOK) checksCreateSuiteRes() {}

type ChecksCreateSuiteReq struct {
	HeadSha string `json:"head_sha"`
}

type ChecksListForRefFilter string

const (
	ChecksListForRefFilterLatest ChecksListForRefFilter = "latest"
	ChecksListForRefFilterAll    ChecksListForRefFilter = "all"
)

type ChecksListForRefOK struct {
	CheckRuns  []CheckRun `json:"check_runs"`
	TotalCount int        `json:"total_count"`
}

type ChecksListForRefStatus string

const (
	ChecksListForRefStatusQueued     ChecksListForRefStatus = "queued"
	ChecksListForRefStatusInProgress ChecksListForRefStatus = "in_progress"
	ChecksListForRefStatusCompleted  ChecksListForRefStatus = "completed"
)

type ChecksListForSuiteFilter string

const (
	ChecksListForSuiteFilterLatest ChecksListForSuiteFilter = "latest"
	ChecksListForSuiteFilterAll    ChecksListForSuiteFilter = "all"
)

type ChecksListForSuiteOK struct {
	CheckRuns  []CheckRun `json:"check_runs"`
	TotalCount int        `json:"total_count"`
}

type ChecksListForSuiteStatus string

const (
	ChecksListForSuiteStatusQueued     ChecksListForSuiteStatus = "queued"
	ChecksListForSuiteStatusInProgress ChecksListForSuiteStatus = "in_progress"
	ChecksListForSuiteStatusCompleted  ChecksListForSuiteStatus = "completed"
)

type ChecksListSuitesForRefOK struct {
	CheckSuites []CheckSuite `json:"check_suites"`
	TotalCount  int          `json:"total_count"`
}

type ChecksRerequestSuiteCreated struct{}

type ChecksSetSuitesPreferencesReq struct {
	AutoTriggerChecks []ChecksSetSuitesPreferencesReqAutoTriggerChecksItem `json:"auto_trigger_checks"`
}

type ChecksSetSuitesPreferencesReqAutoTriggerChecksItem struct {
	AppID   int  `json:"app_id"`
	Setting bool `json:"setting"`
}

// Ref: #/components/schemas/clone-traffic
type CloneTraffic struct {
	Clones  []Traffic `json:"clones"`
	Count   int       `json:"count"`
	Uniques int       `json:"uniques"`
}

func (*CloneTraffic) reposGetClonesRes() {}

type CodeFrequencyStat []int

// Ref: #/components/schemas/code-of-conduct
type CodeOfConduct struct {
	Body    OptString `json:"body"`
	HTMLURL NilURL    `json:"html_url"`
	Key     string    `json:"key"`
	Name    string    `json:"name"`
	URL     url.URL   `json:"url"`
}

func (*CodeOfConduct) codesOfConductGetConductCodeRes() {}

// Ref: #/components/schemas/code-of-conduct-simple
type CodeOfConductSimple struct {
	HTMLURL NilURL  `json:"html_url"`
	Key     string  `json:"key"`
	Name    string  `json:"name"`
	URL     url.URL `json:"url"`
}

// Ref: #/components/schemas/code-scanning-alert
type CodeScanningAlert struct {
	CreatedAt          AlertCreatedAt                      `json:"created_at"`
	DismissedAt        NilCodeScanningAlertDismissedAt     `json:"dismissed_at"`
	DismissedBy        NilNullableSimpleUser               `json:"dismissed_by"`
	DismissedReason    NilCodeScanningAlertDismissedReason `json:"dismissed_reason"`
	HTMLURL            AlertHTMLURL                        `json:"html_url"`
	Instances          OptString                           `json:"instances"`
	InstancesURL       AlertInstancesURL                   `json:"instances_url"`
	MostRecentInstance CodeScanningAlertInstance           `json:"most_recent_instance"`
	Number             AlertNumber                         `json:"number"`
	Rule               CodeScanningAlertRule               `json:"rule"`
	State              CodeScanningAlertState              `json:"state"`
	Tool               CodeScanningAnalysisTool            `json:"tool"`
	URL                AlertURL                            `json:"url"`
}

func (*CodeScanningAlert) codeScanningGetAlertRes()    {}
func (*CodeScanningAlert) codeScanningUpdateAlertRes() {}

// Ref: #/components/schemas/code-scanning-alert-classification
type CodeScanningAlertClassification string

const (
	CodeScanningAlertClassificationSource    CodeScanningAlertClassification = "source"
	CodeScanningAlertClassificationGenerated CodeScanningAlertClassification = "generated"
	CodeScanningAlertClassificationTest      CodeScanningAlertClassification = "test"
	CodeScanningAlertClassificationLibrary   CodeScanningAlertClassification = "library"
)

type CodeScanningAlertDismissedAt time.Time

// Ref: #/components/schemas/code-scanning-alert-dismissed-reason
type CodeScanningAlertDismissedReason string

const (
	CodeScanningAlertDismissedReasonFalsePositive CodeScanningAlertDismissedReason = "false positive"
	CodeScanningAlertDismissedReasonWonTFix       CodeScanningAlertDismissedReason = "won't fix"
	CodeScanningAlertDismissedReasonUsedInTests   CodeScanningAlertDismissedReason = "used in tests"
)

type CodeScanningAlertEnvironment string

// Ref: #/components/schemas/code-scanning-alert-instance
type CodeScanningAlertInstance struct {
	AnalysisKey     OptCodeScanningAnalysisAnalysisKey  `json:"analysis_key"`
	Category        OptCodeScanningAnalysisCategory     `json:"category"`
	Classifications []CodeScanningAlertClassification   `json:"classifications"`
	CommitSha       OptString                           `json:"commit_sha"`
	Environment     OptCodeScanningAlertEnvironment     `json:"environment"`
	HTMLURL         OptString                           `json:"html_url"`
	Location        OptCodeScanningAlertLocation        `json:"location"`
	Message         OptCodeScanningAlertInstanceMessage `json:"message"`
	Ref             OptCodeScanningRef                  `json:"ref"`
	State           OptCodeScanningAlertState           `json:"state"`
}

type CodeScanningAlertInstanceMessage struct {
	Text OptString `json:"text"`
}

// Ref: #/components/schemas/code-scanning-alert-items
type CodeScanningAlertItems struct {
	CreatedAt          AlertCreatedAt                      `json:"created_at"`
	DismissedAt        NilCodeScanningAlertDismissedAt     `json:"dismissed_at"`
	DismissedBy        NilNullableSimpleUser               `json:"dismissed_by"`
	DismissedReason    NilCodeScanningAlertDismissedReason `json:"dismissed_reason"`
	HTMLURL            AlertHTMLURL                        `json:"html_url"`
	InstancesURL       AlertInstancesURL                   `json:"instances_url"`
	MostRecentInstance CodeScanningAlertInstance           `json:"most_recent_instance"`
	Number             AlertNumber                         `json:"number"`
	Rule               CodeScanningAlertRuleSummary        `json:"rule"`
	State              CodeScanningAlertState              `json:"state"`
	Tool               CodeScanningAnalysisTool            `json:"tool"`
	URL                AlertURL                            `json:"url"`
}

// Ref: #/components/schemas/code-scanning-alert-location
type CodeScanningAlertLocation struct {
	EndColumn   OptInt    `json:"end_column"`
	EndLine     OptInt    `json:"end_line"`
	Path        OptString `json:"path"`
	StartColumn OptInt    `json:"start_column"`
	StartLine   OptInt    `json:"start_line"`
}

// Ref: #/components/schemas/code-scanning-alert-rule
type CodeScanningAlertRule struct {
	Description           OptString                                        `json:"description"`
	FullDescription       OptString                                        `json:"full_description"`
	Help                  OptNilString                                     `json:"help"`
	ID                    OptNilString                                     `json:"id"`
	Name                  OptString                                        `json:"name"`
	SecuritySeverityLevel OptNilCodeScanningAlertRuleSecuritySeverityLevel `json:"security_severity_level"`
	Severity              OptNilCodeScanningAlertRuleSeverity              `json:"severity"`
	Tags                  OptNilStringArray                                `json:"tags"`
}

type CodeScanningAlertRuleSecuritySeverityLevel string

const (
	CodeScanningAlertRuleSecuritySeverityLevelLow      CodeScanningAlertRuleSecuritySeverityLevel = "low"
	CodeScanningAlertRuleSecuritySeverityLevelMedium   CodeScanningAlertRuleSecuritySeverityLevel = "medium"
	CodeScanningAlertRuleSecuritySeverityLevelHigh     CodeScanningAlertRuleSecuritySeverityLevel = "high"
	CodeScanningAlertRuleSecuritySeverityLevelCritical CodeScanningAlertRuleSecuritySeverityLevel = "critical"
)

type CodeScanningAlertRuleSeverity string

const (
	CodeScanningAlertRuleSeverityNone    CodeScanningAlertRuleSeverity = "none"
	CodeScanningAlertRuleSeverityNote    CodeScanningAlertRuleSeverity = "note"
	CodeScanningAlertRuleSeverityWarning CodeScanningAlertRuleSeverity = "warning"
	CodeScanningAlertRuleSeverityError   CodeScanningAlertRuleSeverity = "error"
)

// Ref: #/components/schemas/code-scanning-alert-rule-summary
type CodeScanningAlertRuleSummary struct {
	Description OptString                                  `json:"description"`
	ID          OptNilString                               `json:"id"`
	Name        OptString                                  `json:"name"`
	Severity    OptNilCodeScanningAlertRuleSummarySeverity `json:"severity"`
}

type CodeScanningAlertRuleSummarySeverity string

const (
	CodeScanningAlertRuleSummarySeverityNone    CodeScanningAlertRuleSummarySeverity = "none"
	CodeScanningAlertRuleSummarySeverityNote    CodeScanningAlertRuleSummarySeverity = "note"
	CodeScanningAlertRuleSummarySeverityWarning CodeScanningAlertRuleSummarySeverity = "warning"
	CodeScanningAlertRuleSummarySeverityError   CodeScanningAlertRuleSummarySeverity = "error"
)

// Ref: #/components/schemas/code-scanning-alert-set-state
type CodeScanningAlertSetState string

const (
	CodeScanningAlertSetStateOpen      CodeScanningAlertSetState = "open"
	CodeScanningAlertSetStateDismissed CodeScanningAlertSetState = "dismissed"
)

// Ref: #/components/schemas/code-scanning-alert-state
type CodeScanningAlertState string

const (
	CodeScanningAlertStateOpen      CodeScanningAlertState = "open"
	CodeScanningAlertStateClosed    CodeScanningAlertState = "closed"
	CodeScanningAlertStateDismissed CodeScanningAlertState = "dismissed"
	CodeScanningAlertStateFixed     CodeScanningAlertState = "fixed"
)

// Ref: #/components/schemas/code-scanning-analysis
type CodeScanningAnalysis struct {
	AnalysisKey  CodeScanningAnalysisAnalysisKey `json:"analysis_key"`
	Category     OptCodeScanningAnalysisCategory `json:"category"`
	CommitSha    CodeScanningAnalysisCommitSha   `json:"commit_sha"`
	CreatedAt    CodeScanningAnalysisCreatedAt   `json:"created_at"`
	Deletable    bool                            `json:"deletable"`
	Environment  CodeScanningAnalysisEnvironment `json:"environment"`
	Error        string                          `json:"error"`
	ID           int                             `json:"id"`
	Ref          CodeScanningRef                 `json:"ref"`
	ResultsCount int                             `json:"results_count"`
	RulesCount   int                             `json:"rules_count"`
	SarifID      CodeScanningAnalysisSarifID     `json:"sarif_id"`
	Tool         CodeScanningAnalysisTool        `json:"tool"`
	ToolName     OptString                       `json:"tool_name"`
	URL          CodeScanningAnalysisURL         `json:"url"`
	Warning      string                          `json:"warning"`
}

func (*CodeScanningAnalysis) codeScanningGetAnalysisRes() {}

type CodeScanningAnalysisAnalysisKey string

type CodeScanningAnalysisCategory string

type CodeScanningAnalysisCommitSha string

type CodeScanningAnalysisCreatedAt time.Time

// Ref: #/components/schemas/code-scanning-analysis-deletion
type CodeScanningAnalysisDeletion struct {
	ConfirmDeleteURL NilURL `json:"confirm_delete_url"`
	NextAnalysisURL  NilURL `json:"next_analysis_url"`
}

func (*CodeScanningAnalysisDeletion) codeScanningDeleteAnalysisRes() {}

type CodeScanningAnalysisEnvironment string

type CodeScanningAnalysisSarifFile string

type CodeScanningAnalysisSarifID string

// Ref: #/components/schemas/code-scanning-analysis-tool
type CodeScanningAnalysisTool struct {
	GUID    OptNilCodeScanningAnalysisToolGUID    `json:"guid"`
	Name    OptCodeScanningAnalysisToolName       `json:"name"`
	Version OptNilCodeScanningAnalysisToolVersion `json:"version"`
}

type CodeScanningAnalysisToolGUID string

type CodeScanningAnalysisToolName string

type CodeScanningAnalysisToolVersion string

type CodeScanningAnalysisURL url.URL

type CodeScanningDeleteAnalysisApplicationJSONBadRequest BasicError

func (*CodeScanningDeleteAnalysisApplicationJSONBadRequest) codeScanningDeleteAnalysisRes() {}

type CodeScanningDeleteAnalysisApplicationJSONForbidden BasicError

func (*CodeScanningDeleteAnalysisApplicationJSONForbidden) codeScanningDeleteAnalysisRes() {}

type CodeScanningDeleteAnalysisApplicationJSONNotFound BasicError

func (*CodeScanningDeleteAnalysisApplicationJSONNotFound) codeScanningDeleteAnalysisRes() {}

type CodeScanningDeleteAnalysisServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*CodeScanningDeleteAnalysisServiceUnavailable) codeScanningDeleteAnalysisRes() {}

type CodeScanningGetAlertApplicationJSONForbidden BasicError

func (*CodeScanningGetAlertApplicationJSONForbidden) codeScanningGetAlertRes() {}

type CodeScanningGetAlertApplicationJSONNotFound BasicError

func (*CodeScanningGetAlertApplicationJSONNotFound) codeScanningGetAlertRes() {}

type CodeScanningGetAlertServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*CodeScanningGetAlertServiceUnavailable) codeScanningGetAlertRes() {}

type CodeScanningGetAnalysisApplicationJSONForbidden BasicError

func (*CodeScanningGetAnalysisApplicationJSONForbidden) codeScanningGetAnalysisRes() {}

type CodeScanningGetAnalysisApplicationJSONNotFound BasicError

func (*CodeScanningGetAnalysisApplicationJSONNotFound) codeScanningGetAnalysisRes() {}

type CodeScanningGetAnalysisOKApplicationJSONSarif string

func (*CodeScanningGetAnalysisOKApplicationJSONSarif) codeScanningGetAnalysisRes() {}

type CodeScanningGetAnalysisServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*CodeScanningGetAnalysisServiceUnavailable) codeScanningGetAnalysisRes() {}

// CodeScanningGetSarifNotFound is response for CodeScanningGetSarif operation.
type CodeScanningGetSarifNotFound struct{}

func (*CodeScanningGetSarifNotFound) codeScanningGetSarifRes() {}

type CodeScanningGetSarifServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*CodeScanningGetSarifServiceUnavailable) codeScanningGetSarifRes() {}

type CodeScanningListAlertInstancesApplicationJSONForbidden BasicError

func (*CodeScanningListAlertInstancesApplicationJSONForbidden) codeScanningListAlertInstancesRes() {}

type CodeScanningListAlertInstancesApplicationJSONNotFound BasicError

func (*CodeScanningListAlertInstancesApplicationJSONNotFound) codeScanningListAlertInstancesRes() {}

type CodeScanningListAlertInstancesOKApplicationJSON []CodeScanningAlertInstance

func (*CodeScanningListAlertInstancesOKApplicationJSON) codeScanningListAlertInstancesRes() {}

type CodeScanningListAlertInstancesServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*CodeScanningListAlertInstancesServiceUnavailable) codeScanningListAlertInstancesRes() {}

type CodeScanningListAlertsForRepoApplicationJSONForbidden BasicError

func (*CodeScanningListAlertsForRepoApplicationJSONForbidden) codeScanningListAlertsForRepoRes() {}

type CodeScanningListAlertsForRepoApplicationJSONNotFound BasicError

func (*CodeScanningListAlertsForRepoApplicationJSONNotFound) codeScanningListAlertsForRepoRes() {}

type CodeScanningListAlertsForRepoOKApplicationJSON []CodeScanningAlertItems

func (*CodeScanningListAlertsForRepoOKApplicationJSON) codeScanningListAlertsForRepoRes() {}

type CodeScanningListAlertsForRepoServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*CodeScanningListAlertsForRepoServiceUnavailable) codeScanningListAlertsForRepoRes() {}

type CodeScanningListRecentAnalysesApplicationJSONForbidden BasicError

func (*CodeScanningListRecentAnalysesApplicationJSONForbidden) codeScanningListRecentAnalysesRes() {}

type CodeScanningListRecentAnalysesApplicationJSONNotFound BasicError

func (*CodeScanningListRecentAnalysesApplicationJSONNotFound) codeScanningListRecentAnalysesRes() {}

type CodeScanningListRecentAnalysesOKApplicationJSON []CodeScanningAnalysis

func (*CodeScanningListRecentAnalysesOKApplicationJSON) codeScanningListRecentAnalysesRes() {}

type CodeScanningListRecentAnalysesServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*CodeScanningListRecentAnalysesServiceUnavailable) codeScanningListRecentAnalysesRes() {}

type CodeScanningRef string

// Ref: #/components/schemas/code-scanning-sarifs-receipt
type CodeScanningSarifsReceipt struct {
	ID  OptCodeScanningAnalysisSarifID `json:"id"`
	URL OptURL                         `json:"url"`
}

func (*CodeScanningSarifsReceipt) codeScanningUploadSarifRes() {}

// Ref: #/components/schemas/code-scanning-sarifs-status
type CodeScanningSarifsStatus struct {
	AnalysesURL      OptNilURL                                   `json:"analyses_url"`
	ProcessingStatus OptCodeScanningSarifsStatusProcessingStatus `json:"processing_status"`
}

func (*CodeScanningSarifsStatus) codeScanningGetSarifRes() {}

type CodeScanningSarifsStatusProcessingStatus string

const (
	CodeScanningSarifsStatusProcessingStatusPending  CodeScanningSarifsStatusProcessingStatus = "pending"
	CodeScanningSarifsStatusProcessingStatusComplete CodeScanningSarifsStatusProcessingStatus = "complete"
)

type CodeScanningUpdateAlertApplicationJSONForbidden BasicError

func (*CodeScanningUpdateAlertApplicationJSONForbidden) codeScanningUpdateAlertRes() {}

type CodeScanningUpdateAlertApplicationJSONNotFound BasicError

func (*CodeScanningUpdateAlertApplicationJSONNotFound) codeScanningUpdateAlertRes() {}

type CodeScanningUpdateAlertReq struct {
	DismissedReason OptNilCodeScanningAlertDismissedReason `json:"dismissed_reason"`
	State           CodeScanningAlertSetState              `json:"state"`
}

type CodeScanningUpdateAlertServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*CodeScanningUpdateAlertServiceUnavailable) codeScanningUpdateAlertRes() {}

type CodeScanningUploadSarifApplicationJSONForbidden BasicError

func (*CodeScanningUploadSarifApplicationJSONForbidden) codeScanningUploadSarifRes() {}

type CodeScanningUploadSarifApplicationJSONNotFound BasicError

func (*CodeScanningUploadSarifApplicationJSONNotFound) codeScanningUploadSarifRes() {}

// CodeScanningUploadSarifBadRequest is response for CodeScanningUploadSarif operation.
type CodeScanningUploadSarifBadRequest struct{}

func (*CodeScanningUploadSarifBadRequest) codeScanningUploadSarifRes() {}

type CodeScanningUploadSarifReq struct {
	CheckoutURI OptURL                        `json:"checkout_uri"`
	CommitSha   CodeScanningAnalysisCommitSha `json:"commit_sha"`
	Ref         CodeScanningRef               `json:"ref"`
	Sarif       CodeScanningAnalysisSarifFile `json:"sarif"`
	StartedAt   OptTime                       `json:"started_at"`
	ToolName    OptString                     `json:"tool_name"`
}

// CodeScanningUploadSarifRequestEntityTooLarge is response for CodeScanningUploadSarif operation.
type CodeScanningUploadSarifRequestEntityTooLarge struct{}

func (*CodeScanningUploadSarifRequestEntityTooLarge) codeScanningUploadSarifRes() {}

type CodeScanningUploadSarifServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*CodeScanningUploadSarifServiceUnavailable) codeScanningUploadSarifRes() {}

// Ref: #/components/schemas/code-search-result-item
type CodeSearchResultItem struct {
	FileSize       OptInt                   `json:"file_size"`
	GitURL         url.URL                  `json:"git_url"`
	HTMLURL        url.URL                  `json:"html_url"`
	Language       OptNilString             `json:"language"`
	LastModifiedAt OptTime                  `json:"last_modified_at"`
	LineNumbers    []string                 `json:"line_numbers"`
	Name           string                   `json:"name"`
	Path           string                   `json:"path"`
	Repository     MinimalRepository        `json:"repository"`
	Score          float64                  `json:"score"`
	Sha            string                   `json:"sha"`
	TextMatches    *SearchResultTextMatches `json:"text_matches"`
	URL            url.URL                  `json:"url"`
}

// CodesOfConductGetAllCodesOfConductNotModified is response for CodesOfConductGetAllCodesOfConduct operation.
type CodesOfConductGetAllCodesOfConductNotModified struct{}

func (*CodesOfConductGetAllCodesOfConductNotModified) codesOfConductGetAllCodesOfConductRes() {}

type CodesOfConductGetAllCodesOfConductOKApplicationJSON []CodeOfConduct

func (*CodesOfConductGetAllCodesOfConductOKApplicationJSON) codesOfConductGetAllCodesOfConductRes() {}

// CodesOfConductGetConductCodeNotModified is response for CodesOfConductGetConductCode operation.
type CodesOfConductGetConductCodeNotModified struct{}

func (*CodesOfConductGetConductCodeNotModified) codesOfConductGetConductCodeRes() {}

// Ref: #/components/schemas/collaborator
type Collaborator struct {
	AvatarURL         url.URL                    `json:"avatar_url"`
	Email             OptNilString               `json:"email"`
	EventsURL         string                     `json:"events_url"`
	FollowersURL      url.URL                    `json:"followers_url"`
	FollowingURL      string                     `json:"following_url"`
	GistsURL          string                     `json:"gists_url"`
	GravatarID        NilString                  `json:"gravatar_id"`
	HTMLURL           url.URL                    `json:"html_url"`
	ID                int                        `json:"id"`
	Login             string                     `json:"login"`
	Name              OptNilString               `json:"name"`
	NodeID            string                     `json:"node_id"`
	OrganizationsURL  url.URL                    `json:"organizations_url"`
	Permissions       OptCollaboratorPermissions `json:"permissions"`
	ReceivedEventsURL url.URL                    `json:"received_events_url"`
	ReposURL          url.URL                    `json:"repos_url"`
	SiteAdmin         bool                       `json:"site_admin"`
	StarredURL        string                     `json:"starred_url"`
	SubscriptionsURL  url.URL                    `json:"subscriptions_url"`
	Type              string                     `json:"type"`
	URL               url.URL                    `json:"url"`
}

type CollaboratorPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

// Ref: #/components/schemas/combined-billing-usage
type CombinedBillingUsage struct {
	DaysLeftInBillingCycle       int `json:"days_left_in_billing_cycle"`
	EstimatedPaidStorageForMonth int `json:"estimated_paid_storage_for_month"`
	EstimatedStorageForMonth     int `json:"estimated_storage_for_month"`
}

// Ref: #/components/schemas/combined-commit-status
type CombinedCommitStatus struct {
	CommitURL  url.URL              `json:"commit_url"`
	Repository MinimalRepository    `json:"repository"`
	Sha        string               `json:"sha"`
	State      string               `json:"state"`
	Statuses   []SimpleCommitStatus `json:"statuses"`
	TotalCount int                  `json:"total_count"`
	URL        url.URL              `json:"url"`
}

func (*CombinedCommitStatus) reposGetCombinedStatusForRefRes() {}

// Ref: #/components/schemas/commit
type Commit struct {
	Author      NilNullableSimpleUser `json:"author"`
	CommentsURL url.URL               `json:"comments_url"`
	Commit      CommitCommit          `json:"commit"`
	Committer   NilNullableSimpleUser `json:"committer"`
	Files       []CommitFilesItem     `json:"files"`
	HTMLURL     url.URL               `json:"html_url"`
	NodeID      string                `json:"node_id"`
	Parents     []CommitParentsItem   `json:"parents"`
	Sha         string                `json:"sha"`
	Stats       OptCommitStats        `json:"stats"`
	URL         url.URL               `json:"url"`
}

// Ref: #/components/schemas/commit-activity
type CommitActivity struct {
	Days  []int `json:"days"`
	Total int   `json:"total"`
	Week  int   `json:"week"`
}

// Ref: #/components/schemas/commit-comment
type CommitComment struct {
	AuthorAssociation AuthorAssociation     `json:"author_association"`
	Body              string                `json:"body"`
	CommitID          string                `json:"commit_id"`
	CreatedAt         time.Time             `json:"created_at"`
	HTMLURL           url.URL               `json:"html_url"`
	ID                int                   `json:"id"`
	Line              NilInt                `json:"line"`
	NodeID            string                `json:"node_id"`
	Path              NilString             `json:"path"`
	Position          NilInt                `json:"position"`
	Reactions         OptReactionRollup     `json:"reactions"`
	UpdatedAt         time.Time             `json:"updated_at"`
	URL               url.URL               `json:"url"`
	User              NilNullableSimpleUser `json:"user"`
}

func (*CommitComment) reposGetCommitCommentRes()    {}
func (*CommitComment) reposUpdateCommitCommentRes() {}

type CommitCommit struct {
	Author       NilNullableGitUser `json:"author"`
	CommentCount int                `json:"comment_count"`
	Committer    NilNullableGitUser `json:"committer"`
	Message      string             `json:"message"`
	Tree         CommitCommitTree   `json:"tree"`
	URL          url.URL            `json:"url"`
	Verification OptVerification    `json:"verification"`
}

type CommitCommitTree struct {
	Sha string  `json:"sha"`
	URL url.URL `json:"url"`
}

// Ref: #/components/schemas/commit-comparison
type CommitComparison struct {
	AheadBy         int                    `json:"ahead_by"`
	BaseCommit      Commit                 `json:"base_commit"`
	BehindBy        int                    `json:"behind_by"`
	Commits         []Commit               `json:"commits"`
	DiffURL         url.URL                `json:"diff_url"`
	Files           []DiffEntry            `json:"files"`
	HTMLURL         url.URL                `json:"html_url"`
	MergeBaseCommit Commit                 `json:"merge_base_commit"`
	PatchURL        url.URL                `json:"patch_url"`
	PermalinkURL    url.URL                `json:"permalink_url"`
	Status          CommitComparisonStatus `json:"status"`
	TotalCommits    int                    `json:"total_commits"`
	URL             url.URL                `json:"url"`
}

func (*CommitComparison) reposCompareCommitsRes() {}

type CommitComparisonStatus string

const (
	CommitComparisonStatusDiverged  CommitComparisonStatus = "diverged"
	CommitComparisonStatusAhead     CommitComparisonStatus = "ahead"
	CommitComparisonStatusBehind    CommitComparisonStatus = "behind"
	CommitComparisonStatusIdentical CommitComparisonStatus = "identical"
)

type CommitFilesItem struct {
	Additions        OptInt    `json:"additions"`
	BlobURL          OptString `json:"blob_url"`
	Changes          OptInt    `json:"changes"`
	ContentsURL      OptString `json:"contents_url"`
	Deletions        OptInt    `json:"deletions"`
	Filename         OptString `json:"filename"`
	Patch            OptString `json:"patch"`
	PreviousFilename OptString `json:"previous_filename"`
	RawURL           OptString `json:"raw_url"`
	Sha              OptString `json:"sha"`
	Status           OptString `json:"status"`
}

type CommitParentsItem struct {
	HTMLURL OptURL  `json:"html_url"`
	Sha     string  `json:"sha"`
	URL     url.URL `json:"url"`
}

// Ref: #/components/schemas/commit-search-result-item
type CommitSearchResultItem struct {
	Author      NilNullableSimpleUser               `json:"author"`
	CommentsURL url.URL                             `json:"comments_url"`
	Commit      CommitSearchResultItemCommit        `json:"commit"`
	Committer   NilNullableGitUser                  `json:"committer"`
	HTMLURL     url.URL                             `json:"html_url"`
	NodeID      string                              `json:"node_id"`
	Parents     []CommitSearchResultItemParentsItem `json:"parents"`
	Repository  MinimalRepository                   `json:"repository"`
	Score       float64                             `json:"score"`
	Sha         string                              `json:"sha"`
	TextMatches *SearchResultTextMatches            `json:"text_matches"`
	URL         url.URL                             `json:"url"`
}

type CommitSearchResultItemCommit struct {
	Author       CommitSearchResultItemCommitAuthor `json:"author"`
	CommentCount int                                `json:"comment_count"`
	Committer    NilNullableGitUser                 `json:"committer"`
	Message      string                             `json:"message"`
	Tree         CommitSearchResultItemCommitTree   `json:"tree"`
	URL          url.URL                            `json:"url"`
	Verification OptVerification                    `json:"verification"`
}

type CommitSearchResultItemCommitAuthor struct {
	Date  time.Time `json:"date"`
	Email string    `json:"email"`
	Name  string    `json:"name"`
}

type CommitSearchResultItemCommitTree struct {
	Sha string  `json:"sha"`
	URL url.URL `json:"url"`
}

type CommitSearchResultItemParentsItem struct {
	HTMLURL OptString `json:"html_url"`
	Sha     OptString `json:"sha"`
	URL     OptString `json:"url"`
}

type CommitStats struct {
	Additions OptInt `json:"additions"`
	Deletions OptInt `json:"deletions"`
	Total     OptInt `json:"total"`
}

// Ref: #/components/schemas/community-profile
type CommunityProfile struct {
	ContentReportsEnabled OptBool               `json:"content_reports_enabled"`
	Description           NilString             `json:"description"`
	Documentation         NilString             `json:"documentation"`
	Files                 CommunityProfileFiles `json:"files"`
	HealthPercentage      int                   `json:"health_percentage"`
	UpdatedAt             NilTime               `json:"updated_at"`
}

type CommunityProfileFiles struct {
	CodeOfConduct       NilNullableCodeOfConductSimple `json:"code_of_conduct"`
	CodeOfConductFile   NilNullableCommunityHealthFile `json:"code_of_conduct_file"`
	Contributing        NilNullableCommunityHealthFile `json:"contributing"`
	IssueTemplate       NilNullableCommunityHealthFile `json:"issue_template"`
	License             NilNullableLicenseSimple       `json:"license"`
	PullRequestTemplate NilNullableCommunityHealthFile `json:"pull_request_template"`
	Readme              NilNullableCommunityHealthFile `json:"readme"`
}

// Ref: #/components/schemas/content-file
type ContentFile struct {
	Links           ContentFileLinks `json:"_links"`
	Content         string           `json:"content"`
	DownloadURL     NilURL           `json:"download_url"`
	Encoding        string           `json:"encoding"`
	GitURL          NilURL           `json:"git_url"`
	HTMLURL         NilURL           `json:"html_url"`
	Name            string           `json:"name"`
	Path            string           `json:"path"`
	Sha             string           `json:"sha"`
	Size            int              `json:"size"`
	SubmoduleGitURL OptString        `json:"submodule_git_url"`
	Target          OptString        `json:"target"`
	Type            string           `json:"type"`
	URL             url.URL          `json:"url"`
}

type ContentFileLinks struct {
	Git  NilURL  `json:"git"`
	HTML NilURL  `json:"html"`
	Self url.URL `json:"self"`
}

// Ref: #/components/schemas/content-reference-attachment
type ContentReferenceAttachment struct {
	Body   string    `json:"body"`
	ID     int       `json:"id"`
	NodeID OptString `json:"node_id"`
	Title  string    `json:"title"`
}

// Ref: #/components/schemas/content-traffic
type ContentTraffic struct {
	Count   int    `json:"count"`
	Path    string `json:"path"`
	Title   string `json:"title"`
	Uniques int    `json:"uniques"`
}

// Ref: #/components/schemas/contributor
type Contributor struct {
	AvatarURL         OptURL       `json:"avatar_url"`
	Contributions     int          `json:"contributions"`
	Email             OptString    `json:"email"`
	EventsURL         OptString    `json:"events_url"`
	FollowersURL      OptURL       `json:"followers_url"`
	FollowingURL      OptString    `json:"following_url"`
	GistsURL          OptString    `json:"gists_url"`
	GravatarID        OptNilString `json:"gravatar_id"`
	HTMLURL           OptURL       `json:"html_url"`
	ID                OptInt       `json:"id"`
	Login             OptString    `json:"login"`
	Name              OptString    `json:"name"`
	NodeID            OptString    `json:"node_id"`
	OrganizationsURL  OptURL       `json:"organizations_url"`
	ReceivedEventsURL OptURL       `json:"received_events_url"`
	ReposURL          OptURL       `json:"repos_url"`
	SiteAdmin         OptBool      `json:"site_admin"`
	StarredURL        OptString    `json:"starred_url"`
	SubscriptionsURL  OptURL       `json:"subscriptions_url"`
	Type              string       `json:"type"`
	URL               OptURL       `json:"url"`
}

// Ref: #/components/schemas/contributor-activity
type ContributorActivity struct {
	Author NilNullableSimpleUser          `json:"author"`
	Total  int                            `json:"total"`
	Weeks  []ContributorActivityWeeksItem `json:"weeks"`
}

type ContributorActivityWeeksItem struct {
	A OptInt `json:"a"`
	C OptInt `json:"c"`
	D OptInt `json:"d"`
	W OptInt `json:"w"`
}

// Ref: #/components/schemas/credential-authorization
type CredentialAuthorization struct {
	AuthorizedCredentialID    OptNilInt    `json:"authorized_credential_id"`
	AuthorizedCredentialNote  OptNilString `json:"authorized_credential_note"`
	AuthorizedCredentialTitle OptNilString `json:"authorized_credential_title"`
	CredentialAccessedAt      OptNilTime   `json:"credential_accessed_at"`
	CredentialAuthorizedAt    time.Time    `json:"credential_authorized_at"`
	CredentialID              int          `json:"credential_id"`
	CredentialType            string       `json:"credential_type"`
	Fingerprint               OptString    `json:"fingerprint"`
	Login                     string       `json:"login"`
	Scopes                    []string     `json:"scopes"`
	TokenLastEight            OptString    `json:"token_last_eight"`
}

// Ref: #/components/schemas/deploy-key
type DeployKey struct {
	CreatedAt string `json:"created_at"`
	ID        int    `json:"id"`
	Key       string `json:"key"`
	ReadOnly  bool   `json:"read_only"`
	Title     string `json:"title"`
	URL       string `json:"url"`
	Verified  bool   `json:"verified"`
}

func (*DeployKey) reposGetDeployKeyRes() {}

// Ref: #/components/schemas/deployment_branch_policy
type DeploymentBranchPolicy struct {
	CustomBranchPolicies bool `json:"custom_branch_policies"`
	ProtectedBranches    bool `json:"protected_branches"`
}

// Ref: #/components/schemas/deployment-reviewer-type
type DeploymentReviewerType string

const (
	DeploymentReviewerTypeUser DeploymentReviewerType = "User"
	DeploymentReviewerTypeTeam DeploymentReviewerType = "Team"
)

// Ref: #/components/schemas/deployment-simple
type DeploymentSimple struct {
	CreatedAt             time.Time                 `json:"created_at"`
	Description           NilString                 `json:"description"`
	Environment           string                    `json:"environment"`
	ID                    int                       `json:"id"`
	NodeID                string                    `json:"node_id"`
	OriginalEnvironment   OptString                 `json:"original_environment"`
	PerformedViaGithubApp OptNilNullableIntegration `json:"performed_via_github_app"`
	ProductionEnvironment OptBool                   `json:"production_environment"`
	RepositoryURL         url.URL                   `json:"repository_url"`
	StatusesURL           url.URL                   `json:"statuses_url"`
	Task                  string                    `json:"task"`
	TransientEnvironment  OptBool                   `json:"transient_environment"`
	UpdatedAt             time.Time                 `json:"updated_at"`
	URL                   url.URL                   `json:"url"`
}

// Ref: #/components/schemas/deployment-status
type DeploymentStatus struct {
	CreatedAt             time.Time                 `json:"created_at"`
	Creator               NilNullableSimpleUser     `json:"creator"`
	DeploymentURL         url.URL                   `json:"deployment_url"`
	Description           string                    `json:"description"`
	Environment           OptString                 `json:"environment"`
	EnvironmentURL        OptURL                    `json:"environment_url"`
	ID                    int                       `json:"id"`
	LogURL                OptURL                    `json:"log_url"`
	NodeID                string                    `json:"node_id"`
	PerformedViaGithubApp OptNilNullableIntegration `json:"performed_via_github_app"`
	RepositoryURL         url.URL                   `json:"repository_url"`
	State                 DeploymentStatusState     `json:"state"`
	TargetURL             url.URL                   `json:"target_url"`
	UpdatedAt             time.Time                 `json:"updated_at"`
	URL                   url.URL                   `json:"url"`
}

func (*DeploymentStatus) reposGetDeploymentStatusRes() {}

type DeploymentStatusState string

const (
	DeploymentStatusStateError      DeploymentStatusState = "error"
	DeploymentStatusStateFailure    DeploymentStatusState = "failure"
	DeploymentStatusStateInactive   DeploymentStatusState = "inactive"
	DeploymentStatusStatePending    DeploymentStatusState = "pending"
	DeploymentStatusStateSuccess    DeploymentStatusState = "success"
	DeploymentStatusStateQueued     DeploymentStatusState = "queued"
	DeploymentStatusStateInProgress DeploymentStatusState = "in_progress"
)

// Ref: #/components/schemas/diff-entry
type DiffEntry struct {
	Additions        int             `json:"additions"`
	BlobURL          url.URL         `json:"blob_url"`
	Changes          int             `json:"changes"`
	ContentsURL      url.URL         `json:"contents_url"`
	Deletions        int             `json:"deletions"`
	Filename         string          `json:"filename"`
	Patch            OptString       `json:"patch"`
	PreviousFilename OptString       `json:"previous_filename"`
	RawURL           url.URL         `json:"raw_url"`
	Sha              string          `json:"sha"`
	Status           DiffEntryStatus `json:"status"`
}

type DiffEntryStatus string

const (
	DiffEntryStatusAdded     DiffEntryStatus = "added"
	DiffEntryStatusRemoved   DiffEntryStatus = "removed"
	DiffEntryStatusModified  DiffEntryStatus = "modified"
	DiffEntryStatusRenamed   DiffEntryStatus = "renamed"
	DiffEntryStatusCopied    DiffEntryStatus = "copied"
	DiffEntryStatusChanged   DiffEntryStatus = "changed"
	DiffEntryStatusUnchanged DiffEntryStatus = "unchanged"
)

// Ref: #/components/schemas/email
type Email struct {
	Email      string    `json:"email"`
	Primary    bool      `json:"primary"`
	Verified   bool      `json:"verified"`
	Visibility NilString `json:"visibility"`
}

// EmojisGetNotModified is response for EmojisGet operation.
type EmojisGetNotModified struct{}

func (*EmojisGetNotModified) emojisGetRes() {}

type EmojisGetOK struct{}

func (*EmojisGetOK) emojisGetRes() {}

// Ref: #/components/schemas/empty-object
type EmptyObject struct{}

func (*EmptyObject) actionsApproveWorkflowRunRes()              {}
func (*EmptyObject) actionsCreateOrUpdateEnvironmentSecretRes() {}
func (*EmptyObject) actionsCreateOrUpdateOrgSecretRes()         {}
func (*EmptyObject) reposGetPagesHealthCheckRes()               {}

// Ref: #/components/schemas/enabled-organizations
type EnabledOrganizations string

const (
	EnabledOrganizationsAll      EnabledOrganizations = "all"
	EnabledOrganizationsNone     EnabledOrganizations = "none"
	EnabledOrganizationsSelected EnabledOrganizations = "selected"
)

// Ref: #/components/schemas/enabled-repositories
type EnabledRepositories string

const (
	EnabledRepositoriesAll      EnabledRepositories = "all"
	EnabledRepositoriesNone     EnabledRepositories = "none"
	EnabledRepositoriesSelected EnabledRepositories = "selected"
)

// EnterpriseAdminAddOrgAccessToSelfHostedRunnerGroupInEnterpriseNoContent is response for EnterpriseAdminAddOrgAccessToSelfHostedRunnerGroupInEnterprise operation.
type EnterpriseAdminAddOrgAccessToSelfHostedRunnerGroupInEnterpriseNoContent struct{}

// EnterpriseAdminAddSelfHostedRunnerToGroupForEnterpriseNoContent is response for EnterpriseAdminAddSelfHostedRunnerToGroupForEnterprise operation.
type EnterpriseAdminAddSelfHostedRunnerToGroupForEnterpriseNoContent struct{}

type EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReq struct {
	Name                    string                                                                  `json:"name"`
	Runners                 []int                                                                   `json:"runners"`
	SelectedOrganizationIds []int                                                                   `json:"selected_organization_ids"`
	Visibility              OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility `json:"visibility"`
}

type EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility string

const (
	EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibilitySelected EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility = "selected"
	EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibilityAll      EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility = "all"
)

// EnterpriseAdminDeleteScimGroupFromEnterpriseNoContent is response for EnterpriseAdminDeleteScimGroupFromEnterprise operation.
type EnterpriseAdminDeleteScimGroupFromEnterpriseNoContent struct{}

// EnterpriseAdminDeleteSelfHostedRunnerFromEnterpriseNoContent is response for EnterpriseAdminDeleteSelfHostedRunnerFromEnterprise operation.
type EnterpriseAdminDeleteSelfHostedRunnerFromEnterpriseNoContent struct{}

// EnterpriseAdminDeleteSelfHostedRunnerGroupFromEnterpriseNoContent is response for EnterpriseAdminDeleteSelfHostedRunnerGroupFromEnterprise operation.
type EnterpriseAdminDeleteSelfHostedRunnerGroupFromEnterpriseNoContent struct{}

// EnterpriseAdminDeleteUserFromEnterpriseNoContent is response for EnterpriseAdminDeleteUserFromEnterprise operation.
type EnterpriseAdminDeleteUserFromEnterpriseNoContent struct{}

// EnterpriseAdminDisableSelectedOrganizationGithubActionsEnterpriseNoContent is response for EnterpriseAdminDisableSelectedOrganizationGithubActionsEnterprise operation.
type EnterpriseAdminDisableSelectedOrganizationGithubActionsEnterpriseNoContent struct{}

// EnterpriseAdminEnableSelectedOrganizationGithubActionsEnterpriseNoContent is response for EnterpriseAdminEnableSelectedOrganizationGithubActionsEnterprise operation.
type EnterpriseAdminEnableSelectedOrganizationGithubActionsEnterpriseNoContent struct{}

type EnterpriseAdminGetAuditLogInclude string

const (
	EnterpriseAdminGetAuditLogIncludeWeb EnterpriseAdminGetAuditLogInclude = "web"
	EnterpriseAdminGetAuditLogIncludeGit EnterpriseAdminGetAuditLogInclude = "git"
	EnterpriseAdminGetAuditLogIncludeAll EnterpriseAdminGetAuditLogInclude = "all"
)

type EnterpriseAdminGetAuditLogOrder string

const (
	EnterpriseAdminGetAuditLogOrderDesc EnterpriseAdminGetAuditLogOrder = "desc"
	EnterpriseAdminGetAuditLogOrderAsc  EnterpriseAdminGetAuditLogOrder = "asc"
)

type EnterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterpriseOK struct {
	Organizations []OrganizationSimple `json:"organizations"`
	TotalCount    float64              `json:"total_count"`
}

type EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterpriseOK struct {
	Organizations []OrganizationSimple `json:"organizations"`
	TotalCount    float64              `json:"total_count"`
}

type EnterpriseAdminListSelfHostedRunnerGroupsForEnterpriseOK struct {
	RunnerGroups []RunnerGroupsEnterprise `json:"runner_groups"`
	TotalCount   float64                  `json:"total_count"`
}

type EnterpriseAdminListSelfHostedRunnersForEnterpriseOK struct {
	Runners    []Runner   `json:"runners"`
	TotalCount OptFloat64 `json:"total_count"`
}

type EnterpriseAdminListSelfHostedRunnersInGroupForEnterpriseOK struct {
	Runners    []Runner `json:"runners"`
	TotalCount float64  `json:"total_count"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseGroupReq struct {
	DisplayName string                                                           `json:"displayName"`
	Members     []EnterpriseAdminProvisionAndInviteEnterpriseGroupReqMembersItem `json:"members"`
	Schemas     []string                                                         `json:"schemas"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseGroupReqMembersItem struct {
	Value string `json:"value"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseUserReq struct {
	Emails   []EnterpriseAdminProvisionAndInviteEnterpriseUserReqEmailsItem `json:"emails"`
	Groups   []EnterpriseAdminProvisionAndInviteEnterpriseUserReqGroupsItem `json:"groups"`
	Name     EnterpriseAdminProvisionAndInviteEnterpriseUserReqName         `json:"name"`
	Schemas  []string                                                       `json:"schemas"`
	UserName string                                                         `json:"userName"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseUserReqEmailsItem struct {
	Primary bool   `json:"primary"`
	Type    string `json:"type"`
	Value   string `json:"value"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseUserReqGroupsItem struct {
	Value OptString `json:"value"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseUserReqName struct {
	FamilyName string `json:"familyName"`
	GivenName  string `json:"givenName"`
}

// EnterpriseAdminRemoveOrgAccessToSelfHostedRunnerGroupInEnterpriseNoContent is response for EnterpriseAdminRemoveOrgAccessToSelfHostedRunnerGroupInEnterprise operation.
type EnterpriseAdminRemoveOrgAccessToSelfHostedRunnerGroupInEnterpriseNoContent struct{}

// EnterpriseAdminRemoveSelfHostedRunnerFromGroupForEnterpriseNoContent is response for EnterpriseAdminRemoveSelfHostedRunnerFromGroupForEnterprise operation.
type EnterpriseAdminRemoveSelfHostedRunnerFromGroupForEnterpriseNoContent struct{}

// EnterpriseAdminSetAllowedActionsEnterpriseNoContent is response for EnterpriseAdminSetAllowedActionsEnterprise operation.
type EnterpriseAdminSetAllowedActionsEnterpriseNoContent struct{}

// EnterpriseAdminSetGithubActionsPermissionsEnterpriseNoContent is response for EnterpriseAdminSetGithubActionsPermissionsEnterprise operation.
type EnterpriseAdminSetGithubActionsPermissionsEnterpriseNoContent struct{}

type EnterpriseAdminSetGithubActionsPermissionsEnterpriseReq struct {
	AllowedActions       OptAllowedActions    `json:"allowed_actions"`
	EnabledOrganizations EnabledOrganizations `json:"enabled_organizations"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseGroupReq struct {
	DisplayName string                                                                     `json:"displayName"`
	Members     []EnterpriseAdminSetInformationForProvisionedEnterpriseGroupReqMembersItem `json:"members"`
	Schemas     []string                                                                   `json:"schemas"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseGroupReqMembersItem struct {
	Value string `json:"value"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseUserReq struct {
	Emails   []EnterpriseAdminSetInformationForProvisionedEnterpriseUserReqEmailsItem `json:"emails"`
	Groups   []EnterpriseAdminSetInformationForProvisionedEnterpriseUserReqGroupsItem `json:"groups"`
	Name     EnterpriseAdminSetInformationForProvisionedEnterpriseUserReqName         `json:"name"`
	Schemas  []string                                                                 `json:"schemas"`
	UserName string                                                                   `json:"userName"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseUserReqEmailsItem struct {
	Primary bool   `json:"primary"`
	Type    string `json:"type"`
	Value   string `json:"value"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseUserReqGroupsItem struct {
	Value OptString `json:"value"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseUserReqName struct {
	FamilyName string `json:"familyName"`
	GivenName  string `json:"givenName"`
}

// EnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterpriseNoContent is response for EnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterprise operation.
type EnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterpriseNoContent struct{}

type EnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterpriseReq struct {
	SelectedOrganizationIds []int `json:"selected_organization_ids"`
}

// EnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterpriseNoContent is response for EnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterprise operation.
type EnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterpriseNoContent struct{}

type EnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterpriseReq struct {
	SelectedOrganizationIds []int `json:"selected_organization_ids"`
}

// EnterpriseAdminSetSelfHostedRunnersInGroupForEnterpriseNoContent is response for EnterpriseAdminSetSelfHostedRunnersInGroupForEnterprise operation.
type EnterpriseAdminSetSelfHostedRunnersInGroupForEnterpriseNoContent struct{}

type EnterpriseAdminSetSelfHostedRunnersInGroupForEnterpriseReq struct {
	Runners []int `json:"runners"`
}

type EnterpriseAdminUpdateAttributeForEnterpriseUserReq struct {
	Operations []EnterpriseAdminUpdateAttributeForEnterpriseUserReqOperationsItem `json:"Operations"`
	Schemas    []string                                                           `json:"schemas"`
}

type EnterpriseAdminUpdateAttributeForEnterpriseUserReqOperationsItem struct{}

type EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReq struct {
	Name       OptString                                                               `json:"name"`
	Visibility OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility `json:"visibility"`
}

type EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility string

const (
	EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibilitySelected EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility = "selected"
	EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibilityAll      EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility = "all"
)

// Ref: #/components/schemas/environment-approvals
type EnvironmentApprovals struct {
	Comment      string                                 `json:"comment"`
	Environments []EnvironmentApprovalsEnvironmentsItem `json:"environments"`
	State        EnvironmentApprovalsState              `json:"state"`
	User         SimpleUser                             `json:"user"`
}

type EnvironmentApprovalsEnvironmentsItem struct {
	CreatedAt OptTime   `json:"created_at"`
	HTMLURL   OptString `json:"html_url"`
	ID        OptInt    `json:"id"`
	Name      OptString `json:"name"`
	NodeID    OptString `json:"node_id"`
	UpdatedAt OptTime   `json:"updated_at"`
	URL       OptString `json:"url"`
}

type EnvironmentApprovalsState string

const (
	EnvironmentApprovalsStateApproved EnvironmentApprovalsState = "approved"
	EnvironmentApprovalsStateRejected EnvironmentApprovalsState = "rejected"
)

// Ref: #/components/schemas/event
type Event struct {
	Actor     Actor        `json:"actor"`
	CreatedAt NilTime      `json:"created_at"`
	ID        string       `json:"id"`
	Org       OptActor     `json:"org"`
	Payload   EventPayload `json:"payload"`
	Public    bool         `json:"public"`
	Repo      EventRepo    `json:"repo"`
	Type      NilString    `json:"type"`
}

type EventPayload struct {
	Action  OptString               `json:"action"`
	Comment OptIssueComment         `json:"comment"`
	Issue   OptIssueSimple          `json:"issue"`
	Pages   []EventPayloadPagesItem `json:"pages"`
}

type EventPayloadPagesItem struct {
	Action   OptString    `json:"action"`
	HTMLURL  OptString    `json:"html_url"`
	PageName OptString    `json:"page_name"`
	Sha      OptString    `json:"sha"`
	Summary  OptNilString `json:"summary"`
	Title    OptString    `json:"title"`
}

type EventRepo struct {
	ID   int     `json:"id"`
	Name string  `json:"name"`
	URL  url.URL `json:"url"`
}

// Ref: #/components/schemas/feed
type Feed struct {
	Links                       FeedLinks `json:"_links"`
	CurrentUserActorURL         OptString `json:"current_user_actor_url"`
	CurrentUserOrganizationURL  OptString `json:"current_user_organization_url"`
	CurrentUserOrganizationUrls []url.URL `json:"current_user_organization_urls"`
	CurrentUserPublicURL        OptString `json:"current_user_public_url"`
	CurrentUserURL              OptString `json:"current_user_url"`
	SecurityAdvisoriesURL       OptString `json:"security_advisories_url"`
	TimelineURL                 string    `json:"timeline_url"`
	UserURL                     string    `json:"user_url"`
}

type FeedLinks struct {
	CurrentUser              OptLinkWithType `json:"current_user"`
	CurrentUserActor         OptLinkWithType `json:"current_user_actor"`
	CurrentUserOrganization  OptLinkWithType `json:"current_user_organization"`
	CurrentUserOrganizations []LinkWithType  `json:"current_user_organizations"`
	CurrentUserPublic        OptLinkWithType `json:"current_user_public"`
	SecurityAdvisories       OptLinkWithType `json:"security_advisories"`
	Timeline                 LinkWithType    `json:"timeline"`
	User                     LinkWithType    `json:"user"`
}

// Ref: #/components/schemas/file-commit
type FileCommit struct {
	Commit  FileCommitCommit     `json:"commit"`
	Content NilFileCommitContent `json:"content"`
}

type FileCommitCommit struct {
	Author       OptFileCommitCommitAuthor       `json:"author"`
	Committer    OptFileCommitCommitCommitter    `json:"committer"`
	HTMLURL      OptString                       `json:"html_url"`
	Message      OptString                       `json:"message"`
	NodeID       OptString                       `json:"node_id"`
	Parents      []FileCommitCommitParentsItem   `json:"parents"`
	Sha          OptString                       `json:"sha"`
	Tree         OptFileCommitCommitTree         `json:"tree"`
	URL          OptString                       `json:"url"`
	Verification OptFileCommitCommitVerification `json:"verification"`
}

type FileCommitCommitAuthor struct {
	Date  OptString `json:"date"`
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type FileCommitCommitCommitter struct {
	Date  OptString `json:"date"`
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type FileCommitCommitParentsItem struct {
	HTMLURL OptString `json:"html_url"`
	Sha     OptString `json:"sha"`
	URL     OptString `json:"url"`
}

type FileCommitCommitTree struct {
	Sha OptString `json:"sha"`
	URL OptString `json:"url"`
}

type FileCommitCommitVerification struct {
	Payload   OptNilString `json:"payload"`
	Reason    OptString    `json:"reason"`
	Signature OptNilString `json:"signature"`
	Verified  OptBool      `json:"verified"`
}

type FileCommitContent struct {
	Links       OptFileCommitContentLinks `json:"_links"`
	DownloadURL OptString                 `json:"download_url"`
	GitURL      OptString                 `json:"git_url"`
	HTMLURL     OptString                 `json:"html_url"`
	Name        OptString                 `json:"name"`
	Path        OptString                 `json:"path"`
	Sha         OptString                 `json:"sha"`
	Size        OptInt                    `json:"size"`
	Type        OptString                 `json:"type"`
	URL         OptString                 `json:"url"`
}

type FileCommitContentLinks struct {
	Git  OptString `json:"git"`
	HTML OptString `json:"html"`
	Self OptString `json:"self"`
}

// Ref: #/components/schemas/full-repository
type FullRepository struct {
	AllowAutoMerge         OptBool                                 `json:"allow_auto_merge"`
	AllowForking           OptBool                                 `json:"allow_forking"`
	AllowMergeCommit       OptBool                                 `json:"allow_merge_commit"`
	AllowRebaseMerge       OptBool                                 `json:"allow_rebase_merge"`
	AllowSquashMerge       OptBool                                 `json:"allow_squash_merge"`
	AnonymousAccessEnabled OptBool                                 `json:"anonymous_access_enabled"`
	ArchiveURL             string                                  `json:"archive_url"`
	Archived               bool                                    `json:"archived"`
	AssigneesURL           string                                  `json:"assignees_url"`
	BlobsURL               string                                  `json:"blobs_url"`
	BranchesURL            string                                  `json:"branches_url"`
	CloneURL               string                                  `json:"clone_url"`
	CodeOfConduct          OptCodeOfConductSimple                  `json:"code_of_conduct"`
	CollaboratorsURL       string                                  `json:"collaborators_url"`
	CommentsURL            string                                  `json:"comments_url"`
	CommitsURL             string                                  `json:"commits_url"`
	CompareURL             string                                  `json:"compare_url"`
	ContentsURL            string                                  `json:"contents_url"`
	ContributorsURL        url.URL                                 `json:"contributors_url"`
	CreatedAt              time.Time                               `json:"created_at"`
	DefaultBranch          string                                  `json:"default_branch"`
	DeleteBranchOnMerge    OptBool                                 `json:"delete_branch_on_merge"`
	DeploymentsURL         url.URL                                 `json:"deployments_url"`
	Description            NilString                               `json:"description"`
	Disabled               bool                                    `json:"disabled"`
	DownloadsURL           url.URL                                 `json:"downloads_url"`
	EventsURL              url.URL                                 `json:"events_url"`
	Fork                   bool                                    `json:"fork"`
	Forks                  int                                     `json:"forks"`
	ForksCount             int                                     `json:"forks_count"`
	ForksURL               url.URL                                 `json:"forks_url"`
	FullName               string                                  `json:"full_name"`
	GitCommitsURL          string                                  `json:"git_commits_url"`
	GitRefsURL             string                                  `json:"git_refs_url"`
	GitTagsURL             string                                  `json:"git_tags_url"`
	GitURL                 string                                  `json:"git_url"`
	HasDownloads           bool                                    `json:"has_downloads"`
	HasIssues              bool                                    `json:"has_issues"`
	HasPages               bool                                    `json:"has_pages"`
	HasProjects            bool                                    `json:"has_projects"`
	HasWiki                bool                                    `json:"has_wiki"`
	Homepage               NilURL                                  `json:"homepage"`
	HooksURL               url.URL                                 `json:"hooks_url"`
	HTMLURL                url.URL                                 `json:"html_url"`
	ID                     int                                     `json:"id"`
	IsTemplate             OptBool                                 `json:"is_template"`
	IssueCommentURL        string                                  `json:"issue_comment_url"`
	IssueEventsURL         string                                  `json:"issue_events_url"`
	IssuesURL              string                                  `json:"issues_url"`
	KeysURL                string                                  `json:"keys_url"`
	LabelsURL              string                                  `json:"labels_url"`
	Language               NilString                               `json:"language"`
	LanguagesURL           url.URL                                 `json:"languages_url"`
	License                NilNullableLicenseSimple                `json:"license"`
	MasterBranch           OptString                               `json:"master_branch"`
	MergesURL              url.URL                                 `json:"merges_url"`
	MilestonesURL          string                                  `json:"milestones_url"`
	MirrorURL              NilURL                                  `json:"mirror_url"`
	Name                   string                                  `json:"name"`
	NetworkCount           int                                     `json:"network_count"`
	NodeID                 string                                  `json:"node_id"`
	NotificationsURL       string                                  `json:"notifications_url"`
	OpenIssues             int                                     `json:"open_issues"`
	OpenIssuesCount        int                                     `json:"open_issues_count"`
	Organization           OptNilNullableSimpleUser                `json:"organization"`
	Owner                  SimpleUser                              `json:"owner"`
	Parent                 OptRepository                           `json:"parent"`
	Permissions            OptFullRepositoryPermissions            `json:"permissions"`
	Private                bool                                    `json:"private"`
	PullsURL               string                                  `json:"pulls_url"`
	PushedAt               time.Time                               `json:"pushed_at"`
	ReleasesURL            string                                  `json:"releases_url"`
	SecurityAndAnalysis    OptNilFullRepositorySecurityAndAnalysis `json:"security_and_analysis"`
	Size                   int                                     `json:"size"`
	Source                 OptRepository                           `json:"source"`
	SSHURL                 string                                  `json:"ssh_url"`
	StargazersCount        int                                     `json:"stargazers_count"`
	StargazersURL          url.URL                                 `json:"stargazers_url"`
	StatusesURL            string                                  `json:"statuses_url"`
	SubscribersCount       int                                     `json:"subscribers_count"`
	SubscribersURL         url.URL                                 `json:"subscribers_url"`
	SubscriptionURL        url.URL                                 `json:"subscription_url"`
	SvnURL                 url.URL                                 `json:"svn_url"`
	TagsURL                url.URL                                 `json:"tags_url"`
	TeamsURL               url.URL                                 `json:"teams_url"`
	TempCloneToken         OptNilString                            `json:"temp_clone_token"`
	TemplateRepository     OptNilNullableRepository                `json:"template_repository"`
	Topics                 []string                                `json:"topics"`
	TreesURL               string                                  `json:"trees_url"`
	UpdatedAt              time.Time                               `json:"updated_at"`
	URL                    url.URL                                 `json:"url"`
	Visibility             OptString                               `json:"visibility"`
	Watchers               int                                     `json:"watchers"`
	WatchersCount          int                                     `json:"watchers_count"`
}

func (*FullRepository) reposGetRes() {}

type FullRepositoryPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

type FullRepositorySecurityAndAnalysis struct {
	AdvancedSecurity OptFullRepositorySecurityAndAnalysisAdvancedSecurity `json:"advanced_security"`
	SecretScanning   OptFullRepositorySecurityAndAnalysisSecretScanning   `json:"secret_scanning"`
}

type FullRepositorySecurityAndAnalysisAdvancedSecurity struct {
	Status OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus `json:"status"`
}

type FullRepositorySecurityAndAnalysisAdvancedSecurityStatus string

const (
	FullRepositorySecurityAndAnalysisAdvancedSecurityStatusEnabled  FullRepositorySecurityAndAnalysisAdvancedSecurityStatus = "enabled"
	FullRepositorySecurityAndAnalysisAdvancedSecurityStatusDisabled FullRepositorySecurityAndAnalysisAdvancedSecurityStatus = "disabled"
)

type FullRepositorySecurityAndAnalysisSecretScanning struct {
	Status OptFullRepositorySecurityAndAnalysisSecretScanningStatus `json:"status"`
}

type FullRepositorySecurityAndAnalysisSecretScanningStatus string

const (
	FullRepositorySecurityAndAnalysisSecretScanningStatusEnabled  FullRepositorySecurityAndAnalysisSecretScanningStatus = "enabled"
	FullRepositorySecurityAndAnalysisSecretScanningStatusDisabled FullRepositorySecurityAndAnalysisSecretScanningStatus = "disabled"
)

// Ref: #/components/schemas/gist-comment
type GistComment struct {
	AuthorAssociation AuthorAssociation     `json:"author_association"`
	Body              string                `json:"body"`
	CreatedAt         time.Time             `json:"created_at"`
	ID                int                   `json:"id"`
	NodeID            string                `json:"node_id"`
	UpdatedAt         time.Time             `json:"updated_at"`
	URL               url.URL               `json:"url"`
	User              NilNullableSimpleUser `json:"user"`
}

func (*GistComment) gistsCreateCommentRes() {}
func (*GistComment) gistsGetCommentRes()    {}
func (*GistComment) gistsUpdateCommentRes() {}

// Ref: #/components/schemas/gist-commit
type GistCommit struct {
	ChangeStatus GistCommitChangeStatus `json:"change_status"`
	CommittedAt  time.Time              `json:"committed_at"`
	URL          url.URL                `json:"url"`
	User         NilNullableSimpleUser  `json:"user"`
	Version      string                 `json:"version"`
}

type GistCommitChangeStatus struct {
	Additions OptInt `json:"additions"`
	Deletions OptInt `json:"deletions"`
	Total     OptInt `json:"total"`
}

// Ref: #/components/schemas/gist-history
type GistHistory struct {
	ChangeStatus OptGistHistoryChangeStatus `json:"change_status"`
	CommittedAt  OptTime                    `json:"committed_at"`
	URL          OptURL                     `json:"url"`
	User         OptNilNullableSimpleUser   `json:"user"`
	Version      OptString                  `json:"version"`
}

type GistHistoryChangeStatus struct {
	Additions OptInt `json:"additions"`
	Deletions OptInt `json:"deletions"`
	Total     OptInt `json:"total"`
}

// Ref: #/components/schemas/gist-simple
type GistSimple struct {
	Comments    OptInt                         `json:"comments"`
	CommentsURL OptString                      `json:"comments_url"`
	CommitsURL  OptString                      `json:"commits_url"`
	CreatedAt   OptString                      `json:"created_at"`
	Description OptNilString                   `json:"description"`
	Files       *GistSimpleFiles               `json:"files"`
	ForkOf      OptNilGistSimpleForkOf         `json:"fork_of"`
	Forks       OptNilGistSimpleForksItemArray `json:"forks"`
	ForksURL    OptString                      `json:"forks_url"`
	GitPullURL  OptString                      `json:"git_pull_url"`
	GitPushURL  OptString                      `json:"git_push_url"`
	History     OptNilGistHistoryArray         `json:"history"`
	HTMLURL     OptString                      `json:"html_url"`
	ID          OptString                      `json:"id"`
	NodeID      OptString                      `json:"node_id"`
	Owner       OptSimpleUser                  `json:"owner"`
	Public      OptBool                        `json:"public"`
	Truncated   OptBool                        `json:"truncated"`
	UpdatedAt   OptString                      `json:"updated_at"`
	URL         OptString                      `json:"url"`
	User        OptNilString                   `json:"user"`
}

func (*GistSimple) gistsGetRes() {}

type GistSimpleFiles struct{}

type GistSimpleForkOf struct {
	Comments    int                      `json:"comments"`
	CommentsURL url.URL                  `json:"comments_url"`
	CommitsURL  url.URL                  `json:"commits_url"`
	CreatedAt   time.Time                `json:"created_at"`
	Description NilString                `json:"description"`
	Files       GistSimpleForkOfFiles    `json:"files"`
	Forks       []string                 `json:"forks"`
	ForksURL    url.URL                  `json:"forks_url"`
	GitPullURL  url.URL                  `json:"git_pull_url"`
	GitPushURL  url.URL                  `json:"git_push_url"`
	History     []string                 `json:"history"`
	HTMLURL     url.URL                  `json:"html_url"`
	ID          string                   `json:"id"`
	NodeID      string                   `json:"node_id"`
	Owner       OptNilNullableSimpleUser `json:"owner"`
	Public      bool                     `json:"public"`
	Truncated   OptBool                  `json:"truncated"`
	UpdatedAt   time.Time                `json:"updated_at"`
	URL         url.URL                  `json:"url"`
	User        NilNullableSimpleUser    `json:"user"`
}

type GistSimpleForkOfFiles struct{}

type GistSimpleForksItem struct {
	CreatedAt OptTime       `json:"created_at"`
	ID        OptString     `json:"id"`
	UpdatedAt OptTime       `json:"updated_at"`
	URL       OptURL        `json:"url"`
	User      OptPublicUser `json:"user"`
}

// GistsCheckIsStarredNoContent is response for GistsCheckIsStarred operation.
type GistsCheckIsStarredNoContent struct{}

func (*GistsCheckIsStarredNoContent) gistsCheckIsStarredRes() {}

type GistsCheckIsStarredNotFound struct{}

func (*GistsCheckIsStarredNotFound) gistsCheckIsStarredRes() {}

// GistsCheckIsStarredNotModified is response for GistsCheckIsStarred operation.
type GistsCheckIsStarredNotModified struct{}

func (*GistsCheckIsStarredNotModified) gistsCheckIsStarredRes() {}

type GistsCreateCommentApplicationJSONForbidden BasicError

func (*GistsCreateCommentApplicationJSONForbidden) gistsCreateCommentRes() {}

type GistsCreateCommentApplicationJSONNotFound BasicError

func (*GistsCreateCommentApplicationJSONNotFound) gistsCreateCommentRes() {}

// GistsCreateCommentNotModified is response for GistsCreateComment operation.
type GistsCreateCommentNotModified struct{}

func (*GistsCreateCommentNotModified) gistsCreateCommentRes() {}

type GistsCreateCommentReq struct {
	Body string `json:"body"`
}

type GistsDeleteApplicationJSONForbidden BasicError

func (*GistsDeleteApplicationJSONForbidden) gistsDeleteRes() {}

type GistsDeleteApplicationJSONNotFound BasicError

func (*GistsDeleteApplicationJSONNotFound) gistsDeleteRes() {}

type GistsDeleteCommentApplicationJSONForbidden BasicError

func (*GistsDeleteCommentApplicationJSONForbidden) gistsDeleteCommentRes() {}

type GistsDeleteCommentApplicationJSONNotFound BasicError

func (*GistsDeleteCommentApplicationJSONNotFound) gistsDeleteCommentRes() {}

// GistsDeleteCommentNoContent is response for GistsDeleteComment operation.
type GistsDeleteCommentNoContent struct{}

func (*GistsDeleteCommentNoContent) gistsDeleteCommentRes() {}

// GistsDeleteCommentNotModified is response for GistsDeleteComment operation.
type GistsDeleteCommentNotModified struct{}

func (*GistsDeleteCommentNotModified) gistsDeleteCommentRes() {}

// GistsDeleteNoContent is response for GistsDelete operation.
type GistsDeleteNoContent struct{}

func (*GistsDeleteNoContent) gistsDeleteRes() {}

// GistsDeleteNotModified is response for GistsDelete operation.
type GistsDeleteNotModified struct{}

func (*GistsDeleteNotModified) gistsDeleteRes() {}

// GistsForkNotModified is response for GistsFork operation.
type GistsForkNotModified struct{}

type GistsGetCommentForbidden struct {
	Block            OptGistsGetCommentForbiddenBlock `json:"block"`
	DocumentationURL OptString                        `json:"documentation_url"`
	Message          OptString                        `json:"message"`
}

func (*GistsGetCommentForbidden) gistsGetCommentRes() {}

type GistsGetCommentForbiddenBlock struct {
	CreatedAt OptString    `json:"created_at"`
	HTMLURL   OptNilString `json:"html_url"`
	Reason    OptString    `json:"reason"`
}

// GistsGetCommentNotModified is response for GistsGetComment operation.
type GistsGetCommentNotModified struct{}

func (*GistsGetCommentNotModified) gistsGetCommentRes() {}

type GistsGetForbidden struct {
	Block            OptGistsGetForbiddenBlock `json:"block"`
	DocumentationURL OptString                 `json:"documentation_url"`
	Message          OptString                 `json:"message"`
}

func (*GistsGetForbidden) gistsGetRes() {}

type GistsGetForbiddenBlock struct {
	CreatedAt OptString    `json:"created_at"`
	HTMLURL   OptNilString `json:"html_url"`
	Reason    OptString    `json:"reason"`
}

// GistsGetNotModified is response for GistsGet operation.
type GistsGetNotModified struct{}

func (*GistsGetNotModified) gistsGetRes() {}

type GistsListCommentsApplicationJSONForbidden BasicError

func (*GistsListCommentsApplicationJSONForbidden) gistsListCommentsRes() {}

type GistsListCommentsApplicationJSONNotFound BasicError

func (*GistsListCommentsApplicationJSONNotFound) gistsListCommentsRes() {}

// GistsListCommentsNotModified is response for GistsListComments operation.
type GistsListCommentsNotModified struct{}

func (*GistsListCommentsNotModified) gistsListCommentsRes() {}

type GistsListCommentsOKApplicationJSON []GistComment

func (*GistsListCommentsOKApplicationJSON) gistsListCommentsRes() {}

type GistsListCommitsApplicationJSONForbidden BasicError

func (*GistsListCommitsApplicationJSONForbidden) gistsListCommitsRes() {}

type GistsListCommitsApplicationJSONNotFound BasicError

func (*GistsListCommitsApplicationJSONNotFound) gistsListCommitsRes() {}

// GistsListCommitsNotModified is response for GistsListCommits operation.
type GistsListCommitsNotModified struct{}

func (*GistsListCommitsNotModified) gistsListCommitsRes() {}

type GistsListCommitsOKApplicationJSON []GistCommit

func (*GistsListCommitsOKApplicationJSON) gistsListCommitsRes() {}

type GistsListForksApplicationJSONForbidden BasicError

func (*GistsListForksApplicationJSONForbidden) gistsListForksRes() {}

type GistsListForksApplicationJSONNotFound BasicError

func (*GistsListForksApplicationJSONNotFound) gistsListForksRes() {}

// GistsListForksNotModified is response for GistsListForks operation.
type GistsListForksNotModified struct{}

func (*GistsListForksNotModified) gistsListForksRes() {}

type GistsListForksOKApplicationJSON []GistSimple

func (*GistsListForksOKApplicationJSON) gistsListForksRes() {}

// GistsListNotModified is response for GistsList operation.
type GistsListNotModified struct{}

func (*GistsListNotModified) gistsListRes() {}

type GistsListOKApplicationJSON []BaseGist

func (*GistsListOKApplicationJSON) gistsListRes() {}

// GistsListPublicNotModified is response for GistsListPublic operation.
type GistsListPublicNotModified struct{}

type GistsListStarredApplicationJSONForbidden BasicError

func (*GistsListStarredApplicationJSONForbidden) gistsListStarredRes() {}

type GistsListStarredApplicationJSONUnauthorized BasicError

func (*GistsListStarredApplicationJSONUnauthorized) gistsListStarredRes() {}

// GistsListStarredNotModified is response for GistsListStarred operation.
type GistsListStarredNotModified struct{}

func (*GistsListStarredNotModified) gistsListStarredRes() {}

type GistsListStarredOKApplicationJSON []BaseGist

func (*GistsListStarredOKApplicationJSON) gistsListStarredRes() {}

type GistsStarApplicationJSONForbidden BasicError

func (*GistsStarApplicationJSONForbidden) gistsStarRes() {}

type GistsStarApplicationJSONNotFound BasicError

func (*GistsStarApplicationJSONNotFound) gistsStarRes() {}

// GistsStarNoContent is response for GistsStar operation.
type GistsStarNoContent struct{}

func (*GistsStarNoContent) gistsStarRes() {}

// GistsStarNotModified is response for GistsStar operation.
type GistsStarNotModified struct{}

func (*GistsStarNotModified) gistsStarRes() {}

type GistsUnstarApplicationJSONForbidden BasicError

func (*GistsUnstarApplicationJSONForbidden) gistsUnstarRes() {}

type GistsUnstarApplicationJSONNotFound BasicError

func (*GistsUnstarApplicationJSONNotFound) gistsUnstarRes() {}

// GistsUnstarNoContent is response for GistsUnstar operation.
type GistsUnstarNoContent struct{}

func (*GistsUnstarNoContent) gistsUnstarRes() {}

// GistsUnstarNotModified is response for GistsUnstar operation.
type GistsUnstarNotModified struct{}

func (*GistsUnstarNotModified) gistsUnstarRes() {}

type GistsUpdateCommentReq struct {
	Body string `json:"body"`
}

// Ref: #/components/schemas/git-commit
type GitCommit struct {
	Author       GitCommitAuthor        `json:"author"`
	Committer    GitCommitCommitter     `json:"committer"`
	HTMLURL      url.URL                `json:"html_url"`
	Message      string                 `json:"message"`
	NodeID       string                 `json:"node_id"`
	Parents      []GitCommitParentsItem `json:"parents"`
	Sha          string                 `json:"sha"`
	Tree         GitCommitTree          `json:"tree"`
	URL          url.URL                `json:"url"`
	Verification GitCommitVerification  `json:"verification"`
}

func (*GitCommit) gitGetCommitRes() {}

type GitCommitAuthor struct {
	Date  time.Time `json:"date"`
	Email string    `json:"email"`
	Name  string    `json:"name"`
}

type GitCommitCommitter struct {
	Date  time.Time `json:"date"`
	Email string    `json:"email"`
	Name  string    `json:"name"`
}

type GitCommitParentsItem struct {
	HTMLURL url.URL `json:"html_url"`
	Sha     string  `json:"sha"`
	URL     url.URL `json:"url"`
}

type GitCommitTree struct {
	Sha string  `json:"sha"`
	URL url.URL `json:"url"`
}

type GitCommitVerification struct {
	Payload   NilString `json:"payload"`
	Reason    string    `json:"reason"`
	Signature NilString `json:"signature"`
	Verified  bool      `json:"verified"`
}

type GitCreateBlobReq struct {
	Content  string    `json:"content"`
	Encoding OptString `json:"encoding"`
}

type GitCreateCommitReq struct {
	Author    OptGitCreateCommitReqAuthor    `json:"author"`
	Committer OptGitCreateCommitReqCommitter `json:"committer"`
	Message   string                         `json:"message"`
	Parents   []string                       `json:"parents"`
	Signature OptString                      `json:"signature"`
	Tree      string                         `json:"tree"`
}

type GitCreateCommitReqAuthor struct {
	Date  OptTime `json:"date"`
	Email string  `json:"email"`
	Name  string  `json:"name"`
}

type GitCreateCommitReqCommitter struct {
	Date  OptTime   `json:"date"`
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type GitCreateRefReq struct {
	Key OptString `json:"key"`
	Ref string    `json:"ref"`
	Sha string    `json:"sha"`
}

type GitCreateTagReq struct {
	Message string                   `json:"message"`
	Object  string                   `json:"object"`
	Tag     string                   `json:"tag"`
	Tagger  OptGitCreateTagReqTagger `json:"tagger"`
	Type    GitCreateTagReqType      `json:"type"`
}

type GitCreateTagReqTagger struct {
	Date  OptTime `json:"date"`
	Email string  `json:"email"`
	Name  string  `json:"name"`
}

type GitCreateTagReqType string

const (
	GitCreateTagReqTypeCommit GitCreateTagReqType = "commit"
	GitCreateTagReqTypeTree   GitCreateTagReqType = "tree"
	GitCreateTagReqTypeBlob   GitCreateTagReqType = "blob"
)

type GitCreateTreeReq struct {
	BaseTree OptString                  `json:"base_tree"`
	Tree     []GitCreateTreeReqTreeItem `json:"tree"`
}

type GitCreateTreeReqTreeItem struct {
	Content OptString                       `json:"content"`
	Mode    OptGitCreateTreeReqTreeItemMode `json:"mode"`
	Path    OptString                       `json:"path"`
	Sha     OptNilString                    `json:"sha"`
	Type    OptGitCreateTreeReqTreeItemType `json:"type"`
}

type GitCreateTreeReqTreeItemMode string

const (
	GitCreateTreeReqTreeItemMode100644 GitCreateTreeReqTreeItemMode = "100644"
	GitCreateTreeReqTreeItemMode100755 GitCreateTreeReqTreeItemMode = "100755"
	GitCreateTreeReqTreeItemMode040000 GitCreateTreeReqTreeItemMode = "040000"
	GitCreateTreeReqTreeItemMode160000 GitCreateTreeReqTreeItemMode = "160000"
	GitCreateTreeReqTreeItemMode120000 GitCreateTreeReqTreeItemMode = "120000"
)

type GitCreateTreeReqTreeItemType string

const (
	GitCreateTreeReqTreeItemTypeBlob   GitCreateTreeReqTreeItemType = "blob"
	GitCreateTreeReqTreeItemTypeTree   GitCreateTreeReqTreeItemType = "tree"
	GitCreateTreeReqTreeItemTypeCommit GitCreateTreeReqTreeItemType = "commit"
)

// GitDeleteRefNoContent is response for GitDeleteRef operation.
type GitDeleteRefNoContent struct{}

// Ref: #/components/schemas/git-ref
type GitRef struct {
	NodeID string       `json:"node_id"`
	Object GitRefObject `json:"object"`
	Ref    string       `json:"ref"`
	URL    url.URL      `json:"url"`
}

func (*GitRef) gitGetRefRes() {}

type GitRefObject struct {
	Sha  string  `json:"sha"`
	Type string  `json:"type"`
	URL  url.URL `json:"url"`
}

// Ref: #/components/schemas/git-tag
type GitTag struct {
	Message      string          `json:"message"`
	NodeID       string          `json:"node_id"`
	Object       GitTagObject    `json:"object"`
	Sha          string          `json:"sha"`
	Tag          string          `json:"tag"`
	Tagger       GitTagTagger    `json:"tagger"`
	URL          url.URL         `json:"url"`
	Verification OptVerification `json:"verification"`
}

func (*GitTag) gitGetTagRes() {}

type GitTagObject struct {
	Sha  string  `json:"sha"`
	Type string  `json:"type"`
	URL  url.URL `json:"url"`
}

type GitTagTagger struct {
	Date  string `json:"date"`
	Email string `json:"email"`
	Name  string `json:"name"`
}

// Ref: #/components/schemas/git-tree
type GitTree struct {
	Sha       string            `json:"sha"`
	Tree      []GitTreeTreeItem `json:"tree"`
	Truncated bool              `json:"truncated"`
	URL       url.URL           `json:"url"`
}

type GitTreeTreeItem struct {
	Mode OptString `json:"mode"`
	Path OptString `json:"path"`
	Sha  OptString `json:"sha"`
	Size OptInt    `json:"size"`
	Type OptString `json:"type"`
	URL  OptString `json:"url"`
}

type GitUpdateRefReq struct {
	Force OptBool `json:"force"`
	Sha   string  `json:"sha"`
}

// GitignoreGetAllTemplatesNotModified is response for GitignoreGetAllTemplates operation.
type GitignoreGetAllTemplatesNotModified struct{}

func (*GitignoreGetAllTemplatesNotModified) gitignoreGetAllTemplatesRes() {}

type GitignoreGetAllTemplatesOKApplicationJSON []string

func (*GitignoreGetAllTemplatesOKApplicationJSON) gitignoreGetAllTemplatesRes() {}

// GitignoreGetTemplateNotModified is response for GitignoreGetTemplate operation.
type GitignoreGetTemplateNotModified struct{}

func (*GitignoreGetTemplateNotModified) gitignoreGetTemplateRes() {}

// Ref: #/components/schemas/gitignore-template
type GitignoreTemplate struct {
	Name   string `json:"name"`
	Source string `json:"source"`
}

func (*GitignoreTemplate) gitignoreGetTemplateRes() {}

// Ref: #/components/schemas/gpg-key
type GpgKey struct {
	CanCertify        bool                `json:"can_certify"`
	CanEncryptComms   bool                `json:"can_encrypt_comms"`
	CanEncryptStorage bool                `json:"can_encrypt_storage"`
	CanSign           bool                `json:"can_sign"`
	CreatedAt         time.Time           `json:"created_at"`
	Emails            []GpgKeyEmailsItem  `json:"emails"`
	ExpiresAt         NilTime             `json:"expires_at"`
	ID                int                 `json:"id"`
	KeyID             string              `json:"key_id"`
	PrimaryKeyID      NilInt              `json:"primary_key_id"`
	PublicKey         string              `json:"public_key"`
	RawKey            NilString           `json:"raw_key"`
	Subkeys           []GpgKeySubkeysItem `json:"subkeys"`
}

func (*GpgKey) usersGetGpgKeyForAuthenticatedRes() {}

type GpgKeyEmailsItem struct {
	Email    OptString `json:"email"`
	Verified OptBool   `json:"verified"`
}

type GpgKeySubkeysItem struct {
	CanCertify        OptBool      `json:"can_certify"`
	CanEncryptComms   OptBool      `json:"can_encrypt_comms"`
	CanEncryptStorage OptBool      `json:"can_encrypt_storage"`
	CanSign           OptBool      `json:"can_sign"`
	CreatedAt         OptString    `json:"created_at"`
	Emails            []string     `json:"emails"`
	ExpiresAt         OptNilString `json:"expires_at"`
	ID                OptInt       `json:"id"`
	KeyID             OptString    `json:"key_id"`
	PrimaryKeyID      OptInt       `json:"primary_key_id"`
	PublicKey         OptString    `json:"public_key"`
	RawKey            OptNilString `json:"raw_key"`
	Subkeys           []string     `json:"subkeys"`
}

// Ref: #/components/schemas/group-mapping
type GroupMapping struct {
	Groups []GroupMappingGroupsItem `json:"groups"`
}

func (*GroupMapping) teamsListIdpGroupsForLegacyRes() {}

type GroupMappingGroupsItem struct {
	GroupDescription string       `json:"group_description"`
	GroupID          string       `json:"group_id"`
	GroupName        string       `json:"group_name"`
	Status           OptString    `json:"status"`
	SyncedAt         OptNilString `json:"synced_at"`
}

// Ref: #/components/schemas/hook
type Hook struct {
	Active        bool         `json:"active"`
	Config        HookConfig   `json:"config"`
	CreatedAt     time.Time    `json:"created_at"`
	DeliveriesURL OptURL       `json:"deliveries_url"`
	Events        []string     `json:"events"`
	ID            int          `json:"id"`
	LastResponse  HookResponse `json:"last_response"`
	Name          string       `json:"name"`
	PingURL       url.URL      `json:"ping_url"`
	TestURL       url.URL      `json:"test_url"`
	Type          string       `json:"type"`
	UpdatedAt     time.Time    `json:"updated_at"`
	URL           url.URL      `json:"url"`
}

func (*Hook) reposGetWebhookRes() {}

type HookConfig struct {
	ContentType OptWebhookConfigContentType `json:"content_type"`
	Digest      OptString                   `json:"digest"`
	Email       OptString                   `json:"email"`
	InsecureSsl *WebhookConfigInsecureSsl   `json:"insecure_ssl"`
	Password    OptString                   `json:"password"`
	Room        OptString                   `json:"room"`
	Secret      OptWebhookConfigSecret      `json:"secret"`
	Subdomain   OptString                   `json:"subdomain"`
	Token       OptString                   `json:"token"`
	URL         OptWebhookConfigURL         `json:"url"`
}

// Ref: #/components/schemas/hook-delivery
type HookDelivery struct {
	Action         NilString            `json:"action"`
	DeliveredAt    time.Time            `json:"delivered_at"`
	Duration       float64              `json:"duration"`
	Event          string               `json:"event"`
	GUID           string               `json:"guid"`
	ID             int                  `json:"id"`
	InstallationID NilInt               `json:"installation_id"`
	Redelivery     bool                 `json:"redelivery"`
	RepositoryID   NilInt               `json:"repository_id"`
	Request        HookDeliveryRequest  `json:"request"`
	Response       HookDeliveryResponse `json:"response"`
	Status         string               `json:"status"`
	StatusCode     int                  `json:"status_code"`
	URL            OptString            `json:"url"`
}

// Ref: #/components/schemas/hook-delivery-item
type HookDeliveryItem struct {
	Action         NilString `json:"action"`
	DeliveredAt    time.Time `json:"delivered_at"`
	Duration       float64   `json:"duration"`
	Event          string    `json:"event"`
	GUID           string    `json:"guid"`
	ID             int       `json:"id"`
	InstallationID NilInt    `json:"installation_id"`
	Redelivery     bool      `json:"redelivery"`
	RepositoryID   NilInt    `json:"repository_id"`
	Status         string    `json:"status"`
	StatusCode     int       `json:"status_code"`
}

type HookDeliveryRequest struct {
	Headers *HookDeliveryRequestHeaders `json:"headers"`
	Payload *HookDeliveryRequestPayload `json:"payload"`
}

type HookDeliveryRequestHeaders struct{}

type HookDeliveryRequestPayload struct{}

type HookDeliveryResponse struct {
	Headers *HookDeliveryResponseHeaders `json:"headers"`
	Payload NilString                    `json:"payload"`
}

type HookDeliveryResponseHeaders struct{}

// Ref: #/components/schemas/hook-response
type HookResponse struct {
	Code    NilInt    `json:"code"`
	Message NilString `json:"message"`
	Status  NilString `json:"status"`
}

// Ref: #/components/schemas/hovercard
type Hovercard struct {
	Contexts []HovercardContextsItem `json:"contexts"`
}

type HovercardContextsItem struct {
	Message string `json:"message"`
	Octicon string `json:"octicon"`
}

// Ref: #/components/schemas/import
type Import struct {
	AuthorsCount    OptNilInt                  `json:"authors_count"`
	AuthorsURL      url.URL                    `json:"authors_url"`
	CommitCount     OptNilInt                  `json:"commit_count"`
	ErrorMessage    OptNilString               `json:"error_message"`
	FailedStep      OptNilString               `json:"failed_step"`
	HasLargeFiles   OptBool                    `json:"has_large_files"`
	HTMLURL         url.URL                    `json:"html_url"`
	ImportPercent   OptNilInt                  `json:"import_percent"`
	LargeFilesCount OptInt                     `json:"large_files_count"`
	LargeFilesSize  OptInt                     `json:"large_files_size"`
	Message         OptString                  `json:"message"`
	ProjectChoices  []ImportProjectChoicesItem `json:"project_choices"`
	PushPercent     OptNilInt                  `json:"push_percent"`
	RepositoryURL   url.URL                    `json:"repository_url"`
	Status          ImportStatus               `json:"status"`
	StatusText      OptNilString               `json:"status_text"`
	SvcRoot         OptString                  `json:"svc_root"`
	SvnRoot         OptString                  `json:"svn_root"`
	TfvcProject     OptString                  `json:"tfvc_project"`
	URL             url.URL                    `json:"url"`
	UseLfs          OptBool                    `json:"use_lfs"`
	Vcs             NilString                  `json:"vcs"`
	VcsURL          string                     `json:"vcs_url"`
}

func (*Import) migrationsGetImportStatusRes() {}

type ImportProjectChoicesItem struct {
	HumanName   OptString `json:"human_name"`
	TfvcProject OptString `json:"tfvc_project"`
	Vcs         OptString `json:"vcs"`
}

type ImportStatus string

const (
	ImportStatusAuth                   ImportStatus = "auth"
	ImportStatusError                  ImportStatus = "error"
	ImportStatusNone                   ImportStatus = "none"
	ImportStatusDetecting              ImportStatus = "detecting"
	ImportStatusChoose                 ImportStatus = "choose"
	ImportStatusAuthFailed             ImportStatus = "auth_failed"
	ImportStatusImporting              ImportStatus = "importing"
	ImportStatusMapping                ImportStatus = "mapping"
	ImportStatusWaitingToPush          ImportStatus = "waiting_to_push"
	ImportStatusPushing                ImportStatus = "pushing"
	ImportStatusComplete               ImportStatus = "complete"
	ImportStatusSetup                  ImportStatus = "setup"
	ImportStatusUnknown                ImportStatus = "unknown"
	ImportStatusDetectionFoundMultiple ImportStatus = "detection_found_multiple"
	ImportStatusDetectionFoundNothing  ImportStatus = "detection_found_nothing"
	ImportStatusDetectionNeedsAuth     ImportStatus = "detection_needs_auth"
)

// Ref: #/components/schemas/installation-token
type InstallationToken struct {
	ExpiresAt              string                                  `json:"expires_at"`
	HasMultipleSingleFiles OptBool                                 `json:"has_multiple_single_files"`
	Permissions            OptAppPermissions                       `json:"permissions"`
	Repositories           []Repository                            `json:"repositories"`
	RepositorySelection    OptInstallationTokenRepositorySelection `json:"repository_selection"`
	SingleFile             OptString                               `json:"single_file"`
	SingleFilePaths        []string                                `json:"single_file_paths"`
	Token                  string                                  `json:"token"`
}

type InstallationTokenRepositorySelection string

const (
	InstallationTokenRepositorySelectionAll      InstallationTokenRepositorySelection = "all"
	InstallationTokenRepositorySelectionSelected InstallationTokenRepositorySelection = "selected"
)

// Ref: #/components/schemas/integration
type Integration struct {
	ClientID           OptString              `json:"client_id"`
	ClientSecret       OptString              `json:"client_secret"`
	CreatedAt          time.Time              `json:"created_at"`
	Description        NilString              `json:"description"`
	Events             []string               `json:"events"`
	ExternalURL        url.URL                `json:"external_url"`
	HTMLURL            url.URL                `json:"html_url"`
	ID                 int                    `json:"id"`
	InstallationsCount OptInt                 `json:"installations_count"`
	Name               string                 `json:"name"`
	NodeID             string                 `json:"node_id"`
	Owner              NilNullableSimpleUser  `json:"owner"`
	Pem                OptString              `json:"pem"`
	Permissions        IntegrationPermissions `json:"permissions"`
	Slug               OptString              `json:"slug"`
	UpdatedAt          time.Time              `json:"updated_at"`
	WebhookSecret      OptNilString           `json:"webhook_secret"`
}

func (*Integration) appsGetBySlugRes() {}

type IntegrationPermissions struct {
	Checks      OptString `json:"checks"`
	Contents    OptString `json:"contents"`
	Deployments OptString `json:"deployments"`
	Issues      OptString `json:"issues"`
	Metadata    OptString `json:"metadata"`
}

// Ref: #/components/schemas/interaction-expiry
type InteractionExpiry string

const (
	InteractionExpiryOneDay    InteractionExpiry = "one_day"
	InteractionExpiryThreeDays InteractionExpiry = "three_days"
	InteractionExpiryOneWeek   InteractionExpiry = "one_week"
	InteractionExpiryOneMonth  InteractionExpiry = "one_month"
	InteractionExpirySixMonths InteractionExpiry = "six_months"
)

// Ref: #/components/schemas/interaction-group
type InteractionGroup string

const (
	InteractionGroupExistingUsers     InteractionGroup = "existing_users"
	InteractionGroupContributorsOnly  InteractionGroup = "contributors_only"
	InteractionGroupCollaboratorsOnly InteractionGroup = "collaborators_only"
)

// Ref: #/components/schemas/interaction-limit
type InteractionLimit struct {
	Expiry OptInteractionExpiry `json:"expiry"`
	Limit  InteractionGroup     `json:"limit"`
}

// Ref: #/components/schemas/interaction-limit-response
type InteractionLimitResponse struct {
	ExpiresAt time.Time        `json:"expires_at"`
	Limit     InteractionGroup `json:"limit"`
	Origin    string           `json:"origin"`
}

func (*InteractionLimitResponse) interactionsSetRestrictionsForRepoRes() {}

// InteractionsRemoveRestrictionsForAuthenticatedUserNoContent is response for InteractionsRemoveRestrictionsForAuthenticatedUser operation.
type InteractionsRemoveRestrictionsForAuthenticatedUserNoContent struct{}

// InteractionsRemoveRestrictionsForOrgNoContent is response for InteractionsRemoveRestrictionsForOrg operation.
type InteractionsRemoveRestrictionsForOrgNoContent struct{}

// InteractionsRemoveRestrictionsForRepoConflict is response for InteractionsRemoveRestrictionsForRepo operation.
type InteractionsRemoveRestrictionsForRepoConflict struct{}

func (*InteractionsRemoveRestrictionsForRepoConflict) interactionsRemoveRestrictionsForRepoRes() {}

// InteractionsRemoveRestrictionsForRepoNoContent is response for InteractionsRemoveRestrictionsForRepo operation.
type InteractionsRemoveRestrictionsForRepoNoContent struct{}

func (*InteractionsRemoveRestrictionsForRepoNoContent) interactionsRemoveRestrictionsForRepoRes() {}

// InteractionsSetRestrictionsForRepoConflict is response for InteractionsSetRestrictionsForRepo operation.
type InteractionsSetRestrictionsForRepoConflict struct{}

func (*InteractionsSetRestrictionsForRepoConflict) interactionsSetRestrictionsForRepoRes() {}

// Ref: #/components/schemas/issue-comment
type IssueComment struct {
	AuthorAssociation     AuthorAssociation         `json:"author_association"`
	Body                  OptString                 `json:"body"`
	BodyHTML              OptString                 `json:"body_html"`
	BodyText              OptString                 `json:"body_text"`
	CreatedAt             time.Time                 `json:"created_at"`
	HTMLURL               url.URL                   `json:"html_url"`
	ID                    int                       `json:"id"`
	IssueURL              url.URL                   `json:"issue_url"`
	NodeID                string                    `json:"node_id"`
	PerformedViaGithubApp OptNilNullableIntegration `json:"performed_via_github_app"`
	Reactions             OptReactionRollup         `json:"reactions"`
	UpdatedAt             time.Time                 `json:"updated_at"`
	URL                   url.URL                   `json:"url"`
	User                  NilNullableSimpleUser     `json:"user"`
}

func (*IssueComment) issuesGetCommentRes() {}

// Ref: #/components/schemas/issue-event
type IssueEvent struct {
	Actor                 NilNullableSimpleUser        `json:"actor"`
	Assignee              OptNilNullableSimpleUser     `json:"assignee"`
	Assigner              OptNilNullableSimpleUser     `json:"assigner"`
	AuthorAssociation     OptAuthorAssociation         `json:"author_association"`
	CommitID              NilString                    `json:"commit_id"`
	CommitURL             NilString                    `json:"commit_url"`
	CreatedAt             time.Time                    `json:"created_at"`
	DismissedReview       OptIssueEventDismissedReview `json:"dismissed_review"`
	Event                 string                       `json:"event"`
	ID                    int                          `json:"id"`
	Issue                 OptIssueSimple               `json:"issue"`
	Label                 OptIssueEventLabel           `json:"label"`
	LockReason            OptNilString                 `json:"lock_reason"`
	Milestone             OptIssueEventMilestone       `json:"milestone"`
	NodeID                string                       `json:"node_id"`
	PerformedViaGithubApp OptNilNullableIntegration    `json:"performed_via_github_app"`
	ProjectCard           OptIssueEventProjectCard     `json:"project_card"`
	Rename                OptIssueEventRename          `json:"rename"`
	RequestedReviewer     OptNilNullableSimpleUser     `json:"requested_reviewer"`
	RequestedTeam         OptTeam                      `json:"requested_team"`
	ReviewRequester       OptNilNullableSimpleUser     `json:"review_requester"`
	URL                   url.URL                      `json:"url"`
}

func (*IssueEvent) issuesGetEventRes() {}

// Ref: #/components/schemas/issue-event-dismissed-review
type IssueEventDismissedReview struct {
	DismissalCommitID OptNilString `json:"dismissal_commit_id"`
	DismissalMessage  NilString    `json:"dismissal_message"`
	ReviewID          int          `json:"review_id"`
	State             string       `json:"state"`
}

// Ref: #/components/schemas/issue-event-label
type IssueEventLabel struct {
	Color NilString `json:"color"`
	Name  NilString `json:"name"`
}

// Ref: #/components/schemas/issue-event-milestone
type IssueEventMilestone struct {
	Title string `json:"title"`
}

// Ref: #/components/schemas/issue-event-project-card
type IssueEventProjectCard struct {
	ColumnName         string    `json:"column_name"`
	ID                 int       `json:"id"`
	PreviousColumnName OptString `json:"previous_column_name"`
	ProjectID          int       `json:"project_id"`
	ProjectURL         url.URL   `json:"project_url"`
	URL                url.URL   `json:"url"`
}

// Ref: #/components/schemas/issue-event-rename
type IssueEventRename struct {
	From string `json:"from"`
	To   string `json:"to"`
}

// Ref: #/components/schemas/issue-search-result-item
type IssueSearchResultItem struct {
	ActiveLockReason      OptNilString                        `json:"active_lock_reason"`
	Assignee              NilNullableSimpleUser               `json:"assignee"`
	Assignees             OptNilSimpleUserArray               `json:"assignees"`
	AuthorAssociation     AuthorAssociation                   `json:"author_association"`
	Body                  OptString                           `json:"body"`
	BodyHTML              OptString                           `json:"body_html"`
	BodyText              OptString                           `json:"body_text"`
	ClosedAt              NilTime                             `json:"closed_at"`
	Comments              int                                 `json:"comments"`
	CommentsURL           url.URL                             `json:"comments_url"`
	CreatedAt             time.Time                           `json:"created_at"`
	Draft                 OptBool                             `json:"draft"`
	EventsURL             url.URL                             `json:"events_url"`
	HTMLURL               url.URL                             `json:"html_url"`
	ID                    int                                 `json:"id"`
	Labels                []IssueSearchResultItemLabelsItem   `json:"labels"`
	LabelsURL             string                              `json:"labels_url"`
	Locked                bool                                `json:"locked"`
	Milestone             NilNullableMilestone                `json:"milestone"`
	NodeID                string                              `json:"node_id"`
	Number                int                                 `json:"number"`
	PerformedViaGithubApp OptNilNullableIntegration           `json:"performed_via_github_app"`
	PullRequest           OptIssueSearchResultItemPullRequest `json:"pull_request"`
	Repository            OptRepository                       `json:"repository"`
	RepositoryURL         url.URL                             `json:"repository_url"`
	Score                 float64                             `json:"score"`
	State                 string                              `json:"state"`
	TextMatches           *SearchResultTextMatches            `json:"text_matches"`
	TimelineURL           OptURL                              `json:"timeline_url"`
	Title                 string                              `json:"title"`
	UpdatedAt             time.Time                           `json:"updated_at"`
	URL                   url.URL                             `json:"url"`
	User                  NilNullableSimpleUser               `json:"user"`
}

type IssueSearchResultItemLabelsItem struct {
	Color       OptString    `json:"color"`
	Default     OptBool      `json:"default"`
	Description OptNilString `json:"description"`
	ID          OptInt64     `json:"id"`
	Name        OptString    `json:"name"`
	NodeID      OptString    `json:"node_id"`
	URL         OptString    `json:"url"`
}

type IssueSearchResultItemPullRequest struct {
	DiffURL  NilURL     `json:"diff_url"`
	HTMLURL  NilURL     `json:"html_url"`
	MergedAt OptNilTime `json:"merged_at"`
	PatchURL NilURL     `json:"patch_url"`
	URL      NilURL     `json:"url"`
}

// Ref: #/components/schemas/issue-simple
type IssueSimple struct {
	ActiveLockReason      OptNilString              `json:"active_lock_reason"`
	Assignee              NilNullableSimpleUser     `json:"assignee"`
	Assignees             OptNilSimpleUserArray     `json:"assignees"`
	AuthorAssociation     AuthorAssociation         `json:"author_association"`
	Body                  OptString                 `json:"body"`
	BodyHTML              OptString                 `json:"body_html"`
	BodyText              OptString                 `json:"body_text"`
	ClosedAt              NilTime                   `json:"closed_at"`
	Comments              int                       `json:"comments"`
	CommentsURL           url.URL                   `json:"comments_url"`
	CreatedAt             time.Time                 `json:"created_at"`
	EventsURL             url.URL                   `json:"events_url"`
	HTMLURL               url.URL                   `json:"html_url"`
	ID                    int                       `json:"id"`
	Labels                []Label                   `json:"labels"`
	LabelsURL             string                    `json:"labels_url"`
	Locked                bool                      `json:"locked"`
	Milestone             NilNullableMilestone      `json:"milestone"`
	NodeID                string                    `json:"node_id"`
	Number                int                       `json:"number"`
	PerformedViaGithubApp OptNilNullableIntegration `json:"performed_via_github_app"`
	PullRequest           OptIssueSimplePullRequest `json:"pull_request"`
	Repository            OptRepository             `json:"repository"`
	RepositoryURL         url.URL                   `json:"repository_url"`
	State                 string                    `json:"state"`
	TimelineURL           OptURL                    `json:"timeline_url"`
	Title                 string                    `json:"title"`
	UpdatedAt             time.Time                 `json:"updated_at"`
	URL                   url.URL                   `json:"url"`
	User                  NilNullableSimpleUser     `json:"user"`
}

type IssueSimplePullRequest struct {
	DiffURL  NilURL     `json:"diff_url"`
	HTMLURL  NilURL     `json:"html_url"`
	MergedAt OptNilTime `json:"merged_at"`
	PatchURL NilURL     `json:"patch_url"`
	URL      NilURL     `json:"url"`
}

type IssuesAddAssigneesReq struct {
	Assignees []string `json:"assignees"`
}

// IssuesCheckUserCanBeAssignedNoContent is response for IssuesCheckUserCanBeAssigned operation.
type IssuesCheckUserCanBeAssignedNoContent struct{}

func (*IssuesCheckUserCanBeAssignedNoContent) issuesCheckUserCanBeAssignedRes() {}

type IssuesCreateCommentReq struct {
	Body string `json:"body"`
}

type IssuesCreateLabelReq struct {
	Color       OptString `json:"color"`
	Description OptString `json:"description"`
	Name        string    `json:"name"`
}

type IssuesCreateMilestoneReq struct {
	Description OptString                        `json:"description"`
	DueOn       OptTime                          `json:"due_on"`
	State       OptIssuesCreateMilestoneReqState `json:"state"`
	Title       string                           `json:"title"`
}

type IssuesCreateMilestoneReqState string

const (
	IssuesCreateMilestoneReqStateOpen   IssuesCreateMilestoneReqState = "open"
	IssuesCreateMilestoneReqStateClosed IssuesCreateMilestoneReqState = "closed"
)

// IssuesDeleteCommentNoContent is response for IssuesDeleteComment operation.
type IssuesDeleteCommentNoContent struct{}

// IssuesDeleteLabelNoContent is response for IssuesDeleteLabel operation.
type IssuesDeleteLabelNoContent struct{}

// IssuesDeleteMilestoneNoContent is response for IssuesDeleteMilestone operation.
type IssuesDeleteMilestoneNoContent struct{}

func (*IssuesDeleteMilestoneNoContent) issuesDeleteMilestoneRes() {}

type IssuesGetEventApplicationJSONForbidden BasicError

func (*IssuesGetEventApplicationJSONForbidden) issuesGetEventRes() {}

type IssuesGetEventApplicationJSONGone BasicError

func (*IssuesGetEventApplicationJSONGone) issuesGetEventRes() {}

type IssuesGetEventApplicationJSONNotFound BasicError

func (*IssuesGetEventApplicationJSONNotFound) issuesGetEventRes() {}

type IssuesListAssigneesOKApplicationJSON []SimpleUser

func (*IssuesListAssigneesOKApplicationJSON) issuesListAssigneesRes() {}

type IssuesListCommentsApplicationJSONGone BasicError

func (*IssuesListCommentsApplicationJSONGone) issuesListCommentsRes() {}

type IssuesListCommentsApplicationJSONNotFound BasicError

func (*IssuesListCommentsApplicationJSONNotFound) issuesListCommentsRes() {}

type IssuesListCommentsForRepoDirection string

const (
	IssuesListCommentsForRepoDirectionAsc  IssuesListCommentsForRepoDirection = "asc"
	IssuesListCommentsForRepoDirectionDesc IssuesListCommentsForRepoDirection = "desc"
)

type IssuesListCommentsForRepoSort string

const (
	IssuesListCommentsForRepoSortCreated IssuesListCommentsForRepoSort = "created"
	IssuesListCommentsForRepoSortUpdated IssuesListCommentsForRepoSort = "updated"
)

type IssuesListCommentsOKApplicationJSON []IssueComment

func (*IssuesListCommentsOKApplicationJSON) issuesListCommentsRes() {}

type IssuesListDirection string

const (
	IssuesListDirectionAsc  IssuesListDirection = "asc"
	IssuesListDirectionDesc IssuesListDirection = "desc"
)

type IssuesListFilter string

const (
	IssuesListFilterAssigned   IssuesListFilter = "assigned"
	IssuesListFilterCreated    IssuesListFilter = "created"
	IssuesListFilterMentioned  IssuesListFilter = "mentioned"
	IssuesListFilterSubscribed IssuesListFilter = "subscribed"
	IssuesListFilterRepos      IssuesListFilter = "repos"
	IssuesListFilterAll        IssuesListFilter = "all"
)

type IssuesListForAuthenticatedUserDirection string

const (
	IssuesListForAuthenticatedUserDirectionAsc  IssuesListForAuthenticatedUserDirection = "asc"
	IssuesListForAuthenticatedUserDirectionDesc IssuesListForAuthenticatedUserDirection = "desc"
)

type IssuesListForAuthenticatedUserFilter string

const (
	IssuesListForAuthenticatedUserFilterAssigned   IssuesListForAuthenticatedUserFilter = "assigned"
	IssuesListForAuthenticatedUserFilterCreated    IssuesListForAuthenticatedUserFilter = "created"
	IssuesListForAuthenticatedUserFilterMentioned  IssuesListForAuthenticatedUserFilter = "mentioned"
	IssuesListForAuthenticatedUserFilterSubscribed IssuesListForAuthenticatedUserFilter = "subscribed"
	IssuesListForAuthenticatedUserFilterRepos      IssuesListForAuthenticatedUserFilter = "repos"
	IssuesListForAuthenticatedUserFilterAll        IssuesListForAuthenticatedUserFilter = "all"
)

type IssuesListForAuthenticatedUserSort string

const (
	IssuesListForAuthenticatedUserSortCreated  IssuesListForAuthenticatedUserSort = "created"
	IssuesListForAuthenticatedUserSortUpdated  IssuesListForAuthenticatedUserSort = "updated"
	IssuesListForAuthenticatedUserSortComments IssuesListForAuthenticatedUserSort = "comments"
)

type IssuesListForAuthenticatedUserState string

const (
	IssuesListForAuthenticatedUserStateOpen   IssuesListForAuthenticatedUserState = "open"
	IssuesListForAuthenticatedUserStateClosed IssuesListForAuthenticatedUserState = "closed"
	IssuesListForAuthenticatedUserStateAll    IssuesListForAuthenticatedUserState = "all"
)

type IssuesListForOrgDirection string

const (
	IssuesListForOrgDirectionAsc  IssuesListForOrgDirection = "asc"
	IssuesListForOrgDirectionDesc IssuesListForOrgDirection = "desc"
)

type IssuesListForOrgFilter string

const (
	IssuesListForOrgFilterAssigned   IssuesListForOrgFilter = "assigned"
	IssuesListForOrgFilterCreated    IssuesListForOrgFilter = "created"
	IssuesListForOrgFilterMentioned  IssuesListForOrgFilter = "mentioned"
	IssuesListForOrgFilterSubscribed IssuesListForOrgFilter = "subscribed"
	IssuesListForOrgFilterRepos      IssuesListForOrgFilter = "repos"
	IssuesListForOrgFilterAll        IssuesListForOrgFilter = "all"
)

type IssuesListForOrgSort string

const (
	IssuesListForOrgSortCreated  IssuesListForOrgSort = "created"
	IssuesListForOrgSortUpdated  IssuesListForOrgSort = "updated"
	IssuesListForOrgSortComments IssuesListForOrgSort = "comments"
)

type IssuesListForOrgState string

const (
	IssuesListForOrgStateOpen   IssuesListForOrgState = "open"
	IssuesListForOrgStateClosed IssuesListForOrgState = "closed"
	IssuesListForOrgStateAll    IssuesListForOrgState = "all"
)

type IssuesListForRepoDirection string

const (
	IssuesListForRepoDirectionAsc  IssuesListForRepoDirection = "asc"
	IssuesListForRepoDirectionDesc IssuesListForRepoDirection = "desc"
)

type IssuesListForRepoSort string

const (
	IssuesListForRepoSortCreated  IssuesListForRepoSort = "created"
	IssuesListForRepoSortUpdated  IssuesListForRepoSort = "updated"
	IssuesListForRepoSortComments IssuesListForRepoSort = "comments"
)

type IssuesListForRepoState string

const (
	IssuesListForRepoStateOpen   IssuesListForRepoState = "open"
	IssuesListForRepoStateClosed IssuesListForRepoState = "closed"
	IssuesListForRepoStateAll    IssuesListForRepoState = "all"
)

type IssuesListLabelsForRepoOKApplicationJSON []Label

func (*IssuesListLabelsForRepoOKApplicationJSON) issuesListLabelsForRepoRes() {}

type IssuesListLabelsOnIssueOKApplicationJSON []Label

func (*IssuesListLabelsOnIssueOKApplicationJSON) issuesListLabelsOnIssueRes() {}

type IssuesListMilestonesDirection string

const (
	IssuesListMilestonesDirectionAsc  IssuesListMilestonesDirection = "asc"
	IssuesListMilestonesDirectionDesc IssuesListMilestonesDirection = "desc"
)

type IssuesListMilestonesOKApplicationJSON []Milestone

func (*IssuesListMilestonesOKApplicationJSON) issuesListMilestonesRes() {}

type IssuesListMilestonesSort string

const (
	IssuesListMilestonesSortDueOn        IssuesListMilestonesSort = "due_on"
	IssuesListMilestonesSortCompleteness IssuesListMilestonesSort = "completeness"
)

type IssuesListMilestonesState string

const (
	IssuesListMilestonesStateOpen   IssuesListMilestonesState = "open"
	IssuesListMilestonesStateClosed IssuesListMilestonesState = "closed"
	IssuesListMilestonesStateAll    IssuesListMilestonesState = "all"
)

type IssuesListSort string

const (
	IssuesListSortCreated  IssuesListSort = "created"
	IssuesListSortUpdated  IssuesListSort = "updated"
	IssuesListSortComments IssuesListSort = "comments"
)

type IssuesListState string

const (
	IssuesListStateOpen   IssuesListState = "open"
	IssuesListStateClosed IssuesListState = "closed"
	IssuesListStateAll    IssuesListState = "all"
)

// IssuesLockNoContent is response for IssuesLock operation.
type IssuesLockNoContent struct{}

type IssuesLockReq struct {
	LockReason OptIssuesLockReqLockReason `json:"lock_reason"`
}

type IssuesLockReqLockReason string

const (
	IssuesLockReqLockReasonOffMinusTopic IssuesLockReqLockReason = "off-topic"
	IssuesLockReqLockReasonTooHeated     IssuesLockReqLockReason = "too heated"
	IssuesLockReqLockReasonResolved      IssuesLockReqLockReason = "resolved"
	IssuesLockReqLockReasonSpam          IssuesLockReqLockReason = "spam"
)

// IssuesRemoveAllLabelsNoContent is response for IssuesRemoveAllLabels operation.
type IssuesRemoveAllLabelsNoContent struct{}

func (*IssuesRemoveAllLabelsNoContent) issuesRemoveAllLabelsRes() {}

type IssuesRemoveAssigneesReq struct {
	Assignees []string `json:"assignees"`
}

type IssuesRemoveLabelApplicationJSONGone BasicError

func (*IssuesRemoveLabelApplicationJSONGone) issuesRemoveLabelRes() {}

type IssuesRemoveLabelApplicationJSONNotFound BasicError

func (*IssuesRemoveLabelApplicationJSONNotFound) issuesRemoveLabelRes() {}

type IssuesRemoveLabelOKApplicationJSON []Label

func (*IssuesRemoveLabelOKApplicationJSON) issuesRemoveLabelRes() {}

type IssuesUnlockApplicationJSONForbidden BasicError

func (*IssuesUnlockApplicationJSONForbidden) issuesUnlockRes() {}

type IssuesUnlockApplicationJSONNotFound BasicError

func (*IssuesUnlockApplicationJSONNotFound) issuesUnlockRes() {}

// IssuesUnlockNoContent is response for IssuesUnlock operation.
type IssuesUnlockNoContent struct{}

func (*IssuesUnlockNoContent) issuesUnlockRes() {}

type IssuesUpdateCommentReq struct {
	Body string `json:"body"`
}

type IssuesUpdateLabelReq struct {
	Color       OptString `json:"color"`
	Description OptString `json:"description"`
	NewName     OptString `json:"new_name"`
}

type IssuesUpdateMilestoneReq struct {
	Description OptString                        `json:"description"`
	DueOn       OptTime                          `json:"due_on"`
	State       OptIssuesUpdateMilestoneReqState `json:"state"`
	Title       OptString                        `json:"title"`
}

type IssuesUpdateMilestoneReqState string

const (
	IssuesUpdateMilestoneReqStateOpen   IssuesUpdateMilestoneReqState = "open"
	IssuesUpdateMilestoneReqStateClosed IssuesUpdateMilestoneReqState = "closed"
)

// Ref: #/components/schemas/job
type Job struct {
	CheckRunURL string         `json:"check_run_url"`
	CompletedAt NilTime        `json:"completed_at"`
	Conclusion  NilString      `json:"conclusion"`
	HeadSha     string         `json:"head_sha"`
	HTMLURL     NilString      `json:"html_url"`
	ID          int            `json:"id"`
	Name        string         `json:"name"`
	NodeID      string         `json:"node_id"`
	RunID       int            `json:"run_id"`
	RunURL      string         `json:"run_url"`
	StartedAt   time.Time      `json:"started_at"`
	Status      JobStatus      `json:"status"`
	Steps       []JobStepsItem `json:"steps"`
	URL         string         `json:"url"`
}

type JobStatus string

const (
	JobStatusQueued     JobStatus = "queued"
	JobStatusInProgress JobStatus = "in_progress"
	JobStatusCompleted  JobStatus = "completed"
)

type JobStepsItem struct {
	CompletedAt OptNilTime         `json:"completed_at"`
	Conclusion  NilString          `json:"conclusion"`
	Name        string             `json:"name"`
	Number      int                `json:"number"`
	StartedAt   OptNilTime         `json:"started_at"`
	Status      JobStepsItemStatus `json:"status"`
}

type JobStepsItemStatus string

const (
	JobStepsItemStatusQueued     JobStepsItemStatus = "queued"
	JobStepsItemStatusInProgress JobStepsItemStatus = "in_progress"
	JobStepsItemStatusCompleted  JobStepsItemStatus = "completed"
)

// Ref: #/components/schemas/key
type Key struct {
	CreatedAt time.Time `json:"created_at"`
	ID        int       `json:"id"`
	Key       string    `json:"key"`
	ReadOnly  bool      `json:"read_only"`
	Title     string    `json:"title"`
	URL       string    `json:"url"`
	Verified  bool      `json:"verified"`
}

func (*Key) usersGetPublicSSHKeyForAuthenticatedRes() {}

// Ref: #/components/schemas/key-simple
type KeySimple struct {
	ID  int    `json:"id"`
	Key string `json:"key"`
}

// Ref: #/components/schemas/label
type Label struct {
	Color       string    `json:"color"`
	Default     bool      `json:"default"`
	Description NilString `json:"description"`
	ID          int64     `json:"id"`
	Name        string    `json:"name"`
	NodeID      string    `json:"node_id"`
	URL         url.URL   `json:"url"`
}

func (*Label) issuesGetLabelRes() {}

// Ref: #/components/schemas/label-search-result-item
type LabelSearchResultItem struct {
	Color       string                   `json:"color"`
	Default     bool                     `json:"default"`
	Description NilString                `json:"description"`
	ID          int                      `json:"id"`
	Name        string                   `json:"name"`
	NodeID      string                   `json:"node_id"`
	Score       float64                  `json:"score"`
	TextMatches *SearchResultTextMatches `json:"text_matches"`
	URL         url.URL                  `json:"url"`
}

// Ref: #/components/schemas/language
type Language struct{}

// Ref: #/components/schemas/license
type License struct {
	Body           string    `json:"body"`
	Conditions     []string  `json:"conditions"`
	Description    string    `json:"description"`
	Featured       bool      `json:"featured"`
	HTMLURL        url.URL   `json:"html_url"`
	Implementation string    `json:"implementation"`
	Key            string    `json:"key"`
	Limitations    []string  `json:"limitations"`
	Name           string    `json:"name"`
	NodeID         string    `json:"node_id"`
	Permissions    []string  `json:"permissions"`
	SpdxID         NilString `json:"spdx_id"`
	URL            NilURL    `json:"url"`
}

func (*License) licensesGetRes() {}

// Ref: #/components/schemas/license-content
type LicenseContent struct {
	Links       LicenseContentLinks      `json:"_links"`
	Content     string                   `json:"content"`
	DownloadURL NilURL                   `json:"download_url"`
	Encoding    string                   `json:"encoding"`
	GitURL      NilURL                   `json:"git_url"`
	HTMLURL     NilURL                   `json:"html_url"`
	License     NilNullableLicenseSimple `json:"license"`
	Name        string                   `json:"name"`
	Path        string                   `json:"path"`
	Sha         string                   `json:"sha"`
	Size        int                      `json:"size"`
	Type        string                   `json:"type"`
	URL         url.URL                  `json:"url"`
}

type LicenseContentLinks struct {
	Git  NilURL  `json:"git"`
	HTML NilURL  `json:"html"`
	Self url.URL `json:"self"`
}

// Ref: #/components/schemas/license-simple
type LicenseSimple struct {
	HTMLURL OptURL    `json:"html_url"`
	Key     string    `json:"key"`
	Name    string    `json:"name"`
	NodeID  string    `json:"node_id"`
	SpdxID  NilString `json:"spdx_id"`
	URL     NilURL    `json:"url"`
}

// LicensesGetAllCommonlyUsedNotModified is response for LicensesGetAllCommonlyUsed operation.
type LicensesGetAllCommonlyUsedNotModified struct{}

func (*LicensesGetAllCommonlyUsedNotModified) licensesGetAllCommonlyUsedRes() {}

type LicensesGetAllCommonlyUsedOKApplicationJSON []LicenseSimple

func (*LicensesGetAllCommonlyUsedOKApplicationJSON) licensesGetAllCommonlyUsedRes() {}

type LicensesGetApplicationJSONForbidden BasicError

func (*LicensesGetApplicationJSONForbidden) licensesGetRes() {}

type LicensesGetApplicationJSONNotFound BasicError

func (*LicensesGetApplicationJSONNotFound) licensesGetRes() {}

// LicensesGetNotModified is response for LicensesGet operation.
type LicensesGetNotModified struct{}

func (*LicensesGetNotModified) licensesGetRes() {}

// Ref: #/components/schemas/link
type Link struct {
	Href string `json:"href"`
}

// Ref: #/components/schemas/link-with-type
type LinkWithType struct {
	Href string `json:"href"`
	Type string `json:"type"`
}

// MarkdownRenderNotModified is response for MarkdownRender operation.
type MarkdownRenderNotModified struct{}

func (*MarkdownRenderNotModified) markdownRenderRes() {}

type MarkdownRenderOKTextHTML string

func (*MarkdownRenderOKTextHTML) markdownRenderRes() {}

// MarkdownRenderRawNotModified is response for MarkdownRenderRaw operation.
type MarkdownRenderRawNotModified struct{}

func (*MarkdownRenderRawNotModified) markdownRenderRawRes() {}

type MarkdownRenderRawOKTextHTML string

func (*MarkdownRenderRawOKTextHTML) markdownRenderRawRes() {}

type MarkdownRenderRawReqTextPlain string

func (*MarkdownRenderRawReqTextPlain) markdownRenderRawReq() {}

type MarkdownRenderRawReqTextXMarkdown string

func (*MarkdownRenderRawReqTextXMarkdown) markdownRenderRawReq() {}

type MarkdownRenderReq struct {
	Context OptString                `json:"context"`
	Mode    OptMarkdownRenderReqMode `json:"mode"`
	Text    string                   `json:"text"`
}

type MarkdownRenderReqMode string

const (
	MarkdownRenderReqModeMarkdown MarkdownRenderReqMode = "markdown"
	MarkdownRenderReqModeGfm      MarkdownRenderReqMode = "gfm"
)

// Ref: #/components/schemas/marketplace-account
type MarketplaceAccount struct {
	Email                    OptNilString `json:"email"`
	ID                       int          `json:"id"`
	Login                    string       `json:"login"`
	NodeID                   OptString    `json:"node_id"`
	OrganizationBillingEmail OptNilString `json:"organization_billing_email"`
	Type                     string       `json:"type"`
	URL                      url.URL      `json:"url"`
}

// Ref: #/components/schemas/marketplace-listing-plan
type MarketplaceListingPlan struct {
	AccountsURL         url.URL   `json:"accounts_url"`
	Bullets             []string  `json:"bullets"`
	Description         string    `json:"description"`
	HasFreeTrial        bool      `json:"has_free_trial"`
	ID                  int       `json:"id"`
	MonthlyPriceInCents int       `json:"monthly_price_in_cents"`
	Name                string    `json:"name"`
	Number              int       `json:"number"`
	PriceModel          string    `json:"price_model"`
	State               string    `json:"state"`
	UnitName            NilString `json:"unit_name"`
	URL                 url.URL   `json:"url"`
	YearlyPriceInCents  int       `json:"yearly_price_in_cents"`
}

// Ref: #/components/schemas/marketplace-purchase
type MarketplacePurchase struct {
	Email                    OptNilString                                      `json:"email"`
	ID                       int                                               `json:"id"`
	Login                    string                                            `json:"login"`
	MarketplacePendingChange OptNilMarketplacePurchaseMarketplacePendingChange `json:"marketplace_pending_change"`
	MarketplacePurchase      MarketplacePurchaseMarketplacePurchase            `json:"marketplace_purchase"`
	OrganizationBillingEmail OptString                                         `json:"organization_billing_email"`
	Type                     string                                            `json:"type"`
	URL                      string                                            `json:"url"`
}

func (*MarketplacePurchase) appsGetSubscriptionPlanForAccountRes()        {}
func (*MarketplacePurchase) appsGetSubscriptionPlanForAccountStubbedRes() {}

type MarketplacePurchaseMarketplacePendingChange struct {
	EffectiveDate OptString                 `json:"effective_date"`
	ID            OptInt                    `json:"id"`
	IsInstalled   OptBool                   `json:"is_installed"`
	Plan          OptMarketplaceListingPlan `json:"plan"`
	UnitCount     OptNilInt                 `json:"unit_count"`
}

type MarketplacePurchaseMarketplacePurchase struct {
	BillingCycle    OptString                 `json:"billing_cycle"`
	FreeTrialEndsOn OptNilString              `json:"free_trial_ends_on"`
	IsInstalled     OptBool                   `json:"is_installed"`
	NextBillingDate OptNilString              `json:"next_billing_date"`
	OnFreeTrial     OptBool                   `json:"on_free_trial"`
	Plan            OptMarketplaceListingPlan `json:"plan"`
	UnitCount       OptNilInt                 `json:"unit_count"`
	UpdatedAt       OptString                 `json:"updated_at"`
}

// Ref: #/components/schemas/merged-upstream
type MergedUpstream struct {
	BaseBranch OptString                  `json:"base_branch"`
	MergeType  OptMergedUpstreamMergeType `json:"merge_type"`
	Message    OptString                  `json:"message"`
}

func (*MergedUpstream) reposMergeUpstreamRes() {}

type MergedUpstreamMergeType string

const (
	MergedUpstreamMergeTypeMerge            MergedUpstreamMergeType = "merge"
	MergedUpstreamMergeTypeFastMinusForward MergedUpstreamMergeType = "fast-forward"
	MergedUpstreamMergeTypeNone             MergedUpstreamMergeType = "none"
)

// MetaGetNotModified is response for MetaGet operation.
type MetaGetNotModified struct{}

func (*MetaGetNotModified) metaGetRes() {}

type MetaRootOK struct {
	AuthorizationsURL                string    `json:"authorizations_url"`
	CodeSearchURL                    string    `json:"code_search_url"`
	CommitSearchURL                  string    `json:"commit_search_url"`
	CurrentUserAuthorizationsHTMLURL string    `json:"current_user_authorizations_html_url"`
	CurrentUserRepositoriesURL       string    `json:"current_user_repositories_url"`
	CurrentUserURL                   string    `json:"current_user_url"`
	EmailsURL                        string    `json:"emails_url"`
	EmojisURL                        string    `json:"emojis_url"`
	EventsURL                        string    `json:"events_url"`
	FeedsURL                         string    `json:"feeds_url"`
	FollowersURL                     string    `json:"followers_url"`
	FollowingURL                     string    `json:"following_url"`
	GistsURL                         string    `json:"gists_url"`
	HubURL                           string    `json:"hub_url"`
	IssueSearchURL                   string    `json:"issue_search_url"`
	IssuesURL                        string    `json:"issues_url"`
	KeysURL                          string    `json:"keys_url"`
	LabelSearchURL                   string    `json:"label_search_url"`
	NotificationsURL                 string    `json:"notifications_url"`
	OrganizationRepositoriesURL      string    `json:"organization_repositories_url"`
	OrganizationTeamsURL             string    `json:"organization_teams_url"`
	OrganizationURL                  string    `json:"organization_url"`
	PublicGistsURL                   string    `json:"public_gists_url"`
	RateLimitURL                     string    `json:"rate_limit_url"`
	RepositorySearchURL              string    `json:"repository_search_url"`
	RepositoryURL                    string    `json:"repository_url"`
	StarredGistsURL                  string    `json:"starred_gists_url"`
	StarredURL                       string    `json:"starred_url"`
	TopicSearchURL                   OptString `json:"topic_search_url"`
	UserOrganizationsURL             string    `json:"user_organizations_url"`
	UserRepositoriesURL              string    `json:"user_repositories_url"`
	UserSearchURL                    string    `json:"user_search_url"`
	UserURL                          string    `json:"user_url"`
}

// Ref: #/components/schemas/migration
type Migration struct {
	ArchiveURL           OptURL                `json:"archive_url"`
	CreatedAt            time.Time             `json:"created_at"`
	Exclude              []string              `json:"exclude"`
	ExcludeAttachments   bool                  `json:"exclude_attachments"`
	ExcludeGitData       bool                  `json:"exclude_git_data"`
	ExcludeMetadata      bool                  `json:"exclude_metadata"`
	ExcludeOwnerProjects bool                  `json:"exclude_owner_projects"`
	ExcludeReleases      bool                  `json:"exclude_releases"`
	GUID                 string                `json:"guid"`
	ID                   int                   `json:"id"`
	LockRepositories     bool                  `json:"lock_repositories"`
	NodeID               string                `json:"node_id"`
	Owner                NilNullableSimpleUser `json:"owner"`
	Repositories         []Repository          `json:"repositories"`
	State                string                `json:"state"`
	UpdatedAt            time.Time             `json:"updated_at"`
	URL                  url.URL               `json:"url"`
}

func (*Migration) migrationsGetStatusForAuthenticatedUserRes() {}
func (*Migration) migrationsGetStatusForOrgRes()               {}

// MigrationsCancelImportNoContent is response for MigrationsCancelImport operation.
type MigrationsCancelImportNoContent struct{}

type MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONForbidden) migrationsDeleteArchiveForAuthenticatedUserRes() {
}

type MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONNotFound BasicError

func (*MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONNotFound) migrationsDeleteArchiveForAuthenticatedUserRes() {
}

type MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONUnauthorized) migrationsDeleteArchiveForAuthenticatedUserRes() {
}

// MigrationsDeleteArchiveForAuthenticatedUserNoContent is response for MigrationsDeleteArchiveForAuthenticatedUser operation.
type MigrationsDeleteArchiveForAuthenticatedUserNoContent struct{}

func (*MigrationsDeleteArchiveForAuthenticatedUserNoContent) migrationsDeleteArchiveForAuthenticatedUserRes() {
}

// MigrationsDeleteArchiveForAuthenticatedUserNotModified is response for MigrationsDeleteArchiveForAuthenticatedUser operation.
type MigrationsDeleteArchiveForAuthenticatedUserNotModified struct{}

func (*MigrationsDeleteArchiveForAuthenticatedUserNotModified) migrationsDeleteArchiveForAuthenticatedUserRes() {
}

// MigrationsDeleteArchiveForOrgNoContent is response for MigrationsDeleteArchiveForOrg operation.
type MigrationsDeleteArchiveForOrgNoContent struct{}

func (*MigrationsDeleteArchiveForOrgNoContent) migrationsDeleteArchiveForOrgRes() {}

// MigrationsDownloadArchiveForOrgFound is response for MigrationsDownloadArchiveForOrg operation.
type MigrationsDownloadArchiveForOrgFound struct{}

func (*MigrationsDownloadArchiveForOrgFound) migrationsDownloadArchiveForOrgRes() {}

type MigrationsGetArchiveForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsGetArchiveForAuthenticatedUserApplicationJSONForbidden) migrationsGetArchiveForAuthenticatedUserRes() {
}

type MigrationsGetArchiveForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsGetArchiveForAuthenticatedUserApplicationJSONUnauthorized) migrationsGetArchiveForAuthenticatedUserRes() {
}

// MigrationsGetArchiveForAuthenticatedUserFound is response for MigrationsGetArchiveForAuthenticatedUser operation.
type MigrationsGetArchiveForAuthenticatedUserFound struct{}

func (*MigrationsGetArchiveForAuthenticatedUserFound) migrationsGetArchiveForAuthenticatedUserRes() {}

// MigrationsGetArchiveForAuthenticatedUserNotModified is response for MigrationsGetArchiveForAuthenticatedUser operation.
type MigrationsGetArchiveForAuthenticatedUserNotModified struct{}

func (*MigrationsGetArchiveForAuthenticatedUserNotModified) migrationsGetArchiveForAuthenticatedUserRes() {
}

type MigrationsGetCommitAuthorsOKApplicationJSON []PorterAuthor

func (*MigrationsGetCommitAuthorsOKApplicationJSON) migrationsGetCommitAuthorsRes() {}

type MigrationsGetStatusForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsGetStatusForAuthenticatedUserApplicationJSONForbidden) migrationsGetStatusForAuthenticatedUserRes() {
}

type MigrationsGetStatusForAuthenticatedUserApplicationJSONNotFound BasicError

func (*MigrationsGetStatusForAuthenticatedUserApplicationJSONNotFound) migrationsGetStatusForAuthenticatedUserRes() {
}

type MigrationsGetStatusForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsGetStatusForAuthenticatedUserApplicationJSONUnauthorized) migrationsGetStatusForAuthenticatedUserRes() {
}

// MigrationsGetStatusForAuthenticatedUserNotModified is response for MigrationsGetStatusForAuthenticatedUser operation.
type MigrationsGetStatusForAuthenticatedUserNotModified struct{}

func (*MigrationsGetStatusForAuthenticatedUserNotModified) migrationsGetStatusForAuthenticatedUserRes() {
}

type MigrationsGetStatusForOrgExcludeItem string

const (
	MigrationsGetStatusForOrgExcludeItemRepositories MigrationsGetStatusForOrgExcludeItem = "repositories"
)

type MigrationsListForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsListForAuthenticatedUserApplicationJSONForbidden) migrationsListForAuthenticatedUserRes() {
}

type MigrationsListForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsListForAuthenticatedUserApplicationJSONUnauthorized) migrationsListForAuthenticatedUserRes() {
}

// MigrationsListForAuthenticatedUserNotModified is response for MigrationsListForAuthenticatedUser operation.
type MigrationsListForAuthenticatedUserNotModified struct{}

func (*MigrationsListForAuthenticatedUserNotModified) migrationsListForAuthenticatedUserRes() {}

type MigrationsListForAuthenticatedUserOKApplicationJSON []Migration

func (*MigrationsListForAuthenticatedUserOKApplicationJSON) migrationsListForAuthenticatedUserRes() {}

type MigrationsListForOrgExcludeItem string

const (
	MigrationsListForOrgExcludeItemRepositories MigrationsListForOrgExcludeItem = "repositories"
)

type MigrationsListReposForOrgOKApplicationJSON []MinimalRepository

func (*MigrationsListReposForOrgOKApplicationJSON) migrationsListReposForOrgRes() {}

type MigrationsListReposForUserOKApplicationJSON []MinimalRepository

func (*MigrationsListReposForUserOKApplicationJSON) migrationsListReposForUserRes() {}

type MigrationsMapCommitAuthorReq struct {
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type MigrationsSetLfsPreferenceReq struct {
	UseLfs MigrationsSetLfsPreferenceReqUseLfs `json:"use_lfs"`
}

type MigrationsSetLfsPreferenceReqUseLfs string

const (
	MigrationsSetLfsPreferenceReqUseLfsOptIn  MigrationsSetLfsPreferenceReqUseLfs = "opt_in"
	MigrationsSetLfsPreferenceReqUseLfsOptOut MigrationsSetLfsPreferenceReqUseLfs = "opt_out"
)

// MigrationsStartForAuthenticatedUserNotModified is response for MigrationsStartForAuthenticatedUser operation.
type MigrationsStartForAuthenticatedUserNotModified struct{}

type MigrationsStartForAuthenticatedUserReq struct {
	Exclude              []MigrationsStartForAuthenticatedUserReqExcludeItem `json:"exclude"`
	ExcludeAttachments   OptBool                                             `json:"exclude_attachments"`
	ExcludeOwnerProjects OptBool                                             `json:"exclude_owner_projects"`
	ExcludeReleases      OptBool                                             `json:"exclude_releases"`
	LockRepositories     OptBool                                             `json:"lock_repositories"`
	Repositories         []string                                            `json:"repositories"`
}

type MigrationsStartForAuthenticatedUserReqExcludeItem string

const (
	MigrationsStartForAuthenticatedUserReqExcludeItemRepositories MigrationsStartForAuthenticatedUserReqExcludeItem = "repositories"
)

type MigrationsStartForOrgReq struct {
	Exclude              []MigrationsStartForOrgReqExcludeItem `json:"exclude"`
	ExcludeAttachments   OptBool                               `json:"exclude_attachments"`
	ExcludeOwnerProjects OptBool                               `json:"exclude_owner_projects"`
	ExcludeReleases      OptBool                               `json:"exclude_releases"`
	LockRepositories     OptBool                               `json:"lock_repositories"`
	Repositories         []string                              `json:"repositories"`
}

type MigrationsStartForOrgReqExcludeItem string

const (
	MigrationsStartForOrgReqExcludeItemRepositories MigrationsStartForOrgReqExcludeItem = "repositories"
)

type MigrationsStartImportReq struct {
	TfvcProject OptString                      `json:"tfvc_project"`
	Vcs         OptMigrationsStartImportReqVcs `json:"vcs"`
	VcsPassword OptString                      `json:"vcs_password"`
	VcsURL      string                         `json:"vcs_url"`
	VcsUsername OptString                      `json:"vcs_username"`
}

type MigrationsStartImportReqVcs string

const (
	MigrationsStartImportReqVcsSubversion MigrationsStartImportReqVcs = "subversion"
	MigrationsStartImportReqVcsGit        MigrationsStartImportReqVcs = "git"
	MigrationsStartImportReqVcsMercurial  MigrationsStartImportReqVcs = "mercurial"
	MigrationsStartImportReqVcsTfvc       MigrationsStartImportReqVcs = "tfvc"
)

type MigrationsUnlockRepoForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsUnlockRepoForAuthenticatedUserApplicationJSONForbidden) migrationsUnlockRepoForAuthenticatedUserRes() {
}

type MigrationsUnlockRepoForAuthenticatedUserApplicationJSONNotFound BasicError

func (*MigrationsUnlockRepoForAuthenticatedUserApplicationJSONNotFound) migrationsUnlockRepoForAuthenticatedUserRes() {
}

type MigrationsUnlockRepoForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsUnlockRepoForAuthenticatedUserApplicationJSONUnauthorized) migrationsUnlockRepoForAuthenticatedUserRes() {
}

// MigrationsUnlockRepoForAuthenticatedUserNoContent is response for MigrationsUnlockRepoForAuthenticatedUser operation.
type MigrationsUnlockRepoForAuthenticatedUserNoContent struct{}

func (*MigrationsUnlockRepoForAuthenticatedUserNoContent) migrationsUnlockRepoForAuthenticatedUserRes() {
}

// MigrationsUnlockRepoForAuthenticatedUserNotModified is response for MigrationsUnlockRepoForAuthenticatedUser operation.
type MigrationsUnlockRepoForAuthenticatedUserNotModified struct{}

func (*MigrationsUnlockRepoForAuthenticatedUserNotModified) migrationsUnlockRepoForAuthenticatedUserRes() {
}

// MigrationsUnlockRepoForOrgNoContent is response for MigrationsUnlockRepoForOrg operation.
type MigrationsUnlockRepoForOrgNoContent struct{}

func (*MigrationsUnlockRepoForOrgNoContent) migrationsUnlockRepoForOrgRes() {}

type MigrationsUpdateImportReq struct {
	TfvcProject OptString `json:"tfvc_project"`
	Vcs         OptString `json:"vcs"`
	VcsPassword OptString `json:"vcs_password"`
	VcsUsername OptString `json:"vcs_username"`
}

// Ref: #/components/schemas/milestone
type Milestone struct {
	ClosedAt     NilTime               `json:"closed_at"`
	ClosedIssues int                   `json:"closed_issues"`
	CreatedAt    time.Time             `json:"created_at"`
	Creator      NilNullableSimpleUser `json:"creator"`
	Description  NilString             `json:"description"`
	DueOn        NilTime               `json:"due_on"`
	HTMLURL      url.URL               `json:"html_url"`
	ID           int                   `json:"id"`
	LabelsURL    url.URL               `json:"labels_url"`
	NodeID       string                `json:"node_id"`
	Number       int                   `json:"number"`
	OpenIssues   int                   `json:"open_issues"`
	State        MilestoneState        `json:"state"`
	Title        string                `json:"title"`
	UpdatedAt    time.Time             `json:"updated_at"`
	URL          url.URL               `json:"url"`
}

func (*Milestone) issuesGetMilestoneRes() {}

type MilestoneState string

const (
	MilestoneStateOpen   MilestoneState = "open"
	MilestoneStateClosed MilestoneState = "closed"
)

// Ref: #/components/schemas/minimal-repository
type MinimalRepository struct {
	AllowForking        OptBool                         `json:"allow_forking"`
	ArchiveURL          string                          `json:"archive_url"`
	Archived            OptBool                         `json:"archived"`
	AssigneesURL        string                          `json:"assignees_url"`
	BlobsURL            string                          `json:"blobs_url"`
	BranchesURL         string                          `json:"branches_url"`
	CloneURL            OptString                       `json:"clone_url"`
	CodeOfConduct       OptCodeOfConduct                `json:"code_of_conduct"`
	CollaboratorsURL    string                          `json:"collaborators_url"`
	CommentsURL         string                          `json:"comments_url"`
	CommitsURL          string                          `json:"commits_url"`
	CompareURL          string                          `json:"compare_url"`
	ContentsURL         string                          `json:"contents_url"`
	ContributorsURL     url.URL                         `json:"contributors_url"`
	CreatedAt           OptNilTime                      `json:"created_at"`
	DefaultBranch       OptString                       `json:"default_branch"`
	DeleteBranchOnMerge OptBool                         `json:"delete_branch_on_merge"`
	DeploymentsURL      url.URL                         `json:"deployments_url"`
	Description         NilString                       `json:"description"`
	Disabled            OptBool                         `json:"disabled"`
	DownloadsURL        url.URL                         `json:"downloads_url"`
	EventsURL           url.URL                         `json:"events_url"`
	Fork                bool                            `json:"fork"`
	Forks               OptInt                          `json:"forks"`
	ForksCount          OptInt                          `json:"forks_count"`
	ForksURL            url.URL                         `json:"forks_url"`
	FullName            string                          `json:"full_name"`
	GitCommitsURL       string                          `json:"git_commits_url"`
	GitRefsURL          string                          `json:"git_refs_url"`
	GitTagsURL          string                          `json:"git_tags_url"`
	GitURL              OptString                       `json:"git_url"`
	HasDownloads        OptBool                         `json:"has_downloads"`
	HasIssues           OptBool                         `json:"has_issues"`
	HasPages            OptBool                         `json:"has_pages"`
	HasProjects         OptBool                         `json:"has_projects"`
	HasWiki             OptBool                         `json:"has_wiki"`
	Homepage            OptNilString                    `json:"homepage"`
	HooksURL            url.URL                         `json:"hooks_url"`
	HTMLURL             url.URL                         `json:"html_url"`
	ID                  int                             `json:"id"`
	IsTemplate          OptBool                         `json:"is_template"`
	IssueCommentURL     string                          `json:"issue_comment_url"`
	IssueEventsURL      string                          `json:"issue_events_url"`
	IssuesURL           string                          `json:"issues_url"`
	KeysURL             string                          `json:"keys_url"`
	LabelsURL           string                          `json:"labels_url"`
	Language            OptNilString                    `json:"language"`
	LanguagesURL        url.URL                         `json:"languages_url"`
	License             OptNilMinimalRepositoryLicense  `json:"license"`
	MergesURL           url.URL                         `json:"merges_url"`
	MilestonesURL       string                          `json:"milestones_url"`
	MirrorURL           OptNilString                    `json:"mirror_url"`
	Name                string                          `json:"name"`
	NetworkCount        OptInt                          `json:"network_count"`
	NodeID              string                          `json:"node_id"`
	NotificationsURL    string                          `json:"notifications_url"`
	OpenIssues          OptInt                          `json:"open_issues"`
	OpenIssuesCount     OptInt                          `json:"open_issues_count"`
	Owner               SimpleUser                      `json:"owner"`
	Permissions         OptMinimalRepositoryPermissions `json:"permissions"`
	Private             bool                            `json:"private"`
	PullsURL            string                          `json:"pulls_url"`
	PushedAt            OptNilTime                      `json:"pushed_at"`
	ReleasesURL         string                          `json:"releases_url"`
	Size                OptInt                          `json:"size"`
	SSHURL              OptString                       `json:"ssh_url"`
	StargazersCount     OptInt                          `json:"stargazers_count"`
	StargazersURL       url.URL                         `json:"stargazers_url"`
	StatusesURL         string                          `json:"statuses_url"`
	SubscribersCount    OptInt                          `json:"subscribers_count"`
	SubscribersURL      url.URL                         `json:"subscribers_url"`
	SubscriptionURL     url.URL                         `json:"subscription_url"`
	SvnURL              OptString                       `json:"svn_url"`
	TagsURL             url.URL                         `json:"tags_url"`
	TeamsURL            url.URL                         `json:"teams_url"`
	TempCloneToken      OptString                       `json:"temp_clone_token"`
	TemplateRepository  OptNilNullableRepository        `json:"template_repository"`
	Topics              []string                        `json:"topics"`
	TreesURL            string                          `json:"trees_url"`
	UpdatedAt           OptNilTime                      `json:"updated_at"`
	URL                 url.URL                         `json:"url"`
	Visibility          OptString                       `json:"visibility"`
	Watchers            OptInt                          `json:"watchers"`
	WatchersCount       OptInt                          `json:"watchers_count"`
}

type MinimalRepositoryLicense struct {
	Key    OptString `json:"key"`
	Name   OptString `json:"name"`
	NodeID OptString `json:"node_id"`
	SpdxID OptString `json:"spdx_id"`
	URL    OptString `json:"url"`
}

type MinimalRepositoryPermissions struct {
	Admin    OptBool `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     OptBool `json:"pull"`
	Push     OptBool `json:"push"`
	Triage   OptBool `json:"triage"`
}

// NewNilAutoMerge returns new NilAutoMerge with value set to v.
func NewNilAutoMerge(v AutoMerge) NilAutoMerge {
	return NilAutoMerge{
		Value: v,
	}
}

// NilAutoMerge is nullable AutoMerge.
type NilAutoMerge struct {
	Value AutoMerge
	Null  bool
}

// SetTo sets value to v.
func (o *NilAutoMerge) SetTo(v AutoMerge) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilAutoMerge) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilAutoMerge) Get() (v AutoMerge, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilBool returns new NilBool with value set to v.
func NewNilBool(v bool) NilBool {
	return NilBool{
		Value: v,
	}
}

// NilBool is nullable bool.
type NilBool struct {
	Value bool
	Null  bool
}

// SetTo sets value to v.
func (o *NilBool) SetTo(v bool) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilBool) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilCheckRunCheckSuite returns new NilCheckRunCheckSuite with value set to v.
func NewNilCheckRunCheckSuite(v CheckRunCheckSuite) NilCheckRunCheckSuite {
	return NilCheckRunCheckSuite{
		Value: v,
	}
}

// NilCheckRunCheckSuite is nullable CheckRunCheckSuite.
type NilCheckRunCheckSuite struct {
	Value CheckRunCheckSuite
	Null  bool
}

// SetTo sets value to v.
func (o *NilCheckRunCheckSuite) SetTo(v CheckRunCheckSuite) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilCheckRunCheckSuite) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilCheckRunCheckSuite) Get() (v CheckRunCheckSuite, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilCheckRunConclusion returns new NilCheckRunConclusion with value set to v.
func NewNilCheckRunConclusion(v CheckRunConclusion) NilCheckRunConclusion {
	return NilCheckRunConclusion{
		Value: v,
	}
}

// NilCheckRunConclusion is nullable CheckRunConclusion.
type NilCheckRunConclusion struct {
	Value CheckRunConclusion
	Null  bool
}

// SetTo sets value to v.
func (o *NilCheckRunConclusion) SetTo(v CheckRunConclusion) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilCheckRunConclusion) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilCheckRunConclusion) Get() (v CheckRunConclusion, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilCheckSuiteConclusion returns new NilCheckSuiteConclusion with value set to v.
func NewNilCheckSuiteConclusion(v CheckSuiteConclusion) NilCheckSuiteConclusion {
	return NilCheckSuiteConclusion{
		Value: v,
	}
}

// NilCheckSuiteConclusion is nullable CheckSuiteConclusion.
type NilCheckSuiteConclusion struct {
	Value CheckSuiteConclusion
	Null  bool
}

// SetTo sets value to v.
func (o *NilCheckSuiteConclusion) SetTo(v CheckSuiteConclusion) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilCheckSuiteConclusion) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilCheckSuiteConclusion) Get() (v CheckSuiteConclusion, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilCheckSuiteStatus returns new NilCheckSuiteStatus with value set to v.
func NewNilCheckSuiteStatus(v CheckSuiteStatus) NilCheckSuiteStatus {
	return NilCheckSuiteStatus{
		Value: v,
	}
}

// NilCheckSuiteStatus is nullable CheckSuiteStatus.
type NilCheckSuiteStatus struct {
	Value CheckSuiteStatus
	Null  bool
}

// SetTo sets value to v.
func (o *NilCheckSuiteStatus) SetTo(v CheckSuiteStatus) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilCheckSuiteStatus) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilCheckSuiteStatus) Get() (v CheckSuiteStatus, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilCodeScanningAlertDismissedAt returns new NilCodeScanningAlertDismissedAt with value set to v.
func NewNilCodeScanningAlertDismissedAt(v CodeScanningAlertDismissedAt) NilCodeScanningAlertDismissedAt {
	return NilCodeScanningAlertDismissedAt{
		Value: v,
	}
}

// NilCodeScanningAlertDismissedAt is nullable CodeScanningAlertDismissedAt.
type NilCodeScanningAlertDismissedAt struct {
	Value CodeScanningAlertDismissedAt
	Null  bool
}

// SetTo sets value to v.
func (o *NilCodeScanningAlertDismissedAt) SetTo(v CodeScanningAlertDismissedAt) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilCodeScanningAlertDismissedAt) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilCodeScanningAlertDismissedAt) Get() (v CodeScanningAlertDismissedAt, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilCodeScanningAlertDismissedReason returns new NilCodeScanningAlertDismissedReason with value set to v.
func NewNilCodeScanningAlertDismissedReason(v CodeScanningAlertDismissedReason) NilCodeScanningAlertDismissedReason {
	return NilCodeScanningAlertDismissedReason{
		Value: v,
	}
}

// NilCodeScanningAlertDismissedReason is nullable CodeScanningAlertDismissedReason.
type NilCodeScanningAlertDismissedReason struct {
	Value CodeScanningAlertDismissedReason
	Null  bool
}

// SetTo sets value to v.
func (o *NilCodeScanningAlertDismissedReason) SetTo(v CodeScanningAlertDismissedReason) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilCodeScanningAlertDismissedReason) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilCodeScanningAlertDismissedReason) Get() (v CodeScanningAlertDismissedReason, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilFileCommitContent returns new NilFileCommitContent with value set to v.
func NewNilFileCommitContent(v FileCommitContent) NilFileCommitContent {
	return NilFileCommitContent{
		Value: v,
	}
}

// NilFileCommitContent is nullable FileCommitContent.
type NilFileCommitContent struct {
	Value FileCommitContent
	Null  bool
}

// SetTo sets value to v.
func (o *NilFileCommitContent) SetTo(v FileCommitContent) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilFileCommitContent) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilFileCommitContent) Get() (v FileCommitContent, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilInt returns new NilInt with value set to v.
func NewNilInt(v int) NilInt {
	return NilInt{
		Value: v,
	}
}

// NilInt is nullable int.
type NilInt struct {
	Value int
	Null  bool
}

// SetTo sets value to v.
func (o *NilInt) SetTo(v int) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilInt) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilNullableCodeOfConductSimple returns new NilNullableCodeOfConductSimple with value set to v.
func NewNilNullableCodeOfConductSimple(v NullableCodeOfConductSimple) NilNullableCodeOfConductSimple {
	return NilNullableCodeOfConductSimple{
		Value: v,
	}
}

// NilNullableCodeOfConductSimple is nullable NullableCodeOfConductSimple.
type NilNullableCodeOfConductSimple struct {
	Value NullableCodeOfConductSimple
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableCodeOfConductSimple) SetTo(v NullableCodeOfConductSimple) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableCodeOfConductSimple) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableCodeOfConductSimple) Get() (v NullableCodeOfConductSimple, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilNullableCommunityHealthFile returns new NilNullableCommunityHealthFile with value set to v.
func NewNilNullableCommunityHealthFile(v NullableCommunityHealthFile) NilNullableCommunityHealthFile {
	return NilNullableCommunityHealthFile{
		Value: v,
	}
}

// NilNullableCommunityHealthFile is nullable NullableCommunityHealthFile.
type NilNullableCommunityHealthFile struct {
	Value NullableCommunityHealthFile
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableCommunityHealthFile) SetTo(v NullableCommunityHealthFile) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableCommunityHealthFile) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableCommunityHealthFile) Get() (v NullableCommunityHealthFile, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilNullableGitUser returns new NilNullableGitUser with value set to v.
func NewNilNullableGitUser(v NullableGitUser) NilNullableGitUser {
	return NilNullableGitUser{
		Value: v,
	}
}

// NilNullableGitUser is nullable NullableGitUser.
type NilNullableGitUser struct {
	Value NullableGitUser
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableGitUser) SetTo(v NullableGitUser) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableGitUser) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableGitUser) Get() (v NullableGitUser, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilNullableIntegration returns new NilNullableIntegration with value set to v.
func NewNilNullableIntegration(v NullableIntegration) NilNullableIntegration {
	return NilNullableIntegration{
		Value: v,
	}
}

// NilNullableIntegration is nullable NullableIntegration.
type NilNullableIntegration struct {
	Value NullableIntegration
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableIntegration) SetTo(v NullableIntegration) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableIntegration) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableIntegration) Get() (v NullableIntegration, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilNullableLicenseSimple returns new NilNullableLicenseSimple with value set to v.
func NewNilNullableLicenseSimple(v NullableLicenseSimple) NilNullableLicenseSimple {
	return NilNullableLicenseSimple{
		Value: v,
	}
}

// NilNullableLicenseSimple is nullable NullableLicenseSimple.
type NilNullableLicenseSimple struct {
	Value NullableLicenseSimple
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableLicenseSimple) SetTo(v NullableLicenseSimple) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableLicenseSimple) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableLicenseSimple) Get() (v NullableLicenseSimple, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilNullableMilestone returns new NilNullableMilestone with value set to v.
func NewNilNullableMilestone(v NullableMilestone) NilNullableMilestone {
	return NilNullableMilestone{
		Value: v,
	}
}

// NilNullableMilestone is nullable NullableMilestone.
type NilNullableMilestone struct {
	Value NullableMilestone
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableMilestone) SetTo(v NullableMilestone) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableMilestone) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableMilestone) Get() (v NullableMilestone, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilNullableSimpleCommit returns new NilNullableSimpleCommit with value set to v.
func NewNilNullableSimpleCommit(v NullableSimpleCommit) NilNullableSimpleCommit {
	return NilNullableSimpleCommit{
		Value: v,
	}
}

// NilNullableSimpleCommit is nullable NullableSimpleCommit.
type NilNullableSimpleCommit struct {
	Value NullableSimpleCommit
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableSimpleCommit) SetTo(v NullableSimpleCommit) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableSimpleCommit) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableSimpleCommit) Get() (v NullableSimpleCommit, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilNullableSimpleCommitAuthor returns new NilNullableSimpleCommitAuthor with value set to v.
func NewNilNullableSimpleCommitAuthor(v NullableSimpleCommitAuthor) NilNullableSimpleCommitAuthor {
	return NilNullableSimpleCommitAuthor{
		Value: v,
	}
}

// NilNullableSimpleCommitAuthor is nullable NullableSimpleCommitAuthor.
type NilNullableSimpleCommitAuthor struct {
	Value NullableSimpleCommitAuthor
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableSimpleCommitAuthor) SetTo(v NullableSimpleCommitAuthor) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableSimpleCommitAuthor) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableSimpleCommitAuthor) Get() (v NullableSimpleCommitAuthor, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilNullableSimpleCommitCommitter returns new NilNullableSimpleCommitCommitter with value set to v.
func NewNilNullableSimpleCommitCommitter(v NullableSimpleCommitCommitter) NilNullableSimpleCommitCommitter {
	return NilNullableSimpleCommitCommitter{
		Value: v,
	}
}

// NilNullableSimpleCommitCommitter is nullable NullableSimpleCommitCommitter.
type NilNullableSimpleCommitCommitter struct {
	Value NullableSimpleCommitCommitter
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableSimpleCommitCommitter) SetTo(v NullableSimpleCommitCommitter) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableSimpleCommitCommitter) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableSimpleCommitCommitter) Get() (v NullableSimpleCommitCommitter, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilNullableSimpleUser returns new NilNullableSimpleUser with value set to v.
func NewNilNullableSimpleUser(v NullableSimpleUser) NilNullableSimpleUser {
	return NilNullableSimpleUser{
		Value: v,
	}
}

// NilNullableSimpleUser is nullable NullableSimpleUser.
type NilNullableSimpleUser struct {
	Value NullableSimpleUser
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableSimpleUser) SetTo(v NullableSimpleUser) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableSimpleUser) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableSimpleUser) Get() (v NullableSimpleUser, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilNullableTeamSimple returns new NilNullableTeamSimple with value set to v.
func NewNilNullableTeamSimple(v NullableTeamSimple) NilNullableTeamSimple {
	return NilNullableTeamSimple{
		Value: v,
	}
}

// NilNullableTeamSimple is nullable NullableTeamSimple.
type NilNullableTeamSimple struct {
	Value NullableTeamSimple
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableTeamSimple) SetTo(v NullableTeamSimple) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableTeamSimple) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableTeamSimple) Get() (v NullableTeamSimple, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilPageStatus returns new NilPageStatus with value set to v.
func NewNilPageStatus(v PageStatus) NilPageStatus {
	return NilPageStatus{
		Value: v,
	}
}

// NilPageStatus is nullable PageStatus.
type NilPageStatus struct {
	Value PageStatus
	Null  bool
}

// SetTo sets value to v.
func (o *NilPageStatus) SetTo(v PageStatus) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilPageStatus) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilPageStatus) Get() (v PageStatus, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilPullRequestHeadRepo returns new NilPullRequestHeadRepo with value set to v.
func NewNilPullRequestHeadRepo(v PullRequestHeadRepo) NilPullRequestHeadRepo {
	return NilPullRequestHeadRepo{
		Value: v,
	}
}

// NilPullRequestHeadRepo is nullable PullRequestHeadRepo.
type NilPullRequestHeadRepo struct {
	Value PullRequestHeadRepo
	Null  bool
}

// SetTo sets value to v.
func (o *NilPullRequestHeadRepo) SetTo(v PullRequestHeadRepo) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilPullRequestHeadRepo) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilPullRequestHeadRepo) Get() (v PullRequestHeadRepo, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilPullRequestHeadRepoLicense returns new NilPullRequestHeadRepoLicense with value set to v.
func NewNilPullRequestHeadRepoLicense(v PullRequestHeadRepoLicense) NilPullRequestHeadRepoLicense {
	return NilPullRequestHeadRepoLicense{
		Value: v,
	}
}

// NilPullRequestHeadRepoLicense is nullable PullRequestHeadRepoLicense.
type NilPullRequestHeadRepoLicense struct {
	Value PullRequestHeadRepoLicense
	Null  bool
}

// SetTo sets value to v.
func (o *NilPullRequestHeadRepoLicense) SetTo(v PullRequestHeadRepoLicense) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilPullRequestHeadRepoLicense) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilPullRequestHeadRepoLicense) Get() (v PullRequestHeadRepoLicense, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilReposUpdateBranchProtectionReqRequiredPullRequestReviews returns new NilReposUpdateBranchProtectionReqRequiredPullRequestReviews with value set to v.
func NewNilReposUpdateBranchProtectionReqRequiredPullRequestReviews(v ReposUpdateBranchProtectionReqRequiredPullRequestReviews) NilReposUpdateBranchProtectionReqRequiredPullRequestReviews {
	return NilReposUpdateBranchProtectionReqRequiredPullRequestReviews{
		Value: v,
	}
}

// NilReposUpdateBranchProtectionReqRequiredPullRequestReviews is nullable ReposUpdateBranchProtectionReqRequiredPullRequestReviews.
type NilReposUpdateBranchProtectionReqRequiredPullRequestReviews struct {
	Value ReposUpdateBranchProtectionReqRequiredPullRequestReviews
	Null  bool
}

// SetTo sets value to v.
func (o *NilReposUpdateBranchProtectionReqRequiredPullRequestReviews) SetTo(v ReposUpdateBranchProtectionReqRequiredPullRequestReviews) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilReposUpdateBranchProtectionReqRequiredPullRequestReviews) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilReposUpdateBranchProtectionReqRequiredPullRequestReviews) Get() (v ReposUpdateBranchProtectionReqRequiredPullRequestReviews, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilReposUpdateBranchProtectionReqRequiredStatusChecks returns new NilReposUpdateBranchProtectionReqRequiredStatusChecks with value set to v.
func NewNilReposUpdateBranchProtectionReqRequiredStatusChecks(v ReposUpdateBranchProtectionReqRequiredStatusChecks) NilReposUpdateBranchProtectionReqRequiredStatusChecks {
	return NilReposUpdateBranchProtectionReqRequiredStatusChecks{
		Value: v,
	}
}

// NilReposUpdateBranchProtectionReqRequiredStatusChecks is nullable ReposUpdateBranchProtectionReqRequiredStatusChecks.
type NilReposUpdateBranchProtectionReqRequiredStatusChecks struct {
	Value ReposUpdateBranchProtectionReqRequiredStatusChecks
	Null  bool
}

// SetTo sets value to v.
func (o *NilReposUpdateBranchProtectionReqRequiredStatusChecks) SetTo(v ReposUpdateBranchProtectionReqRequiredStatusChecks) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilReposUpdateBranchProtectionReqRequiredStatusChecks) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilReposUpdateBranchProtectionReqRequiredStatusChecks) Get() (v ReposUpdateBranchProtectionReqRequiredStatusChecks, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilReposUpdateBranchProtectionReqRestrictions returns new NilReposUpdateBranchProtectionReqRestrictions with value set to v.
func NewNilReposUpdateBranchProtectionReqRestrictions(v ReposUpdateBranchProtectionReqRestrictions) NilReposUpdateBranchProtectionReqRestrictions {
	return NilReposUpdateBranchProtectionReqRestrictions{
		Value: v,
	}
}

// NilReposUpdateBranchProtectionReqRestrictions is nullable ReposUpdateBranchProtectionReqRestrictions.
type NilReposUpdateBranchProtectionReqRestrictions struct {
	Value ReposUpdateBranchProtectionReqRestrictions
	Null  bool
}

// SetTo sets value to v.
func (o *NilReposUpdateBranchProtectionReqRestrictions) SetTo(v ReposUpdateBranchProtectionReqRestrictions) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilReposUpdateBranchProtectionReqRestrictions) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilReposUpdateBranchProtectionReqRestrictions) Get() (v ReposUpdateBranchProtectionReqRestrictions, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilSimpleCommitAuthor returns new NilSimpleCommitAuthor with value set to v.
func NewNilSimpleCommitAuthor(v SimpleCommitAuthor) NilSimpleCommitAuthor {
	return NilSimpleCommitAuthor{
		Value: v,
	}
}

// NilSimpleCommitAuthor is nullable SimpleCommitAuthor.
type NilSimpleCommitAuthor struct {
	Value SimpleCommitAuthor
	Null  bool
}

// SetTo sets value to v.
func (o *NilSimpleCommitAuthor) SetTo(v SimpleCommitAuthor) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilSimpleCommitAuthor) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilSimpleCommitAuthor) Get() (v SimpleCommitAuthor, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilSimpleCommitCommitter returns new NilSimpleCommitCommitter with value set to v.
func NewNilSimpleCommitCommitter(v SimpleCommitCommitter) NilSimpleCommitCommitter {
	return NilSimpleCommitCommitter{
		Value: v,
	}
}

// NilSimpleCommitCommitter is nullable SimpleCommitCommitter.
type NilSimpleCommitCommitter struct {
	Value SimpleCommitCommitter
	Null  bool
}

// SetTo sets value to v.
func (o *NilSimpleCommitCommitter) SetTo(v SimpleCommitCommitter) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilSimpleCommitCommitter) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilSimpleCommitCommitter) Get() (v SimpleCommitCommitter, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilTime returns new NilTime with value set to v.
func NewNilTime(v time.Time) NilTime {
	return NilTime{
		Value: v,
	}
}

// NilTime is nullable time.Time.
type NilTime struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilTime) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilTime) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilURL returns new NilURL with value set to v.
func NewNilURL(v url.URL) NilURL {
	return NilURL{
		Value: v,
	}
}

// NilURL is nullable url.URL.
type NilURL struct {
	Value url.URL
	Null  bool
}

// SetTo sets value to v.
func (o *NilURL) SetTo(v url.URL) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilURL) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilURL) Get() (v url.URL, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Ref: #/components/schemas/nullable-code-of-conduct-simple
type NullableCodeOfConductSimple struct {
	HTMLURL NilURL  `json:"html_url"`
	Key     string  `json:"key"`
	Name    string  `json:"name"`
	URL     url.URL `json:"url"`
}

// Ref: #/components/schemas/nullable-community-health-file
type NullableCommunityHealthFile struct {
	HTMLURL url.URL `json:"html_url"`
	URL     url.URL `json:"url"`
}

// Ref: #/components/schemas/nullable-git-user
type NullableGitUser struct {
	Date  OptString `json:"date"`
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

// Ref: #/components/schemas/nullable-integration
type NullableIntegration struct {
	ClientID           OptString                      `json:"client_id"`
	ClientSecret       OptString                      `json:"client_secret"`
	CreatedAt          time.Time                      `json:"created_at"`
	Description        NilString                      `json:"description"`
	Events             []string                       `json:"events"`
	ExternalURL        url.URL                        `json:"external_url"`
	HTMLURL            url.URL                        `json:"html_url"`
	ID                 int                            `json:"id"`
	InstallationsCount OptInt                         `json:"installations_count"`
	Name               string                         `json:"name"`
	NodeID             string                         `json:"node_id"`
	Owner              NilNullableSimpleUser          `json:"owner"`
	Pem                OptString                      `json:"pem"`
	Permissions        NullableIntegrationPermissions `json:"permissions"`
	Slug               OptString                      `json:"slug"`
	UpdatedAt          time.Time                      `json:"updated_at"`
	WebhookSecret      OptNilString                   `json:"webhook_secret"`
}

type NullableIntegrationPermissions struct {
	Checks      OptString `json:"checks"`
	Contents    OptString `json:"contents"`
	Deployments OptString `json:"deployments"`
	Issues      OptString `json:"issues"`
	Metadata    OptString `json:"metadata"`
}

// Ref: #/components/schemas/nullable-license-simple
type NullableLicenseSimple struct {
	HTMLURL OptURL    `json:"html_url"`
	Key     string    `json:"key"`
	Name    string    `json:"name"`
	NodeID  string    `json:"node_id"`
	SpdxID  NilString `json:"spdx_id"`
	URL     NilURL    `json:"url"`
}

// Ref: #/components/schemas/nullable-milestone
type NullableMilestone struct {
	ClosedAt     NilTime                `json:"closed_at"`
	ClosedIssues int                    `json:"closed_issues"`
	CreatedAt    time.Time              `json:"created_at"`
	Creator      NilNullableSimpleUser  `json:"creator"`
	Description  NilString              `json:"description"`
	DueOn        NilTime                `json:"due_on"`
	HTMLURL      url.URL                `json:"html_url"`
	ID           int                    `json:"id"`
	LabelsURL    url.URL                `json:"labels_url"`
	NodeID       string                 `json:"node_id"`
	Number       int                    `json:"number"`
	OpenIssues   int                    `json:"open_issues"`
	State        NullableMilestoneState `json:"state"`
	Title        string                 `json:"title"`
	UpdatedAt    time.Time              `json:"updated_at"`
	URL          url.URL                `json:"url"`
}

type NullableMilestoneState string

const (
	NullableMilestoneStateOpen   NullableMilestoneState = "open"
	NullableMilestoneStateClosed NullableMilestoneState = "closed"
)

// Ref: #/components/schemas/nullable-minimal-repository
type NullableMinimalRepository struct {
	AllowForking        OptBool                                 `json:"allow_forking"`
	ArchiveURL          string                                  `json:"archive_url"`
	Archived            OptBool                                 `json:"archived"`
	AssigneesURL        string                                  `json:"assignees_url"`
	BlobsURL            string                                  `json:"blobs_url"`
	BranchesURL         string                                  `json:"branches_url"`
	CloneURL            OptString                               `json:"clone_url"`
	CodeOfConduct       OptCodeOfConduct                        `json:"code_of_conduct"`
	CollaboratorsURL    string                                  `json:"collaborators_url"`
	CommentsURL         string                                  `json:"comments_url"`
	CommitsURL          string                                  `json:"commits_url"`
	CompareURL          string                                  `json:"compare_url"`
	ContentsURL         string                                  `json:"contents_url"`
	ContributorsURL     url.URL                                 `json:"contributors_url"`
	CreatedAt           OptNilTime                              `json:"created_at"`
	DefaultBranch       OptString                               `json:"default_branch"`
	DeleteBranchOnMerge OptBool                                 `json:"delete_branch_on_merge"`
	DeploymentsURL      url.URL                                 `json:"deployments_url"`
	Description         NilString                               `json:"description"`
	Disabled            OptBool                                 `json:"disabled"`
	DownloadsURL        url.URL                                 `json:"downloads_url"`
	EventsURL           url.URL                                 `json:"events_url"`
	Fork                bool                                    `json:"fork"`
	Forks               OptInt                                  `json:"forks"`
	ForksCount          OptInt                                  `json:"forks_count"`
	ForksURL            url.URL                                 `json:"forks_url"`
	FullName            string                                  `json:"full_name"`
	GitCommitsURL       string                                  `json:"git_commits_url"`
	GitRefsURL          string                                  `json:"git_refs_url"`
	GitTagsURL          string                                  `json:"git_tags_url"`
	GitURL              OptString                               `json:"git_url"`
	HasDownloads        OptBool                                 `json:"has_downloads"`
	HasIssues           OptBool                                 `json:"has_issues"`
	HasPages            OptBool                                 `json:"has_pages"`
	HasProjects         OptBool                                 `json:"has_projects"`
	HasWiki             OptBool                                 `json:"has_wiki"`
	Homepage            OptNilString                            `json:"homepage"`
	HooksURL            url.URL                                 `json:"hooks_url"`
	HTMLURL             url.URL                                 `json:"html_url"`
	ID                  int                                     `json:"id"`
	IsTemplate          OptBool                                 `json:"is_template"`
	IssueCommentURL     string                                  `json:"issue_comment_url"`
	IssueEventsURL      string                                  `json:"issue_events_url"`
	IssuesURL           string                                  `json:"issues_url"`
	KeysURL             string                                  `json:"keys_url"`
	LabelsURL           string                                  `json:"labels_url"`
	Language            OptNilString                            `json:"language"`
	LanguagesURL        url.URL                                 `json:"languages_url"`
	License             OptNilNullableMinimalRepositoryLicense  `json:"license"`
	MergesURL           url.URL                                 `json:"merges_url"`
	MilestonesURL       string                                  `json:"milestones_url"`
	MirrorURL           OptNilString                            `json:"mirror_url"`
	Name                string                                  `json:"name"`
	NetworkCount        OptInt                                  `json:"network_count"`
	NodeID              string                                  `json:"node_id"`
	NotificationsURL    string                                  `json:"notifications_url"`
	OpenIssues          OptInt                                  `json:"open_issues"`
	OpenIssuesCount     OptInt                                  `json:"open_issues_count"`
	Owner               SimpleUser                              `json:"owner"`
	Permissions         OptNullableMinimalRepositoryPermissions `json:"permissions"`
	Private             bool                                    `json:"private"`
	PullsURL            string                                  `json:"pulls_url"`
	PushedAt            OptNilTime                              `json:"pushed_at"`
	ReleasesURL         string                                  `json:"releases_url"`
	Size                OptInt                                  `json:"size"`
	SSHURL              OptString                               `json:"ssh_url"`
	StargazersCount     OptInt                                  `json:"stargazers_count"`
	StargazersURL       url.URL                                 `json:"stargazers_url"`
	StatusesURL         string                                  `json:"statuses_url"`
	SubscribersCount    OptInt                                  `json:"subscribers_count"`
	SubscribersURL      url.URL                                 `json:"subscribers_url"`
	SubscriptionURL     url.URL                                 `json:"subscription_url"`
	SvnURL              OptString                               `json:"svn_url"`
	TagsURL             url.URL                                 `json:"tags_url"`
	TeamsURL            url.URL                                 `json:"teams_url"`
	TempCloneToken      OptString                               `json:"temp_clone_token"`
	TemplateRepository  OptNilNullableRepository                `json:"template_repository"`
	Topics              []string                                `json:"topics"`
	TreesURL            string                                  `json:"trees_url"`
	UpdatedAt           OptNilTime                              `json:"updated_at"`
	URL                 url.URL                                 `json:"url"`
	Visibility          OptString                               `json:"visibility"`
	Watchers            OptInt                                  `json:"watchers"`
	WatchersCount       OptInt                                  `json:"watchers_count"`
}

type NullableMinimalRepositoryLicense struct {
	Key    OptString `json:"key"`
	Name   OptString `json:"name"`
	NodeID OptString `json:"node_id"`
	SpdxID OptString `json:"spdx_id"`
	URL    OptString `json:"url"`
}

type NullableMinimalRepositoryPermissions struct {
	Admin    OptBool `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     OptBool `json:"pull"`
	Push     OptBool `json:"push"`
	Triage   OptBool `json:"triage"`
}

// Ref: #/components/schemas/nullable-repository
type NullableRepository struct {
	AllowAutoMerge      OptBool                                    `json:"allow_auto_merge"`
	AllowForking        OptBool                                    `json:"allow_forking"`
	AllowMergeCommit    OptBool                                    `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                                    `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                                    `json:"allow_squash_merge"`
	ArchiveURL          string                                     `json:"archive_url"`
	Archived            bool                                       `json:"archived"`
	AssigneesURL        string                                     `json:"assignees_url"`
	BlobsURL            string                                     `json:"blobs_url"`
	BranchesURL         string                                     `json:"branches_url"`
	CloneURL            string                                     `json:"clone_url"`
	CollaboratorsURL    string                                     `json:"collaborators_url"`
	CommentsURL         string                                     `json:"comments_url"`
	CommitsURL          string                                     `json:"commits_url"`
	CompareURL          string                                     `json:"compare_url"`
	ContentsURL         string                                     `json:"contents_url"`
	ContributorsURL     url.URL                                    `json:"contributors_url"`
	CreatedAt           NilTime                                    `json:"created_at"`
	DefaultBranch       string                                     `json:"default_branch"`
	DeleteBranchOnMerge OptBool                                    `json:"delete_branch_on_merge"`
	DeploymentsURL      url.URL                                    `json:"deployments_url"`
	Description         NilString                                  `json:"description"`
	Disabled            bool                                       `json:"disabled"`
	DownloadsURL        url.URL                                    `json:"downloads_url"`
	EventsURL           url.URL                                    `json:"events_url"`
	Fork                bool                                       `json:"fork"`
	Forks               int                                        `json:"forks"`
	ForksCount          int                                        `json:"forks_count"`
	ForksURL            url.URL                                    `json:"forks_url"`
	FullName            string                                     `json:"full_name"`
	GitCommitsURL       string                                     `json:"git_commits_url"`
	GitRefsURL          string                                     `json:"git_refs_url"`
	GitTagsURL          string                                     `json:"git_tags_url"`
	GitURL              string                                     `json:"git_url"`
	HasDownloads        bool                                       `json:"has_downloads"`
	HasIssues           bool                                       `json:"has_issues"`
	HasPages            bool                                       `json:"has_pages"`
	HasProjects         bool                                       `json:"has_projects"`
	HasWiki             bool                                       `json:"has_wiki"`
	Homepage            NilURL                                     `json:"homepage"`
	HooksURL            url.URL                                    `json:"hooks_url"`
	HTMLURL             url.URL                                    `json:"html_url"`
	ID                  int                                        `json:"id"`
	IsTemplate          OptBool                                    `json:"is_template"`
	IssueCommentURL     string                                     `json:"issue_comment_url"`
	IssueEventsURL      string                                     `json:"issue_events_url"`
	IssuesURL           string                                     `json:"issues_url"`
	KeysURL             string                                     `json:"keys_url"`
	LabelsURL           string                                     `json:"labels_url"`
	Language            NilString                                  `json:"language"`
	LanguagesURL        url.URL                                    `json:"languages_url"`
	License             NilNullableLicenseSimple                   `json:"license"`
	MasterBranch        OptString                                  `json:"master_branch"`
	MergesURL           url.URL                                    `json:"merges_url"`
	MilestonesURL       string                                     `json:"milestones_url"`
	MirrorURL           NilURL                                     `json:"mirror_url"`
	Name                string                                     `json:"name"`
	NetworkCount        OptInt                                     `json:"network_count"`
	NodeID              string                                     `json:"node_id"`
	NotificationsURL    string                                     `json:"notifications_url"`
	OpenIssues          int                                        `json:"open_issues"`
	OpenIssuesCount     int                                        `json:"open_issues_count"`
	Organization        OptNilNullableSimpleUser                   `json:"organization"`
	Owner               SimpleUser                                 `json:"owner"`
	Permissions         OptNullableRepositoryPermissions           `json:"permissions"`
	Private             bool                                       `json:"private"`
	PullsURL            string                                     `json:"pulls_url"`
	PushedAt            NilTime                                    `json:"pushed_at"`
	ReleasesURL         string                                     `json:"releases_url"`
	Size                int                                        `json:"size"`
	SSHURL              string                                     `json:"ssh_url"`
	StargazersCount     int                                        `json:"stargazers_count"`
	StargazersURL       url.URL                                    `json:"stargazers_url"`
	StarredAt           OptString                                  `json:"starred_at"`
	StatusesURL         string                                     `json:"statuses_url"`
	SubscribersCount    OptInt                                     `json:"subscribers_count"`
	SubscribersURL      url.URL                                    `json:"subscribers_url"`
	SubscriptionURL     url.URL                                    `json:"subscription_url"`
	SvnURL              url.URL                                    `json:"svn_url"`
	TagsURL             url.URL                                    `json:"tags_url"`
	TeamsURL            url.URL                                    `json:"teams_url"`
	TempCloneToken      OptString                                  `json:"temp_clone_token"`
	TemplateRepository  OptNilNullableRepositoryTemplateRepository `json:"template_repository"`
	Topics              []string                                   `json:"topics"`
	TreesURL            string                                     `json:"trees_url"`
	UpdatedAt           NilTime                                    `json:"updated_at"`
	URL                 url.URL                                    `json:"url"`
	Visibility          OptString                                  `json:"visibility"`
	Watchers            int                                        `json:"watchers"`
	WatchersCount       int                                        `json:"watchers_count"`
}

type NullableRepositoryPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

type NullableRepositoryTemplateRepository struct {
	AllowAutoMerge      OptBool                                            `json:"allow_auto_merge"`
	AllowMergeCommit    OptBool                                            `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                                            `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                                            `json:"allow_squash_merge"`
	ArchiveURL          OptString                                          `json:"archive_url"`
	Archived            OptBool                                            `json:"archived"`
	AssigneesURL        OptString                                          `json:"assignees_url"`
	BlobsURL            OptString                                          `json:"blobs_url"`
	BranchesURL         OptString                                          `json:"branches_url"`
	CloneURL            OptString                                          `json:"clone_url"`
	CollaboratorsURL    OptString                                          `json:"collaborators_url"`
	CommentsURL         OptString                                          `json:"comments_url"`
	CommitsURL          OptString                                          `json:"commits_url"`
	CompareURL          OptString                                          `json:"compare_url"`
	ContentsURL         OptString                                          `json:"contents_url"`
	ContributorsURL     OptString                                          `json:"contributors_url"`
	CreatedAt           OptString                                          `json:"created_at"`
	DefaultBranch       OptString                                          `json:"default_branch"`
	DeleteBranchOnMerge OptBool                                            `json:"delete_branch_on_merge"`
	DeploymentsURL      OptString                                          `json:"deployments_url"`
	Description         OptString                                          `json:"description"`
	Disabled            OptBool                                            `json:"disabled"`
	DownloadsURL        OptString                                          `json:"downloads_url"`
	EventsURL           OptString                                          `json:"events_url"`
	Fork                OptBool                                            `json:"fork"`
	ForksCount          OptInt                                             `json:"forks_count"`
	ForksURL            OptString                                          `json:"forks_url"`
	FullName            OptString                                          `json:"full_name"`
	GitCommitsURL       OptString                                          `json:"git_commits_url"`
	GitRefsURL          OptString                                          `json:"git_refs_url"`
	GitTagsURL          OptString                                          `json:"git_tags_url"`
	GitURL              OptString                                          `json:"git_url"`
	HasDownloads        OptBool                                            `json:"has_downloads"`
	HasIssues           OptBool                                            `json:"has_issues"`
	HasPages            OptBool                                            `json:"has_pages"`
	HasProjects         OptBool                                            `json:"has_projects"`
	HasWiki             OptBool                                            `json:"has_wiki"`
	Homepage            OptString                                          `json:"homepage"`
	HooksURL            OptString                                          `json:"hooks_url"`
	HTMLURL             OptString                                          `json:"html_url"`
	ID                  OptInt                                             `json:"id"`
	IsTemplate          OptBool                                            `json:"is_template"`
	IssueCommentURL     OptString                                          `json:"issue_comment_url"`
	IssueEventsURL      OptString                                          `json:"issue_events_url"`
	IssuesURL           OptString                                          `json:"issues_url"`
	KeysURL             OptString                                          `json:"keys_url"`
	LabelsURL           OptString                                          `json:"labels_url"`
	Language            OptString                                          `json:"language"`
	LanguagesURL        OptString                                          `json:"languages_url"`
	MergesURL           OptString                                          `json:"merges_url"`
	MilestonesURL       OptString                                          `json:"milestones_url"`
	MirrorURL           OptString                                          `json:"mirror_url"`
	Name                OptString                                          `json:"name"`
	NetworkCount        OptInt                                             `json:"network_count"`
	NodeID              OptString                                          `json:"node_id"`
	NotificationsURL    OptString                                          `json:"notifications_url"`
	OpenIssuesCount     OptInt                                             `json:"open_issues_count"`
	Owner               OptNullableRepositoryTemplateRepositoryOwner       `json:"owner"`
	Permissions         OptNullableRepositoryTemplateRepositoryPermissions `json:"permissions"`
	Private             OptBool                                            `json:"private"`
	PullsURL            OptString                                          `json:"pulls_url"`
	PushedAt            OptString                                          `json:"pushed_at"`
	ReleasesURL         OptString                                          `json:"releases_url"`
	Size                OptInt                                             `json:"size"`
	SSHURL              OptString                                          `json:"ssh_url"`
	StargazersCount     OptInt                                             `json:"stargazers_count"`
	StargazersURL       OptString                                          `json:"stargazers_url"`
	StatusesURL         OptString                                          `json:"statuses_url"`
	SubscribersCount    OptInt                                             `json:"subscribers_count"`
	SubscribersURL      OptString                                          `json:"subscribers_url"`
	SubscriptionURL     OptString                                          `json:"subscription_url"`
	SvnURL              OptString                                          `json:"svn_url"`
	TagsURL             OptString                                          `json:"tags_url"`
	TeamsURL            OptString                                          `json:"teams_url"`
	TempCloneToken      OptString                                          `json:"temp_clone_token"`
	Topics              []string                                           `json:"topics"`
	TreesURL            OptString                                          `json:"trees_url"`
	UpdatedAt           OptString                                          `json:"updated_at"`
	URL                 OptString                                          `json:"url"`
	Visibility          OptString                                          `json:"visibility"`
	WatchersCount       OptInt                                             `json:"watchers_count"`
}

type NullableRepositoryTemplateRepositoryOwner struct {
	AvatarURL         OptString `json:"avatar_url"`
	EventsURL         OptString `json:"events_url"`
	FollowersURL      OptString `json:"followers_url"`
	FollowingURL      OptString `json:"following_url"`
	GistsURL          OptString `json:"gists_url"`
	GravatarID        OptString `json:"gravatar_id"`
	HTMLURL           OptString `json:"html_url"`
	ID                OptInt    `json:"id"`
	Login             OptString `json:"login"`
	NodeID            OptString `json:"node_id"`
	OrganizationsURL  OptString `json:"organizations_url"`
	ReceivedEventsURL OptString `json:"received_events_url"`
	ReposURL          OptString `json:"repos_url"`
	SiteAdmin         OptBool   `json:"site_admin"`
	StarredURL        OptString `json:"starred_url"`
	SubscriptionsURL  OptString `json:"subscriptions_url"`
	Type              OptString `json:"type"`
	URL               OptString `json:"url"`
}

type NullableRepositoryTemplateRepositoryPermissions struct {
	Admin    OptBool `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     OptBool `json:"pull"`
	Push     OptBool `json:"push"`
	Triage   OptBool `json:"triage"`
}

// Ref: #/components/schemas/nullable-scoped-installation
type NullableScopedInstallation struct {
	Account                SimpleUser                                    `json:"account"`
	HasMultipleSingleFiles OptBool                                       `json:"has_multiple_single_files"`
	Permissions            AppPermissions                                `json:"permissions"`
	RepositoriesURL        url.URL                                       `json:"repositories_url"`
	RepositorySelection    NullableScopedInstallationRepositorySelection `json:"repository_selection"`
	SingleFileName         NilString                                     `json:"single_file_name"`
	SingleFilePaths        []string                                      `json:"single_file_paths"`
}

type NullableScopedInstallationRepositorySelection string

const (
	NullableScopedInstallationRepositorySelectionAll      NullableScopedInstallationRepositorySelection = "all"
	NullableScopedInstallationRepositorySelectionSelected NullableScopedInstallationRepositorySelection = "selected"
)

// Ref: #/components/schemas/nullable-simple-commit
type NullableSimpleCommit struct {
	Author    NilNullableSimpleCommitAuthor    `json:"author"`
	Committer NilNullableSimpleCommitCommitter `json:"committer"`
	ID        string                           `json:"id"`
	Message   string                           `json:"message"`
	Timestamp time.Time                        `json:"timestamp"`
	TreeID    string                           `json:"tree_id"`
}

type NullableSimpleCommitAuthor struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

type NullableSimpleCommitCommitter struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

// Ref: #/components/schemas/nullable-simple-user
type NullableSimpleUser struct {
	AvatarURL         url.URL      `json:"avatar_url"`
	Email             OptNilString `json:"email"`
	EventsURL         string       `json:"events_url"`
	FollowersURL      url.URL      `json:"followers_url"`
	FollowingURL      string       `json:"following_url"`
	GistsURL          string       `json:"gists_url"`
	GravatarID        NilString    `json:"gravatar_id"`
	HTMLURL           url.URL      `json:"html_url"`
	ID                int          `json:"id"`
	Login             string       `json:"login"`
	Name              OptNilString `json:"name"`
	NodeID            string       `json:"node_id"`
	OrganizationsURL  url.URL      `json:"organizations_url"`
	ReceivedEventsURL url.URL      `json:"received_events_url"`
	ReposURL          url.URL      `json:"repos_url"`
	SiteAdmin         bool         `json:"site_admin"`
	StarredAt         OptString    `json:"starred_at"`
	StarredURL        string       `json:"starred_url"`
	SubscriptionsURL  url.URL      `json:"subscriptions_url"`
	Type              string       `json:"type"`
	URL               url.URL      `json:"url"`
}

// Ref: #/components/schemas/nullable-team-simple
type NullableTeamSimple struct {
	Description     NilString `json:"description"`
	HTMLURL         url.URL   `json:"html_url"`
	ID              int       `json:"id"`
	LdapDn          OptString `json:"ldap_dn"`
	MembersURL      string    `json:"members_url"`
	Name            string    `json:"name"`
	NodeID          string    `json:"node_id"`
	Permission      string    `json:"permission"`
	Privacy         OptString `json:"privacy"`
	RepositoriesURL url.URL   `json:"repositories_url"`
	Slug            string    `json:"slug"`
	URL             url.URL   `json:"url"`
}

// OAuthAuthorizationsCreateAuthorizationNotModified is response for OAuthAuthorizationsCreateAuthorization operation.
type OAuthAuthorizationsCreateAuthorizationNotModified struct{}

type OAuthAuthorizationsCreateAuthorizationReq struct {
	ClientID     OptString         `json:"client_id"`
	ClientSecret OptString         `json:"client_secret"`
	Fingerprint  OptString         `json:"fingerprint"`
	Note         OptString         `json:"note"`
	NoteURL      OptString         `json:"note_url"`
	Scopes       OptNilStringArray `json:"scopes"`
}

type OAuthAuthorizationsDeleteAuthorizationApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsDeleteAuthorizationApplicationJSONForbidden) oAuthAuthorizationsDeleteAuthorizationRes() {
}

type OAuthAuthorizationsDeleteAuthorizationApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsDeleteAuthorizationApplicationJSONUnauthorized) oAuthAuthorizationsDeleteAuthorizationRes() {
}

// OAuthAuthorizationsDeleteAuthorizationNoContent is response for OAuthAuthorizationsDeleteAuthorization operation.
type OAuthAuthorizationsDeleteAuthorizationNoContent struct{}

func (*OAuthAuthorizationsDeleteAuthorizationNoContent) oAuthAuthorizationsDeleteAuthorizationRes() {}

// OAuthAuthorizationsDeleteAuthorizationNotModified is response for OAuthAuthorizationsDeleteAuthorization operation.
type OAuthAuthorizationsDeleteAuthorizationNotModified struct{}

func (*OAuthAuthorizationsDeleteAuthorizationNotModified) oAuthAuthorizationsDeleteAuthorizationRes() {
}

type OAuthAuthorizationsDeleteGrantApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsDeleteGrantApplicationJSONForbidden) oAuthAuthorizationsDeleteGrantRes() {}

type OAuthAuthorizationsDeleteGrantApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsDeleteGrantApplicationJSONUnauthorized) oAuthAuthorizationsDeleteGrantRes() {
}

// OAuthAuthorizationsDeleteGrantNoContent is response for OAuthAuthorizationsDeleteGrant operation.
type OAuthAuthorizationsDeleteGrantNoContent struct{}

func (*OAuthAuthorizationsDeleteGrantNoContent) oAuthAuthorizationsDeleteGrantRes() {}

// OAuthAuthorizationsDeleteGrantNotModified is response for OAuthAuthorizationsDeleteGrant operation.
type OAuthAuthorizationsDeleteGrantNotModified struct{}

func (*OAuthAuthorizationsDeleteGrantNotModified) oAuthAuthorizationsDeleteGrantRes() {}

type OAuthAuthorizationsGetAuthorizationApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsGetAuthorizationApplicationJSONForbidden) oAuthAuthorizationsGetAuthorizationRes() {
}

type OAuthAuthorizationsGetAuthorizationApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsGetAuthorizationApplicationJSONUnauthorized) oAuthAuthorizationsGetAuthorizationRes() {
}

// OAuthAuthorizationsGetAuthorizationNotModified is response for OAuthAuthorizationsGetAuthorization operation.
type OAuthAuthorizationsGetAuthorizationNotModified struct{}

func (*OAuthAuthorizationsGetAuthorizationNotModified) oAuthAuthorizationsGetAuthorizationRes() {}

type OAuthAuthorizationsGetGrantApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsGetGrantApplicationJSONForbidden) oAuthAuthorizationsGetGrantRes() {}

type OAuthAuthorizationsGetGrantApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsGetGrantApplicationJSONUnauthorized) oAuthAuthorizationsGetGrantRes() {}

// OAuthAuthorizationsGetGrantNotModified is response for OAuthAuthorizationsGetGrant operation.
type OAuthAuthorizationsGetGrantNotModified struct{}

func (*OAuthAuthorizationsGetGrantNotModified) oAuthAuthorizationsGetGrantRes() {}

type OAuthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprintReq struct {
	ClientSecret string            `json:"client_secret"`
	Note         OptString         `json:"note"`
	NoteURL      OptString         `json:"note_url"`
	Scopes       OptNilStringArray `json:"scopes"`
}

// OAuthAuthorizationsGetOrCreateAuthorizationForAppNotModified is response for OAuthAuthorizationsGetOrCreateAuthorizationForApp operation.
type OAuthAuthorizationsGetOrCreateAuthorizationForAppNotModified struct{}

type OAuthAuthorizationsGetOrCreateAuthorizationForAppReq struct {
	ClientSecret string            `json:"client_secret"`
	Fingerprint  OptString         `json:"fingerprint"`
	Note         OptString         `json:"note"`
	NoteURL      OptString         `json:"note_url"`
	Scopes       OptNilStringArray `json:"scopes"`
}

type OAuthAuthorizationsListAuthorizationsApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsListAuthorizationsApplicationJSONForbidden) oAuthAuthorizationsListAuthorizationsRes() {
}

type OAuthAuthorizationsListAuthorizationsApplicationJSONNotFound BasicError

func (*OAuthAuthorizationsListAuthorizationsApplicationJSONNotFound) oAuthAuthorizationsListAuthorizationsRes() {
}

type OAuthAuthorizationsListAuthorizationsApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsListAuthorizationsApplicationJSONUnauthorized) oAuthAuthorizationsListAuthorizationsRes() {
}

// OAuthAuthorizationsListAuthorizationsNotModified is response for OAuthAuthorizationsListAuthorizations operation.
type OAuthAuthorizationsListAuthorizationsNotModified struct{}

func (*OAuthAuthorizationsListAuthorizationsNotModified) oAuthAuthorizationsListAuthorizationsRes() {}

type OAuthAuthorizationsListAuthorizationsOKApplicationJSON []Authorization

func (*OAuthAuthorizationsListAuthorizationsOKApplicationJSON) oAuthAuthorizationsListAuthorizationsRes() {
}

type OAuthAuthorizationsListGrantsApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsListGrantsApplicationJSONForbidden) oAuthAuthorizationsListGrantsRes() {}

type OAuthAuthorizationsListGrantsApplicationJSONNotFound BasicError

func (*OAuthAuthorizationsListGrantsApplicationJSONNotFound) oAuthAuthorizationsListGrantsRes() {}

type OAuthAuthorizationsListGrantsApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsListGrantsApplicationJSONUnauthorized) oAuthAuthorizationsListGrantsRes() {}

// OAuthAuthorizationsListGrantsNotModified is response for OAuthAuthorizationsListGrants operation.
type OAuthAuthorizationsListGrantsNotModified struct{}

func (*OAuthAuthorizationsListGrantsNotModified) oAuthAuthorizationsListGrantsRes() {}

type OAuthAuthorizationsListGrantsOKApplicationJSON []ApplicationGrant

func (*OAuthAuthorizationsListGrantsOKApplicationJSON) oAuthAuthorizationsListGrantsRes() {}

type OAuthAuthorizationsUpdateAuthorizationReq struct {
	AddScopes    []string          `json:"add_scopes"`
	Fingerprint  OptString         `json:"fingerprint"`
	Note         OptString         `json:"note"`
	NoteURL      OptString         `json:"note_url"`
	RemoveScopes []string          `json:"remove_scopes"`
	Scopes       OptNilStringArray `json:"scopes"`
}

// NewOptAPIOverviewSSHKeyFingerprints returns new OptAPIOverviewSSHKeyFingerprints with value set to v.
func NewOptAPIOverviewSSHKeyFingerprints(v APIOverviewSSHKeyFingerprints) OptAPIOverviewSSHKeyFingerprints {
	return OptAPIOverviewSSHKeyFingerprints{
		Value: v,
		Set:   true,
	}
}

// OptAPIOverviewSSHKeyFingerprints is optional APIOverviewSSHKeyFingerprints.
type OptAPIOverviewSSHKeyFingerprints struct {
	Value APIOverviewSSHKeyFingerprints
	Set   bool
}

// IsSet returns true if OptAPIOverviewSSHKeyFingerprints was set.
func (o OptAPIOverviewSSHKeyFingerprints) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAPIOverviewSSHKeyFingerprints) Reset() {
	var v APIOverviewSSHKeyFingerprints
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAPIOverviewSSHKeyFingerprints) SetTo(v APIOverviewSSHKeyFingerprints) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAPIOverviewSSHKeyFingerprints) Get() (v APIOverviewSSHKeyFingerprints, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptActionsCreateSelfHostedRunnerGroupForOrgReqVisibility returns new OptActionsCreateSelfHostedRunnerGroupForOrgReqVisibility with value set to v.
func NewOptActionsCreateSelfHostedRunnerGroupForOrgReqVisibility(v ActionsCreateSelfHostedRunnerGroupForOrgReqVisibility) OptActionsCreateSelfHostedRunnerGroupForOrgReqVisibility {
	return OptActionsCreateSelfHostedRunnerGroupForOrgReqVisibility{
		Value: v,
		Set:   true,
	}
}

// OptActionsCreateSelfHostedRunnerGroupForOrgReqVisibility is optional ActionsCreateSelfHostedRunnerGroupForOrgReqVisibility.
type OptActionsCreateSelfHostedRunnerGroupForOrgReqVisibility struct {
	Value ActionsCreateSelfHostedRunnerGroupForOrgReqVisibility
	Set   bool
}

// IsSet returns true if OptActionsCreateSelfHostedRunnerGroupForOrgReqVisibility was set.
func (o OptActionsCreateSelfHostedRunnerGroupForOrgReqVisibility) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptActionsCreateSelfHostedRunnerGroupForOrgReqVisibility) Reset() {
	var v ActionsCreateSelfHostedRunnerGroupForOrgReqVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptActionsCreateSelfHostedRunnerGroupForOrgReqVisibility) SetTo(v ActionsCreateSelfHostedRunnerGroupForOrgReqVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptActionsCreateSelfHostedRunnerGroupForOrgReqVisibility) Get() (v ActionsCreateSelfHostedRunnerGroupForOrgReqVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility returns new OptActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility with value set to v.
func NewOptActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility(v ActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility) OptActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility {
	return OptActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility{
		Value: v,
		Set:   true,
	}
}

// OptActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility is optional ActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility.
type OptActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility struct {
	Value ActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility
	Set   bool
}

// IsSet returns true if OptActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility was set.
func (o OptActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility) Reset() {
	var v ActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility) SetTo(v ActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility) Get() (v ActionsUpdateSelfHostedRunnerGroupForOrgReqVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptActor returns new OptActor with value set to v.
func NewOptActor(v Actor) OptActor {
	return OptActor{
		Value: v,
		Set:   true,
	}
}

// OptActor is optional Actor.
type OptActor struct {
	Value Actor
	Set   bool
}

// IsSet returns true if OptActor was set.
func (o OptActor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptActor) Reset() {
	var v Actor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptActor) SetTo(v Actor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptActor) Get() (v Actor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAlertCreatedAt returns new OptAlertCreatedAt with value set to v.
func NewOptAlertCreatedAt(v AlertCreatedAt) OptAlertCreatedAt {
	return OptAlertCreatedAt{
		Value: v,
		Set:   true,
	}
}

// OptAlertCreatedAt is optional AlertCreatedAt.
type OptAlertCreatedAt struct {
	Value AlertCreatedAt
	Set   bool
}

// IsSet returns true if OptAlertCreatedAt was set.
func (o OptAlertCreatedAt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAlertCreatedAt) Reset() {
	var v AlertCreatedAt
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAlertCreatedAt) SetTo(v AlertCreatedAt) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAlertCreatedAt) Get() (v AlertCreatedAt, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAlertHTMLURL returns new OptAlertHTMLURL with value set to v.
func NewOptAlertHTMLURL(v AlertHTMLURL) OptAlertHTMLURL {
	return OptAlertHTMLURL{
		Value: v,
		Set:   true,
	}
}

// OptAlertHTMLURL is optional AlertHTMLURL.
type OptAlertHTMLURL struct {
	Value AlertHTMLURL
	Set   bool
}

// IsSet returns true if OptAlertHTMLURL was set.
func (o OptAlertHTMLURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAlertHTMLURL) Reset() {
	var v AlertHTMLURL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAlertHTMLURL) SetTo(v AlertHTMLURL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAlertHTMLURL) Get() (v AlertHTMLURL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAlertNumber returns new OptAlertNumber with value set to v.
func NewOptAlertNumber(v AlertNumber) OptAlertNumber {
	return OptAlertNumber{
		Value: v,
		Set:   true,
	}
}

// OptAlertNumber is optional AlertNumber.
type OptAlertNumber struct {
	Value AlertNumber
	Set   bool
}

// IsSet returns true if OptAlertNumber was set.
func (o OptAlertNumber) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAlertNumber) Reset() {
	var v AlertNumber
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAlertNumber) SetTo(v AlertNumber) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAlertNumber) Get() (v AlertNumber, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAlertURL returns new OptAlertURL with value set to v.
func NewOptAlertURL(v AlertURL) OptAlertURL {
	return OptAlertURL{
		Value: v,
		Set:   true,
	}
}

// OptAlertURL is optional AlertURL.
type OptAlertURL struct {
	Value AlertURL
	Set   bool
}

// IsSet returns true if OptAlertURL was set.
func (o OptAlertURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAlertURL) Reset() {
	var v AlertURL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAlertURL) SetTo(v AlertURL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAlertURL) Get() (v AlertURL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAllowedActions returns new OptAllowedActions with value set to v.
func NewOptAllowedActions(v AllowedActions) OptAllowedActions {
	return OptAllowedActions{
		Value: v,
		Set:   true,
	}
}

// OptAllowedActions is optional AllowedActions.
type OptAllowedActions struct {
	Value AllowedActions
	Set   bool
}

// IsSet returns true if OptAllowedActions was set.
func (o OptAllowedActions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAllowedActions) Reset() {
	var v AllowedActions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAllowedActions) SetTo(v AllowedActions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAllowedActions) Get() (v AllowedActions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissions returns new OptAppPermissions with value set to v.
func NewOptAppPermissions(v AppPermissions) OptAppPermissions {
	return OptAppPermissions{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissions is optional AppPermissions.
type OptAppPermissions struct {
	Value AppPermissions
	Set   bool
}

// IsSet returns true if OptAppPermissions was set.
func (o OptAppPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissions) Reset() {
	var v AppPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissions) SetTo(v AppPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissions) Get() (v AppPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsActions returns new OptAppPermissionsActions with value set to v.
func NewOptAppPermissionsActions(v AppPermissionsActions) OptAppPermissionsActions {
	return OptAppPermissionsActions{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsActions is optional AppPermissionsActions.
type OptAppPermissionsActions struct {
	Value AppPermissionsActions
	Set   bool
}

// IsSet returns true if OptAppPermissionsActions was set.
func (o OptAppPermissionsActions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsActions) Reset() {
	var v AppPermissionsActions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsActions) SetTo(v AppPermissionsActions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsActions) Get() (v AppPermissionsActions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsAdministration returns new OptAppPermissionsAdministration with value set to v.
func NewOptAppPermissionsAdministration(v AppPermissionsAdministration) OptAppPermissionsAdministration {
	return OptAppPermissionsAdministration{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsAdministration is optional AppPermissionsAdministration.
type OptAppPermissionsAdministration struct {
	Value AppPermissionsAdministration
	Set   bool
}

// IsSet returns true if OptAppPermissionsAdministration was set.
func (o OptAppPermissionsAdministration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsAdministration) Reset() {
	var v AppPermissionsAdministration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsAdministration) SetTo(v AppPermissionsAdministration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsAdministration) Get() (v AppPermissionsAdministration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsChecks returns new OptAppPermissionsChecks with value set to v.
func NewOptAppPermissionsChecks(v AppPermissionsChecks) OptAppPermissionsChecks {
	return OptAppPermissionsChecks{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsChecks is optional AppPermissionsChecks.
type OptAppPermissionsChecks struct {
	Value AppPermissionsChecks
	Set   bool
}

// IsSet returns true if OptAppPermissionsChecks was set.
func (o OptAppPermissionsChecks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsChecks) Reset() {
	var v AppPermissionsChecks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsChecks) SetTo(v AppPermissionsChecks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsChecks) Get() (v AppPermissionsChecks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsContentReferences returns new OptAppPermissionsContentReferences with value set to v.
func NewOptAppPermissionsContentReferences(v AppPermissionsContentReferences) OptAppPermissionsContentReferences {
	return OptAppPermissionsContentReferences{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsContentReferences is optional AppPermissionsContentReferences.
type OptAppPermissionsContentReferences struct {
	Value AppPermissionsContentReferences
	Set   bool
}

// IsSet returns true if OptAppPermissionsContentReferences was set.
func (o OptAppPermissionsContentReferences) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsContentReferences) Reset() {
	var v AppPermissionsContentReferences
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsContentReferences) SetTo(v AppPermissionsContentReferences) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsContentReferences) Get() (v AppPermissionsContentReferences, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsContents returns new OptAppPermissionsContents with value set to v.
func NewOptAppPermissionsContents(v AppPermissionsContents) OptAppPermissionsContents {
	return OptAppPermissionsContents{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsContents is optional AppPermissionsContents.
type OptAppPermissionsContents struct {
	Value AppPermissionsContents
	Set   bool
}

// IsSet returns true if OptAppPermissionsContents was set.
func (o OptAppPermissionsContents) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsContents) Reset() {
	var v AppPermissionsContents
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsContents) SetTo(v AppPermissionsContents) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsContents) Get() (v AppPermissionsContents, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsDeployments returns new OptAppPermissionsDeployments with value set to v.
func NewOptAppPermissionsDeployments(v AppPermissionsDeployments) OptAppPermissionsDeployments {
	return OptAppPermissionsDeployments{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsDeployments is optional AppPermissionsDeployments.
type OptAppPermissionsDeployments struct {
	Value AppPermissionsDeployments
	Set   bool
}

// IsSet returns true if OptAppPermissionsDeployments was set.
func (o OptAppPermissionsDeployments) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsDeployments) Reset() {
	var v AppPermissionsDeployments
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsDeployments) SetTo(v AppPermissionsDeployments) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsDeployments) Get() (v AppPermissionsDeployments, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsEnvironments returns new OptAppPermissionsEnvironments with value set to v.
func NewOptAppPermissionsEnvironments(v AppPermissionsEnvironments) OptAppPermissionsEnvironments {
	return OptAppPermissionsEnvironments{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsEnvironments is optional AppPermissionsEnvironments.
type OptAppPermissionsEnvironments struct {
	Value AppPermissionsEnvironments
	Set   bool
}

// IsSet returns true if OptAppPermissionsEnvironments was set.
func (o OptAppPermissionsEnvironments) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsEnvironments) Reset() {
	var v AppPermissionsEnvironments
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsEnvironments) SetTo(v AppPermissionsEnvironments) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsEnvironments) Get() (v AppPermissionsEnvironments, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsIssues returns new OptAppPermissionsIssues with value set to v.
func NewOptAppPermissionsIssues(v AppPermissionsIssues) OptAppPermissionsIssues {
	return OptAppPermissionsIssues{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsIssues is optional AppPermissionsIssues.
type OptAppPermissionsIssues struct {
	Value AppPermissionsIssues
	Set   bool
}

// IsSet returns true if OptAppPermissionsIssues was set.
func (o OptAppPermissionsIssues) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsIssues) Reset() {
	var v AppPermissionsIssues
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsIssues) SetTo(v AppPermissionsIssues) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsIssues) Get() (v AppPermissionsIssues, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsMembers returns new OptAppPermissionsMembers with value set to v.
func NewOptAppPermissionsMembers(v AppPermissionsMembers) OptAppPermissionsMembers {
	return OptAppPermissionsMembers{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsMembers is optional AppPermissionsMembers.
type OptAppPermissionsMembers struct {
	Value AppPermissionsMembers
	Set   bool
}

// IsSet returns true if OptAppPermissionsMembers was set.
func (o OptAppPermissionsMembers) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsMembers) Reset() {
	var v AppPermissionsMembers
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsMembers) SetTo(v AppPermissionsMembers) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsMembers) Get() (v AppPermissionsMembers, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsMetadata returns new OptAppPermissionsMetadata with value set to v.
func NewOptAppPermissionsMetadata(v AppPermissionsMetadata) OptAppPermissionsMetadata {
	return OptAppPermissionsMetadata{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsMetadata is optional AppPermissionsMetadata.
type OptAppPermissionsMetadata struct {
	Value AppPermissionsMetadata
	Set   bool
}

// IsSet returns true if OptAppPermissionsMetadata was set.
func (o OptAppPermissionsMetadata) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsMetadata) Reset() {
	var v AppPermissionsMetadata
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsMetadata) SetTo(v AppPermissionsMetadata) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsMetadata) Get() (v AppPermissionsMetadata, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationAdministration returns new OptAppPermissionsOrganizationAdministration with value set to v.
func NewOptAppPermissionsOrganizationAdministration(v AppPermissionsOrganizationAdministration) OptAppPermissionsOrganizationAdministration {
	return OptAppPermissionsOrganizationAdministration{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationAdministration is optional AppPermissionsOrganizationAdministration.
type OptAppPermissionsOrganizationAdministration struct {
	Value AppPermissionsOrganizationAdministration
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationAdministration was set.
func (o OptAppPermissionsOrganizationAdministration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationAdministration) Reset() {
	var v AppPermissionsOrganizationAdministration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationAdministration) SetTo(v AppPermissionsOrganizationAdministration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationAdministration) Get() (v AppPermissionsOrganizationAdministration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationHooks returns new OptAppPermissionsOrganizationHooks with value set to v.
func NewOptAppPermissionsOrganizationHooks(v AppPermissionsOrganizationHooks) OptAppPermissionsOrganizationHooks {
	return OptAppPermissionsOrganizationHooks{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationHooks is optional AppPermissionsOrganizationHooks.
type OptAppPermissionsOrganizationHooks struct {
	Value AppPermissionsOrganizationHooks
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationHooks was set.
func (o OptAppPermissionsOrganizationHooks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationHooks) Reset() {
	var v AppPermissionsOrganizationHooks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationHooks) SetTo(v AppPermissionsOrganizationHooks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationHooks) Get() (v AppPermissionsOrganizationHooks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationPackages returns new OptAppPermissionsOrganizationPackages with value set to v.
func NewOptAppPermissionsOrganizationPackages(v AppPermissionsOrganizationPackages) OptAppPermissionsOrganizationPackages {
	return OptAppPermissionsOrganizationPackages{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationPackages is optional AppPermissionsOrganizationPackages.
type OptAppPermissionsOrganizationPackages struct {
	Value AppPermissionsOrganizationPackages
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationPackages was set.
func (o OptAppPermissionsOrganizationPackages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationPackages) Reset() {
	var v AppPermissionsOrganizationPackages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationPackages) SetTo(v AppPermissionsOrganizationPackages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationPackages) Get() (v AppPermissionsOrganizationPackages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationPlan returns new OptAppPermissionsOrganizationPlan with value set to v.
func NewOptAppPermissionsOrganizationPlan(v AppPermissionsOrganizationPlan) OptAppPermissionsOrganizationPlan {
	return OptAppPermissionsOrganizationPlan{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationPlan is optional AppPermissionsOrganizationPlan.
type OptAppPermissionsOrganizationPlan struct {
	Value AppPermissionsOrganizationPlan
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationPlan was set.
func (o OptAppPermissionsOrganizationPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationPlan) Reset() {
	var v AppPermissionsOrganizationPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationPlan) SetTo(v AppPermissionsOrganizationPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationPlan) Get() (v AppPermissionsOrganizationPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationProjects returns new OptAppPermissionsOrganizationProjects with value set to v.
func NewOptAppPermissionsOrganizationProjects(v AppPermissionsOrganizationProjects) OptAppPermissionsOrganizationProjects {
	return OptAppPermissionsOrganizationProjects{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationProjects is optional AppPermissionsOrganizationProjects.
type OptAppPermissionsOrganizationProjects struct {
	Value AppPermissionsOrganizationProjects
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationProjects was set.
func (o OptAppPermissionsOrganizationProjects) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationProjects) Reset() {
	var v AppPermissionsOrganizationProjects
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationProjects) SetTo(v AppPermissionsOrganizationProjects) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationProjects) Get() (v AppPermissionsOrganizationProjects, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationSecrets returns new OptAppPermissionsOrganizationSecrets with value set to v.
func NewOptAppPermissionsOrganizationSecrets(v AppPermissionsOrganizationSecrets) OptAppPermissionsOrganizationSecrets {
	return OptAppPermissionsOrganizationSecrets{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationSecrets is optional AppPermissionsOrganizationSecrets.
type OptAppPermissionsOrganizationSecrets struct {
	Value AppPermissionsOrganizationSecrets
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationSecrets was set.
func (o OptAppPermissionsOrganizationSecrets) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationSecrets) Reset() {
	var v AppPermissionsOrganizationSecrets
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationSecrets) SetTo(v AppPermissionsOrganizationSecrets) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationSecrets) Get() (v AppPermissionsOrganizationSecrets, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationSelfHostedRunners returns new OptAppPermissionsOrganizationSelfHostedRunners with value set to v.
func NewOptAppPermissionsOrganizationSelfHostedRunners(v AppPermissionsOrganizationSelfHostedRunners) OptAppPermissionsOrganizationSelfHostedRunners {
	return OptAppPermissionsOrganizationSelfHostedRunners{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationSelfHostedRunners is optional AppPermissionsOrganizationSelfHostedRunners.
type OptAppPermissionsOrganizationSelfHostedRunners struct {
	Value AppPermissionsOrganizationSelfHostedRunners
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationSelfHostedRunners was set.
func (o OptAppPermissionsOrganizationSelfHostedRunners) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationSelfHostedRunners) Reset() {
	var v AppPermissionsOrganizationSelfHostedRunners
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationSelfHostedRunners) SetTo(v AppPermissionsOrganizationSelfHostedRunners) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationSelfHostedRunners) Get() (v AppPermissionsOrganizationSelfHostedRunners, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationUserBlocking returns new OptAppPermissionsOrganizationUserBlocking with value set to v.
func NewOptAppPermissionsOrganizationUserBlocking(v AppPermissionsOrganizationUserBlocking) OptAppPermissionsOrganizationUserBlocking {
	return OptAppPermissionsOrganizationUserBlocking{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationUserBlocking is optional AppPermissionsOrganizationUserBlocking.
type OptAppPermissionsOrganizationUserBlocking struct {
	Value AppPermissionsOrganizationUserBlocking
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationUserBlocking was set.
func (o OptAppPermissionsOrganizationUserBlocking) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationUserBlocking) Reset() {
	var v AppPermissionsOrganizationUserBlocking
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationUserBlocking) SetTo(v AppPermissionsOrganizationUserBlocking) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationUserBlocking) Get() (v AppPermissionsOrganizationUserBlocking, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsPackages returns new OptAppPermissionsPackages with value set to v.
func NewOptAppPermissionsPackages(v AppPermissionsPackages) OptAppPermissionsPackages {
	return OptAppPermissionsPackages{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsPackages is optional AppPermissionsPackages.
type OptAppPermissionsPackages struct {
	Value AppPermissionsPackages
	Set   bool
}

// IsSet returns true if OptAppPermissionsPackages was set.
func (o OptAppPermissionsPackages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsPackages) Reset() {
	var v AppPermissionsPackages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsPackages) SetTo(v AppPermissionsPackages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsPackages) Get() (v AppPermissionsPackages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsPages returns new OptAppPermissionsPages with value set to v.
func NewOptAppPermissionsPages(v AppPermissionsPages) OptAppPermissionsPages {
	return OptAppPermissionsPages{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsPages is optional AppPermissionsPages.
type OptAppPermissionsPages struct {
	Value AppPermissionsPages
	Set   bool
}

// IsSet returns true if OptAppPermissionsPages was set.
func (o OptAppPermissionsPages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsPages) Reset() {
	var v AppPermissionsPages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsPages) SetTo(v AppPermissionsPages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsPages) Get() (v AppPermissionsPages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsPullRequests returns new OptAppPermissionsPullRequests with value set to v.
func NewOptAppPermissionsPullRequests(v AppPermissionsPullRequests) OptAppPermissionsPullRequests {
	return OptAppPermissionsPullRequests{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsPullRequests is optional AppPermissionsPullRequests.
type OptAppPermissionsPullRequests struct {
	Value AppPermissionsPullRequests
	Set   bool
}

// IsSet returns true if OptAppPermissionsPullRequests was set.
func (o OptAppPermissionsPullRequests) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsPullRequests) Reset() {
	var v AppPermissionsPullRequests
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsPullRequests) SetTo(v AppPermissionsPullRequests) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsPullRequests) Get() (v AppPermissionsPullRequests, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsRepositoryHooks returns new OptAppPermissionsRepositoryHooks with value set to v.
func NewOptAppPermissionsRepositoryHooks(v AppPermissionsRepositoryHooks) OptAppPermissionsRepositoryHooks {
	return OptAppPermissionsRepositoryHooks{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsRepositoryHooks is optional AppPermissionsRepositoryHooks.
type OptAppPermissionsRepositoryHooks struct {
	Value AppPermissionsRepositoryHooks
	Set   bool
}

// IsSet returns true if OptAppPermissionsRepositoryHooks was set.
func (o OptAppPermissionsRepositoryHooks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsRepositoryHooks) Reset() {
	var v AppPermissionsRepositoryHooks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsRepositoryHooks) SetTo(v AppPermissionsRepositoryHooks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsRepositoryHooks) Get() (v AppPermissionsRepositoryHooks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsRepositoryProjects returns new OptAppPermissionsRepositoryProjects with value set to v.
func NewOptAppPermissionsRepositoryProjects(v AppPermissionsRepositoryProjects) OptAppPermissionsRepositoryProjects {
	return OptAppPermissionsRepositoryProjects{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsRepositoryProjects is optional AppPermissionsRepositoryProjects.
type OptAppPermissionsRepositoryProjects struct {
	Value AppPermissionsRepositoryProjects
	Set   bool
}

// IsSet returns true if OptAppPermissionsRepositoryProjects was set.
func (o OptAppPermissionsRepositoryProjects) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsRepositoryProjects) Reset() {
	var v AppPermissionsRepositoryProjects
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsRepositoryProjects) SetTo(v AppPermissionsRepositoryProjects) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsRepositoryProjects) Get() (v AppPermissionsRepositoryProjects, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsSecretScanningAlerts returns new OptAppPermissionsSecretScanningAlerts with value set to v.
func NewOptAppPermissionsSecretScanningAlerts(v AppPermissionsSecretScanningAlerts) OptAppPermissionsSecretScanningAlerts {
	return OptAppPermissionsSecretScanningAlerts{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsSecretScanningAlerts is optional AppPermissionsSecretScanningAlerts.
type OptAppPermissionsSecretScanningAlerts struct {
	Value AppPermissionsSecretScanningAlerts
	Set   bool
}

// IsSet returns true if OptAppPermissionsSecretScanningAlerts was set.
func (o OptAppPermissionsSecretScanningAlerts) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsSecretScanningAlerts) Reset() {
	var v AppPermissionsSecretScanningAlerts
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsSecretScanningAlerts) SetTo(v AppPermissionsSecretScanningAlerts) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsSecretScanningAlerts) Get() (v AppPermissionsSecretScanningAlerts, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsSecrets returns new OptAppPermissionsSecrets with value set to v.
func NewOptAppPermissionsSecrets(v AppPermissionsSecrets) OptAppPermissionsSecrets {
	return OptAppPermissionsSecrets{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsSecrets is optional AppPermissionsSecrets.
type OptAppPermissionsSecrets struct {
	Value AppPermissionsSecrets
	Set   bool
}

// IsSet returns true if OptAppPermissionsSecrets was set.
func (o OptAppPermissionsSecrets) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsSecrets) Reset() {
	var v AppPermissionsSecrets
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsSecrets) SetTo(v AppPermissionsSecrets) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsSecrets) Get() (v AppPermissionsSecrets, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsSecurityEvents returns new OptAppPermissionsSecurityEvents with value set to v.
func NewOptAppPermissionsSecurityEvents(v AppPermissionsSecurityEvents) OptAppPermissionsSecurityEvents {
	return OptAppPermissionsSecurityEvents{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsSecurityEvents is optional AppPermissionsSecurityEvents.
type OptAppPermissionsSecurityEvents struct {
	Value AppPermissionsSecurityEvents
	Set   bool
}

// IsSet returns true if OptAppPermissionsSecurityEvents was set.
func (o OptAppPermissionsSecurityEvents) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsSecurityEvents) Reset() {
	var v AppPermissionsSecurityEvents
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsSecurityEvents) SetTo(v AppPermissionsSecurityEvents) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsSecurityEvents) Get() (v AppPermissionsSecurityEvents, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsSingleFile returns new OptAppPermissionsSingleFile with value set to v.
func NewOptAppPermissionsSingleFile(v AppPermissionsSingleFile) OptAppPermissionsSingleFile {
	return OptAppPermissionsSingleFile{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsSingleFile is optional AppPermissionsSingleFile.
type OptAppPermissionsSingleFile struct {
	Value AppPermissionsSingleFile
	Set   bool
}

// IsSet returns true if OptAppPermissionsSingleFile was set.
func (o OptAppPermissionsSingleFile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsSingleFile) Reset() {
	var v AppPermissionsSingleFile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsSingleFile) SetTo(v AppPermissionsSingleFile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsSingleFile) Get() (v AppPermissionsSingleFile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsStatuses returns new OptAppPermissionsStatuses with value set to v.
func NewOptAppPermissionsStatuses(v AppPermissionsStatuses) OptAppPermissionsStatuses {
	return OptAppPermissionsStatuses{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsStatuses is optional AppPermissionsStatuses.
type OptAppPermissionsStatuses struct {
	Value AppPermissionsStatuses
	Set   bool
}

// IsSet returns true if OptAppPermissionsStatuses was set.
func (o OptAppPermissionsStatuses) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsStatuses) Reset() {
	var v AppPermissionsStatuses
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsStatuses) SetTo(v AppPermissionsStatuses) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsStatuses) Get() (v AppPermissionsStatuses, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsTeamDiscussions returns new OptAppPermissionsTeamDiscussions with value set to v.
func NewOptAppPermissionsTeamDiscussions(v AppPermissionsTeamDiscussions) OptAppPermissionsTeamDiscussions {
	return OptAppPermissionsTeamDiscussions{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsTeamDiscussions is optional AppPermissionsTeamDiscussions.
type OptAppPermissionsTeamDiscussions struct {
	Value AppPermissionsTeamDiscussions
	Set   bool
}

// IsSet returns true if OptAppPermissionsTeamDiscussions was set.
func (o OptAppPermissionsTeamDiscussions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsTeamDiscussions) Reset() {
	var v AppPermissionsTeamDiscussions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsTeamDiscussions) SetTo(v AppPermissionsTeamDiscussions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsTeamDiscussions) Get() (v AppPermissionsTeamDiscussions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsVulnerabilityAlerts returns new OptAppPermissionsVulnerabilityAlerts with value set to v.
func NewOptAppPermissionsVulnerabilityAlerts(v AppPermissionsVulnerabilityAlerts) OptAppPermissionsVulnerabilityAlerts {
	return OptAppPermissionsVulnerabilityAlerts{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsVulnerabilityAlerts is optional AppPermissionsVulnerabilityAlerts.
type OptAppPermissionsVulnerabilityAlerts struct {
	Value AppPermissionsVulnerabilityAlerts
	Set   bool
}

// IsSet returns true if OptAppPermissionsVulnerabilityAlerts was set.
func (o OptAppPermissionsVulnerabilityAlerts) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsVulnerabilityAlerts) Reset() {
	var v AppPermissionsVulnerabilityAlerts
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsVulnerabilityAlerts) SetTo(v AppPermissionsVulnerabilityAlerts) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsVulnerabilityAlerts) Get() (v AppPermissionsVulnerabilityAlerts, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsWorkflows returns new OptAppPermissionsWorkflows with value set to v.
func NewOptAppPermissionsWorkflows(v AppPermissionsWorkflows) OptAppPermissionsWorkflows {
	return OptAppPermissionsWorkflows{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsWorkflows is optional AppPermissionsWorkflows.
type OptAppPermissionsWorkflows struct {
	Value AppPermissionsWorkflows
	Set   bool
}

// IsSet returns true if OptAppPermissionsWorkflows was set.
func (o OptAppPermissionsWorkflows) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsWorkflows) Reset() {
	var v AppPermissionsWorkflows
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsWorkflows) SetTo(v AppPermissionsWorkflows) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsWorkflows) Get() (v AppPermissionsWorkflows, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAuditLogEventActorLocation returns new OptAuditLogEventActorLocation with value set to v.
func NewOptAuditLogEventActorLocation(v AuditLogEventActorLocation) OptAuditLogEventActorLocation {
	return OptAuditLogEventActorLocation{
		Value: v,
		Set:   true,
	}
}

// OptAuditLogEventActorLocation is optional AuditLogEventActorLocation.
type OptAuditLogEventActorLocation struct {
	Value AuditLogEventActorLocation
	Set   bool
}

// IsSet returns true if OptAuditLogEventActorLocation was set.
func (o OptAuditLogEventActorLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAuditLogEventActorLocation) Reset() {
	var v AuditLogEventActorLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAuditLogEventActorLocation) SetTo(v AuditLogEventActorLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAuditLogEventActorLocation) Get() (v AuditLogEventActorLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAuthenticationTokenRepositorySelection returns new OptAuthenticationTokenRepositorySelection with value set to v.
func NewOptAuthenticationTokenRepositorySelection(v AuthenticationTokenRepositorySelection) OptAuthenticationTokenRepositorySelection {
	return OptAuthenticationTokenRepositorySelection{
		Value: v,
		Set:   true,
	}
}

// OptAuthenticationTokenRepositorySelection is optional AuthenticationTokenRepositorySelection.
type OptAuthenticationTokenRepositorySelection struct {
	Value AuthenticationTokenRepositorySelection
	Set   bool
}

// IsSet returns true if OptAuthenticationTokenRepositorySelection was set.
func (o OptAuthenticationTokenRepositorySelection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAuthenticationTokenRepositorySelection) Reset() {
	var v AuthenticationTokenRepositorySelection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAuthenticationTokenRepositorySelection) SetTo(v AuthenticationTokenRepositorySelection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAuthenticationTokenRepositorySelection) Get() (v AuthenticationTokenRepositorySelection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAuthorAssociation returns new OptAuthorAssociation with value set to v.
func NewOptAuthorAssociation(v AuthorAssociation) OptAuthorAssociation {
	return OptAuthorAssociation{
		Value: v,
		Set:   true,
	}
}

// OptAuthorAssociation is optional AuthorAssociation.
type OptAuthorAssociation struct {
	Value AuthorAssociation
	Set   bool
}

// IsSet returns true if OptAuthorAssociation was set.
func (o OptAuthorAssociation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAuthorAssociation) Reset() {
	var v AuthorAssociation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAuthorAssociation) SetTo(v AuthorAssociation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAuthorAssociation) Get() (v AuthorAssociation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchProtection returns new OptBranchProtection with value set to v.
func NewOptBranchProtection(v BranchProtection) OptBranchProtection {
	return OptBranchProtection{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtection is optional BranchProtection.
type OptBranchProtection struct {
	Value BranchProtection
	Set   bool
}

// IsSet returns true if OptBranchProtection was set.
func (o OptBranchProtection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtection) Reset() {
	var v BranchProtection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtection) SetTo(v BranchProtection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtection) Get() (v BranchProtection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchProtectionAllowDeletions returns new OptBranchProtectionAllowDeletions with value set to v.
func NewOptBranchProtectionAllowDeletions(v BranchProtectionAllowDeletions) OptBranchProtectionAllowDeletions {
	return OptBranchProtectionAllowDeletions{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionAllowDeletions is optional BranchProtectionAllowDeletions.
type OptBranchProtectionAllowDeletions struct {
	Value BranchProtectionAllowDeletions
	Set   bool
}

// IsSet returns true if OptBranchProtectionAllowDeletions was set.
func (o OptBranchProtectionAllowDeletions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionAllowDeletions) Reset() {
	var v BranchProtectionAllowDeletions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionAllowDeletions) SetTo(v BranchProtectionAllowDeletions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionAllowDeletions) Get() (v BranchProtectionAllowDeletions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchProtectionAllowForcePushes returns new OptBranchProtectionAllowForcePushes with value set to v.
func NewOptBranchProtectionAllowForcePushes(v BranchProtectionAllowForcePushes) OptBranchProtectionAllowForcePushes {
	return OptBranchProtectionAllowForcePushes{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionAllowForcePushes is optional BranchProtectionAllowForcePushes.
type OptBranchProtectionAllowForcePushes struct {
	Value BranchProtectionAllowForcePushes
	Set   bool
}

// IsSet returns true if OptBranchProtectionAllowForcePushes was set.
func (o OptBranchProtectionAllowForcePushes) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionAllowForcePushes) Reset() {
	var v BranchProtectionAllowForcePushes
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionAllowForcePushes) SetTo(v BranchProtectionAllowForcePushes) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionAllowForcePushes) Get() (v BranchProtectionAllowForcePushes, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchProtectionRequiredConversationResolution returns new OptBranchProtectionRequiredConversationResolution with value set to v.
func NewOptBranchProtectionRequiredConversationResolution(v BranchProtectionRequiredConversationResolution) OptBranchProtectionRequiredConversationResolution {
	return OptBranchProtectionRequiredConversationResolution{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionRequiredConversationResolution is optional BranchProtectionRequiredConversationResolution.
type OptBranchProtectionRequiredConversationResolution struct {
	Value BranchProtectionRequiredConversationResolution
	Set   bool
}

// IsSet returns true if OptBranchProtectionRequiredConversationResolution was set.
func (o OptBranchProtectionRequiredConversationResolution) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionRequiredConversationResolution) Reset() {
	var v BranchProtectionRequiredConversationResolution
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionRequiredConversationResolution) SetTo(v BranchProtectionRequiredConversationResolution) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionRequiredConversationResolution) Get() (v BranchProtectionRequiredConversationResolution, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchProtectionRequiredLinearHistory returns new OptBranchProtectionRequiredLinearHistory with value set to v.
func NewOptBranchProtectionRequiredLinearHistory(v BranchProtectionRequiredLinearHistory) OptBranchProtectionRequiredLinearHistory {
	return OptBranchProtectionRequiredLinearHistory{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionRequiredLinearHistory is optional BranchProtectionRequiredLinearHistory.
type OptBranchProtectionRequiredLinearHistory struct {
	Value BranchProtectionRequiredLinearHistory
	Set   bool
}

// IsSet returns true if OptBranchProtectionRequiredLinearHistory was set.
func (o OptBranchProtectionRequiredLinearHistory) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionRequiredLinearHistory) Reset() {
	var v BranchProtectionRequiredLinearHistory
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionRequiredLinearHistory) SetTo(v BranchProtectionRequiredLinearHistory) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionRequiredLinearHistory) Get() (v BranchProtectionRequiredLinearHistory, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchProtectionRequiredSignatures returns new OptBranchProtectionRequiredSignatures with value set to v.
func NewOptBranchProtectionRequiredSignatures(v BranchProtectionRequiredSignatures) OptBranchProtectionRequiredSignatures {
	return OptBranchProtectionRequiredSignatures{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionRequiredSignatures is optional BranchProtectionRequiredSignatures.
type OptBranchProtectionRequiredSignatures struct {
	Value BranchProtectionRequiredSignatures
	Set   bool
}

// IsSet returns true if OptBranchProtectionRequiredSignatures was set.
func (o OptBranchProtectionRequiredSignatures) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionRequiredSignatures) Reset() {
	var v BranchProtectionRequiredSignatures
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionRequiredSignatures) SetTo(v BranchProtectionRequiredSignatures) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionRequiredSignatures) Get() (v BranchProtectionRequiredSignatures, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchProtectionRequiredStatusChecks returns new OptBranchProtectionRequiredStatusChecks with value set to v.
func NewOptBranchProtectionRequiredStatusChecks(v BranchProtectionRequiredStatusChecks) OptBranchProtectionRequiredStatusChecks {
	return OptBranchProtectionRequiredStatusChecks{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionRequiredStatusChecks is optional BranchProtectionRequiredStatusChecks.
type OptBranchProtectionRequiredStatusChecks struct {
	Value BranchProtectionRequiredStatusChecks
	Set   bool
}

// IsSet returns true if OptBranchProtectionRequiredStatusChecks was set.
func (o OptBranchProtectionRequiredStatusChecks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionRequiredStatusChecks) Reset() {
	var v BranchProtectionRequiredStatusChecks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionRequiredStatusChecks) SetTo(v BranchProtectionRequiredStatusChecks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionRequiredStatusChecks) Get() (v BranchProtectionRequiredStatusChecks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchRestrictionPolicy returns new OptBranchRestrictionPolicy with value set to v.
func NewOptBranchRestrictionPolicy(v BranchRestrictionPolicy) OptBranchRestrictionPolicy {
	return OptBranchRestrictionPolicy{
		Value: v,
		Set:   true,
	}
}

// OptBranchRestrictionPolicy is optional BranchRestrictionPolicy.
type OptBranchRestrictionPolicy struct {
	Value BranchRestrictionPolicy
	Set   bool
}

// IsSet returns true if OptBranchRestrictionPolicy was set.
func (o OptBranchRestrictionPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchRestrictionPolicy) Reset() {
	var v BranchRestrictionPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchRestrictionPolicy) SetTo(v BranchRestrictionPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchRestrictionPolicy) Get() (v BranchRestrictionPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchRestrictionPolicyAppsItemOwner returns new OptBranchRestrictionPolicyAppsItemOwner with value set to v.
func NewOptBranchRestrictionPolicyAppsItemOwner(v BranchRestrictionPolicyAppsItemOwner) OptBranchRestrictionPolicyAppsItemOwner {
	return OptBranchRestrictionPolicyAppsItemOwner{
		Value: v,
		Set:   true,
	}
}

// OptBranchRestrictionPolicyAppsItemOwner is optional BranchRestrictionPolicyAppsItemOwner.
type OptBranchRestrictionPolicyAppsItemOwner struct {
	Value BranchRestrictionPolicyAppsItemOwner
	Set   bool
}

// IsSet returns true if OptBranchRestrictionPolicyAppsItemOwner was set.
func (o OptBranchRestrictionPolicyAppsItemOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchRestrictionPolicyAppsItemOwner) Reset() {
	var v BranchRestrictionPolicyAppsItemOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchRestrictionPolicyAppsItemOwner) SetTo(v BranchRestrictionPolicyAppsItemOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchRestrictionPolicyAppsItemOwner) Get() (v BranchRestrictionPolicyAppsItemOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchRestrictionPolicyAppsItemPermissions returns new OptBranchRestrictionPolicyAppsItemPermissions with value set to v.
func NewOptBranchRestrictionPolicyAppsItemPermissions(v BranchRestrictionPolicyAppsItemPermissions) OptBranchRestrictionPolicyAppsItemPermissions {
	return OptBranchRestrictionPolicyAppsItemPermissions{
		Value: v,
		Set:   true,
	}
}

// OptBranchRestrictionPolicyAppsItemPermissions is optional BranchRestrictionPolicyAppsItemPermissions.
type OptBranchRestrictionPolicyAppsItemPermissions struct {
	Value BranchRestrictionPolicyAppsItemPermissions
	Set   bool
}

// IsSet returns true if OptBranchRestrictionPolicyAppsItemPermissions was set.
func (o OptBranchRestrictionPolicyAppsItemPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchRestrictionPolicyAppsItemPermissions) Reset() {
	var v BranchRestrictionPolicyAppsItemPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchRestrictionPolicyAppsItemPermissions) SetTo(v BranchRestrictionPolicyAppsItemPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchRestrictionPolicyAppsItemPermissions) Get() (v BranchRestrictionPolicyAppsItemPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeOfConduct returns new OptCodeOfConduct with value set to v.
func NewOptCodeOfConduct(v CodeOfConduct) OptCodeOfConduct {
	return OptCodeOfConduct{
		Value: v,
		Set:   true,
	}
}

// OptCodeOfConduct is optional CodeOfConduct.
type OptCodeOfConduct struct {
	Value CodeOfConduct
	Set   bool
}

// IsSet returns true if OptCodeOfConduct was set.
func (o OptCodeOfConduct) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeOfConduct) Reset() {
	var v CodeOfConduct
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeOfConduct) SetTo(v CodeOfConduct) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeOfConduct) Get() (v CodeOfConduct, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeOfConductSimple returns new OptCodeOfConductSimple with value set to v.
func NewOptCodeOfConductSimple(v CodeOfConductSimple) OptCodeOfConductSimple {
	return OptCodeOfConductSimple{
		Value: v,
		Set:   true,
	}
}

// OptCodeOfConductSimple is optional CodeOfConductSimple.
type OptCodeOfConductSimple struct {
	Value CodeOfConductSimple
	Set   bool
}

// IsSet returns true if OptCodeOfConductSimple was set.
func (o OptCodeOfConductSimple) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeOfConductSimple) Reset() {
	var v CodeOfConductSimple
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeOfConductSimple) SetTo(v CodeOfConductSimple) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeOfConductSimple) Get() (v CodeOfConductSimple, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningAlertEnvironment returns new OptCodeScanningAlertEnvironment with value set to v.
func NewOptCodeScanningAlertEnvironment(v CodeScanningAlertEnvironment) OptCodeScanningAlertEnvironment {
	return OptCodeScanningAlertEnvironment{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAlertEnvironment is optional CodeScanningAlertEnvironment.
type OptCodeScanningAlertEnvironment struct {
	Value CodeScanningAlertEnvironment
	Set   bool
}

// IsSet returns true if OptCodeScanningAlertEnvironment was set.
func (o OptCodeScanningAlertEnvironment) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAlertEnvironment) Reset() {
	var v CodeScanningAlertEnvironment
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAlertEnvironment) SetTo(v CodeScanningAlertEnvironment) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAlertEnvironment) Get() (v CodeScanningAlertEnvironment, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningAlertInstanceMessage returns new OptCodeScanningAlertInstanceMessage with value set to v.
func NewOptCodeScanningAlertInstanceMessage(v CodeScanningAlertInstanceMessage) OptCodeScanningAlertInstanceMessage {
	return OptCodeScanningAlertInstanceMessage{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAlertInstanceMessage is optional CodeScanningAlertInstanceMessage.
type OptCodeScanningAlertInstanceMessage struct {
	Value CodeScanningAlertInstanceMessage
	Set   bool
}

// IsSet returns true if OptCodeScanningAlertInstanceMessage was set.
func (o OptCodeScanningAlertInstanceMessage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAlertInstanceMessage) Reset() {
	var v CodeScanningAlertInstanceMessage
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAlertInstanceMessage) SetTo(v CodeScanningAlertInstanceMessage) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAlertInstanceMessage) Get() (v CodeScanningAlertInstanceMessage, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningAlertLocation returns new OptCodeScanningAlertLocation with value set to v.
func NewOptCodeScanningAlertLocation(v CodeScanningAlertLocation) OptCodeScanningAlertLocation {
	return OptCodeScanningAlertLocation{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAlertLocation is optional CodeScanningAlertLocation.
type OptCodeScanningAlertLocation struct {
	Value CodeScanningAlertLocation
	Set   bool
}

// IsSet returns true if OptCodeScanningAlertLocation was set.
func (o OptCodeScanningAlertLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAlertLocation) Reset() {
	var v CodeScanningAlertLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAlertLocation) SetTo(v CodeScanningAlertLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAlertLocation) Get() (v CodeScanningAlertLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningAlertState returns new OptCodeScanningAlertState with value set to v.
func NewOptCodeScanningAlertState(v CodeScanningAlertState) OptCodeScanningAlertState {
	return OptCodeScanningAlertState{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAlertState is optional CodeScanningAlertState.
type OptCodeScanningAlertState struct {
	Value CodeScanningAlertState
	Set   bool
}

// IsSet returns true if OptCodeScanningAlertState was set.
func (o OptCodeScanningAlertState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAlertState) Reset() {
	var v CodeScanningAlertState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAlertState) SetTo(v CodeScanningAlertState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAlertState) Get() (v CodeScanningAlertState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningAnalysisAnalysisKey returns new OptCodeScanningAnalysisAnalysisKey with value set to v.
func NewOptCodeScanningAnalysisAnalysisKey(v CodeScanningAnalysisAnalysisKey) OptCodeScanningAnalysisAnalysisKey {
	return OptCodeScanningAnalysisAnalysisKey{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAnalysisAnalysisKey is optional CodeScanningAnalysisAnalysisKey.
type OptCodeScanningAnalysisAnalysisKey struct {
	Value CodeScanningAnalysisAnalysisKey
	Set   bool
}

// IsSet returns true if OptCodeScanningAnalysisAnalysisKey was set.
func (o OptCodeScanningAnalysisAnalysisKey) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAnalysisAnalysisKey) Reset() {
	var v CodeScanningAnalysisAnalysisKey
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAnalysisAnalysisKey) SetTo(v CodeScanningAnalysisAnalysisKey) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAnalysisAnalysisKey) Get() (v CodeScanningAnalysisAnalysisKey, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningAnalysisCategory returns new OptCodeScanningAnalysisCategory with value set to v.
func NewOptCodeScanningAnalysisCategory(v CodeScanningAnalysisCategory) OptCodeScanningAnalysisCategory {
	return OptCodeScanningAnalysisCategory{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAnalysisCategory is optional CodeScanningAnalysisCategory.
type OptCodeScanningAnalysisCategory struct {
	Value CodeScanningAnalysisCategory
	Set   bool
}

// IsSet returns true if OptCodeScanningAnalysisCategory was set.
func (o OptCodeScanningAnalysisCategory) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAnalysisCategory) Reset() {
	var v CodeScanningAnalysisCategory
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAnalysisCategory) SetTo(v CodeScanningAnalysisCategory) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAnalysisCategory) Get() (v CodeScanningAnalysisCategory, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningAnalysisSarifID returns new OptCodeScanningAnalysisSarifID with value set to v.
func NewOptCodeScanningAnalysisSarifID(v CodeScanningAnalysisSarifID) OptCodeScanningAnalysisSarifID {
	return OptCodeScanningAnalysisSarifID{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAnalysisSarifID is optional CodeScanningAnalysisSarifID.
type OptCodeScanningAnalysisSarifID struct {
	Value CodeScanningAnalysisSarifID
	Set   bool
}

// IsSet returns true if OptCodeScanningAnalysisSarifID was set.
func (o OptCodeScanningAnalysisSarifID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAnalysisSarifID) Reset() {
	var v CodeScanningAnalysisSarifID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAnalysisSarifID) SetTo(v CodeScanningAnalysisSarifID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAnalysisSarifID) Get() (v CodeScanningAnalysisSarifID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningAnalysisToolName returns new OptCodeScanningAnalysisToolName with value set to v.
func NewOptCodeScanningAnalysisToolName(v CodeScanningAnalysisToolName) OptCodeScanningAnalysisToolName {
	return OptCodeScanningAnalysisToolName{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAnalysisToolName is optional CodeScanningAnalysisToolName.
type OptCodeScanningAnalysisToolName struct {
	Value CodeScanningAnalysisToolName
	Set   bool
}

// IsSet returns true if OptCodeScanningAnalysisToolName was set.
func (o OptCodeScanningAnalysisToolName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAnalysisToolName) Reset() {
	var v CodeScanningAnalysisToolName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAnalysisToolName) SetTo(v CodeScanningAnalysisToolName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAnalysisToolName) Get() (v CodeScanningAnalysisToolName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningRef returns new OptCodeScanningRef with value set to v.
func NewOptCodeScanningRef(v CodeScanningRef) OptCodeScanningRef {
	return OptCodeScanningRef{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningRef is optional CodeScanningRef.
type OptCodeScanningRef struct {
	Value CodeScanningRef
	Set   bool
}

// IsSet returns true if OptCodeScanningRef was set.
func (o OptCodeScanningRef) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningRef) Reset() {
	var v CodeScanningRef
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningRef) SetTo(v CodeScanningRef) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningRef) Get() (v CodeScanningRef, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningSarifsStatusProcessingStatus returns new OptCodeScanningSarifsStatusProcessingStatus with value set to v.
func NewOptCodeScanningSarifsStatusProcessingStatus(v CodeScanningSarifsStatusProcessingStatus) OptCodeScanningSarifsStatusProcessingStatus {
	return OptCodeScanningSarifsStatusProcessingStatus{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningSarifsStatusProcessingStatus is optional CodeScanningSarifsStatusProcessingStatus.
type OptCodeScanningSarifsStatusProcessingStatus struct {
	Value CodeScanningSarifsStatusProcessingStatus
	Set   bool
}

// IsSet returns true if OptCodeScanningSarifsStatusProcessingStatus was set.
func (o OptCodeScanningSarifsStatusProcessingStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningSarifsStatusProcessingStatus) Reset() {
	var v CodeScanningSarifsStatusProcessingStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningSarifsStatusProcessingStatus) SetTo(v CodeScanningSarifsStatusProcessingStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningSarifsStatusProcessingStatus) Get() (v CodeScanningSarifsStatusProcessingStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCollaboratorPermissions returns new OptCollaboratorPermissions with value set to v.
func NewOptCollaboratorPermissions(v CollaboratorPermissions) OptCollaboratorPermissions {
	return OptCollaboratorPermissions{
		Value: v,
		Set:   true,
	}
}

// OptCollaboratorPermissions is optional CollaboratorPermissions.
type OptCollaboratorPermissions struct {
	Value CollaboratorPermissions
	Set   bool
}

// IsSet returns true if OptCollaboratorPermissions was set.
func (o OptCollaboratorPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCollaboratorPermissions) Reset() {
	var v CollaboratorPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCollaboratorPermissions) SetTo(v CollaboratorPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCollaboratorPermissions) Get() (v CollaboratorPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCommitStats returns new OptCommitStats with value set to v.
func NewOptCommitStats(v CommitStats) OptCommitStats {
	return OptCommitStats{
		Value: v,
		Set:   true,
	}
}

// OptCommitStats is optional CommitStats.
type OptCommitStats struct {
	Value CommitStats
	Set   bool
}

// IsSet returns true if OptCommitStats was set.
func (o OptCommitStats) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCommitStats) Reset() {
	var v CommitStats
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCommitStats) SetTo(v CommitStats) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCommitStats) Get() (v CommitStats, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptDeploymentReviewerType returns new OptDeploymentReviewerType with value set to v.
func NewOptDeploymentReviewerType(v DeploymentReviewerType) OptDeploymentReviewerType {
	return OptDeploymentReviewerType{
		Value: v,
		Set:   true,
	}
}

// OptDeploymentReviewerType is optional DeploymentReviewerType.
type OptDeploymentReviewerType struct {
	Value DeploymentReviewerType
	Set   bool
}

// IsSet returns true if OptDeploymentReviewerType was set.
func (o OptDeploymentReviewerType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDeploymentReviewerType) Reset() {
	var v DeploymentReviewerType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDeploymentReviewerType) SetTo(v DeploymentReviewerType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDeploymentReviewerType) Get() (v DeploymentReviewerType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptDeploymentSimple returns new OptDeploymentSimple with value set to v.
func NewOptDeploymentSimple(v DeploymentSimple) OptDeploymentSimple {
	return OptDeploymentSimple{
		Value: v,
		Set:   true,
	}
}

// OptDeploymentSimple is optional DeploymentSimple.
type OptDeploymentSimple struct {
	Value DeploymentSimple
	Set   bool
}

// IsSet returns true if OptDeploymentSimple was set.
func (o OptDeploymentSimple) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDeploymentSimple) Reset() {
	var v DeploymentSimple
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDeploymentSimple) SetTo(v DeploymentSimple) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDeploymentSimple) Get() (v DeploymentSimple, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility returns new OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility with value set to v.
func NewOptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility(v EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility) OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility {
	return OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility{
		Value: v,
		Set:   true,
	}
}

// OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility is optional EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility.
type OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility struct {
	Value EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility
	Set   bool
}

// IsSet returns true if OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility was set.
func (o OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility) Reset() {
	var v EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility) SetTo(v EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility) Get() (v EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseReqVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility returns new OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility with value set to v.
func NewOptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility(v EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility) OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility {
	return OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility{
		Value: v,
		Set:   true,
	}
}

// OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility is optional EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility.
type OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility struct {
	Value EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility
	Set   bool
}

// IsSet returns true if OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility was set.
func (o OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility) Reset() {
	var v EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility) SetTo(v EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility) Get() (v EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseReqVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFileCommitCommitAuthor returns new OptFileCommitCommitAuthor with value set to v.
func NewOptFileCommitCommitAuthor(v FileCommitCommitAuthor) OptFileCommitCommitAuthor {
	return OptFileCommitCommitAuthor{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitCommitAuthor is optional FileCommitCommitAuthor.
type OptFileCommitCommitAuthor struct {
	Value FileCommitCommitAuthor
	Set   bool
}

// IsSet returns true if OptFileCommitCommitAuthor was set.
func (o OptFileCommitCommitAuthor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitCommitAuthor) Reset() {
	var v FileCommitCommitAuthor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitCommitAuthor) SetTo(v FileCommitCommitAuthor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitCommitAuthor) Get() (v FileCommitCommitAuthor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFileCommitCommitCommitter returns new OptFileCommitCommitCommitter with value set to v.
func NewOptFileCommitCommitCommitter(v FileCommitCommitCommitter) OptFileCommitCommitCommitter {
	return OptFileCommitCommitCommitter{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitCommitCommitter is optional FileCommitCommitCommitter.
type OptFileCommitCommitCommitter struct {
	Value FileCommitCommitCommitter
	Set   bool
}

// IsSet returns true if OptFileCommitCommitCommitter was set.
func (o OptFileCommitCommitCommitter) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitCommitCommitter) Reset() {
	var v FileCommitCommitCommitter
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitCommitCommitter) SetTo(v FileCommitCommitCommitter) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitCommitCommitter) Get() (v FileCommitCommitCommitter, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFileCommitCommitTree returns new OptFileCommitCommitTree with value set to v.
func NewOptFileCommitCommitTree(v FileCommitCommitTree) OptFileCommitCommitTree {
	return OptFileCommitCommitTree{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitCommitTree is optional FileCommitCommitTree.
type OptFileCommitCommitTree struct {
	Value FileCommitCommitTree
	Set   bool
}

// IsSet returns true if OptFileCommitCommitTree was set.
func (o OptFileCommitCommitTree) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitCommitTree) Reset() {
	var v FileCommitCommitTree
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitCommitTree) SetTo(v FileCommitCommitTree) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitCommitTree) Get() (v FileCommitCommitTree, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFileCommitCommitVerification returns new OptFileCommitCommitVerification with value set to v.
func NewOptFileCommitCommitVerification(v FileCommitCommitVerification) OptFileCommitCommitVerification {
	return OptFileCommitCommitVerification{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitCommitVerification is optional FileCommitCommitVerification.
type OptFileCommitCommitVerification struct {
	Value FileCommitCommitVerification
	Set   bool
}

// IsSet returns true if OptFileCommitCommitVerification was set.
func (o OptFileCommitCommitVerification) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitCommitVerification) Reset() {
	var v FileCommitCommitVerification
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitCommitVerification) SetTo(v FileCommitCommitVerification) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitCommitVerification) Get() (v FileCommitCommitVerification, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFileCommitContentLinks returns new OptFileCommitContentLinks with value set to v.
func NewOptFileCommitContentLinks(v FileCommitContentLinks) OptFileCommitContentLinks {
	return OptFileCommitContentLinks{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitContentLinks is optional FileCommitContentLinks.
type OptFileCommitContentLinks struct {
	Value FileCommitContentLinks
	Set   bool
}

// IsSet returns true if OptFileCommitContentLinks was set.
func (o OptFileCommitContentLinks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitContentLinks) Reset() {
	var v FileCommitContentLinks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitContentLinks) SetTo(v FileCommitContentLinks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitContentLinks) Get() (v FileCommitContentLinks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFullRepositoryPermissions returns new OptFullRepositoryPermissions with value set to v.
func NewOptFullRepositoryPermissions(v FullRepositoryPermissions) OptFullRepositoryPermissions {
	return OptFullRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositoryPermissions is optional FullRepositoryPermissions.
type OptFullRepositoryPermissions struct {
	Value FullRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptFullRepositoryPermissions was set.
func (o OptFullRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositoryPermissions) Reset() {
	var v FullRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositoryPermissions) SetTo(v FullRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositoryPermissions) Get() (v FullRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFullRepositorySecurityAndAnalysisAdvancedSecurity returns new OptFullRepositorySecurityAndAnalysisAdvancedSecurity with value set to v.
func NewOptFullRepositorySecurityAndAnalysisAdvancedSecurity(v FullRepositorySecurityAndAnalysisAdvancedSecurity) OptFullRepositorySecurityAndAnalysisAdvancedSecurity {
	return OptFullRepositorySecurityAndAnalysisAdvancedSecurity{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositorySecurityAndAnalysisAdvancedSecurity is optional FullRepositorySecurityAndAnalysisAdvancedSecurity.
type OptFullRepositorySecurityAndAnalysisAdvancedSecurity struct {
	Value FullRepositorySecurityAndAnalysisAdvancedSecurity
	Set   bool
}

// IsSet returns true if OptFullRepositorySecurityAndAnalysisAdvancedSecurity was set.
func (o OptFullRepositorySecurityAndAnalysisAdvancedSecurity) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositorySecurityAndAnalysisAdvancedSecurity) Reset() {
	var v FullRepositorySecurityAndAnalysisAdvancedSecurity
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositorySecurityAndAnalysisAdvancedSecurity) SetTo(v FullRepositorySecurityAndAnalysisAdvancedSecurity) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositorySecurityAndAnalysisAdvancedSecurity) Get() (v FullRepositorySecurityAndAnalysisAdvancedSecurity, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus returns new OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus with value set to v.
func NewOptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus(v FullRepositorySecurityAndAnalysisAdvancedSecurityStatus) OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus {
	return OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus is optional FullRepositorySecurityAndAnalysisAdvancedSecurityStatus.
type OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus struct {
	Value FullRepositorySecurityAndAnalysisAdvancedSecurityStatus
	Set   bool
}

// IsSet returns true if OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus was set.
func (o OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus) Reset() {
	var v FullRepositorySecurityAndAnalysisAdvancedSecurityStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus) SetTo(v FullRepositorySecurityAndAnalysisAdvancedSecurityStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus) Get() (v FullRepositorySecurityAndAnalysisAdvancedSecurityStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFullRepositorySecurityAndAnalysisSecretScanning returns new OptFullRepositorySecurityAndAnalysisSecretScanning with value set to v.
func NewOptFullRepositorySecurityAndAnalysisSecretScanning(v FullRepositorySecurityAndAnalysisSecretScanning) OptFullRepositorySecurityAndAnalysisSecretScanning {
	return OptFullRepositorySecurityAndAnalysisSecretScanning{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositorySecurityAndAnalysisSecretScanning is optional FullRepositorySecurityAndAnalysisSecretScanning.
type OptFullRepositorySecurityAndAnalysisSecretScanning struct {
	Value FullRepositorySecurityAndAnalysisSecretScanning
	Set   bool
}

// IsSet returns true if OptFullRepositorySecurityAndAnalysisSecretScanning was set.
func (o OptFullRepositorySecurityAndAnalysisSecretScanning) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositorySecurityAndAnalysisSecretScanning) Reset() {
	var v FullRepositorySecurityAndAnalysisSecretScanning
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositorySecurityAndAnalysisSecretScanning) SetTo(v FullRepositorySecurityAndAnalysisSecretScanning) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositorySecurityAndAnalysisSecretScanning) Get() (v FullRepositorySecurityAndAnalysisSecretScanning, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFullRepositorySecurityAndAnalysisSecretScanningStatus returns new OptFullRepositorySecurityAndAnalysisSecretScanningStatus with value set to v.
func NewOptFullRepositorySecurityAndAnalysisSecretScanningStatus(v FullRepositorySecurityAndAnalysisSecretScanningStatus) OptFullRepositorySecurityAndAnalysisSecretScanningStatus {
	return OptFullRepositorySecurityAndAnalysisSecretScanningStatus{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositorySecurityAndAnalysisSecretScanningStatus is optional FullRepositorySecurityAndAnalysisSecretScanningStatus.
type OptFullRepositorySecurityAndAnalysisSecretScanningStatus struct {
	Value FullRepositorySecurityAndAnalysisSecretScanningStatus
	Set   bool
}

// IsSet returns true if OptFullRepositorySecurityAndAnalysisSecretScanningStatus was set.
func (o OptFullRepositorySecurityAndAnalysisSecretScanningStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositorySecurityAndAnalysisSecretScanningStatus) Reset() {
	var v FullRepositorySecurityAndAnalysisSecretScanningStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositorySecurityAndAnalysisSecretScanningStatus) SetTo(v FullRepositorySecurityAndAnalysisSecretScanningStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositorySecurityAndAnalysisSecretScanningStatus) Get() (v FullRepositorySecurityAndAnalysisSecretScanningStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGistHistoryChangeStatus returns new OptGistHistoryChangeStatus with value set to v.
func NewOptGistHistoryChangeStatus(v GistHistoryChangeStatus) OptGistHistoryChangeStatus {
	return OptGistHistoryChangeStatus{
		Value: v,
		Set:   true,
	}
}

// OptGistHistoryChangeStatus is optional GistHistoryChangeStatus.
type OptGistHistoryChangeStatus struct {
	Value GistHistoryChangeStatus
	Set   bool
}

// IsSet returns true if OptGistHistoryChangeStatus was set.
func (o OptGistHistoryChangeStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGistHistoryChangeStatus) Reset() {
	var v GistHistoryChangeStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGistHistoryChangeStatus) SetTo(v GistHistoryChangeStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGistHistoryChangeStatus) Get() (v GistHistoryChangeStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGistsGetCommentForbiddenBlock returns new OptGistsGetCommentForbiddenBlock with value set to v.
func NewOptGistsGetCommentForbiddenBlock(v GistsGetCommentForbiddenBlock) OptGistsGetCommentForbiddenBlock {
	return OptGistsGetCommentForbiddenBlock{
		Value: v,
		Set:   true,
	}
}

// OptGistsGetCommentForbiddenBlock is optional GistsGetCommentForbiddenBlock.
type OptGistsGetCommentForbiddenBlock struct {
	Value GistsGetCommentForbiddenBlock
	Set   bool
}

// IsSet returns true if OptGistsGetCommentForbiddenBlock was set.
func (o OptGistsGetCommentForbiddenBlock) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGistsGetCommentForbiddenBlock) Reset() {
	var v GistsGetCommentForbiddenBlock
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGistsGetCommentForbiddenBlock) SetTo(v GistsGetCommentForbiddenBlock) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGistsGetCommentForbiddenBlock) Get() (v GistsGetCommentForbiddenBlock, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGistsGetForbiddenBlock returns new OptGistsGetForbiddenBlock with value set to v.
func NewOptGistsGetForbiddenBlock(v GistsGetForbiddenBlock) OptGistsGetForbiddenBlock {
	return OptGistsGetForbiddenBlock{
		Value: v,
		Set:   true,
	}
}

// OptGistsGetForbiddenBlock is optional GistsGetForbiddenBlock.
type OptGistsGetForbiddenBlock struct {
	Value GistsGetForbiddenBlock
	Set   bool
}

// IsSet returns true if OptGistsGetForbiddenBlock was set.
func (o OptGistsGetForbiddenBlock) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGistsGetForbiddenBlock) Reset() {
	var v GistsGetForbiddenBlock
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGistsGetForbiddenBlock) SetTo(v GistsGetForbiddenBlock) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGistsGetForbiddenBlock) Get() (v GistsGetForbiddenBlock, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGitCreateCommitReqAuthor returns new OptGitCreateCommitReqAuthor with value set to v.
func NewOptGitCreateCommitReqAuthor(v GitCreateCommitReqAuthor) OptGitCreateCommitReqAuthor {
	return OptGitCreateCommitReqAuthor{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateCommitReqAuthor is optional GitCreateCommitReqAuthor.
type OptGitCreateCommitReqAuthor struct {
	Value GitCreateCommitReqAuthor
	Set   bool
}

// IsSet returns true if OptGitCreateCommitReqAuthor was set.
func (o OptGitCreateCommitReqAuthor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateCommitReqAuthor) Reset() {
	var v GitCreateCommitReqAuthor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateCommitReqAuthor) SetTo(v GitCreateCommitReqAuthor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateCommitReqAuthor) Get() (v GitCreateCommitReqAuthor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGitCreateCommitReqCommitter returns new OptGitCreateCommitReqCommitter with value set to v.
func NewOptGitCreateCommitReqCommitter(v GitCreateCommitReqCommitter) OptGitCreateCommitReqCommitter {
	return OptGitCreateCommitReqCommitter{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateCommitReqCommitter is optional GitCreateCommitReqCommitter.
type OptGitCreateCommitReqCommitter struct {
	Value GitCreateCommitReqCommitter
	Set   bool
}

// IsSet returns true if OptGitCreateCommitReqCommitter was set.
func (o OptGitCreateCommitReqCommitter) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateCommitReqCommitter) Reset() {
	var v GitCreateCommitReqCommitter
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateCommitReqCommitter) SetTo(v GitCreateCommitReqCommitter) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateCommitReqCommitter) Get() (v GitCreateCommitReqCommitter, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGitCreateTagReqTagger returns new OptGitCreateTagReqTagger with value set to v.
func NewOptGitCreateTagReqTagger(v GitCreateTagReqTagger) OptGitCreateTagReqTagger {
	return OptGitCreateTagReqTagger{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateTagReqTagger is optional GitCreateTagReqTagger.
type OptGitCreateTagReqTagger struct {
	Value GitCreateTagReqTagger
	Set   bool
}

// IsSet returns true if OptGitCreateTagReqTagger was set.
func (o OptGitCreateTagReqTagger) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateTagReqTagger) Reset() {
	var v GitCreateTagReqTagger
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateTagReqTagger) SetTo(v GitCreateTagReqTagger) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateTagReqTagger) Get() (v GitCreateTagReqTagger, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGitCreateTreeReqTreeItemMode returns new OptGitCreateTreeReqTreeItemMode with value set to v.
func NewOptGitCreateTreeReqTreeItemMode(v GitCreateTreeReqTreeItemMode) OptGitCreateTreeReqTreeItemMode {
	return OptGitCreateTreeReqTreeItemMode{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateTreeReqTreeItemMode is optional GitCreateTreeReqTreeItemMode.
type OptGitCreateTreeReqTreeItemMode struct {
	Value GitCreateTreeReqTreeItemMode
	Set   bool
}

// IsSet returns true if OptGitCreateTreeReqTreeItemMode was set.
func (o OptGitCreateTreeReqTreeItemMode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateTreeReqTreeItemMode) Reset() {
	var v GitCreateTreeReqTreeItemMode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateTreeReqTreeItemMode) SetTo(v GitCreateTreeReqTreeItemMode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateTreeReqTreeItemMode) Get() (v GitCreateTreeReqTreeItemMode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGitCreateTreeReqTreeItemType returns new OptGitCreateTreeReqTreeItemType with value set to v.
func NewOptGitCreateTreeReqTreeItemType(v GitCreateTreeReqTreeItemType) OptGitCreateTreeReqTreeItemType {
	return OptGitCreateTreeReqTreeItemType{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateTreeReqTreeItemType is optional GitCreateTreeReqTreeItemType.
type OptGitCreateTreeReqTreeItemType struct {
	Value GitCreateTreeReqTreeItemType
	Set   bool
}

// IsSet returns true if OptGitCreateTreeReqTreeItemType was set.
func (o OptGitCreateTreeReqTreeItemType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateTreeReqTreeItemType) Reset() {
	var v GitCreateTreeReqTreeItemType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateTreeReqTreeItemType) SetTo(v GitCreateTreeReqTreeItemType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateTreeReqTreeItemType) Get() (v GitCreateTreeReqTreeItemType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInstallationTokenRepositorySelection returns new OptInstallationTokenRepositorySelection with value set to v.
func NewOptInstallationTokenRepositorySelection(v InstallationTokenRepositorySelection) OptInstallationTokenRepositorySelection {
	return OptInstallationTokenRepositorySelection{
		Value: v,
		Set:   true,
	}
}

// OptInstallationTokenRepositorySelection is optional InstallationTokenRepositorySelection.
type OptInstallationTokenRepositorySelection struct {
	Value InstallationTokenRepositorySelection
	Set   bool
}

// IsSet returns true if OptInstallationTokenRepositorySelection was set.
func (o OptInstallationTokenRepositorySelection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInstallationTokenRepositorySelection) Reset() {
	var v InstallationTokenRepositorySelection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInstallationTokenRepositorySelection) SetTo(v InstallationTokenRepositorySelection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInstallationTokenRepositorySelection) Get() (v InstallationTokenRepositorySelection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInteractionExpiry returns new OptInteractionExpiry with value set to v.
func NewOptInteractionExpiry(v InteractionExpiry) OptInteractionExpiry {
	return OptInteractionExpiry{
		Value: v,
		Set:   true,
	}
}

// OptInteractionExpiry is optional InteractionExpiry.
type OptInteractionExpiry struct {
	Value InteractionExpiry
	Set   bool
}

// IsSet returns true if OptInteractionExpiry was set.
func (o OptInteractionExpiry) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInteractionExpiry) Reset() {
	var v InteractionExpiry
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInteractionExpiry) SetTo(v InteractionExpiry) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInteractionExpiry) Get() (v InteractionExpiry, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssueComment returns new OptIssueComment with value set to v.
func NewOptIssueComment(v IssueComment) OptIssueComment {
	return OptIssueComment{
		Value: v,
		Set:   true,
	}
}

// OptIssueComment is optional IssueComment.
type OptIssueComment struct {
	Value IssueComment
	Set   bool
}

// IsSet returns true if OptIssueComment was set.
func (o OptIssueComment) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueComment) Reset() {
	var v IssueComment
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueComment) SetTo(v IssueComment) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueComment) Get() (v IssueComment, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssueEventDismissedReview returns new OptIssueEventDismissedReview with value set to v.
func NewOptIssueEventDismissedReview(v IssueEventDismissedReview) OptIssueEventDismissedReview {
	return OptIssueEventDismissedReview{
		Value: v,
		Set:   true,
	}
}

// OptIssueEventDismissedReview is optional IssueEventDismissedReview.
type OptIssueEventDismissedReview struct {
	Value IssueEventDismissedReview
	Set   bool
}

// IsSet returns true if OptIssueEventDismissedReview was set.
func (o OptIssueEventDismissedReview) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueEventDismissedReview) Reset() {
	var v IssueEventDismissedReview
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueEventDismissedReview) SetTo(v IssueEventDismissedReview) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueEventDismissedReview) Get() (v IssueEventDismissedReview, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssueEventLabel returns new OptIssueEventLabel with value set to v.
func NewOptIssueEventLabel(v IssueEventLabel) OptIssueEventLabel {
	return OptIssueEventLabel{
		Value: v,
		Set:   true,
	}
}

// OptIssueEventLabel is optional IssueEventLabel.
type OptIssueEventLabel struct {
	Value IssueEventLabel
	Set   bool
}

// IsSet returns true if OptIssueEventLabel was set.
func (o OptIssueEventLabel) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueEventLabel) Reset() {
	var v IssueEventLabel
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueEventLabel) SetTo(v IssueEventLabel) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueEventLabel) Get() (v IssueEventLabel, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssueEventMilestone returns new OptIssueEventMilestone with value set to v.
func NewOptIssueEventMilestone(v IssueEventMilestone) OptIssueEventMilestone {
	return OptIssueEventMilestone{
		Value: v,
		Set:   true,
	}
}

// OptIssueEventMilestone is optional IssueEventMilestone.
type OptIssueEventMilestone struct {
	Value IssueEventMilestone
	Set   bool
}

// IsSet returns true if OptIssueEventMilestone was set.
func (o OptIssueEventMilestone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueEventMilestone) Reset() {
	var v IssueEventMilestone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueEventMilestone) SetTo(v IssueEventMilestone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueEventMilestone) Get() (v IssueEventMilestone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssueEventProjectCard returns new OptIssueEventProjectCard with value set to v.
func NewOptIssueEventProjectCard(v IssueEventProjectCard) OptIssueEventProjectCard {
	return OptIssueEventProjectCard{
		Value: v,
		Set:   true,
	}
}

// OptIssueEventProjectCard is optional IssueEventProjectCard.
type OptIssueEventProjectCard struct {
	Value IssueEventProjectCard
	Set   bool
}

// IsSet returns true if OptIssueEventProjectCard was set.
func (o OptIssueEventProjectCard) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueEventProjectCard) Reset() {
	var v IssueEventProjectCard
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueEventProjectCard) SetTo(v IssueEventProjectCard) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueEventProjectCard) Get() (v IssueEventProjectCard, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssueEventRename returns new OptIssueEventRename with value set to v.
func NewOptIssueEventRename(v IssueEventRename) OptIssueEventRename {
	return OptIssueEventRename{
		Value: v,
		Set:   true,
	}
}

// OptIssueEventRename is optional IssueEventRename.
type OptIssueEventRename struct {
	Value IssueEventRename
	Set   bool
}

// IsSet returns true if OptIssueEventRename was set.
func (o OptIssueEventRename) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueEventRename) Reset() {
	var v IssueEventRename
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueEventRename) SetTo(v IssueEventRename) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueEventRename) Get() (v IssueEventRename, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssueSearchResultItemPullRequest returns new OptIssueSearchResultItemPullRequest with value set to v.
func NewOptIssueSearchResultItemPullRequest(v IssueSearchResultItemPullRequest) OptIssueSearchResultItemPullRequest {
	return OptIssueSearchResultItemPullRequest{
		Value: v,
		Set:   true,
	}
}

// OptIssueSearchResultItemPullRequest is optional IssueSearchResultItemPullRequest.
type OptIssueSearchResultItemPullRequest struct {
	Value IssueSearchResultItemPullRequest
	Set   bool
}

// IsSet returns true if OptIssueSearchResultItemPullRequest was set.
func (o OptIssueSearchResultItemPullRequest) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueSearchResultItemPullRequest) Reset() {
	var v IssueSearchResultItemPullRequest
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueSearchResultItemPullRequest) SetTo(v IssueSearchResultItemPullRequest) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueSearchResultItemPullRequest) Get() (v IssueSearchResultItemPullRequest, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssueSimple returns new OptIssueSimple with value set to v.
func NewOptIssueSimple(v IssueSimple) OptIssueSimple {
	return OptIssueSimple{
		Value: v,
		Set:   true,
	}
}

// OptIssueSimple is optional IssueSimple.
type OptIssueSimple struct {
	Value IssueSimple
	Set   bool
}

// IsSet returns true if OptIssueSimple was set.
func (o OptIssueSimple) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueSimple) Reset() {
	var v IssueSimple
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueSimple) SetTo(v IssueSimple) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueSimple) Get() (v IssueSimple, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssueSimplePullRequest returns new OptIssueSimplePullRequest with value set to v.
func NewOptIssueSimplePullRequest(v IssueSimplePullRequest) OptIssueSimplePullRequest {
	return OptIssueSimplePullRequest{
		Value: v,
		Set:   true,
	}
}

// OptIssueSimplePullRequest is optional IssueSimplePullRequest.
type OptIssueSimplePullRequest struct {
	Value IssueSimplePullRequest
	Set   bool
}

// IsSet returns true if OptIssueSimplePullRequest was set.
func (o OptIssueSimplePullRequest) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssueSimplePullRequest) Reset() {
	var v IssueSimplePullRequest
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssueSimplePullRequest) SetTo(v IssueSimplePullRequest) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssueSimplePullRequest) Get() (v IssueSimplePullRequest, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssuesCreateMilestoneReqState returns new OptIssuesCreateMilestoneReqState with value set to v.
func NewOptIssuesCreateMilestoneReqState(v IssuesCreateMilestoneReqState) OptIssuesCreateMilestoneReqState {
	return OptIssuesCreateMilestoneReqState{
		Value: v,
		Set:   true,
	}
}

// OptIssuesCreateMilestoneReqState is optional IssuesCreateMilestoneReqState.
type OptIssuesCreateMilestoneReqState struct {
	Value IssuesCreateMilestoneReqState
	Set   bool
}

// IsSet returns true if OptIssuesCreateMilestoneReqState was set.
func (o OptIssuesCreateMilestoneReqState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssuesCreateMilestoneReqState) Reset() {
	var v IssuesCreateMilestoneReqState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssuesCreateMilestoneReqState) SetTo(v IssuesCreateMilestoneReqState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssuesCreateMilestoneReqState) Get() (v IssuesCreateMilestoneReqState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssuesLockReqLockReason returns new OptIssuesLockReqLockReason with value set to v.
func NewOptIssuesLockReqLockReason(v IssuesLockReqLockReason) OptIssuesLockReqLockReason {
	return OptIssuesLockReqLockReason{
		Value: v,
		Set:   true,
	}
}

// OptIssuesLockReqLockReason is optional IssuesLockReqLockReason.
type OptIssuesLockReqLockReason struct {
	Value IssuesLockReqLockReason
	Set   bool
}

// IsSet returns true if OptIssuesLockReqLockReason was set.
func (o OptIssuesLockReqLockReason) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssuesLockReqLockReason) Reset() {
	var v IssuesLockReqLockReason
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssuesLockReqLockReason) SetTo(v IssuesLockReqLockReason) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssuesLockReqLockReason) Get() (v IssuesLockReqLockReason, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssuesUpdateMilestoneReqState returns new OptIssuesUpdateMilestoneReqState with value set to v.
func NewOptIssuesUpdateMilestoneReqState(v IssuesUpdateMilestoneReqState) OptIssuesUpdateMilestoneReqState {
	return OptIssuesUpdateMilestoneReqState{
		Value: v,
		Set:   true,
	}
}

// OptIssuesUpdateMilestoneReqState is optional IssuesUpdateMilestoneReqState.
type OptIssuesUpdateMilestoneReqState struct {
	Value IssuesUpdateMilestoneReqState
	Set   bool
}

// IsSet returns true if OptIssuesUpdateMilestoneReqState was set.
func (o OptIssuesUpdateMilestoneReqState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssuesUpdateMilestoneReqState) Reset() {
	var v IssuesUpdateMilestoneReqState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssuesUpdateMilestoneReqState) SetTo(v IssuesUpdateMilestoneReqState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssuesUpdateMilestoneReqState) Get() (v IssuesUpdateMilestoneReqState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptLinkWithType returns new OptLinkWithType with value set to v.
func NewOptLinkWithType(v LinkWithType) OptLinkWithType {
	return OptLinkWithType{
		Value: v,
		Set:   true,
	}
}

// OptLinkWithType is optional LinkWithType.
type OptLinkWithType struct {
	Value LinkWithType
	Set   bool
}

// IsSet returns true if OptLinkWithType was set.
func (o OptLinkWithType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLinkWithType) Reset() {
	var v LinkWithType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLinkWithType) SetTo(v LinkWithType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLinkWithType) Get() (v LinkWithType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMarkdownRenderReqMode returns new OptMarkdownRenderReqMode with value set to v.
func NewOptMarkdownRenderReqMode(v MarkdownRenderReqMode) OptMarkdownRenderReqMode {
	return OptMarkdownRenderReqMode{
		Value: v,
		Set:   true,
	}
}

// OptMarkdownRenderReqMode is optional MarkdownRenderReqMode.
type OptMarkdownRenderReqMode struct {
	Value MarkdownRenderReqMode
	Set   bool
}

// IsSet returns true if OptMarkdownRenderReqMode was set.
func (o OptMarkdownRenderReqMode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMarkdownRenderReqMode) Reset() {
	var v MarkdownRenderReqMode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMarkdownRenderReqMode) SetTo(v MarkdownRenderReqMode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMarkdownRenderReqMode) Get() (v MarkdownRenderReqMode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMarketplaceListingPlan returns new OptMarketplaceListingPlan with value set to v.
func NewOptMarketplaceListingPlan(v MarketplaceListingPlan) OptMarketplaceListingPlan {
	return OptMarketplaceListingPlan{
		Value: v,
		Set:   true,
	}
}

// OptMarketplaceListingPlan is optional MarketplaceListingPlan.
type OptMarketplaceListingPlan struct {
	Value MarketplaceListingPlan
	Set   bool
}

// IsSet returns true if OptMarketplaceListingPlan was set.
func (o OptMarketplaceListingPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMarketplaceListingPlan) Reset() {
	var v MarketplaceListingPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMarketplaceListingPlan) SetTo(v MarketplaceListingPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMarketplaceListingPlan) Get() (v MarketplaceListingPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMergedUpstreamMergeType returns new OptMergedUpstreamMergeType with value set to v.
func NewOptMergedUpstreamMergeType(v MergedUpstreamMergeType) OptMergedUpstreamMergeType {
	return OptMergedUpstreamMergeType{
		Value: v,
		Set:   true,
	}
}

// OptMergedUpstreamMergeType is optional MergedUpstreamMergeType.
type OptMergedUpstreamMergeType struct {
	Value MergedUpstreamMergeType
	Set   bool
}

// IsSet returns true if OptMergedUpstreamMergeType was set.
func (o OptMergedUpstreamMergeType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMergedUpstreamMergeType) Reset() {
	var v MergedUpstreamMergeType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMergedUpstreamMergeType) SetTo(v MergedUpstreamMergeType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMergedUpstreamMergeType) Get() (v MergedUpstreamMergeType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMigrationsStartImportReqVcs returns new OptMigrationsStartImportReqVcs with value set to v.
func NewOptMigrationsStartImportReqVcs(v MigrationsStartImportReqVcs) OptMigrationsStartImportReqVcs {
	return OptMigrationsStartImportReqVcs{
		Value: v,
		Set:   true,
	}
}

// OptMigrationsStartImportReqVcs is optional MigrationsStartImportReqVcs.
type OptMigrationsStartImportReqVcs struct {
	Value MigrationsStartImportReqVcs
	Set   bool
}

// IsSet returns true if OptMigrationsStartImportReqVcs was set.
func (o OptMigrationsStartImportReqVcs) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMigrationsStartImportReqVcs) Reset() {
	var v MigrationsStartImportReqVcs
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMigrationsStartImportReqVcs) SetTo(v MigrationsStartImportReqVcs) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMigrationsStartImportReqVcs) Get() (v MigrationsStartImportReqVcs, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMinimalRepository returns new OptMinimalRepository with value set to v.
func NewOptMinimalRepository(v MinimalRepository) OptMinimalRepository {
	return OptMinimalRepository{
		Value: v,
		Set:   true,
	}
}

// OptMinimalRepository is optional MinimalRepository.
type OptMinimalRepository struct {
	Value MinimalRepository
	Set   bool
}

// IsSet returns true if OptMinimalRepository was set.
func (o OptMinimalRepository) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMinimalRepository) Reset() {
	var v MinimalRepository
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMinimalRepository) SetTo(v MinimalRepository) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMinimalRepository) Get() (v MinimalRepository, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMinimalRepositoryPermissions returns new OptMinimalRepositoryPermissions with value set to v.
func NewOptMinimalRepositoryPermissions(v MinimalRepositoryPermissions) OptMinimalRepositoryPermissions {
	return OptMinimalRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptMinimalRepositoryPermissions is optional MinimalRepositoryPermissions.
type OptMinimalRepositoryPermissions struct {
	Value MinimalRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptMinimalRepositoryPermissions was set.
func (o OptMinimalRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMinimalRepositoryPermissions) Reset() {
	var v MinimalRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMinimalRepositoryPermissions) SetTo(v MinimalRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMinimalRepositoryPermissions) Get() (v MinimalRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilBool returns new OptNilBool with value set to v.
func NewOptNilBool(v bool) OptNilBool {
	return OptNilBool{
		Value: v,
		Set:   true,
	}
}

// OptNilBool is optional nullable bool.
type OptNilBool struct {
	Value bool
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBool was set.
func (o OptNilBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBool) SetTo(v bool) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilBool) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilCodeScanningAlertDismissedReason returns new OptNilCodeScanningAlertDismissedReason with value set to v.
func NewOptNilCodeScanningAlertDismissedReason(v CodeScanningAlertDismissedReason) OptNilCodeScanningAlertDismissedReason {
	return OptNilCodeScanningAlertDismissedReason{
		Value: v,
		Set:   true,
	}
}

// OptNilCodeScanningAlertDismissedReason is optional nullable CodeScanningAlertDismissedReason.
type OptNilCodeScanningAlertDismissedReason struct {
	Value CodeScanningAlertDismissedReason
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCodeScanningAlertDismissedReason was set.
func (o OptNilCodeScanningAlertDismissedReason) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCodeScanningAlertDismissedReason) Reset() {
	var v CodeScanningAlertDismissedReason
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCodeScanningAlertDismissedReason) SetTo(v CodeScanningAlertDismissedReason) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCodeScanningAlertDismissedReason) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCodeScanningAlertDismissedReason) Get() (v CodeScanningAlertDismissedReason, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilCodeScanningAlertRuleSecuritySeverityLevel returns new OptNilCodeScanningAlertRuleSecuritySeverityLevel with value set to v.
func NewOptNilCodeScanningAlertRuleSecuritySeverityLevel(v CodeScanningAlertRuleSecuritySeverityLevel) OptNilCodeScanningAlertRuleSecuritySeverityLevel {
	return OptNilCodeScanningAlertRuleSecuritySeverityLevel{
		Value: v,
		Set:   true,
	}
}

// OptNilCodeScanningAlertRuleSecuritySeverityLevel is optional nullable CodeScanningAlertRuleSecuritySeverityLevel.
type OptNilCodeScanningAlertRuleSecuritySeverityLevel struct {
	Value CodeScanningAlertRuleSecuritySeverityLevel
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCodeScanningAlertRuleSecuritySeverityLevel was set.
func (o OptNilCodeScanningAlertRuleSecuritySeverityLevel) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCodeScanningAlertRuleSecuritySeverityLevel) Reset() {
	var v CodeScanningAlertRuleSecuritySeverityLevel
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCodeScanningAlertRuleSecuritySeverityLevel) SetTo(v CodeScanningAlertRuleSecuritySeverityLevel) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCodeScanningAlertRuleSecuritySeverityLevel) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCodeScanningAlertRuleSecuritySeverityLevel) Get() (v CodeScanningAlertRuleSecuritySeverityLevel, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilCodeScanningAlertRuleSeverity returns new OptNilCodeScanningAlertRuleSeverity with value set to v.
func NewOptNilCodeScanningAlertRuleSeverity(v CodeScanningAlertRuleSeverity) OptNilCodeScanningAlertRuleSeverity {
	return OptNilCodeScanningAlertRuleSeverity{
		Value: v,
		Set:   true,
	}
}

// OptNilCodeScanningAlertRuleSeverity is optional nullable CodeScanningAlertRuleSeverity.
type OptNilCodeScanningAlertRuleSeverity struct {
	Value CodeScanningAlertRuleSeverity
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCodeScanningAlertRuleSeverity was set.
func (o OptNilCodeScanningAlertRuleSeverity) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCodeScanningAlertRuleSeverity) Reset() {
	var v CodeScanningAlertRuleSeverity
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCodeScanningAlertRuleSeverity) SetTo(v CodeScanningAlertRuleSeverity) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCodeScanningAlertRuleSeverity) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCodeScanningAlertRuleSeverity) Get() (v CodeScanningAlertRuleSeverity, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilCodeScanningAlertRuleSummarySeverity returns new OptNilCodeScanningAlertRuleSummarySeverity with value set to v.
func NewOptNilCodeScanningAlertRuleSummarySeverity(v CodeScanningAlertRuleSummarySeverity) OptNilCodeScanningAlertRuleSummarySeverity {
	return OptNilCodeScanningAlertRuleSummarySeverity{
		Value: v,
		Set:   true,
	}
}

// OptNilCodeScanningAlertRuleSummarySeverity is optional nullable CodeScanningAlertRuleSummarySeverity.
type OptNilCodeScanningAlertRuleSummarySeverity struct {
	Value CodeScanningAlertRuleSummarySeverity
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCodeScanningAlertRuleSummarySeverity was set.
func (o OptNilCodeScanningAlertRuleSummarySeverity) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCodeScanningAlertRuleSummarySeverity) Reset() {
	var v CodeScanningAlertRuleSummarySeverity
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCodeScanningAlertRuleSummarySeverity) SetTo(v CodeScanningAlertRuleSummarySeverity) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCodeScanningAlertRuleSummarySeverity) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCodeScanningAlertRuleSummarySeverity) Get() (v CodeScanningAlertRuleSummarySeverity, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilCodeScanningAnalysisToolGUID returns new OptNilCodeScanningAnalysisToolGUID with value set to v.
func NewOptNilCodeScanningAnalysisToolGUID(v CodeScanningAnalysisToolGUID) OptNilCodeScanningAnalysisToolGUID {
	return OptNilCodeScanningAnalysisToolGUID{
		Value: v,
		Set:   true,
	}
}

// OptNilCodeScanningAnalysisToolGUID is optional nullable CodeScanningAnalysisToolGUID.
type OptNilCodeScanningAnalysisToolGUID struct {
	Value CodeScanningAnalysisToolGUID
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCodeScanningAnalysisToolGUID was set.
func (o OptNilCodeScanningAnalysisToolGUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCodeScanningAnalysisToolGUID) Reset() {
	var v CodeScanningAnalysisToolGUID
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCodeScanningAnalysisToolGUID) SetTo(v CodeScanningAnalysisToolGUID) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCodeScanningAnalysisToolGUID) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCodeScanningAnalysisToolGUID) Get() (v CodeScanningAnalysisToolGUID, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilCodeScanningAnalysisToolVersion returns new OptNilCodeScanningAnalysisToolVersion with value set to v.
func NewOptNilCodeScanningAnalysisToolVersion(v CodeScanningAnalysisToolVersion) OptNilCodeScanningAnalysisToolVersion {
	return OptNilCodeScanningAnalysisToolVersion{
		Value: v,
		Set:   true,
	}
}

// OptNilCodeScanningAnalysisToolVersion is optional nullable CodeScanningAnalysisToolVersion.
type OptNilCodeScanningAnalysisToolVersion struct {
	Value CodeScanningAnalysisToolVersion
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCodeScanningAnalysisToolVersion was set.
func (o OptNilCodeScanningAnalysisToolVersion) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCodeScanningAnalysisToolVersion) Reset() {
	var v CodeScanningAnalysisToolVersion
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCodeScanningAnalysisToolVersion) SetTo(v CodeScanningAnalysisToolVersion) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilCodeScanningAnalysisToolVersion) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCodeScanningAnalysisToolVersion) Get() (v CodeScanningAnalysisToolVersion, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilDeploymentBranchPolicy returns new OptNilDeploymentBranchPolicy with value set to v.
func NewOptNilDeploymentBranchPolicy(v DeploymentBranchPolicy) OptNilDeploymentBranchPolicy {
	return OptNilDeploymentBranchPolicy{
		Value: v,
		Set:   true,
	}
}

// OptNilDeploymentBranchPolicy is optional nullable DeploymentBranchPolicy.
type OptNilDeploymentBranchPolicy struct {
	Value DeploymentBranchPolicy
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilDeploymentBranchPolicy was set.
func (o OptNilDeploymentBranchPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilDeploymentBranchPolicy) Reset() {
	var v DeploymentBranchPolicy
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilDeploymentBranchPolicy) SetTo(v DeploymentBranchPolicy) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilDeploymentBranchPolicy) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilDeploymentBranchPolicy) Get() (v DeploymentBranchPolicy, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilFullRepositorySecurityAndAnalysis returns new OptNilFullRepositorySecurityAndAnalysis with value set to v.
func NewOptNilFullRepositorySecurityAndAnalysis(v FullRepositorySecurityAndAnalysis) OptNilFullRepositorySecurityAndAnalysis {
	return OptNilFullRepositorySecurityAndAnalysis{
		Value: v,
		Set:   true,
	}
}

// OptNilFullRepositorySecurityAndAnalysis is optional nullable FullRepositorySecurityAndAnalysis.
type OptNilFullRepositorySecurityAndAnalysis struct {
	Value FullRepositorySecurityAndAnalysis
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFullRepositorySecurityAndAnalysis was set.
func (o OptNilFullRepositorySecurityAndAnalysis) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFullRepositorySecurityAndAnalysis) Reset() {
	var v FullRepositorySecurityAndAnalysis
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFullRepositorySecurityAndAnalysis) SetTo(v FullRepositorySecurityAndAnalysis) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilFullRepositorySecurityAndAnalysis) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFullRepositorySecurityAndAnalysis) Get() (v FullRepositorySecurityAndAnalysis, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilGistHistoryArray returns new OptNilGistHistoryArray with value set to v.
func NewOptNilGistHistoryArray(v []GistHistory) OptNilGistHistoryArray {
	return OptNilGistHistoryArray{
		Value: v,
		Set:   true,
	}
}

// OptNilGistHistoryArray is optional nullable []GistHistory.
type OptNilGistHistoryArray struct {
	Value []GistHistory
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGistHistoryArray was set.
func (o OptNilGistHistoryArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGistHistoryArray) Reset() {
	var v []GistHistory
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGistHistoryArray) SetTo(v []GistHistory) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilGistHistoryArray) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGistHistoryArray) Get() (v []GistHistory, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilGistSimpleForkOf returns new OptNilGistSimpleForkOf with value set to v.
func NewOptNilGistSimpleForkOf(v GistSimpleForkOf) OptNilGistSimpleForkOf {
	return OptNilGistSimpleForkOf{
		Value: v,
		Set:   true,
	}
}

// OptNilGistSimpleForkOf is optional nullable GistSimpleForkOf.
type OptNilGistSimpleForkOf struct {
	Value GistSimpleForkOf
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGistSimpleForkOf was set.
func (o OptNilGistSimpleForkOf) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGistSimpleForkOf) Reset() {
	var v GistSimpleForkOf
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGistSimpleForkOf) SetTo(v GistSimpleForkOf) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilGistSimpleForkOf) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGistSimpleForkOf) Get() (v GistSimpleForkOf, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilGistSimpleForksItemArray returns new OptNilGistSimpleForksItemArray with value set to v.
func NewOptNilGistSimpleForksItemArray(v []GistSimpleForksItem) OptNilGistSimpleForksItemArray {
	return OptNilGistSimpleForksItemArray{
		Value: v,
		Set:   true,
	}
}

// OptNilGistSimpleForksItemArray is optional nullable []GistSimpleForksItem.
type OptNilGistSimpleForksItemArray struct {
	Value []GistSimpleForksItem
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGistSimpleForksItemArray was set.
func (o OptNilGistSimpleForksItemArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGistSimpleForksItemArray) Reset() {
	var v []GistSimpleForksItem
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGistSimpleForksItemArray) SetTo(v []GistSimpleForksItem) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilGistSimpleForksItemArray) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGistSimpleForksItemArray) Get() (v []GistSimpleForksItem, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilMarketplacePurchaseMarketplacePendingChange returns new OptNilMarketplacePurchaseMarketplacePendingChange with value set to v.
func NewOptNilMarketplacePurchaseMarketplacePendingChange(v MarketplacePurchaseMarketplacePendingChange) OptNilMarketplacePurchaseMarketplacePendingChange {
	return OptNilMarketplacePurchaseMarketplacePendingChange{
		Value: v,
		Set:   true,
	}
}

// OptNilMarketplacePurchaseMarketplacePendingChange is optional nullable MarketplacePurchaseMarketplacePendingChange.
type OptNilMarketplacePurchaseMarketplacePendingChange struct {
	Value MarketplacePurchaseMarketplacePendingChange
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilMarketplacePurchaseMarketplacePendingChange was set.
func (o OptNilMarketplacePurchaseMarketplacePendingChange) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilMarketplacePurchaseMarketplacePendingChange) Reset() {
	var v MarketplacePurchaseMarketplacePendingChange
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilMarketplacePurchaseMarketplacePendingChange) SetTo(v MarketplacePurchaseMarketplacePendingChange) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilMarketplacePurchaseMarketplacePendingChange) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilMarketplacePurchaseMarketplacePendingChange) Get() (v MarketplacePurchaseMarketplacePendingChange, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilMinimalRepositoryLicense returns new OptNilMinimalRepositoryLicense with value set to v.
func NewOptNilMinimalRepositoryLicense(v MinimalRepositoryLicense) OptNilMinimalRepositoryLicense {
	return OptNilMinimalRepositoryLicense{
		Value: v,
		Set:   true,
	}
}

// OptNilMinimalRepositoryLicense is optional nullable MinimalRepositoryLicense.
type OptNilMinimalRepositoryLicense struct {
	Value MinimalRepositoryLicense
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilMinimalRepositoryLicense was set.
func (o OptNilMinimalRepositoryLicense) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilMinimalRepositoryLicense) Reset() {
	var v MinimalRepositoryLicense
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilMinimalRepositoryLicense) SetTo(v MinimalRepositoryLicense) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilMinimalRepositoryLicense) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilMinimalRepositoryLicense) Get() (v MinimalRepositoryLicense, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilNullableIntegration returns new OptNilNullableIntegration with value set to v.
func NewOptNilNullableIntegration(v NullableIntegration) OptNilNullableIntegration {
	return OptNilNullableIntegration{
		Value: v,
		Set:   true,
	}
}

// OptNilNullableIntegration is optional nullable NullableIntegration.
type OptNilNullableIntegration struct {
	Value NullableIntegration
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilNullableIntegration was set.
func (o OptNilNullableIntegration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilNullableIntegration) Reset() {
	var v NullableIntegration
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilNullableIntegration) SetTo(v NullableIntegration) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilNullableIntegration) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilNullableIntegration) Get() (v NullableIntegration, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilNullableMinimalRepository returns new OptNilNullableMinimalRepository with value set to v.
func NewOptNilNullableMinimalRepository(v NullableMinimalRepository) OptNilNullableMinimalRepository {
	return OptNilNullableMinimalRepository{
		Value: v,
		Set:   true,
	}
}

// OptNilNullableMinimalRepository is optional nullable NullableMinimalRepository.
type OptNilNullableMinimalRepository struct {
	Value NullableMinimalRepository
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilNullableMinimalRepository was set.
func (o OptNilNullableMinimalRepository) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilNullableMinimalRepository) Reset() {
	var v NullableMinimalRepository
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilNullableMinimalRepository) SetTo(v NullableMinimalRepository) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilNullableMinimalRepository) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilNullableMinimalRepository) Get() (v NullableMinimalRepository, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilNullableMinimalRepositoryLicense returns new OptNilNullableMinimalRepositoryLicense with value set to v.
func NewOptNilNullableMinimalRepositoryLicense(v NullableMinimalRepositoryLicense) OptNilNullableMinimalRepositoryLicense {
	return OptNilNullableMinimalRepositoryLicense{
		Value: v,
		Set:   true,
	}
}

// OptNilNullableMinimalRepositoryLicense is optional nullable NullableMinimalRepositoryLicense.
type OptNilNullableMinimalRepositoryLicense struct {
	Value NullableMinimalRepositoryLicense
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilNullableMinimalRepositoryLicense was set.
func (o OptNilNullableMinimalRepositoryLicense) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilNullableMinimalRepositoryLicense) Reset() {
	var v NullableMinimalRepositoryLicense
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilNullableMinimalRepositoryLicense) SetTo(v NullableMinimalRepositoryLicense) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilNullableMinimalRepositoryLicense) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilNullableMinimalRepositoryLicense) Get() (v NullableMinimalRepositoryLicense, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilNullableRepository returns new OptNilNullableRepository with value set to v.
func NewOptNilNullableRepository(v NullableRepository) OptNilNullableRepository {
	return OptNilNullableRepository{
		Value: v,
		Set:   true,
	}
}

// OptNilNullableRepository is optional nullable NullableRepository.
type OptNilNullableRepository struct {
	Value NullableRepository
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilNullableRepository was set.
func (o OptNilNullableRepository) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilNullableRepository) Reset() {
	var v NullableRepository
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilNullableRepository) SetTo(v NullableRepository) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilNullableRepository) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilNullableRepository) Get() (v NullableRepository, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilNullableRepositoryTemplateRepository returns new OptNilNullableRepositoryTemplateRepository with value set to v.
func NewOptNilNullableRepositoryTemplateRepository(v NullableRepositoryTemplateRepository) OptNilNullableRepositoryTemplateRepository {
	return OptNilNullableRepositoryTemplateRepository{
		Value: v,
		Set:   true,
	}
}

// OptNilNullableRepositoryTemplateRepository is optional nullable NullableRepositoryTemplateRepository.
type OptNilNullableRepositoryTemplateRepository struct {
	Value NullableRepositoryTemplateRepository
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilNullableRepositoryTemplateRepository was set.
func (o OptNilNullableRepositoryTemplateRepository) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilNullableRepositoryTemplateRepository) Reset() {
	var v NullableRepositoryTemplateRepository
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilNullableRepositoryTemplateRepository) SetTo(v NullableRepositoryTemplateRepository) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilNullableRepositoryTemplateRepository) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilNullableRepositoryTemplateRepository) Get() (v NullableRepositoryTemplateRepository, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilNullableScopedInstallation returns new OptNilNullableScopedInstallation with value set to v.
func NewOptNilNullableScopedInstallation(v NullableScopedInstallation) OptNilNullableScopedInstallation {
	return OptNilNullableScopedInstallation{
		Value: v,
		Set:   true,
	}
}

// OptNilNullableScopedInstallation is optional nullable NullableScopedInstallation.
type OptNilNullableScopedInstallation struct {
	Value NullableScopedInstallation
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilNullableScopedInstallation was set.
func (o OptNilNullableScopedInstallation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilNullableScopedInstallation) Reset() {
	var v NullableScopedInstallation
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilNullableScopedInstallation) SetTo(v NullableScopedInstallation) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilNullableScopedInstallation) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilNullableScopedInstallation) Get() (v NullableScopedInstallation, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilNullableSimpleUser returns new OptNilNullableSimpleUser with value set to v.
func NewOptNilNullableSimpleUser(v NullableSimpleUser) OptNilNullableSimpleUser {
	return OptNilNullableSimpleUser{
		Value: v,
		Set:   true,
	}
}

// OptNilNullableSimpleUser is optional nullable NullableSimpleUser.
type OptNilNullableSimpleUser struct {
	Value NullableSimpleUser
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilNullableSimpleUser was set.
func (o OptNilNullableSimpleUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilNullableSimpleUser) Reset() {
	var v NullableSimpleUser
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilNullableSimpleUser) SetTo(v NullableSimpleUser) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilNullableSimpleUser) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilNullableSimpleUser) Get() (v NullableSimpleUser, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilNullableTeamSimple returns new OptNilNullableTeamSimple with value set to v.
func NewOptNilNullableTeamSimple(v NullableTeamSimple) OptNilNullableTeamSimple {
	return OptNilNullableTeamSimple{
		Value: v,
		Set:   true,
	}
}

// OptNilNullableTeamSimple is optional nullable NullableTeamSimple.
type OptNilNullableTeamSimple struct {
	Value NullableTeamSimple
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilNullableTeamSimple was set.
func (o OptNilNullableTeamSimple) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilNullableTeamSimple) Reset() {
	var v NullableTeamSimple
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilNullableTeamSimple) SetTo(v NullableTeamSimple) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilNullableTeamSimple) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilNullableTeamSimple) Get() (v NullableTeamSimple, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilPageProtectedDomainState returns new OptNilPageProtectedDomainState with value set to v.
func NewOptNilPageProtectedDomainState(v PageProtectedDomainState) OptNilPageProtectedDomainState {
	return OptNilPageProtectedDomainState{
		Value: v,
		Set:   true,
	}
}

// OptNilPageProtectedDomainState is optional nullable PageProtectedDomainState.
type OptNilPageProtectedDomainState struct {
	Value PageProtectedDomainState
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPageProtectedDomainState was set.
func (o OptNilPageProtectedDomainState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPageProtectedDomainState) Reset() {
	var v PageProtectedDomainState
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPageProtectedDomainState) SetTo(v PageProtectedDomainState) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPageProtectedDomainState) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPageProtectedDomainState) Get() (v PageProtectedDomainState, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilPagesHealthCheckAltDomain returns new OptNilPagesHealthCheckAltDomain with value set to v.
func NewOptNilPagesHealthCheckAltDomain(v PagesHealthCheckAltDomain) OptNilPagesHealthCheckAltDomain {
	return OptNilPagesHealthCheckAltDomain{
		Value: v,
		Set:   true,
	}
}

// OptNilPagesHealthCheckAltDomain is optional nullable PagesHealthCheckAltDomain.
type OptNilPagesHealthCheckAltDomain struct {
	Value PagesHealthCheckAltDomain
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPagesHealthCheckAltDomain was set.
func (o OptNilPagesHealthCheckAltDomain) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPagesHealthCheckAltDomain) Reset() {
	var v PagesHealthCheckAltDomain
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPagesHealthCheckAltDomain) SetTo(v PagesHealthCheckAltDomain) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPagesHealthCheckAltDomain) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPagesHealthCheckAltDomain) Get() (v PagesHealthCheckAltDomain, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilPullRequestReviewCommentStartSide returns new OptNilPullRequestReviewCommentStartSide with value set to v.
func NewOptNilPullRequestReviewCommentStartSide(v PullRequestReviewCommentStartSide) OptNilPullRequestReviewCommentStartSide {
	return OptNilPullRequestReviewCommentStartSide{
		Value: v,
		Set:   true,
	}
}

// OptNilPullRequestReviewCommentStartSide is optional nullable PullRequestReviewCommentStartSide.
type OptNilPullRequestReviewCommentStartSide struct {
	Value PullRequestReviewCommentStartSide
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPullRequestReviewCommentStartSide was set.
func (o OptNilPullRequestReviewCommentStartSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPullRequestReviewCommentStartSide) Reset() {
	var v PullRequestReviewCommentStartSide
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPullRequestReviewCommentStartSide) SetTo(v PullRequestReviewCommentStartSide) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPullRequestReviewCommentStartSide) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPullRequestReviewCommentStartSide) Get() (v PullRequestReviewCommentStartSide, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilReposCreateOrUpdateEnvironmentReqReviewersItemArray returns new OptNilReposCreateOrUpdateEnvironmentReqReviewersItemArray with value set to v.
func NewOptNilReposCreateOrUpdateEnvironmentReqReviewersItemArray(v []ReposCreateOrUpdateEnvironmentReqReviewersItem) OptNilReposCreateOrUpdateEnvironmentReqReviewersItemArray {
	return OptNilReposCreateOrUpdateEnvironmentReqReviewersItemArray{
		Value: v,
		Set:   true,
	}
}

// OptNilReposCreateOrUpdateEnvironmentReqReviewersItemArray is optional nullable []ReposCreateOrUpdateEnvironmentReqReviewersItem.
type OptNilReposCreateOrUpdateEnvironmentReqReviewersItemArray struct {
	Value []ReposCreateOrUpdateEnvironmentReqReviewersItem
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilReposCreateOrUpdateEnvironmentReqReviewersItemArray was set.
func (o OptNilReposCreateOrUpdateEnvironmentReqReviewersItemArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilReposCreateOrUpdateEnvironmentReqReviewersItemArray) Reset() {
	var v []ReposCreateOrUpdateEnvironmentReqReviewersItem
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilReposCreateOrUpdateEnvironmentReqReviewersItemArray) SetTo(v []ReposCreateOrUpdateEnvironmentReqReviewersItem) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilReposCreateOrUpdateEnvironmentReqReviewersItemArray) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilReposCreateOrUpdateEnvironmentReqReviewersItemArray) Get() (v []ReposCreateOrUpdateEnvironmentReqReviewersItem, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilReposUpdateReqSecurityAndAnalysis returns new OptNilReposUpdateReqSecurityAndAnalysis with value set to v.
func NewOptNilReposUpdateReqSecurityAndAnalysis(v ReposUpdateReqSecurityAndAnalysis) OptNilReposUpdateReqSecurityAndAnalysis {
	return OptNilReposUpdateReqSecurityAndAnalysis{
		Value: v,
		Set:   true,
	}
}

// OptNilReposUpdateReqSecurityAndAnalysis is optional nullable ReposUpdateReqSecurityAndAnalysis.
type OptNilReposUpdateReqSecurityAndAnalysis struct {
	Value ReposUpdateReqSecurityAndAnalysis
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilReposUpdateReqSecurityAndAnalysis was set.
func (o OptNilReposUpdateReqSecurityAndAnalysis) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilReposUpdateReqSecurityAndAnalysis) Reset() {
	var v ReposUpdateReqSecurityAndAnalysis
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilReposUpdateReqSecurityAndAnalysis) SetTo(v ReposUpdateReqSecurityAndAnalysis) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilReposUpdateReqSecurityAndAnalysis) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilReposUpdateReqSecurityAndAnalysis) Get() (v ReposUpdateReqSecurityAndAnalysis, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilRepositoryTemplateRepository returns new OptNilRepositoryTemplateRepository with value set to v.
func NewOptNilRepositoryTemplateRepository(v RepositoryTemplateRepository) OptNilRepositoryTemplateRepository {
	return OptNilRepositoryTemplateRepository{
		Value: v,
		Set:   true,
	}
}

// OptNilRepositoryTemplateRepository is optional nullable RepositoryTemplateRepository.
type OptNilRepositoryTemplateRepository struct {
	Value RepositoryTemplateRepository
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepositoryTemplateRepository was set.
func (o OptNilRepositoryTemplateRepository) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepositoryTemplateRepository) Reset() {
	var v RepositoryTemplateRepository
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepositoryTemplateRepository) SetTo(v RepositoryTemplateRepository) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepositoryTemplateRepository) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepositoryTemplateRepository) Get() (v RepositoryTemplateRepository, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilReviewCommentStartSide returns new OptNilReviewCommentStartSide with value set to v.
func NewOptNilReviewCommentStartSide(v ReviewCommentStartSide) OptNilReviewCommentStartSide {
	return OptNilReviewCommentStartSide{
		Value: v,
		Set:   true,
	}
}

// OptNilReviewCommentStartSide is optional nullable ReviewCommentStartSide.
type OptNilReviewCommentStartSide struct {
	Value ReviewCommentStartSide
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilReviewCommentStartSide was set.
func (o OptNilReviewCommentStartSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilReviewCommentStartSide) Reset() {
	var v ReviewCommentStartSide
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilReviewCommentStartSide) SetTo(v ReviewCommentStartSide) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilReviewCommentStartSide) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilReviewCommentStartSide) Get() (v ReviewCommentStartSide, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilSecretScanningAlertResolution returns new OptNilSecretScanningAlertResolution with value set to v.
func NewOptNilSecretScanningAlertResolution(v SecretScanningAlertResolution) OptNilSecretScanningAlertResolution {
	return OptNilSecretScanningAlertResolution{
		Value: v,
		Set:   true,
	}
}

// OptNilSecretScanningAlertResolution is optional nullable SecretScanningAlertResolution.
type OptNilSecretScanningAlertResolution struct {
	Value SecretScanningAlertResolution
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilSecretScanningAlertResolution was set.
func (o OptNilSecretScanningAlertResolution) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilSecretScanningAlertResolution) Reset() {
	var v SecretScanningAlertResolution
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilSecretScanningAlertResolution) SetTo(v SecretScanningAlertResolution) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilSecretScanningAlertResolution) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilSecretScanningAlertResolution) Get() (v SecretScanningAlertResolution, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilSimpleUserArray returns new OptNilSimpleUserArray with value set to v.
func NewOptNilSimpleUserArray(v []SimpleUser) OptNilSimpleUserArray {
	return OptNilSimpleUserArray{
		Value: v,
		Set:   true,
	}
}

// OptNilSimpleUserArray is optional nullable []SimpleUser.
type OptNilSimpleUserArray struct {
	Value []SimpleUser
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilSimpleUserArray was set.
func (o OptNilSimpleUserArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilSimpleUserArray) Reset() {
	var v []SimpleUser
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilSimpleUserArray) SetTo(v []SimpleUser) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilSimpleUserArray) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilSimpleUserArray) Get() (v []SimpleUser, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilStringArray returns new OptNilStringArray with value set to v.
func NewOptNilStringArray(v []string) OptNilStringArray {
	return OptNilStringArray{
		Value: v,
		Set:   true,
	}
}

// OptNilStringArray is optional nullable []string.
type OptNilStringArray struct {
	Value []string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStringArray was set.
func (o OptNilStringArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStringArray) Reset() {
	var v []string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStringArray) SetTo(v []string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilStringArray) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStringArray) Get() (v []string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilTeamArray returns new OptNilTeamArray with value set to v.
func NewOptNilTeamArray(v []Team) OptNilTeamArray {
	return OptNilTeamArray{
		Value: v,
		Set:   true,
	}
}

// OptNilTeamArray is optional nullable []Team.
type OptNilTeamArray struct {
	Value []Team
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTeamArray was set.
func (o OptNilTeamArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTeamArray) Reset() {
	var v []Team
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTeamArray) SetTo(v []Team) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTeamArray) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTeamArray) Get() (v []Team, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilTeamSimpleArray returns new OptNilTeamSimpleArray with value set to v.
func NewOptNilTeamSimpleArray(v []TeamSimple) OptNilTeamSimpleArray {
	return OptNilTeamSimpleArray{
		Value: v,
		Set:   true,
	}
}

// OptNilTeamSimpleArray is optional nullable []TeamSimple.
type OptNilTeamSimpleArray struct {
	Value []TeamSimple
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTeamSimpleArray was set.
func (o OptNilTeamSimpleArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTeamSimpleArray) Reset() {
	var v []TeamSimple
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTeamSimpleArray) SetTo(v []TeamSimple) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTeamSimpleArray) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTeamSimpleArray) Get() (v []TeamSimple, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilTime returns new OptNilTime with value set to v.
func NewOptNilTime(v time.Time) OptNilTime {
	return OptNilTime{
		Value: v,
		Set:   true,
	}
}

// OptNilTime is optional nullable time.Time.
type OptNilTime struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTime was set.
func (o OptNilTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTime) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTime) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilTopicSearchResultItemAliasesItemArray returns new OptNilTopicSearchResultItemAliasesItemArray with value set to v.
func NewOptNilTopicSearchResultItemAliasesItemArray(v []TopicSearchResultItemAliasesItem) OptNilTopicSearchResultItemAliasesItemArray {
	return OptNilTopicSearchResultItemAliasesItemArray{
		Value: v,
		Set:   true,
	}
}

// OptNilTopicSearchResultItemAliasesItemArray is optional nullable []TopicSearchResultItemAliasesItem.
type OptNilTopicSearchResultItemAliasesItemArray struct {
	Value []TopicSearchResultItemAliasesItem
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTopicSearchResultItemAliasesItemArray was set.
func (o OptNilTopicSearchResultItemAliasesItemArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTopicSearchResultItemAliasesItemArray) Reset() {
	var v []TopicSearchResultItemAliasesItem
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTopicSearchResultItemAliasesItemArray) SetTo(v []TopicSearchResultItemAliasesItem) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTopicSearchResultItemAliasesItemArray) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTopicSearchResultItemAliasesItemArray) Get() (v []TopicSearchResultItemAliasesItem, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilTopicSearchResultItemRelatedItemArray returns new OptNilTopicSearchResultItemRelatedItemArray with value set to v.
func NewOptNilTopicSearchResultItemRelatedItemArray(v []TopicSearchResultItemRelatedItem) OptNilTopicSearchResultItemRelatedItemArray {
	return OptNilTopicSearchResultItemRelatedItemArray{
		Value: v,
		Set:   true,
	}
}

// OptNilTopicSearchResultItemRelatedItemArray is optional nullable []TopicSearchResultItemRelatedItem.
type OptNilTopicSearchResultItemRelatedItemArray struct {
	Value []TopicSearchResultItemRelatedItem
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTopicSearchResultItemRelatedItemArray was set.
func (o OptNilTopicSearchResultItemRelatedItemArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTopicSearchResultItemRelatedItemArray) Reset() {
	var v []TopicSearchResultItemRelatedItem
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTopicSearchResultItemRelatedItemArray) SetTo(v []TopicSearchResultItemRelatedItem) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTopicSearchResultItemRelatedItemArray) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTopicSearchResultItemRelatedItemArray) Get() (v []TopicSearchResultItemRelatedItem, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilURL returns new OptNilURL with value set to v.
func NewOptNilURL(v url.URL) OptNilURL {
	return OptNilURL{
		Value: v,
		Set:   true,
	}
}

// OptNilURL is optional nullable url.URL.
type OptNilURL struct {
	Value url.URL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilURL was set.
func (o OptNilURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilURL) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilURL) SetTo(v url.URL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilURL) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilURL) Get() (v url.URL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNullableMinimalRepositoryPermissions returns new OptNullableMinimalRepositoryPermissions with value set to v.
func NewOptNullableMinimalRepositoryPermissions(v NullableMinimalRepositoryPermissions) OptNullableMinimalRepositoryPermissions {
	return OptNullableMinimalRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptNullableMinimalRepositoryPermissions is optional NullableMinimalRepositoryPermissions.
type OptNullableMinimalRepositoryPermissions struct {
	Value NullableMinimalRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptNullableMinimalRepositoryPermissions was set.
func (o OptNullableMinimalRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableMinimalRepositoryPermissions) Reset() {
	var v NullableMinimalRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableMinimalRepositoryPermissions) SetTo(v NullableMinimalRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableMinimalRepositoryPermissions) Get() (v NullableMinimalRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNullableRepositoryPermissions returns new OptNullableRepositoryPermissions with value set to v.
func NewOptNullableRepositoryPermissions(v NullableRepositoryPermissions) OptNullableRepositoryPermissions {
	return OptNullableRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptNullableRepositoryPermissions is optional NullableRepositoryPermissions.
type OptNullableRepositoryPermissions struct {
	Value NullableRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptNullableRepositoryPermissions was set.
func (o OptNullableRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableRepositoryPermissions) Reset() {
	var v NullableRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableRepositoryPermissions) SetTo(v NullableRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableRepositoryPermissions) Get() (v NullableRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNullableRepositoryTemplateRepositoryOwner returns new OptNullableRepositoryTemplateRepositoryOwner with value set to v.
func NewOptNullableRepositoryTemplateRepositoryOwner(v NullableRepositoryTemplateRepositoryOwner) OptNullableRepositoryTemplateRepositoryOwner {
	return OptNullableRepositoryTemplateRepositoryOwner{
		Value: v,
		Set:   true,
	}
}

// OptNullableRepositoryTemplateRepositoryOwner is optional NullableRepositoryTemplateRepositoryOwner.
type OptNullableRepositoryTemplateRepositoryOwner struct {
	Value NullableRepositoryTemplateRepositoryOwner
	Set   bool
}

// IsSet returns true if OptNullableRepositoryTemplateRepositoryOwner was set.
func (o OptNullableRepositoryTemplateRepositoryOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableRepositoryTemplateRepositoryOwner) Reset() {
	var v NullableRepositoryTemplateRepositoryOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableRepositoryTemplateRepositoryOwner) SetTo(v NullableRepositoryTemplateRepositoryOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableRepositoryTemplateRepositoryOwner) Get() (v NullableRepositoryTemplateRepositoryOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNullableRepositoryTemplateRepositoryPermissions returns new OptNullableRepositoryTemplateRepositoryPermissions with value set to v.
func NewOptNullableRepositoryTemplateRepositoryPermissions(v NullableRepositoryTemplateRepositoryPermissions) OptNullableRepositoryTemplateRepositoryPermissions {
	return OptNullableRepositoryTemplateRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptNullableRepositoryTemplateRepositoryPermissions is optional NullableRepositoryTemplateRepositoryPermissions.
type OptNullableRepositoryTemplateRepositoryPermissions struct {
	Value NullableRepositoryTemplateRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptNullableRepositoryTemplateRepositoryPermissions was set.
func (o OptNullableRepositoryTemplateRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableRepositoryTemplateRepositoryPermissions) Reset() {
	var v NullableRepositoryTemplateRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableRepositoryTemplateRepositoryPermissions) SetTo(v NullableRepositoryTemplateRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableRepositoryTemplateRepositoryPermissions) Get() (v NullableRepositoryTemplateRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrgMembershipPermissions returns new OptOrgMembershipPermissions with value set to v.
func NewOptOrgMembershipPermissions(v OrgMembershipPermissions) OptOrgMembershipPermissions {
	return OptOrgMembershipPermissions{
		Value: v,
		Set:   true,
	}
}

// OptOrgMembershipPermissions is optional OrgMembershipPermissions.
type OptOrgMembershipPermissions struct {
	Value OrgMembershipPermissions
	Set   bool
}

// IsSet returns true if OptOrgMembershipPermissions was set.
func (o OptOrgMembershipPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrgMembershipPermissions) Reset() {
	var v OrgMembershipPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgMembershipPermissions) SetTo(v OrgMembershipPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgMembershipPermissions) Get() (v OrgMembershipPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrganizationFullPlan returns new OptOrganizationFullPlan with value set to v.
func NewOptOrganizationFullPlan(v OrganizationFullPlan) OptOrganizationFullPlan {
	return OptOrganizationFullPlan{
		Value: v,
		Set:   true,
	}
}

// OptOrganizationFullPlan is optional OrganizationFullPlan.
type OptOrganizationFullPlan struct {
	Value OrganizationFullPlan
	Set   bool
}

// IsSet returns true if OptOrganizationFullPlan was set.
func (o OptOrganizationFullPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrganizationFullPlan) Reset() {
	var v OrganizationFullPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrganizationFullPlan) SetTo(v OrganizationFullPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrganizationFullPlan) Get() (v OrganizationFullPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrgsCreateInvitationReqRole returns new OptOrgsCreateInvitationReqRole with value set to v.
func NewOptOrgsCreateInvitationReqRole(v OrgsCreateInvitationReqRole) OptOrgsCreateInvitationReqRole {
	return OptOrgsCreateInvitationReqRole{
		Value: v,
		Set:   true,
	}
}

// OptOrgsCreateInvitationReqRole is optional OrgsCreateInvitationReqRole.
type OptOrgsCreateInvitationReqRole struct {
	Value OrgsCreateInvitationReqRole
	Set   bool
}

// IsSet returns true if OptOrgsCreateInvitationReqRole was set.
func (o OptOrgsCreateInvitationReqRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrgsCreateInvitationReqRole) Reset() {
	var v OrgsCreateInvitationReqRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgsCreateInvitationReqRole) SetTo(v OrgsCreateInvitationReqRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgsCreateInvitationReqRole) Get() (v OrgsCreateInvitationReqRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrgsSetMembershipForUserReqRole returns new OptOrgsSetMembershipForUserReqRole with value set to v.
func NewOptOrgsSetMembershipForUserReqRole(v OrgsSetMembershipForUserReqRole) OptOrgsSetMembershipForUserReqRole {
	return OptOrgsSetMembershipForUserReqRole{
		Value: v,
		Set:   true,
	}
}

// OptOrgsSetMembershipForUserReqRole is optional OrgsSetMembershipForUserReqRole.
type OptOrgsSetMembershipForUserReqRole struct {
	Value OrgsSetMembershipForUserReqRole
	Set   bool
}

// IsSet returns true if OptOrgsSetMembershipForUserReqRole was set.
func (o OptOrgsSetMembershipForUserReqRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrgsSetMembershipForUserReqRole) Reset() {
	var v OrgsSetMembershipForUserReqRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgsSetMembershipForUserReqRole) SetTo(v OrgsSetMembershipForUserReqRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgsSetMembershipForUserReqRole) Get() (v OrgsSetMembershipForUserReqRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrgsUpdateReqDefaultRepositoryPermission returns new OptOrgsUpdateReqDefaultRepositoryPermission with value set to v.
func NewOptOrgsUpdateReqDefaultRepositoryPermission(v OrgsUpdateReqDefaultRepositoryPermission) OptOrgsUpdateReqDefaultRepositoryPermission {
	return OptOrgsUpdateReqDefaultRepositoryPermission{
		Value: v,
		Set:   true,
	}
}

// OptOrgsUpdateReqDefaultRepositoryPermission is optional OrgsUpdateReqDefaultRepositoryPermission.
type OptOrgsUpdateReqDefaultRepositoryPermission struct {
	Value OrgsUpdateReqDefaultRepositoryPermission
	Set   bool
}

// IsSet returns true if OptOrgsUpdateReqDefaultRepositoryPermission was set.
func (o OptOrgsUpdateReqDefaultRepositoryPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrgsUpdateReqDefaultRepositoryPermission) Reset() {
	var v OrgsUpdateReqDefaultRepositoryPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgsUpdateReqDefaultRepositoryPermission) SetTo(v OrgsUpdateReqDefaultRepositoryPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgsUpdateReqDefaultRepositoryPermission) Get() (v OrgsUpdateReqDefaultRepositoryPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrgsUpdateReqMembersAllowedRepositoryCreationType returns new OptOrgsUpdateReqMembersAllowedRepositoryCreationType with value set to v.
func NewOptOrgsUpdateReqMembersAllowedRepositoryCreationType(v OrgsUpdateReqMembersAllowedRepositoryCreationType) OptOrgsUpdateReqMembersAllowedRepositoryCreationType {
	return OptOrgsUpdateReqMembersAllowedRepositoryCreationType{
		Value: v,
		Set:   true,
	}
}

// OptOrgsUpdateReqMembersAllowedRepositoryCreationType is optional OrgsUpdateReqMembersAllowedRepositoryCreationType.
type OptOrgsUpdateReqMembersAllowedRepositoryCreationType struct {
	Value OrgsUpdateReqMembersAllowedRepositoryCreationType
	Set   bool
}

// IsSet returns true if OptOrgsUpdateReqMembersAllowedRepositoryCreationType was set.
func (o OptOrgsUpdateReqMembersAllowedRepositoryCreationType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrgsUpdateReqMembersAllowedRepositoryCreationType) Reset() {
	var v OrgsUpdateReqMembersAllowedRepositoryCreationType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgsUpdateReqMembersAllowedRepositoryCreationType) SetTo(v OrgsUpdateReqMembersAllowedRepositoryCreationType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgsUpdateReqMembersAllowedRepositoryCreationType) Get() (v OrgsUpdateReqMembersAllowedRepositoryCreationType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrgsUpdateWebhookReqConfig returns new OptOrgsUpdateWebhookReqConfig with value set to v.
func NewOptOrgsUpdateWebhookReqConfig(v OrgsUpdateWebhookReqConfig) OptOrgsUpdateWebhookReqConfig {
	return OptOrgsUpdateWebhookReqConfig{
		Value: v,
		Set:   true,
	}
}

// OptOrgsUpdateWebhookReqConfig is optional OrgsUpdateWebhookReqConfig.
type OptOrgsUpdateWebhookReqConfig struct {
	Value OrgsUpdateWebhookReqConfig
	Set   bool
}

// IsSet returns true if OptOrgsUpdateWebhookReqConfig was set.
func (o OptOrgsUpdateWebhookReqConfig) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrgsUpdateWebhookReqConfig) Reset() {
	var v OrgsUpdateWebhookReqConfig
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgsUpdateWebhookReqConfig) SetTo(v OrgsUpdateWebhookReqConfig) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgsUpdateWebhookReqConfig) Get() (v OrgsUpdateWebhookReqConfig, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPackageVersionMetadata returns new OptPackageVersionMetadata with value set to v.
func NewOptPackageVersionMetadata(v PackageVersionMetadata) OptPackageVersionMetadata {
	return OptPackageVersionMetadata{
		Value: v,
		Set:   true,
	}
}

// OptPackageVersionMetadata is optional PackageVersionMetadata.
type OptPackageVersionMetadata struct {
	Value PackageVersionMetadata
	Set   bool
}

// IsSet returns true if OptPackageVersionMetadata was set.
func (o OptPackageVersionMetadata) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPackageVersionMetadata) Reset() {
	var v PackageVersionMetadata
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPackageVersionMetadata) SetTo(v PackageVersionMetadata) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPackageVersionMetadata) Get() (v PackageVersionMetadata, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPackageVersionMetadataContainer returns new OptPackageVersionMetadataContainer with value set to v.
func NewOptPackageVersionMetadataContainer(v PackageVersionMetadataContainer) OptPackageVersionMetadataContainer {
	return OptPackageVersionMetadataContainer{
		Value: v,
		Set:   true,
	}
}

// OptPackageVersionMetadataContainer is optional PackageVersionMetadataContainer.
type OptPackageVersionMetadataContainer struct {
	Value PackageVersionMetadataContainer
	Set   bool
}

// IsSet returns true if OptPackageVersionMetadataContainer was set.
func (o OptPackageVersionMetadataContainer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPackageVersionMetadataContainer) Reset() {
	var v PackageVersionMetadataContainer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPackageVersionMetadataContainer) SetTo(v PackageVersionMetadataContainer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPackageVersionMetadataContainer) Get() (v PackageVersionMetadataContainer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPackageVersionMetadataDocker returns new OptPackageVersionMetadataDocker with value set to v.
func NewOptPackageVersionMetadataDocker(v PackageVersionMetadataDocker) OptPackageVersionMetadataDocker {
	return OptPackageVersionMetadataDocker{
		Value: v,
		Set:   true,
	}
}

// OptPackageVersionMetadataDocker is optional PackageVersionMetadataDocker.
type OptPackageVersionMetadataDocker struct {
	Value PackageVersionMetadataDocker
	Set   bool
}

// IsSet returns true if OptPackageVersionMetadataDocker was set.
func (o OptPackageVersionMetadataDocker) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPackageVersionMetadataDocker) Reset() {
	var v PackageVersionMetadataDocker
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPackageVersionMetadataDocker) SetTo(v PackageVersionMetadataDocker) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPackageVersionMetadataDocker) Get() (v PackageVersionMetadataDocker, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPagesHTTPSCertificate returns new OptPagesHTTPSCertificate with value set to v.
func NewOptPagesHTTPSCertificate(v PagesHTTPSCertificate) OptPagesHTTPSCertificate {
	return OptPagesHTTPSCertificate{
		Value: v,
		Set:   true,
	}
}

// OptPagesHTTPSCertificate is optional PagesHTTPSCertificate.
type OptPagesHTTPSCertificate struct {
	Value PagesHTTPSCertificate
	Set   bool
}

// IsSet returns true if OptPagesHTTPSCertificate was set.
func (o OptPagesHTTPSCertificate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPagesHTTPSCertificate) Reset() {
	var v PagesHTTPSCertificate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPagesHTTPSCertificate) SetTo(v PagesHTTPSCertificate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPagesHTTPSCertificate) Get() (v PagesHTTPSCertificate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPagesHealthCheckDomain returns new OptPagesHealthCheckDomain with value set to v.
func NewOptPagesHealthCheckDomain(v PagesHealthCheckDomain) OptPagesHealthCheckDomain {
	return OptPagesHealthCheckDomain{
		Value: v,
		Set:   true,
	}
}

// OptPagesHealthCheckDomain is optional PagesHealthCheckDomain.
type OptPagesHealthCheckDomain struct {
	Value PagesHealthCheckDomain
	Set   bool
}

// IsSet returns true if OptPagesHealthCheckDomain was set.
func (o OptPagesHealthCheckDomain) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPagesHealthCheckDomain) Reset() {
	var v PagesHealthCheckDomain
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPagesHealthCheckDomain) SetTo(v PagesHealthCheckDomain) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPagesHealthCheckDomain) Get() (v PagesHealthCheckDomain, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPagesSourceHash returns new OptPagesSourceHash with value set to v.
func NewOptPagesSourceHash(v PagesSourceHash) OptPagesSourceHash {
	return OptPagesSourceHash{
		Value: v,
		Set:   true,
	}
}

// OptPagesSourceHash is optional PagesSourceHash.
type OptPagesSourceHash struct {
	Value PagesSourceHash
	Set   bool
}

// IsSet returns true if OptPagesSourceHash was set.
func (o OptPagesSourceHash) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPagesSourceHash) Reset() {
	var v PagesSourceHash
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPagesSourceHash) SetTo(v PagesSourceHash) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPagesSourceHash) Get() (v PagesSourceHash, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPrivateUserPlan returns new OptPrivateUserPlan with value set to v.
func NewOptPrivateUserPlan(v PrivateUserPlan) OptPrivateUserPlan {
	return OptPrivateUserPlan{
		Value: v,
		Set:   true,
	}
}

// OptPrivateUserPlan is optional PrivateUserPlan.
type OptPrivateUserPlan struct {
	Value PrivateUserPlan
	Set   bool
}

// IsSet returns true if OptPrivateUserPlan was set.
func (o OptPrivateUserPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPrivateUserPlan) Reset() {
	var v PrivateUserPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPrivateUserPlan) SetTo(v PrivateUserPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPrivateUserPlan) Get() (v PrivateUserPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProjectOrganizationPermission returns new OptProjectOrganizationPermission with value set to v.
func NewOptProjectOrganizationPermission(v ProjectOrganizationPermission) OptProjectOrganizationPermission {
	return OptProjectOrganizationPermission{
		Value: v,
		Set:   true,
	}
}

// OptProjectOrganizationPermission is optional ProjectOrganizationPermission.
type OptProjectOrganizationPermission struct {
	Value ProjectOrganizationPermission
	Set   bool
}

// IsSet returns true if OptProjectOrganizationPermission was set.
func (o OptProjectOrganizationPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProjectOrganizationPermission) Reset() {
	var v ProjectOrganizationPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProjectOrganizationPermission) SetTo(v ProjectOrganizationPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProjectOrganizationPermission) Get() (v ProjectOrganizationPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProjectsAddCollaboratorReqPermission returns new OptProjectsAddCollaboratorReqPermission with value set to v.
func NewOptProjectsAddCollaboratorReqPermission(v ProjectsAddCollaboratorReqPermission) OptProjectsAddCollaboratorReqPermission {
	return OptProjectsAddCollaboratorReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptProjectsAddCollaboratorReqPermission is optional ProjectsAddCollaboratorReqPermission.
type OptProjectsAddCollaboratorReqPermission struct {
	Value ProjectsAddCollaboratorReqPermission
	Set   bool
}

// IsSet returns true if OptProjectsAddCollaboratorReqPermission was set.
func (o OptProjectsAddCollaboratorReqPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProjectsAddCollaboratorReqPermission) Reset() {
	var v ProjectsAddCollaboratorReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProjectsAddCollaboratorReqPermission) SetTo(v ProjectsAddCollaboratorReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProjectsAddCollaboratorReqPermission) Get() (v ProjectsAddCollaboratorReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProjectsUpdateReqOrganizationPermission returns new OptProjectsUpdateReqOrganizationPermission with value set to v.
func NewOptProjectsUpdateReqOrganizationPermission(v ProjectsUpdateReqOrganizationPermission) OptProjectsUpdateReqOrganizationPermission {
	return OptProjectsUpdateReqOrganizationPermission{
		Value: v,
		Set:   true,
	}
}

// OptProjectsUpdateReqOrganizationPermission is optional ProjectsUpdateReqOrganizationPermission.
type OptProjectsUpdateReqOrganizationPermission struct {
	Value ProjectsUpdateReqOrganizationPermission
	Set   bool
}

// IsSet returns true if OptProjectsUpdateReqOrganizationPermission was set.
func (o OptProjectsUpdateReqOrganizationPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProjectsUpdateReqOrganizationPermission) Reset() {
	var v ProjectsUpdateReqOrganizationPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProjectsUpdateReqOrganizationPermission) SetTo(v ProjectsUpdateReqOrganizationPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProjectsUpdateReqOrganizationPermission) Get() (v ProjectsUpdateReqOrganizationPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchAdminEnforced returns new OptProtectedBranchAdminEnforced with value set to v.
func NewOptProtectedBranchAdminEnforced(v ProtectedBranchAdminEnforced) OptProtectedBranchAdminEnforced {
	return OptProtectedBranchAdminEnforced{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchAdminEnforced is optional ProtectedBranchAdminEnforced.
type OptProtectedBranchAdminEnforced struct {
	Value ProtectedBranchAdminEnforced
	Set   bool
}

// IsSet returns true if OptProtectedBranchAdminEnforced was set.
func (o OptProtectedBranchAdminEnforced) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchAdminEnforced) Reset() {
	var v ProtectedBranchAdminEnforced
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchAdminEnforced) SetTo(v ProtectedBranchAdminEnforced) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchAdminEnforced) Get() (v ProtectedBranchAdminEnforced, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchAllowDeletions returns new OptProtectedBranchAllowDeletions with value set to v.
func NewOptProtectedBranchAllowDeletions(v ProtectedBranchAllowDeletions) OptProtectedBranchAllowDeletions {
	return OptProtectedBranchAllowDeletions{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchAllowDeletions is optional ProtectedBranchAllowDeletions.
type OptProtectedBranchAllowDeletions struct {
	Value ProtectedBranchAllowDeletions
	Set   bool
}

// IsSet returns true if OptProtectedBranchAllowDeletions was set.
func (o OptProtectedBranchAllowDeletions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchAllowDeletions) Reset() {
	var v ProtectedBranchAllowDeletions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchAllowDeletions) SetTo(v ProtectedBranchAllowDeletions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchAllowDeletions) Get() (v ProtectedBranchAllowDeletions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchAllowForcePushes returns new OptProtectedBranchAllowForcePushes with value set to v.
func NewOptProtectedBranchAllowForcePushes(v ProtectedBranchAllowForcePushes) OptProtectedBranchAllowForcePushes {
	return OptProtectedBranchAllowForcePushes{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchAllowForcePushes is optional ProtectedBranchAllowForcePushes.
type OptProtectedBranchAllowForcePushes struct {
	Value ProtectedBranchAllowForcePushes
	Set   bool
}

// IsSet returns true if OptProtectedBranchAllowForcePushes was set.
func (o OptProtectedBranchAllowForcePushes) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchAllowForcePushes) Reset() {
	var v ProtectedBranchAllowForcePushes
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchAllowForcePushes) SetTo(v ProtectedBranchAllowForcePushes) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchAllowForcePushes) Get() (v ProtectedBranchAllowForcePushes, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchEnforceAdmins returns new OptProtectedBranchEnforceAdmins with value set to v.
func NewOptProtectedBranchEnforceAdmins(v ProtectedBranchEnforceAdmins) OptProtectedBranchEnforceAdmins {
	return OptProtectedBranchEnforceAdmins{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchEnforceAdmins is optional ProtectedBranchEnforceAdmins.
type OptProtectedBranchEnforceAdmins struct {
	Value ProtectedBranchEnforceAdmins
	Set   bool
}

// IsSet returns true if OptProtectedBranchEnforceAdmins was set.
func (o OptProtectedBranchEnforceAdmins) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchEnforceAdmins) Reset() {
	var v ProtectedBranchEnforceAdmins
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchEnforceAdmins) SetTo(v ProtectedBranchEnforceAdmins) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchEnforceAdmins) Get() (v ProtectedBranchEnforceAdmins, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchPullRequestReview returns new OptProtectedBranchPullRequestReview with value set to v.
func NewOptProtectedBranchPullRequestReview(v ProtectedBranchPullRequestReview) OptProtectedBranchPullRequestReview {
	return OptProtectedBranchPullRequestReview{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchPullRequestReview is optional ProtectedBranchPullRequestReview.
type OptProtectedBranchPullRequestReview struct {
	Value ProtectedBranchPullRequestReview
	Set   bool
}

// IsSet returns true if OptProtectedBranchPullRequestReview was set.
func (o OptProtectedBranchPullRequestReview) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchPullRequestReview) Reset() {
	var v ProtectedBranchPullRequestReview
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchPullRequestReview) SetTo(v ProtectedBranchPullRequestReview) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchPullRequestReview) Get() (v ProtectedBranchPullRequestReview, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchPullRequestReviewDismissalRestrictions returns new OptProtectedBranchPullRequestReviewDismissalRestrictions with value set to v.
func NewOptProtectedBranchPullRequestReviewDismissalRestrictions(v ProtectedBranchPullRequestReviewDismissalRestrictions) OptProtectedBranchPullRequestReviewDismissalRestrictions {
	return OptProtectedBranchPullRequestReviewDismissalRestrictions{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchPullRequestReviewDismissalRestrictions is optional ProtectedBranchPullRequestReviewDismissalRestrictions.
type OptProtectedBranchPullRequestReviewDismissalRestrictions struct {
	Value ProtectedBranchPullRequestReviewDismissalRestrictions
	Set   bool
}

// IsSet returns true if OptProtectedBranchPullRequestReviewDismissalRestrictions was set.
func (o OptProtectedBranchPullRequestReviewDismissalRestrictions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchPullRequestReviewDismissalRestrictions) Reset() {
	var v ProtectedBranchPullRequestReviewDismissalRestrictions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchPullRequestReviewDismissalRestrictions) SetTo(v ProtectedBranchPullRequestReviewDismissalRestrictions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchPullRequestReviewDismissalRestrictions) Get() (v ProtectedBranchPullRequestReviewDismissalRestrictions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchRequiredConversationResolution returns new OptProtectedBranchRequiredConversationResolution with value set to v.
func NewOptProtectedBranchRequiredConversationResolution(v ProtectedBranchRequiredConversationResolution) OptProtectedBranchRequiredConversationResolution {
	return OptProtectedBranchRequiredConversationResolution{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredConversationResolution is optional ProtectedBranchRequiredConversationResolution.
type OptProtectedBranchRequiredConversationResolution struct {
	Value ProtectedBranchRequiredConversationResolution
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredConversationResolution was set.
func (o OptProtectedBranchRequiredConversationResolution) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredConversationResolution) Reset() {
	var v ProtectedBranchRequiredConversationResolution
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredConversationResolution) SetTo(v ProtectedBranchRequiredConversationResolution) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredConversationResolution) Get() (v ProtectedBranchRequiredConversationResolution, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchRequiredLinearHistory returns new OptProtectedBranchRequiredLinearHistory with value set to v.
func NewOptProtectedBranchRequiredLinearHistory(v ProtectedBranchRequiredLinearHistory) OptProtectedBranchRequiredLinearHistory {
	return OptProtectedBranchRequiredLinearHistory{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredLinearHistory is optional ProtectedBranchRequiredLinearHistory.
type OptProtectedBranchRequiredLinearHistory struct {
	Value ProtectedBranchRequiredLinearHistory
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredLinearHistory was set.
func (o OptProtectedBranchRequiredLinearHistory) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredLinearHistory) Reset() {
	var v ProtectedBranchRequiredLinearHistory
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredLinearHistory) SetTo(v ProtectedBranchRequiredLinearHistory) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredLinearHistory) Get() (v ProtectedBranchRequiredLinearHistory, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchRequiredPullRequestReviews returns new OptProtectedBranchRequiredPullRequestReviews with value set to v.
func NewOptProtectedBranchRequiredPullRequestReviews(v ProtectedBranchRequiredPullRequestReviews) OptProtectedBranchRequiredPullRequestReviews {
	return OptProtectedBranchRequiredPullRequestReviews{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredPullRequestReviews is optional ProtectedBranchRequiredPullRequestReviews.
type OptProtectedBranchRequiredPullRequestReviews struct {
	Value ProtectedBranchRequiredPullRequestReviews
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredPullRequestReviews was set.
func (o OptProtectedBranchRequiredPullRequestReviews) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredPullRequestReviews) Reset() {
	var v ProtectedBranchRequiredPullRequestReviews
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredPullRequestReviews) SetTo(v ProtectedBranchRequiredPullRequestReviews) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredPullRequestReviews) Get() (v ProtectedBranchRequiredPullRequestReviews, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions returns new OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions with value set to v.
func NewOptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions(v ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions {
	return OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions is optional ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions.
type OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions struct {
	Value ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions was set.
func (o OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) Reset() {
	var v ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) SetTo(v ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) Get() (v ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchRequiredSignatures returns new OptProtectedBranchRequiredSignatures with value set to v.
func NewOptProtectedBranchRequiredSignatures(v ProtectedBranchRequiredSignatures) OptProtectedBranchRequiredSignatures {
	return OptProtectedBranchRequiredSignatures{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredSignatures is optional ProtectedBranchRequiredSignatures.
type OptProtectedBranchRequiredSignatures struct {
	Value ProtectedBranchRequiredSignatures
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredSignatures was set.
func (o OptProtectedBranchRequiredSignatures) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredSignatures) Reset() {
	var v ProtectedBranchRequiredSignatures
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredSignatures) SetTo(v ProtectedBranchRequiredSignatures) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredSignatures) Get() (v ProtectedBranchRequiredSignatures, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPublicUser returns new OptPublicUser with value set to v.
func NewOptPublicUser(v PublicUser) OptPublicUser {
	return OptPublicUser{
		Value: v,
		Set:   true,
	}
}

// OptPublicUser is optional PublicUser.
type OptPublicUser struct {
	Value PublicUser
	Set   bool
}

// IsSet returns true if OptPublicUser was set.
func (o OptPublicUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPublicUser) Reset() {
	var v PublicUser
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPublicUser) SetTo(v PublicUser) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPublicUser) Get() (v PublicUser, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPublicUserPlan returns new OptPublicUserPlan with value set to v.
func NewOptPublicUserPlan(v PublicUserPlan) OptPublicUserPlan {
	return OptPublicUserPlan{
		Value: v,
		Set:   true,
	}
}

// OptPublicUserPlan is optional PublicUserPlan.
type OptPublicUserPlan struct {
	Value PublicUserPlan
	Set   bool
}

// IsSet returns true if OptPublicUserPlan was set.
func (o OptPublicUserPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPublicUserPlan) Reset() {
	var v PublicUserPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPublicUserPlan) SetTo(v PublicUserPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPublicUserPlan) Get() (v PublicUserPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPullRequestBaseRepoPermissions returns new OptPullRequestBaseRepoPermissions with value set to v.
func NewOptPullRequestBaseRepoPermissions(v PullRequestBaseRepoPermissions) OptPullRequestBaseRepoPermissions {
	return OptPullRequestBaseRepoPermissions{
		Value: v,
		Set:   true,
	}
}

// OptPullRequestBaseRepoPermissions is optional PullRequestBaseRepoPermissions.
type OptPullRequestBaseRepoPermissions struct {
	Value PullRequestBaseRepoPermissions
	Set   bool
}

// IsSet returns true if OptPullRequestBaseRepoPermissions was set.
func (o OptPullRequestBaseRepoPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullRequestBaseRepoPermissions) Reset() {
	var v PullRequestBaseRepoPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullRequestBaseRepoPermissions) SetTo(v PullRequestBaseRepoPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullRequestBaseRepoPermissions) Get() (v PullRequestBaseRepoPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPullRequestHeadRepoPermissions returns new OptPullRequestHeadRepoPermissions with value set to v.
func NewOptPullRequestHeadRepoPermissions(v PullRequestHeadRepoPermissions) OptPullRequestHeadRepoPermissions {
	return OptPullRequestHeadRepoPermissions{
		Value: v,
		Set:   true,
	}
}

// OptPullRequestHeadRepoPermissions is optional PullRequestHeadRepoPermissions.
type OptPullRequestHeadRepoPermissions struct {
	Value PullRequestHeadRepoPermissions
	Set   bool
}

// IsSet returns true if OptPullRequestHeadRepoPermissions was set.
func (o OptPullRequestHeadRepoPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullRequestHeadRepoPermissions) Reset() {
	var v PullRequestHeadRepoPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullRequestHeadRepoPermissions) SetTo(v PullRequestHeadRepoPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullRequestHeadRepoPermissions) Get() (v PullRequestHeadRepoPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPullRequestReviewCommentSide returns new OptPullRequestReviewCommentSide with value set to v.
func NewOptPullRequestReviewCommentSide(v PullRequestReviewCommentSide) OptPullRequestReviewCommentSide {
	return OptPullRequestReviewCommentSide{
		Value: v,
		Set:   true,
	}
}

// OptPullRequestReviewCommentSide is optional PullRequestReviewCommentSide.
type OptPullRequestReviewCommentSide struct {
	Value PullRequestReviewCommentSide
	Set   bool
}

// IsSet returns true if OptPullRequestReviewCommentSide was set.
func (o OptPullRequestReviewCommentSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullRequestReviewCommentSide) Reset() {
	var v PullRequestReviewCommentSide
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullRequestReviewCommentSide) SetTo(v PullRequestReviewCommentSide) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullRequestReviewCommentSide) Get() (v PullRequestReviewCommentSide, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPullsCreateReviewCommentReqSide returns new OptPullsCreateReviewCommentReqSide with value set to v.
func NewOptPullsCreateReviewCommentReqSide(v PullsCreateReviewCommentReqSide) OptPullsCreateReviewCommentReqSide {
	return OptPullsCreateReviewCommentReqSide{
		Value: v,
		Set:   true,
	}
}

// OptPullsCreateReviewCommentReqSide is optional PullsCreateReviewCommentReqSide.
type OptPullsCreateReviewCommentReqSide struct {
	Value PullsCreateReviewCommentReqSide
	Set   bool
}

// IsSet returns true if OptPullsCreateReviewCommentReqSide was set.
func (o OptPullsCreateReviewCommentReqSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsCreateReviewCommentReqSide) Reset() {
	var v PullsCreateReviewCommentReqSide
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsCreateReviewCommentReqSide) SetTo(v PullsCreateReviewCommentReqSide) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsCreateReviewCommentReqSide) Get() (v PullsCreateReviewCommentReqSide, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPullsCreateReviewCommentReqStartSide returns new OptPullsCreateReviewCommentReqStartSide with value set to v.
func NewOptPullsCreateReviewCommentReqStartSide(v PullsCreateReviewCommentReqStartSide) OptPullsCreateReviewCommentReqStartSide {
	return OptPullsCreateReviewCommentReqStartSide{
		Value: v,
		Set:   true,
	}
}

// OptPullsCreateReviewCommentReqStartSide is optional PullsCreateReviewCommentReqStartSide.
type OptPullsCreateReviewCommentReqStartSide struct {
	Value PullsCreateReviewCommentReqStartSide
	Set   bool
}

// IsSet returns true if OptPullsCreateReviewCommentReqStartSide was set.
func (o OptPullsCreateReviewCommentReqStartSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsCreateReviewCommentReqStartSide) Reset() {
	var v PullsCreateReviewCommentReqStartSide
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsCreateReviewCommentReqStartSide) SetTo(v PullsCreateReviewCommentReqStartSide) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsCreateReviewCommentReqStartSide) Get() (v PullsCreateReviewCommentReqStartSide, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPullsCreateReviewReqEvent returns new OptPullsCreateReviewReqEvent with value set to v.
func NewOptPullsCreateReviewReqEvent(v PullsCreateReviewReqEvent) OptPullsCreateReviewReqEvent {
	return OptPullsCreateReviewReqEvent{
		Value: v,
		Set:   true,
	}
}

// OptPullsCreateReviewReqEvent is optional PullsCreateReviewReqEvent.
type OptPullsCreateReviewReqEvent struct {
	Value PullsCreateReviewReqEvent
	Set   bool
}

// IsSet returns true if OptPullsCreateReviewReqEvent was set.
func (o OptPullsCreateReviewReqEvent) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsCreateReviewReqEvent) Reset() {
	var v PullsCreateReviewReqEvent
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsCreateReviewReqEvent) SetTo(v PullsCreateReviewReqEvent) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsCreateReviewReqEvent) Get() (v PullsCreateReviewReqEvent, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPullsMergeReqMergeMethod returns new OptPullsMergeReqMergeMethod with value set to v.
func NewOptPullsMergeReqMergeMethod(v PullsMergeReqMergeMethod) OptPullsMergeReqMergeMethod {
	return OptPullsMergeReqMergeMethod{
		Value: v,
		Set:   true,
	}
}

// OptPullsMergeReqMergeMethod is optional PullsMergeReqMergeMethod.
type OptPullsMergeReqMergeMethod struct {
	Value PullsMergeReqMergeMethod
	Set   bool
}

// IsSet returns true if OptPullsMergeReqMergeMethod was set.
func (o OptPullsMergeReqMergeMethod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsMergeReqMergeMethod) Reset() {
	var v PullsMergeReqMergeMethod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsMergeReqMergeMethod) SetTo(v PullsMergeReqMergeMethod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsMergeReqMergeMethod) Get() (v PullsMergeReqMergeMethod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPullsUpdateReqState returns new OptPullsUpdateReqState with value set to v.
func NewOptPullsUpdateReqState(v PullsUpdateReqState) OptPullsUpdateReqState {
	return OptPullsUpdateReqState{
		Value: v,
		Set:   true,
	}
}

// OptPullsUpdateReqState is optional PullsUpdateReqState.
type OptPullsUpdateReqState struct {
	Value PullsUpdateReqState
	Set   bool
}

// IsSet returns true if OptPullsUpdateReqState was set.
func (o OptPullsUpdateReqState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsUpdateReqState) Reset() {
	var v PullsUpdateReqState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsUpdateReqState) SetTo(v PullsUpdateReqState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsUpdateReqState) Get() (v PullsUpdateReqState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptRateLimit returns new OptRateLimit with value set to v.
func NewOptRateLimit(v RateLimit) OptRateLimit {
	return OptRateLimit{
		Value: v,
		Set:   true,
	}
}

// OptRateLimit is optional RateLimit.
type OptRateLimit struct {
	Value RateLimit
	Set   bool
}

// IsSet returns true if OptRateLimit was set.
func (o OptRateLimit) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRateLimit) Reset() {
	var v RateLimit
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRateLimit) SetTo(v RateLimit) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRateLimit) Get() (v RateLimit, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReactionRollup returns new OptReactionRollup with value set to v.
func NewOptReactionRollup(v ReactionRollup) OptReactionRollup {
	return OptReactionRollup{
		Value: v,
		Set:   true,
	}
}

// OptReactionRollup is optional ReactionRollup.
type OptReactionRollup struct {
	Value ReactionRollup
	Set   bool
}

// IsSet returns true if OptReactionRollup was set.
func (o OptReactionRollup) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReactionRollup) Reset() {
	var v ReactionRollup
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReactionRollup) SetTo(v ReactionRollup) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReactionRollup) Get() (v ReactionRollup, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptRepoSearchResultItemPermissions returns new OptRepoSearchResultItemPermissions with value set to v.
func NewOptRepoSearchResultItemPermissions(v RepoSearchResultItemPermissions) OptRepoSearchResultItemPermissions {
	return OptRepoSearchResultItemPermissions{
		Value: v,
		Set:   true,
	}
}

// OptRepoSearchResultItemPermissions is optional RepoSearchResultItemPermissions.
type OptRepoSearchResultItemPermissions struct {
	Value RepoSearchResultItemPermissions
	Set   bool
}

// IsSet returns true if OptRepoSearchResultItemPermissions was set.
func (o OptRepoSearchResultItemPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRepoSearchResultItemPermissions) Reset() {
	var v RepoSearchResultItemPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRepoSearchResultItemPermissions) SetTo(v RepoSearchResultItemPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRepoSearchResultItemPermissions) Get() (v RepoSearchResultItemPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposAddCollaboratorReqPermission returns new OptReposAddCollaboratorReqPermission with value set to v.
func NewOptReposAddCollaboratorReqPermission(v ReposAddCollaboratorReqPermission) OptReposAddCollaboratorReqPermission {
	return OptReposAddCollaboratorReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptReposAddCollaboratorReqPermission is optional ReposAddCollaboratorReqPermission.
type OptReposAddCollaboratorReqPermission struct {
	Value ReposAddCollaboratorReqPermission
	Set   bool
}

// IsSet returns true if OptReposAddCollaboratorReqPermission was set.
func (o OptReposAddCollaboratorReqPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposAddCollaboratorReqPermission) Reset() {
	var v ReposAddCollaboratorReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposAddCollaboratorReqPermission) SetTo(v ReposAddCollaboratorReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposAddCollaboratorReqPermission) Get() (v ReposAddCollaboratorReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposCreateDeploymentStatusReqEnvironment returns new OptReposCreateDeploymentStatusReqEnvironment with value set to v.
func NewOptReposCreateDeploymentStatusReqEnvironment(v ReposCreateDeploymentStatusReqEnvironment) OptReposCreateDeploymentStatusReqEnvironment {
	return OptReposCreateDeploymentStatusReqEnvironment{
		Value: v,
		Set:   true,
	}
}

// OptReposCreateDeploymentStatusReqEnvironment is optional ReposCreateDeploymentStatusReqEnvironment.
type OptReposCreateDeploymentStatusReqEnvironment struct {
	Value ReposCreateDeploymentStatusReqEnvironment
	Set   bool
}

// IsSet returns true if OptReposCreateDeploymentStatusReqEnvironment was set.
func (o OptReposCreateDeploymentStatusReqEnvironment) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreateDeploymentStatusReqEnvironment) Reset() {
	var v ReposCreateDeploymentStatusReqEnvironment
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreateDeploymentStatusReqEnvironment) SetTo(v ReposCreateDeploymentStatusReqEnvironment) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreateDeploymentStatusReqEnvironment) Get() (v ReposCreateDeploymentStatusReqEnvironment, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposCreateInOrgReqVisibility returns new OptReposCreateInOrgReqVisibility with value set to v.
func NewOptReposCreateInOrgReqVisibility(v ReposCreateInOrgReqVisibility) OptReposCreateInOrgReqVisibility {
	return OptReposCreateInOrgReqVisibility{
		Value: v,
		Set:   true,
	}
}

// OptReposCreateInOrgReqVisibility is optional ReposCreateInOrgReqVisibility.
type OptReposCreateInOrgReqVisibility struct {
	Value ReposCreateInOrgReqVisibility
	Set   bool
}

// IsSet returns true if OptReposCreateInOrgReqVisibility was set.
func (o OptReposCreateInOrgReqVisibility) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreateInOrgReqVisibility) Reset() {
	var v ReposCreateInOrgReqVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreateInOrgReqVisibility) SetTo(v ReposCreateInOrgReqVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreateInOrgReqVisibility) Get() (v ReposCreateInOrgReqVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposCreateOrUpdateFileContentsReqAuthor returns new OptReposCreateOrUpdateFileContentsReqAuthor with value set to v.
func NewOptReposCreateOrUpdateFileContentsReqAuthor(v ReposCreateOrUpdateFileContentsReqAuthor) OptReposCreateOrUpdateFileContentsReqAuthor {
	return OptReposCreateOrUpdateFileContentsReqAuthor{
		Value: v,
		Set:   true,
	}
}

// OptReposCreateOrUpdateFileContentsReqAuthor is optional ReposCreateOrUpdateFileContentsReqAuthor.
type OptReposCreateOrUpdateFileContentsReqAuthor struct {
	Value ReposCreateOrUpdateFileContentsReqAuthor
	Set   bool
}

// IsSet returns true if OptReposCreateOrUpdateFileContentsReqAuthor was set.
func (o OptReposCreateOrUpdateFileContentsReqAuthor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreateOrUpdateFileContentsReqAuthor) Reset() {
	var v ReposCreateOrUpdateFileContentsReqAuthor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreateOrUpdateFileContentsReqAuthor) SetTo(v ReposCreateOrUpdateFileContentsReqAuthor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreateOrUpdateFileContentsReqAuthor) Get() (v ReposCreateOrUpdateFileContentsReqAuthor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposCreateOrUpdateFileContentsReqCommitter returns new OptReposCreateOrUpdateFileContentsReqCommitter with value set to v.
func NewOptReposCreateOrUpdateFileContentsReqCommitter(v ReposCreateOrUpdateFileContentsReqCommitter) OptReposCreateOrUpdateFileContentsReqCommitter {
	return OptReposCreateOrUpdateFileContentsReqCommitter{
		Value: v,
		Set:   true,
	}
}

// OptReposCreateOrUpdateFileContentsReqCommitter is optional ReposCreateOrUpdateFileContentsReqCommitter.
type OptReposCreateOrUpdateFileContentsReqCommitter struct {
	Value ReposCreateOrUpdateFileContentsReqCommitter
	Set   bool
}

// IsSet returns true if OptReposCreateOrUpdateFileContentsReqCommitter was set.
func (o OptReposCreateOrUpdateFileContentsReqCommitter) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreateOrUpdateFileContentsReqCommitter) Reset() {
	var v ReposCreateOrUpdateFileContentsReqCommitter
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreateOrUpdateFileContentsReqCommitter) SetTo(v ReposCreateOrUpdateFileContentsReqCommitter) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreateOrUpdateFileContentsReqCommitter) Get() (v ReposCreateOrUpdateFileContentsReqCommitter, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposCreatePagesSiteReqSourcePath returns new OptReposCreatePagesSiteReqSourcePath with value set to v.
func NewOptReposCreatePagesSiteReqSourcePath(v ReposCreatePagesSiteReqSourcePath) OptReposCreatePagesSiteReqSourcePath {
	return OptReposCreatePagesSiteReqSourcePath{
		Value: v,
		Set:   true,
	}
}

// OptReposCreatePagesSiteReqSourcePath is optional ReposCreatePagesSiteReqSourcePath.
type OptReposCreatePagesSiteReqSourcePath struct {
	Value ReposCreatePagesSiteReqSourcePath
	Set   bool
}

// IsSet returns true if OptReposCreatePagesSiteReqSourcePath was set.
func (o OptReposCreatePagesSiteReqSourcePath) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreatePagesSiteReqSourcePath) Reset() {
	var v ReposCreatePagesSiteReqSourcePath
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreatePagesSiteReqSourcePath) SetTo(v ReposCreatePagesSiteReqSourcePath) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreatePagesSiteReqSourcePath) Get() (v ReposCreatePagesSiteReqSourcePath, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposCreateWebhookReqConfig returns new OptReposCreateWebhookReqConfig with value set to v.
func NewOptReposCreateWebhookReqConfig(v ReposCreateWebhookReqConfig) OptReposCreateWebhookReqConfig {
	return OptReposCreateWebhookReqConfig{
		Value: v,
		Set:   true,
	}
}

// OptReposCreateWebhookReqConfig is optional ReposCreateWebhookReqConfig.
type OptReposCreateWebhookReqConfig struct {
	Value ReposCreateWebhookReqConfig
	Set   bool
}

// IsSet returns true if OptReposCreateWebhookReqConfig was set.
func (o OptReposCreateWebhookReqConfig) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreateWebhookReqConfig) Reset() {
	var v ReposCreateWebhookReqConfig
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreateWebhookReqConfig) SetTo(v ReposCreateWebhookReqConfig) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreateWebhookReqConfig) Get() (v ReposCreateWebhookReqConfig, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposDeleteFileReqAuthor returns new OptReposDeleteFileReqAuthor with value set to v.
func NewOptReposDeleteFileReqAuthor(v ReposDeleteFileReqAuthor) OptReposDeleteFileReqAuthor {
	return OptReposDeleteFileReqAuthor{
		Value: v,
		Set:   true,
	}
}

// OptReposDeleteFileReqAuthor is optional ReposDeleteFileReqAuthor.
type OptReposDeleteFileReqAuthor struct {
	Value ReposDeleteFileReqAuthor
	Set   bool
}

// IsSet returns true if OptReposDeleteFileReqAuthor was set.
func (o OptReposDeleteFileReqAuthor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposDeleteFileReqAuthor) Reset() {
	var v ReposDeleteFileReqAuthor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposDeleteFileReqAuthor) SetTo(v ReposDeleteFileReqAuthor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposDeleteFileReqAuthor) Get() (v ReposDeleteFileReqAuthor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposDeleteFileReqCommitter returns new OptReposDeleteFileReqCommitter with value set to v.
func NewOptReposDeleteFileReqCommitter(v ReposDeleteFileReqCommitter) OptReposDeleteFileReqCommitter {
	return OptReposDeleteFileReqCommitter{
		Value: v,
		Set:   true,
	}
}

// OptReposDeleteFileReqCommitter is optional ReposDeleteFileReqCommitter.
type OptReposDeleteFileReqCommitter struct {
	Value ReposDeleteFileReqCommitter
	Set   bool
}

// IsSet returns true if OptReposDeleteFileReqCommitter was set.
func (o OptReposDeleteFileReqCommitter) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposDeleteFileReqCommitter) Reset() {
	var v ReposDeleteFileReqCommitter
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposDeleteFileReqCommitter) SetTo(v ReposDeleteFileReqCommitter) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposDeleteFileReqCommitter) Get() (v ReposDeleteFileReqCommitter, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions returns new OptReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions with value set to v.
func NewOptReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions(v ReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions) OptReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions {
	return OptReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions is optional ReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions.
type OptReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions struct {
	Value ReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions
	Set   bool
}

// IsSet returns true if OptReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions was set.
func (o OptReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions) Reset() {
	var v ReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions) SetTo(v ReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions) Get() (v ReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposUpdateInvitationReqPermissions returns new OptReposUpdateInvitationReqPermissions with value set to v.
func NewOptReposUpdateInvitationReqPermissions(v ReposUpdateInvitationReqPermissions) OptReposUpdateInvitationReqPermissions {
	return OptReposUpdateInvitationReqPermissions{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateInvitationReqPermissions is optional ReposUpdateInvitationReqPermissions.
type OptReposUpdateInvitationReqPermissions struct {
	Value ReposUpdateInvitationReqPermissions
	Set   bool
}

// IsSet returns true if OptReposUpdateInvitationReqPermissions was set.
func (o OptReposUpdateInvitationReqPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposUpdateInvitationReqPermissions) Reset() {
	var v ReposUpdateInvitationReqPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateInvitationReqPermissions) SetTo(v ReposUpdateInvitationReqPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateInvitationReqPermissions) Get() (v ReposUpdateInvitationReqPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposUpdatePullRequestReviewProtectionReqDismissalRestrictions returns new OptReposUpdatePullRequestReviewProtectionReqDismissalRestrictions with value set to v.
func NewOptReposUpdatePullRequestReviewProtectionReqDismissalRestrictions(v ReposUpdatePullRequestReviewProtectionReqDismissalRestrictions) OptReposUpdatePullRequestReviewProtectionReqDismissalRestrictions {
	return OptReposUpdatePullRequestReviewProtectionReqDismissalRestrictions{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdatePullRequestReviewProtectionReqDismissalRestrictions is optional ReposUpdatePullRequestReviewProtectionReqDismissalRestrictions.
type OptReposUpdatePullRequestReviewProtectionReqDismissalRestrictions struct {
	Value ReposUpdatePullRequestReviewProtectionReqDismissalRestrictions
	Set   bool
}

// IsSet returns true if OptReposUpdatePullRequestReviewProtectionReqDismissalRestrictions was set.
func (o OptReposUpdatePullRequestReviewProtectionReqDismissalRestrictions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposUpdatePullRequestReviewProtectionReqDismissalRestrictions) Reset() {
	var v ReposUpdatePullRequestReviewProtectionReqDismissalRestrictions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdatePullRequestReviewProtectionReqDismissalRestrictions) SetTo(v ReposUpdatePullRequestReviewProtectionReqDismissalRestrictions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdatePullRequestReviewProtectionReqDismissalRestrictions) Get() (v ReposUpdatePullRequestReviewProtectionReqDismissalRestrictions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposUpdateReqSecurityAndAnalysisAdvancedSecurity returns new OptReposUpdateReqSecurityAndAnalysisAdvancedSecurity with value set to v.
func NewOptReposUpdateReqSecurityAndAnalysisAdvancedSecurity(v ReposUpdateReqSecurityAndAnalysisAdvancedSecurity) OptReposUpdateReqSecurityAndAnalysisAdvancedSecurity {
	return OptReposUpdateReqSecurityAndAnalysisAdvancedSecurity{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateReqSecurityAndAnalysisAdvancedSecurity is optional ReposUpdateReqSecurityAndAnalysisAdvancedSecurity.
type OptReposUpdateReqSecurityAndAnalysisAdvancedSecurity struct {
	Value ReposUpdateReqSecurityAndAnalysisAdvancedSecurity
	Set   bool
}

// IsSet returns true if OptReposUpdateReqSecurityAndAnalysisAdvancedSecurity was set.
func (o OptReposUpdateReqSecurityAndAnalysisAdvancedSecurity) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposUpdateReqSecurityAndAnalysisAdvancedSecurity) Reset() {
	var v ReposUpdateReqSecurityAndAnalysisAdvancedSecurity
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateReqSecurityAndAnalysisAdvancedSecurity) SetTo(v ReposUpdateReqSecurityAndAnalysisAdvancedSecurity) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateReqSecurityAndAnalysisAdvancedSecurity) Get() (v ReposUpdateReqSecurityAndAnalysisAdvancedSecurity, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposUpdateReqSecurityAndAnalysisSecretScanning returns new OptReposUpdateReqSecurityAndAnalysisSecretScanning with value set to v.
func NewOptReposUpdateReqSecurityAndAnalysisSecretScanning(v ReposUpdateReqSecurityAndAnalysisSecretScanning) OptReposUpdateReqSecurityAndAnalysisSecretScanning {
	return OptReposUpdateReqSecurityAndAnalysisSecretScanning{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateReqSecurityAndAnalysisSecretScanning is optional ReposUpdateReqSecurityAndAnalysisSecretScanning.
type OptReposUpdateReqSecurityAndAnalysisSecretScanning struct {
	Value ReposUpdateReqSecurityAndAnalysisSecretScanning
	Set   bool
}

// IsSet returns true if OptReposUpdateReqSecurityAndAnalysisSecretScanning was set.
func (o OptReposUpdateReqSecurityAndAnalysisSecretScanning) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposUpdateReqSecurityAndAnalysisSecretScanning) Reset() {
	var v ReposUpdateReqSecurityAndAnalysisSecretScanning
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateReqSecurityAndAnalysisSecretScanning) SetTo(v ReposUpdateReqSecurityAndAnalysisSecretScanning) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateReqSecurityAndAnalysisSecretScanning) Get() (v ReposUpdateReqSecurityAndAnalysisSecretScanning, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposUpdateReqVisibility returns new OptReposUpdateReqVisibility with value set to v.
func NewOptReposUpdateReqVisibility(v ReposUpdateReqVisibility) OptReposUpdateReqVisibility {
	return OptReposUpdateReqVisibility{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateReqVisibility is optional ReposUpdateReqVisibility.
type OptReposUpdateReqVisibility struct {
	Value ReposUpdateReqVisibility
	Set   bool
}

// IsSet returns true if OptReposUpdateReqVisibility was set.
func (o OptReposUpdateReqVisibility) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposUpdateReqVisibility) Reset() {
	var v ReposUpdateReqVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateReqVisibility) SetTo(v ReposUpdateReqVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateReqVisibility) Get() (v ReposUpdateReqVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposUpdateWebhookReqConfig returns new OptReposUpdateWebhookReqConfig with value set to v.
func NewOptReposUpdateWebhookReqConfig(v ReposUpdateWebhookReqConfig) OptReposUpdateWebhookReqConfig {
	return OptReposUpdateWebhookReqConfig{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateWebhookReqConfig is optional ReposUpdateWebhookReqConfig.
type OptReposUpdateWebhookReqConfig struct {
	Value ReposUpdateWebhookReqConfig
	Set   bool
}

// IsSet returns true if OptReposUpdateWebhookReqConfig was set.
func (o OptReposUpdateWebhookReqConfig) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposUpdateWebhookReqConfig) Reset() {
	var v ReposUpdateWebhookReqConfig
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateWebhookReqConfig) SetTo(v ReposUpdateWebhookReqConfig) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateWebhookReqConfig) Get() (v ReposUpdateWebhookReqConfig, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptRepository returns new OptRepository with value set to v.
func NewOptRepository(v Repository) OptRepository {
	return OptRepository{
		Value: v,
		Set:   true,
	}
}

// OptRepository is optional Repository.
type OptRepository struct {
	Value Repository
	Set   bool
}

// IsSet returns true if OptRepository was set.
func (o OptRepository) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRepository) Reset() {
	var v Repository
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRepository) SetTo(v Repository) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRepository) Get() (v Repository, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptRepositoryPermissions returns new OptRepositoryPermissions with value set to v.
func NewOptRepositoryPermissions(v RepositoryPermissions) OptRepositoryPermissions {
	return OptRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptRepositoryPermissions is optional RepositoryPermissions.
type OptRepositoryPermissions struct {
	Value RepositoryPermissions
	Set   bool
}

// IsSet returns true if OptRepositoryPermissions was set.
func (o OptRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRepositoryPermissions) Reset() {
	var v RepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRepositoryPermissions) SetTo(v RepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRepositoryPermissions) Get() (v RepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptRepositoryTemplateRepositoryOwner returns new OptRepositoryTemplateRepositoryOwner with value set to v.
func NewOptRepositoryTemplateRepositoryOwner(v RepositoryTemplateRepositoryOwner) OptRepositoryTemplateRepositoryOwner {
	return OptRepositoryTemplateRepositoryOwner{
		Value: v,
		Set:   true,
	}
}

// OptRepositoryTemplateRepositoryOwner is optional RepositoryTemplateRepositoryOwner.
type OptRepositoryTemplateRepositoryOwner struct {
	Value RepositoryTemplateRepositoryOwner
	Set   bool
}

// IsSet returns true if OptRepositoryTemplateRepositoryOwner was set.
func (o OptRepositoryTemplateRepositoryOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRepositoryTemplateRepositoryOwner) Reset() {
	var v RepositoryTemplateRepositoryOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRepositoryTemplateRepositoryOwner) SetTo(v RepositoryTemplateRepositoryOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRepositoryTemplateRepositoryOwner) Get() (v RepositoryTemplateRepositoryOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptRepositoryTemplateRepositoryPermissions returns new OptRepositoryTemplateRepositoryPermissions with value set to v.
func NewOptRepositoryTemplateRepositoryPermissions(v RepositoryTemplateRepositoryPermissions) OptRepositoryTemplateRepositoryPermissions {
	return OptRepositoryTemplateRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptRepositoryTemplateRepositoryPermissions is optional RepositoryTemplateRepositoryPermissions.
type OptRepositoryTemplateRepositoryPermissions struct {
	Value RepositoryTemplateRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptRepositoryTemplateRepositoryPermissions was set.
func (o OptRepositoryTemplateRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRepositoryTemplateRepositoryPermissions) Reset() {
	var v RepositoryTemplateRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRepositoryTemplateRepositoryPermissions) SetTo(v RepositoryTemplateRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRepositoryTemplateRepositoryPermissions) Get() (v RepositoryTemplateRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReviewCommentSide returns new OptReviewCommentSide with value set to v.
func NewOptReviewCommentSide(v ReviewCommentSide) OptReviewCommentSide {
	return OptReviewCommentSide{
		Value: v,
		Set:   true,
	}
}

// OptReviewCommentSide is optional ReviewCommentSide.
type OptReviewCommentSide struct {
	Value ReviewCommentSide
	Set   bool
}

// IsSet returns true if OptReviewCommentSide was set.
func (o OptReviewCommentSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReviewCommentSide) Reset() {
	var v ReviewCommentSide
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReviewCommentSide) SetTo(v ReviewCommentSide) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReviewCommentSide) Get() (v ReviewCommentSide, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptRunnerLabelsItemType returns new OptRunnerLabelsItemType with value set to v.
func NewOptRunnerLabelsItemType(v RunnerLabelsItemType) OptRunnerLabelsItemType {
	return OptRunnerLabelsItemType{
		Value: v,
		Set:   true,
	}
}

// OptRunnerLabelsItemType is optional RunnerLabelsItemType.
type OptRunnerLabelsItemType struct {
	Value RunnerLabelsItemType
	Set   bool
}

// IsSet returns true if OptRunnerLabelsItemType was set.
func (o OptRunnerLabelsItemType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRunnerLabelsItemType) Reset() {
	var v RunnerLabelsItemType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRunnerLabelsItemType) SetTo(v RunnerLabelsItemType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRunnerLabelsItemType) Get() (v RunnerLabelsItemType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptScimEnterpriseGroupMeta returns new OptScimEnterpriseGroupMeta with value set to v.
func NewOptScimEnterpriseGroupMeta(v ScimEnterpriseGroupMeta) OptScimEnterpriseGroupMeta {
	return OptScimEnterpriseGroupMeta{
		Value: v,
		Set:   true,
	}
}

// OptScimEnterpriseGroupMeta is optional ScimEnterpriseGroupMeta.
type OptScimEnterpriseGroupMeta struct {
	Value ScimEnterpriseGroupMeta
	Set   bool
}

// IsSet returns true if OptScimEnterpriseGroupMeta was set.
func (o OptScimEnterpriseGroupMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimEnterpriseGroupMeta) Reset() {
	var v ScimEnterpriseGroupMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimEnterpriseGroupMeta) SetTo(v ScimEnterpriseGroupMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimEnterpriseGroupMeta) Get() (v ScimEnterpriseGroupMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptScimEnterpriseUserMeta returns new OptScimEnterpriseUserMeta with value set to v.
func NewOptScimEnterpriseUserMeta(v ScimEnterpriseUserMeta) OptScimEnterpriseUserMeta {
	return OptScimEnterpriseUserMeta{
		Value: v,
		Set:   true,
	}
}

// OptScimEnterpriseUserMeta is optional ScimEnterpriseUserMeta.
type OptScimEnterpriseUserMeta struct {
	Value ScimEnterpriseUserMeta
	Set   bool
}

// IsSet returns true if OptScimEnterpriseUserMeta was set.
func (o OptScimEnterpriseUserMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimEnterpriseUserMeta) Reset() {
	var v ScimEnterpriseUserMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimEnterpriseUserMeta) SetTo(v ScimEnterpriseUserMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimEnterpriseUserMeta) Get() (v ScimEnterpriseUserMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptScimEnterpriseUserName returns new OptScimEnterpriseUserName with value set to v.
func NewOptScimEnterpriseUserName(v ScimEnterpriseUserName) OptScimEnterpriseUserName {
	return OptScimEnterpriseUserName{
		Value: v,
		Set:   true,
	}
}

// OptScimEnterpriseUserName is optional ScimEnterpriseUserName.
type OptScimEnterpriseUserName struct {
	Value ScimEnterpriseUserName
	Set   bool
}

// IsSet returns true if OptScimEnterpriseUserName was set.
func (o OptScimEnterpriseUserName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimEnterpriseUserName) Reset() {
	var v ScimEnterpriseUserName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimEnterpriseUserName) SetTo(v ScimEnterpriseUserName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimEnterpriseUserName) Get() (v ScimEnterpriseUserName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptScimGroupListEnterpriseResourcesItemMeta returns new OptScimGroupListEnterpriseResourcesItemMeta with value set to v.
func NewOptScimGroupListEnterpriseResourcesItemMeta(v ScimGroupListEnterpriseResourcesItemMeta) OptScimGroupListEnterpriseResourcesItemMeta {
	return OptScimGroupListEnterpriseResourcesItemMeta{
		Value: v,
		Set:   true,
	}
}

// OptScimGroupListEnterpriseResourcesItemMeta is optional ScimGroupListEnterpriseResourcesItemMeta.
type OptScimGroupListEnterpriseResourcesItemMeta struct {
	Value ScimGroupListEnterpriseResourcesItemMeta
	Set   bool
}

// IsSet returns true if OptScimGroupListEnterpriseResourcesItemMeta was set.
func (o OptScimGroupListEnterpriseResourcesItemMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimGroupListEnterpriseResourcesItemMeta) Reset() {
	var v ScimGroupListEnterpriseResourcesItemMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimGroupListEnterpriseResourcesItemMeta) SetTo(v ScimGroupListEnterpriseResourcesItemMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimGroupListEnterpriseResourcesItemMeta) Get() (v ScimGroupListEnterpriseResourcesItemMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptScimUserListEnterpriseResourcesItemMeta returns new OptScimUserListEnterpriseResourcesItemMeta with value set to v.
func NewOptScimUserListEnterpriseResourcesItemMeta(v ScimUserListEnterpriseResourcesItemMeta) OptScimUserListEnterpriseResourcesItemMeta {
	return OptScimUserListEnterpriseResourcesItemMeta{
		Value: v,
		Set:   true,
	}
}

// OptScimUserListEnterpriseResourcesItemMeta is optional ScimUserListEnterpriseResourcesItemMeta.
type OptScimUserListEnterpriseResourcesItemMeta struct {
	Value ScimUserListEnterpriseResourcesItemMeta
	Set   bool
}

// IsSet returns true if OptScimUserListEnterpriseResourcesItemMeta was set.
func (o OptScimUserListEnterpriseResourcesItemMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimUserListEnterpriseResourcesItemMeta) Reset() {
	var v ScimUserListEnterpriseResourcesItemMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimUserListEnterpriseResourcesItemMeta) SetTo(v ScimUserListEnterpriseResourcesItemMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimUserListEnterpriseResourcesItemMeta) Get() (v ScimUserListEnterpriseResourcesItemMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptScimUserListEnterpriseResourcesItemName returns new OptScimUserListEnterpriseResourcesItemName with value set to v.
func NewOptScimUserListEnterpriseResourcesItemName(v ScimUserListEnterpriseResourcesItemName) OptScimUserListEnterpriseResourcesItemName {
	return OptScimUserListEnterpriseResourcesItemName{
		Value: v,
		Set:   true,
	}
}

// OptScimUserListEnterpriseResourcesItemName is optional ScimUserListEnterpriseResourcesItemName.
type OptScimUserListEnterpriseResourcesItemName struct {
	Value ScimUserListEnterpriseResourcesItemName
	Set   bool
}

// IsSet returns true if OptScimUserListEnterpriseResourcesItemName was set.
func (o OptScimUserListEnterpriseResourcesItemName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimUserListEnterpriseResourcesItemName) Reset() {
	var v ScimUserListEnterpriseResourcesItemName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimUserListEnterpriseResourcesItemName) SetTo(v ScimUserListEnterpriseResourcesItemName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimUserListEnterpriseResourcesItemName) Get() (v ScimUserListEnterpriseResourcesItemName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptSecretScanningAlertState returns new OptSecretScanningAlertState with value set to v.
func NewOptSecretScanningAlertState(v SecretScanningAlertState) OptSecretScanningAlertState {
	return OptSecretScanningAlertState{
		Value: v,
		Set:   true,
	}
}

// OptSecretScanningAlertState is optional SecretScanningAlertState.
type OptSecretScanningAlertState struct {
	Value SecretScanningAlertState
	Set   bool
}

// IsSet returns true if OptSecretScanningAlertState was set.
func (o OptSecretScanningAlertState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSecretScanningAlertState) Reset() {
	var v SecretScanningAlertState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSecretScanningAlertState) SetTo(v SecretScanningAlertState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSecretScanningAlertState) Get() (v SecretScanningAlertState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptSelectedActionsURL returns new OptSelectedActionsURL with value set to v.
func NewOptSelectedActionsURL(v SelectedActionsURL) OptSelectedActionsURL {
	return OptSelectedActionsURL{
		Value: v,
		Set:   true,
	}
}

// OptSelectedActionsURL is optional SelectedActionsURL.
type OptSelectedActionsURL struct {
	Value SelectedActionsURL
	Set   bool
}

// IsSet returns true if OptSelectedActionsURL was set.
func (o OptSelectedActionsURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSelectedActionsURL) Reset() {
	var v SelectedActionsURL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSelectedActionsURL) SetTo(v SelectedActionsURL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSelectedActionsURL) Get() (v SelectedActionsURL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptSimpleUser returns new OptSimpleUser with value set to v.
func NewOptSimpleUser(v SimpleUser) OptSimpleUser {
	return OptSimpleUser{
		Value: v,
		Set:   true,
	}
}

// OptSimpleUser is optional SimpleUser.
type OptSimpleUser struct {
	Value SimpleUser
	Set   bool
}

// IsSet returns true if OptSimpleUser was set.
func (o OptSimpleUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSimpleUser) Reset() {
	var v SimpleUser
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSimpleUser) SetTo(v SimpleUser) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSimpleUser) Get() (v SimpleUser, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptStatusCheckPolicy returns new OptStatusCheckPolicy with value set to v.
func NewOptStatusCheckPolicy(v StatusCheckPolicy) OptStatusCheckPolicy {
	return OptStatusCheckPolicy{
		Value: v,
		Set:   true,
	}
}

// OptStatusCheckPolicy is optional StatusCheckPolicy.
type OptStatusCheckPolicy struct {
	Value StatusCheckPolicy
	Set   bool
}

// IsSet returns true if OptStatusCheckPolicy was set.
func (o OptStatusCheckPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStatusCheckPolicy) Reset() {
	var v StatusCheckPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStatusCheckPolicy) SetTo(v StatusCheckPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStatusCheckPolicy) Get() (v StatusCheckPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeam returns new OptTeam with value set to v.
func NewOptTeam(v Team) OptTeam {
	return OptTeam{
		Value: v,
		Set:   true,
	}
}

// OptTeam is optional Team.
type OptTeam struct {
	Value Team
	Set   bool
}

// IsSet returns true if OptTeam was set.
func (o OptTeam) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeam) Reset() {
	var v Team
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeam) SetTo(v Team) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeam) Get() (v Team, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamFullPrivacy returns new OptTeamFullPrivacy with value set to v.
func NewOptTeamFullPrivacy(v TeamFullPrivacy) OptTeamFullPrivacy {
	return OptTeamFullPrivacy{
		Value: v,
		Set:   true,
	}
}

// OptTeamFullPrivacy is optional TeamFullPrivacy.
type OptTeamFullPrivacy struct {
	Value TeamFullPrivacy
	Set   bool
}

// IsSet returns true if OptTeamFullPrivacy was set.
func (o OptTeamFullPrivacy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamFullPrivacy) Reset() {
	var v TeamFullPrivacy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamFullPrivacy) SetTo(v TeamFullPrivacy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamFullPrivacy) Get() (v TeamFullPrivacy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamPermissions returns new OptTeamPermissions with value set to v.
func NewOptTeamPermissions(v TeamPermissions) OptTeamPermissions {
	return OptTeamPermissions{
		Value: v,
		Set:   true,
	}
}

// OptTeamPermissions is optional TeamPermissions.
type OptTeamPermissions struct {
	Value TeamPermissions
	Set   bool
}

// IsSet returns true if OptTeamPermissions was set.
func (o OptTeamPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamPermissions) Reset() {
	var v TeamPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamPermissions) SetTo(v TeamPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamPermissions) Get() (v TeamPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamRepositoryPermissions returns new OptTeamRepositoryPermissions with value set to v.
func NewOptTeamRepositoryPermissions(v TeamRepositoryPermissions) OptTeamRepositoryPermissions {
	return OptTeamRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptTeamRepositoryPermissions is optional TeamRepositoryPermissions.
type OptTeamRepositoryPermissions struct {
	Value TeamRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptTeamRepositoryPermissions was set.
func (o OptTeamRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamRepositoryPermissions) Reset() {
	var v TeamRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamRepositoryPermissions) SetTo(v TeamRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamRepositoryPermissions) Get() (v TeamRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsAddOrUpdateMembershipForUserInOrgReqRole returns new OptTeamsAddOrUpdateMembershipForUserInOrgReqRole with value set to v.
func NewOptTeamsAddOrUpdateMembershipForUserInOrgReqRole(v TeamsAddOrUpdateMembershipForUserInOrgReqRole) OptTeamsAddOrUpdateMembershipForUserInOrgReqRole {
	return OptTeamsAddOrUpdateMembershipForUserInOrgReqRole{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateMembershipForUserInOrgReqRole is optional TeamsAddOrUpdateMembershipForUserInOrgReqRole.
type OptTeamsAddOrUpdateMembershipForUserInOrgReqRole struct {
	Value TeamsAddOrUpdateMembershipForUserInOrgReqRole
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateMembershipForUserInOrgReqRole was set.
func (o OptTeamsAddOrUpdateMembershipForUserInOrgReqRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsAddOrUpdateMembershipForUserInOrgReqRole) Reset() {
	var v TeamsAddOrUpdateMembershipForUserInOrgReqRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateMembershipForUserInOrgReqRole) SetTo(v TeamsAddOrUpdateMembershipForUserInOrgReqRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateMembershipForUserInOrgReqRole) Get() (v TeamsAddOrUpdateMembershipForUserInOrgReqRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsAddOrUpdateMembershipForUserLegacyReqRole returns new OptTeamsAddOrUpdateMembershipForUserLegacyReqRole with value set to v.
func NewOptTeamsAddOrUpdateMembershipForUserLegacyReqRole(v TeamsAddOrUpdateMembershipForUserLegacyReqRole) OptTeamsAddOrUpdateMembershipForUserLegacyReqRole {
	return OptTeamsAddOrUpdateMembershipForUserLegacyReqRole{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateMembershipForUserLegacyReqRole is optional TeamsAddOrUpdateMembershipForUserLegacyReqRole.
type OptTeamsAddOrUpdateMembershipForUserLegacyReqRole struct {
	Value TeamsAddOrUpdateMembershipForUserLegacyReqRole
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateMembershipForUserLegacyReqRole was set.
func (o OptTeamsAddOrUpdateMembershipForUserLegacyReqRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsAddOrUpdateMembershipForUserLegacyReqRole) Reset() {
	var v TeamsAddOrUpdateMembershipForUserLegacyReqRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateMembershipForUserLegacyReqRole) SetTo(v TeamsAddOrUpdateMembershipForUserLegacyReqRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateMembershipForUserLegacyReqRole) Get() (v TeamsAddOrUpdateMembershipForUserLegacyReqRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsAddOrUpdateProjectPermissionsInOrgReqPermission returns new OptTeamsAddOrUpdateProjectPermissionsInOrgReqPermission with value set to v.
func NewOptTeamsAddOrUpdateProjectPermissionsInOrgReqPermission(v TeamsAddOrUpdateProjectPermissionsInOrgReqPermission) OptTeamsAddOrUpdateProjectPermissionsInOrgReqPermission {
	return OptTeamsAddOrUpdateProjectPermissionsInOrgReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateProjectPermissionsInOrgReqPermission is optional TeamsAddOrUpdateProjectPermissionsInOrgReqPermission.
type OptTeamsAddOrUpdateProjectPermissionsInOrgReqPermission struct {
	Value TeamsAddOrUpdateProjectPermissionsInOrgReqPermission
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateProjectPermissionsInOrgReqPermission was set.
func (o OptTeamsAddOrUpdateProjectPermissionsInOrgReqPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsAddOrUpdateProjectPermissionsInOrgReqPermission) Reset() {
	var v TeamsAddOrUpdateProjectPermissionsInOrgReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateProjectPermissionsInOrgReqPermission) SetTo(v TeamsAddOrUpdateProjectPermissionsInOrgReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateProjectPermissionsInOrgReqPermission) Get() (v TeamsAddOrUpdateProjectPermissionsInOrgReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsAddOrUpdateProjectPermissionsLegacyReqPermission returns new OptTeamsAddOrUpdateProjectPermissionsLegacyReqPermission with value set to v.
func NewOptTeamsAddOrUpdateProjectPermissionsLegacyReqPermission(v TeamsAddOrUpdateProjectPermissionsLegacyReqPermission) OptTeamsAddOrUpdateProjectPermissionsLegacyReqPermission {
	return OptTeamsAddOrUpdateProjectPermissionsLegacyReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateProjectPermissionsLegacyReqPermission is optional TeamsAddOrUpdateProjectPermissionsLegacyReqPermission.
type OptTeamsAddOrUpdateProjectPermissionsLegacyReqPermission struct {
	Value TeamsAddOrUpdateProjectPermissionsLegacyReqPermission
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateProjectPermissionsLegacyReqPermission was set.
func (o OptTeamsAddOrUpdateProjectPermissionsLegacyReqPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsAddOrUpdateProjectPermissionsLegacyReqPermission) Reset() {
	var v TeamsAddOrUpdateProjectPermissionsLegacyReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateProjectPermissionsLegacyReqPermission) SetTo(v TeamsAddOrUpdateProjectPermissionsLegacyReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateProjectPermissionsLegacyReqPermission) Get() (v TeamsAddOrUpdateProjectPermissionsLegacyReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsAddOrUpdateRepoPermissionsInOrgReqPermission returns new OptTeamsAddOrUpdateRepoPermissionsInOrgReqPermission with value set to v.
func NewOptTeamsAddOrUpdateRepoPermissionsInOrgReqPermission(v TeamsAddOrUpdateRepoPermissionsInOrgReqPermission) OptTeamsAddOrUpdateRepoPermissionsInOrgReqPermission {
	return OptTeamsAddOrUpdateRepoPermissionsInOrgReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateRepoPermissionsInOrgReqPermission is optional TeamsAddOrUpdateRepoPermissionsInOrgReqPermission.
type OptTeamsAddOrUpdateRepoPermissionsInOrgReqPermission struct {
	Value TeamsAddOrUpdateRepoPermissionsInOrgReqPermission
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateRepoPermissionsInOrgReqPermission was set.
func (o OptTeamsAddOrUpdateRepoPermissionsInOrgReqPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsAddOrUpdateRepoPermissionsInOrgReqPermission) Reset() {
	var v TeamsAddOrUpdateRepoPermissionsInOrgReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateRepoPermissionsInOrgReqPermission) SetTo(v TeamsAddOrUpdateRepoPermissionsInOrgReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateRepoPermissionsInOrgReqPermission) Get() (v TeamsAddOrUpdateRepoPermissionsInOrgReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsAddOrUpdateRepoPermissionsLegacyReqPermission returns new OptTeamsAddOrUpdateRepoPermissionsLegacyReqPermission with value set to v.
func NewOptTeamsAddOrUpdateRepoPermissionsLegacyReqPermission(v TeamsAddOrUpdateRepoPermissionsLegacyReqPermission) OptTeamsAddOrUpdateRepoPermissionsLegacyReqPermission {
	return OptTeamsAddOrUpdateRepoPermissionsLegacyReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateRepoPermissionsLegacyReqPermission is optional TeamsAddOrUpdateRepoPermissionsLegacyReqPermission.
type OptTeamsAddOrUpdateRepoPermissionsLegacyReqPermission struct {
	Value TeamsAddOrUpdateRepoPermissionsLegacyReqPermission
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateRepoPermissionsLegacyReqPermission was set.
func (o OptTeamsAddOrUpdateRepoPermissionsLegacyReqPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsAddOrUpdateRepoPermissionsLegacyReqPermission) Reset() {
	var v TeamsAddOrUpdateRepoPermissionsLegacyReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateRepoPermissionsLegacyReqPermission) SetTo(v TeamsAddOrUpdateRepoPermissionsLegacyReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateRepoPermissionsLegacyReqPermission) Get() (v TeamsAddOrUpdateRepoPermissionsLegacyReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsCreateReqPermission returns new OptTeamsCreateReqPermission with value set to v.
func NewOptTeamsCreateReqPermission(v TeamsCreateReqPermission) OptTeamsCreateReqPermission {
	return OptTeamsCreateReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsCreateReqPermission is optional TeamsCreateReqPermission.
type OptTeamsCreateReqPermission struct {
	Value TeamsCreateReqPermission
	Set   bool
}

// IsSet returns true if OptTeamsCreateReqPermission was set.
func (o OptTeamsCreateReqPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsCreateReqPermission) Reset() {
	var v TeamsCreateReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsCreateReqPermission) SetTo(v TeamsCreateReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsCreateReqPermission) Get() (v TeamsCreateReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsCreateReqPrivacy returns new OptTeamsCreateReqPrivacy with value set to v.
func NewOptTeamsCreateReqPrivacy(v TeamsCreateReqPrivacy) OptTeamsCreateReqPrivacy {
	return OptTeamsCreateReqPrivacy{
		Value: v,
		Set:   true,
	}
}

// OptTeamsCreateReqPrivacy is optional TeamsCreateReqPrivacy.
type OptTeamsCreateReqPrivacy struct {
	Value TeamsCreateReqPrivacy
	Set   bool
}

// IsSet returns true if OptTeamsCreateReqPrivacy was set.
func (o OptTeamsCreateReqPrivacy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsCreateReqPrivacy) Reset() {
	var v TeamsCreateReqPrivacy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsCreateReqPrivacy) SetTo(v TeamsCreateReqPrivacy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsCreateReqPrivacy) Get() (v TeamsCreateReqPrivacy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsUpdateInOrgReqPermission returns new OptTeamsUpdateInOrgReqPermission with value set to v.
func NewOptTeamsUpdateInOrgReqPermission(v TeamsUpdateInOrgReqPermission) OptTeamsUpdateInOrgReqPermission {
	return OptTeamsUpdateInOrgReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsUpdateInOrgReqPermission is optional TeamsUpdateInOrgReqPermission.
type OptTeamsUpdateInOrgReqPermission struct {
	Value TeamsUpdateInOrgReqPermission
	Set   bool
}

// IsSet returns true if OptTeamsUpdateInOrgReqPermission was set.
func (o OptTeamsUpdateInOrgReqPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsUpdateInOrgReqPermission) Reset() {
	var v TeamsUpdateInOrgReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsUpdateInOrgReqPermission) SetTo(v TeamsUpdateInOrgReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsUpdateInOrgReqPermission) Get() (v TeamsUpdateInOrgReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsUpdateInOrgReqPrivacy returns new OptTeamsUpdateInOrgReqPrivacy with value set to v.
func NewOptTeamsUpdateInOrgReqPrivacy(v TeamsUpdateInOrgReqPrivacy) OptTeamsUpdateInOrgReqPrivacy {
	return OptTeamsUpdateInOrgReqPrivacy{
		Value: v,
		Set:   true,
	}
}

// OptTeamsUpdateInOrgReqPrivacy is optional TeamsUpdateInOrgReqPrivacy.
type OptTeamsUpdateInOrgReqPrivacy struct {
	Value TeamsUpdateInOrgReqPrivacy
	Set   bool
}

// IsSet returns true if OptTeamsUpdateInOrgReqPrivacy was set.
func (o OptTeamsUpdateInOrgReqPrivacy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsUpdateInOrgReqPrivacy) Reset() {
	var v TeamsUpdateInOrgReqPrivacy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsUpdateInOrgReqPrivacy) SetTo(v TeamsUpdateInOrgReqPrivacy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsUpdateInOrgReqPrivacy) Get() (v TeamsUpdateInOrgReqPrivacy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsUpdateLegacyReqPermission returns new OptTeamsUpdateLegacyReqPermission with value set to v.
func NewOptTeamsUpdateLegacyReqPermission(v TeamsUpdateLegacyReqPermission) OptTeamsUpdateLegacyReqPermission {
	return OptTeamsUpdateLegacyReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsUpdateLegacyReqPermission is optional TeamsUpdateLegacyReqPermission.
type OptTeamsUpdateLegacyReqPermission struct {
	Value TeamsUpdateLegacyReqPermission
	Set   bool
}

// IsSet returns true if OptTeamsUpdateLegacyReqPermission was set.
func (o OptTeamsUpdateLegacyReqPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsUpdateLegacyReqPermission) Reset() {
	var v TeamsUpdateLegacyReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsUpdateLegacyReqPermission) SetTo(v TeamsUpdateLegacyReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsUpdateLegacyReqPermission) Get() (v TeamsUpdateLegacyReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsUpdateLegacyReqPrivacy returns new OptTeamsUpdateLegacyReqPrivacy with value set to v.
func NewOptTeamsUpdateLegacyReqPrivacy(v TeamsUpdateLegacyReqPrivacy) OptTeamsUpdateLegacyReqPrivacy {
	return OptTeamsUpdateLegacyReqPrivacy{
		Value: v,
		Set:   true,
	}
}

// OptTeamsUpdateLegacyReqPrivacy is optional TeamsUpdateLegacyReqPrivacy.
type OptTeamsUpdateLegacyReqPrivacy struct {
	Value TeamsUpdateLegacyReqPrivacy
	Set   bool
}

// IsSet returns true if OptTeamsUpdateLegacyReqPrivacy was set.
func (o OptTeamsUpdateLegacyReqPrivacy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsUpdateLegacyReqPrivacy) Reset() {
	var v TeamsUpdateLegacyReqPrivacy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsUpdateLegacyReqPrivacy) SetTo(v TeamsUpdateLegacyReqPrivacy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsUpdateLegacyReqPrivacy) Get() (v TeamsUpdateLegacyReqPrivacy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTime returns new OptTime with value set to v.
func NewOptTime(v time.Time) OptTime {
	return OptTime{
		Value: v,
		Set:   true,
	}
}

// OptTime is optional time.Time.
type OptTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptTime was set.
func (o OptTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTopicSearchResultItemAliasesItemTopicRelation returns new OptTopicSearchResultItemAliasesItemTopicRelation with value set to v.
func NewOptTopicSearchResultItemAliasesItemTopicRelation(v TopicSearchResultItemAliasesItemTopicRelation) OptTopicSearchResultItemAliasesItemTopicRelation {
	return OptTopicSearchResultItemAliasesItemTopicRelation{
		Value: v,
		Set:   true,
	}
}

// OptTopicSearchResultItemAliasesItemTopicRelation is optional TopicSearchResultItemAliasesItemTopicRelation.
type OptTopicSearchResultItemAliasesItemTopicRelation struct {
	Value TopicSearchResultItemAliasesItemTopicRelation
	Set   bool
}

// IsSet returns true if OptTopicSearchResultItemAliasesItemTopicRelation was set.
func (o OptTopicSearchResultItemAliasesItemTopicRelation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTopicSearchResultItemAliasesItemTopicRelation) Reset() {
	var v TopicSearchResultItemAliasesItemTopicRelation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTopicSearchResultItemAliasesItemTopicRelation) SetTo(v TopicSearchResultItemAliasesItemTopicRelation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTopicSearchResultItemAliasesItemTopicRelation) Get() (v TopicSearchResultItemAliasesItemTopicRelation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTopicSearchResultItemRelatedItemTopicRelation returns new OptTopicSearchResultItemRelatedItemTopicRelation with value set to v.
func NewOptTopicSearchResultItemRelatedItemTopicRelation(v TopicSearchResultItemRelatedItemTopicRelation) OptTopicSearchResultItemRelatedItemTopicRelation {
	return OptTopicSearchResultItemRelatedItemTopicRelation{
		Value: v,
		Set:   true,
	}
}

// OptTopicSearchResultItemRelatedItemTopicRelation is optional TopicSearchResultItemRelatedItemTopicRelation.
type OptTopicSearchResultItemRelatedItemTopicRelation struct {
	Value TopicSearchResultItemRelatedItemTopicRelation
	Set   bool
}

// IsSet returns true if OptTopicSearchResultItemRelatedItemTopicRelation was set.
func (o OptTopicSearchResultItemRelatedItemTopicRelation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTopicSearchResultItemRelatedItemTopicRelation) Reset() {
	var v TopicSearchResultItemRelatedItemTopicRelation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTopicSearchResultItemRelatedItemTopicRelation) SetTo(v TopicSearchResultItemRelatedItemTopicRelation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTopicSearchResultItemRelatedItemTopicRelation) Get() (v TopicSearchResultItemRelatedItemTopicRelation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptURL returns new OptURL with value set to v.
func NewOptURL(v url.URL) OptURL {
	return OptURL{
		Value: v,
		Set:   true,
	}
}

// OptURL is optional url.URL.
type OptURL struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURL was set.
func (o OptURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURL) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURL) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURL) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVerification returns new OptVerification with value set to v.
func NewOptVerification(v Verification) OptVerification {
	return OptVerification{
		Value: v,
		Set:   true,
	}
}

// OptVerification is optional Verification.
type OptVerification struct {
	Value Verification
	Set   bool
}

// IsSet returns true if OptVerification was set.
func (o OptVerification) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVerification) Reset() {
	var v Verification
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVerification) SetTo(v Verification) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVerification) Get() (v Verification, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptWaitTimer returns new OptWaitTimer with value set to v.
func NewOptWaitTimer(v WaitTimer) OptWaitTimer {
	return OptWaitTimer{
		Value: v,
		Set:   true,
	}
}

// OptWaitTimer is optional WaitTimer.
type OptWaitTimer struct {
	Value WaitTimer
	Set   bool
}

// IsSet returns true if OptWaitTimer was set.
func (o OptWaitTimer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWaitTimer) Reset() {
	var v WaitTimer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWaitTimer) SetTo(v WaitTimer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWaitTimer) Get() (v WaitTimer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptWebhookConfigContentType returns new OptWebhookConfigContentType with value set to v.
func NewOptWebhookConfigContentType(v WebhookConfigContentType) OptWebhookConfigContentType {
	return OptWebhookConfigContentType{
		Value: v,
		Set:   true,
	}
}

// OptWebhookConfigContentType is optional WebhookConfigContentType.
type OptWebhookConfigContentType struct {
	Value WebhookConfigContentType
	Set   bool
}

// IsSet returns true if OptWebhookConfigContentType was set.
func (o OptWebhookConfigContentType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWebhookConfigContentType) Reset() {
	var v WebhookConfigContentType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWebhookConfigContentType) SetTo(v WebhookConfigContentType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWebhookConfigContentType) Get() (v WebhookConfigContentType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptWebhookConfigSecret returns new OptWebhookConfigSecret with value set to v.
func NewOptWebhookConfigSecret(v WebhookConfigSecret) OptWebhookConfigSecret {
	return OptWebhookConfigSecret{
		Value: v,
		Set:   true,
	}
}

// OptWebhookConfigSecret is optional WebhookConfigSecret.
type OptWebhookConfigSecret struct {
	Value WebhookConfigSecret
	Set   bool
}

// IsSet returns true if OptWebhookConfigSecret was set.
func (o OptWebhookConfigSecret) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWebhookConfigSecret) Reset() {
	var v WebhookConfigSecret
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWebhookConfigSecret) SetTo(v WebhookConfigSecret) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWebhookConfigSecret) Get() (v WebhookConfigSecret, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptWebhookConfigURL returns new OptWebhookConfigURL with value set to v.
func NewOptWebhookConfigURL(v WebhookConfigURL) OptWebhookConfigURL {
	return OptWebhookConfigURL{
		Value: v,
		Set:   true,
	}
}

// OptWebhookConfigURL is optional WebhookConfigURL.
type OptWebhookConfigURL struct {
	Value WebhookConfigURL
	Set   bool
}

// IsSet returns true if OptWebhookConfigURL was set.
func (o OptWebhookConfigURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWebhookConfigURL) Reset() {
	var v WebhookConfigURL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWebhookConfigURL) SetTo(v WebhookConfigURL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWebhookConfigURL) Get() (v WebhookConfigURL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptWorkflowRunUsageBillableMACOS returns new OptWorkflowRunUsageBillableMACOS with value set to v.
func NewOptWorkflowRunUsageBillableMACOS(v WorkflowRunUsageBillableMACOS) OptWorkflowRunUsageBillableMACOS {
	return OptWorkflowRunUsageBillableMACOS{
		Value: v,
		Set:   true,
	}
}

// OptWorkflowRunUsageBillableMACOS is optional WorkflowRunUsageBillableMACOS.
type OptWorkflowRunUsageBillableMACOS struct {
	Value WorkflowRunUsageBillableMACOS
	Set   bool
}

// IsSet returns true if OptWorkflowRunUsageBillableMACOS was set.
func (o OptWorkflowRunUsageBillableMACOS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWorkflowRunUsageBillableMACOS) Reset() {
	var v WorkflowRunUsageBillableMACOS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWorkflowRunUsageBillableMACOS) SetTo(v WorkflowRunUsageBillableMACOS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWorkflowRunUsageBillableMACOS) Get() (v WorkflowRunUsageBillableMACOS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptWorkflowRunUsageBillableUBUNTU returns new OptWorkflowRunUsageBillableUBUNTU with value set to v.
func NewOptWorkflowRunUsageBillableUBUNTU(v WorkflowRunUsageBillableUBUNTU) OptWorkflowRunUsageBillableUBUNTU {
	return OptWorkflowRunUsageBillableUBUNTU{
		Value: v,
		Set:   true,
	}
}

// OptWorkflowRunUsageBillableUBUNTU is optional WorkflowRunUsageBillableUBUNTU.
type OptWorkflowRunUsageBillableUBUNTU struct {
	Value WorkflowRunUsageBillableUBUNTU
	Set   bool
}

// IsSet returns true if OptWorkflowRunUsageBillableUBUNTU was set.
func (o OptWorkflowRunUsageBillableUBUNTU) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWorkflowRunUsageBillableUBUNTU) Reset() {
	var v WorkflowRunUsageBillableUBUNTU
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWorkflowRunUsageBillableUBUNTU) SetTo(v WorkflowRunUsageBillableUBUNTU) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWorkflowRunUsageBillableUBUNTU) Get() (v WorkflowRunUsageBillableUBUNTU, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptWorkflowRunUsageBillableWINDOWS returns new OptWorkflowRunUsageBillableWINDOWS with value set to v.
func NewOptWorkflowRunUsageBillableWINDOWS(v WorkflowRunUsageBillableWINDOWS) OptWorkflowRunUsageBillableWINDOWS {
	return OptWorkflowRunUsageBillableWINDOWS{
		Value: v,
		Set:   true,
	}
}

// OptWorkflowRunUsageBillableWINDOWS is optional WorkflowRunUsageBillableWINDOWS.
type OptWorkflowRunUsageBillableWINDOWS struct {
	Value WorkflowRunUsageBillableWINDOWS
	Set   bool
}

// IsSet returns true if OptWorkflowRunUsageBillableWINDOWS was set.
func (o OptWorkflowRunUsageBillableWINDOWS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWorkflowRunUsageBillableWINDOWS) Reset() {
	var v WorkflowRunUsageBillableWINDOWS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWorkflowRunUsageBillableWINDOWS) SetTo(v WorkflowRunUsageBillableWINDOWS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWorkflowRunUsageBillableWINDOWS) Get() (v WorkflowRunUsageBillableWINDOWS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Ref: #/components/schemas/org-hook
type OrgHook struct {
	Active        bool          `json:"active"`
	Config        OrgHookConfig `json:"config"`
	CreatedAt     time.Time     `json:"created_at"`
	DeliveriesURL OptURL        `json:"deliveries_url"`
	Events        []string      `json:"events"`
	ID            int           `json:"id"`
	Name          string        `json:"name"`
	PingURL       url.URL       `json:"ping_url"`
	Type          string        `json:"type"`
	UpdatedAt     time.Time     `json:"updated_at"`
	URL           url.URL       `json:"url"`
}

func (*OrgHook) orgsGetWebhookRes() {}

type OrgHookConfig struct {
	ContentType OptString `json:"content_type"`
	InsecureSsl OptString `json:"insecure_ssl"`
	Secret      OptString `json:"secret"`
	URL         OptString `json:"url"`
}

// Ref: #/components/schemas/org-membership
type OrgMembership struct {
	Organization    OrganizationSimple          `json:"organization"`
	OrganizationURL url.URL                     `json:"organization_url"`
	Permissions     OptOrgMembershipPermissions `json:"permissions"`
	Role            OrgMembershipRole           `json:"role"`
	State           OrgMembershipState          `json:"state"`
	URL             url.URL                     `json:"url"`
	User            NilNullableSimpleUser       `json:"user"`
}

func (*OrgMembership) orgsGetMembershipForAuthenticatedUserRes() {}
func (*OrgMembership) orgsGetMembershipForUserRes()              {}

type OrgMembershipPermissions struct {
	CanCreateRepository bool `json:"can_create_repository"`
}

type OrgMembershipRole string

const (
	OrgMembershipRoleAdmin          OrgMembershipRole = "admin"
	OrgMembershipRoleMember         OrgMembershipRole = "member"
	OrgMembershipRoleBillingManager OrgMembershipRole = "billing_manager"
)

type OrgMembershipState string

const (
	OrgMembershipStateActive  OrgMembershipState = "active"
	OrgMembershipStatePending OrgMembershipState = "pending"
)

// Ref: #/components/schemas/organization-actions-secret
type OrganizationActionsSecret struct {
	CreatedAt               time.Time                           `json:"created_at"`
	Name                    string                              `json:"name"`
	SelectedRepositoriesURL OptURL                              `json:"selected_repositories_url"`
	UpdatedAt               time.Time                           `json:"updated_at"`
	Visibility              OrganizationActionsSecretVisibility `json:"visibility"`
}

type OrganizationActionsSecretVisibility string

const (
	OrganizationActionsSecretVisibilityAll      OrganizationActionsSecretVisibility = "all"
	OrganizationActionsSecretVisibilityPrivate  OrganizationActionsSecretVisibility = "private"
	OrganizationActionsSecretVisibilitySelected OrganizationActionsSecretVisibility = "selected"
)

// Ref: #/components/schemas/organization-full
type OrganizationFull struct {
	AvatarURL                            string                  `json:"avatar_url"`
	BillingEmail                         OptNilString            `json:"billing_email"`
	Blog                                 OptURL                  `json:"blog"`
	Collaborators                        OptNilInt               `json:"collaborators"`
	Company                              OptString               `json:"company"`
	CreatedAt                            time.Time               `json:"created_at"`
	DefaultRepositoryPermission          OptNilString            `json:"default_repository_permission"`
	Description                          NilString               `json:"description"`
	DiskUsage                            OptNilInt               `json:"disk_usage"`
	Email                                OptString               `json:"email"`
	EventsURL                            url.URL                 `json:"events_url"`
	Followers                            int                     `json:"followers"`
	Following                            int                     `json:"following"`
	HasOrganizationProjects              bool                    `json:"has_organization_projects"`
	HasRepositoryProjects                bool                    `json:"has_repository_projects"`
	HooksURL                             string                  `json:"hooks_url"`
	HTMLURL                              url.URL                 `json:"html_url"`
	ID                                   int                     `json:"id"`
	IsVerified                           OptBool                 `json:"is_verified"`
	IssuesURL                            string                  `json:"issues_url"`
	Location                             OptString               `json:"location"`
	Login                                string                  `json:"login"`
	MembersAllowedRepositoryCreationType OptString               `json:"members_allowed_repository_creation_type"`
	MembersCanCreateInternalRepositories OptBool                 `json:"members_can_create_internal_repositories"`
	MembersCanCreatePages                OptBool                 `json:"members_can_create_pages"`
	MembersCanCreatePrivatePages         OptBool                 `json:"members_can_create_private_pages"`
	MembersCanCreatePrivateRepositories  OptBool                 `json:"members_can_create_private_repositories"`
	MembersCanCreatePublicPages          OptBool                 `json:"members_can_create_public_pages"`
	MembersCanCreatePublicRepositories   OptBool                 `json:"members_can_create_public_repositories"`
	MembersCanCreateRepositories         OptNilBool              `json:"members_can_create_repositories"`
	MembersURL                           string                  `json:"members_url"`
	Name                                 OptString               `json:"name"`
	NodeID                               string                  `json:"node_id"`
	OwnedPrivateRepos                    OptInt                  `json:"owned_private_repos"`
	Plan                                 OptOrganizationFullPlan `json:"plan"`
	PrivateGists                         OptNilInt               `json:"private_gists"`
	PublicGists                          int                     `json:"public_gists"`
	PublicMembersURL                     string                  `json:"public_members_url"`
	PublicRepos                          int                     `json:"public_repos"`
	ReposURL                             url.URL                 `json:"repos_url"`
	TotalPrivateRepos                    OptInt                  `json:"total_private_repos"`
	TwitterUsername                      OptNilString            `json:"twitter_username"`
	TwoFactorRequirementEnabled          OptNilBool              `json:"two_factor_requirement_enabled"`
	Type                                 string                  `json:"type"`
	UpdatedAt                            time.Time               `json:"updated_at"`
	URL                                  url.URL                 `json:"url"`
}

func (*OrganizationFull) orgsGetRes() {}

type OrganizationFullPlan struct {
	FilledSeats  OptInt `json:"filled_seats"`
	Name         string `json:"name"`
	PrivateRepos int    `json:"private_repos"`
	Seats        OptInt `json:"seats"`
	Space        int    `json:"space"`
}

// Ref: #/components/schemas/organization-invitation
type OrganizationInvitation struct {
	CreatedAt          string       `json:"created_at"`
	Email              NilString    `json:"email"`
	FailedAt           OptNilString `json:"failed_at"`
	FailedReason       OptNilString `json:"failed_reason"`
	ID                 int          `json:"id"`
	InvitationTeamsURL string       `json:"invitation_teams_url"`
	Inviter            SimpleUser   `json:"inviter"`
	Login              NilString    `json:"login"`
	NodeID             string       `json:"node_id"`
	Role               string       `json:"role"`
	TeamCount          int          `json:"team_count"`
}

// Ref: #/components/schemas/organization-secret-scanning-alert
type OrganizationSecretScanningAlert struct {
	CreatedAt    OptAlertCreatedAt                   `json:"created_at"`
	HTMLURL      OptAlertHTMLURL                     `json:"html_url"`
	LocationsURL OptURL                              `json:"locations_url"`
	Number       OptAlertNumber                      `json:"number"`
	Repository   OptMinimalRepository                `json:"repository"`
	Resolution   OptNilSecretScanningAlertResolution `json:"resolution"`
	ResolvedAt   OptNilTime                          `json:"resolved_at"`
	ResolvedBy   OptNilNullableSimpleUser            `json:"resolved_by"`
	Secret       OptString                           `json:"secret"`
	SecretType   OptString                           `json:"secret_type"`
	State        OptSecretScanningAlertState         `json:"state"`
	URL          OptAlertURL                         `json:"url"`
}

// Ref: #/components/schemas/organization-simple
type OrganizationSimple struct {
	AvatarURL        string    `json:"avatar_url"`
	Description      NilString `json:"description"`
	EventsURL        url.URL   `json:"events_url"`
	HooksURL         string    `json:"hooks_url"`
	ID               int       `json:"id"`
	IssuesURL        string    `json:"issues_url"`
	Login            string    `json:"login"`
	MembersURL       string    `json:"members_url"`
	NodeID           string    `json:"node_id"`
	PublicMembersURL string    `json:"public_members_url"`
	ReposURL         url.URL   `json:"repos_url"`
	URL              url.URL   `json:"url"`
}

// OrgsBlockUserNoContent is response for OrgsBlockUser operation.
type OrgsBlockUserNoContent struct{}

// OrgsCancelInvitationNoContent is response for OrgsCancelInvitation operation.
type OrgsCancelInvitationNoContent struct{}

// OrgsCheckBlockedUserNoContent is response for OrgsCheckBlockedUser operation.
type OrgsCheckBlockedUserNoContent struct{}

func (*OrgsCheckBlockedUserNoContent) orgsCheckBlockedUserRes() {}

// OrgsCheckMembershipForUserFound is response for OrgsCheckMembershipForUser operation.
type OrgsCheckMembershipForUserFound struct{}

func (*OrgsCheckMembershipForUserFound) orgsCheckMembershipForUserRes() {}

// OrgsCheckMembershipForUserNoContent is response for OrgsCheckMembershipForUser operation.
type OrgsCheckMembershipForUserNoContent struct{}

func (*OrgsCheckMembershipForUserNoContent) orgsCheckMembershipForUserRes() {}

// OrgsCheckMembershipForUserNotFound is response for OrgsCheckMembershipForUser operation.
type OrgsCheckMembershipForUserNotFound struct{}

func (*OrgsCheckMembershipForUserNotFound) orgsCheckMembershipForUserRes() {}

// OrgsCheckPublicMembershipForUserNoContent is response for OrgsCheckPublicMembershipForUser operation.
type OrgsCheckPublicMembershipForUserNoContent struct{}

func (*OrgsCheckPublicMembershipForUserNoContent) orgsCheckPublicMembershipForUserRes() {}

// OrgsCheckPublicMembershipForUserNotFound is response for OrgsCheckPublicMembershipForUser operation.
type OrgsCheckPublicMembershipForUserNotFound struct{}

func (*OrgsCheckPublicMembershipForUserNotFound) orgsCheckPublicMembershipForUserRes() {}

type OrgsConvertMemberToOutsideCollaboratorAccepted struct{}

func (*OrgsConvertMemberToOutsideCollaboratorAccepted) orgsConvertMemberToOutsideCollaboratorRes() {}

// OrgsConvertMemberToOutsideCollaboratorForbidden is response for OrgsConvertMemberToOutsideCollaborator operation.
type OrgsConvertMemberToOutsideCollaboratorForbidden struct{}

func (*OrgsConvertMemberToOutsideCollaboratorForbidden) orgsConvertMemberToOutsideCollaboratorRes() {}

// OrgsConvertMemberToOutsideCollaboratorNoContent is response for OrgsConvertMemberToOutsideCollaborator operation.
type OrgsConvertMemberToOutsideCollaboratorNoContent struct{}

func (*OrgsConvertMemberToOutsideCollaboratorNoContent) orgsConvertMemberToOutsideCollaboratorRes() {}

type OrgsCreateInvitationReq struct {
	Email     OptString                      `json:"email"`
	InviteeID OptInt                         `json:"invitee_id"`
	Role      OptOrgsCreateInvitationReqRole `json:"role"`
	TeamIds   []int                          `json:"team_ids"`
}

type OrgsCreateInvitationReqRole string

const (
	OrgsCreateInvitationReqRoleAdmin          OrgsCreateInvitationReqRole = "admin"
	OrgsCreateInvitationReqRoleDirectMember   OrgsCreateInvitationReqRole = "direct_member"
	OrgsCreateInvitationReqRoleBillingManager OrgsCreateInvitationReqRole = "billing_manager"
)

type OrgsCreateWebhookReq struct {
	Active OptBool                    `json:"active"`
	Config OrgsCreateWebhookReqConfig `json:"config"`
	Events []string                   `json:"events"`
	Name   string                     `json:"name"`
}

type OrgsCreateWebhookReqConfig struct {
	ContentType OptWebhookConfigContentType `json:"content_type"`
	InsecureSsl *WebhookConfigInsecureSsl   `json:"insecure_ssl"`
	Password    OptString                   `json:"password"`
	Secret      OptWebhookConfigSecret      `json:"secret"`
	URL         WebhookConfigURL            `json:"url"`
	Username    OptString                   `json:"username"`
}

// OrgsDeleteWebhookNoContent is response for OrgsDeleteWebhook operation.
type OrgsDeleteWebhookNoContent struct{}

func (*OrgsDeleteWebhookNoContent) orgsDeleteWebhookRes() {}

type OrgsGetAuditLogInclude string

const (
	OrgsGetAuditLogIncludeWeb OrgsGetAuditLogInclude = "web"
	OrgsGetAuditLogIncludeGit OrgsGetAuditLogInclude = "git"
	OrgsGetAuditLogIncludeAll OrgsGetAuditLogInclude = "all"
)

type OrgsGetAuditLogOrder string

const (
	OrgsGetAuditLogOrderDesc OrgsGetAuditLogOrder = "desc"
	OrgsGetAuditLogOrderAsc  OrgsGetAuditLogOrder = "asc"
)

type OrgsGetMembershipForAuthenticatedUserApplicationJSONForbidden BasicError

func (*OrgsGetMembershipForAuthenticatedUserApplicationJSONForbidden) orgsGetMembershipForAuthenticatedUserRes() {
}

type OrgsGetMembershipForAuthenticatedUserApplicationJSONNotFound BasicError

func (*OrgsGetMembershipForAuthenticatedUserApplicationJSONNotFound) orgsGetMembershipForAuthenticatedUserRes() {
}

type OrgsGetMembershipForUserApplicationJSONForbidden BasicError

func (*OrgsGetMembershipForUserApplicationJSONForbidden) orgsGetMembershipForUserRes() {}

type OrgsGetMembershipForUserApplicationJSONNotFound BasicError

func (*OrgsGetMembershipForUserApplicationJSONNotFound) orgsGetMembershipForUserRes() {}

type OrgsListBlockedUsersOKApplicationJSON []SimpleUser

func (*OrgsListBlockedUsersOKApplicationJSON) orgsListBlockedUsersRes() {}

type OrgsListBlockedUsersUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*OrgsListBlockedUsersUnsupportedMediaType) orgsListBlockedUsersRes() {}

type OrgsListFailedInvitationsOKApplicationJSON []OrganizationInvitation

func (*OrgsListFailedInvitationsOKApplicationJSON) orgsListFailedInvitationsRes() {}

type OrgsListForAuthenticatedUserApplicationJSONForbidden BasicError

func (*OrgsListForAuthenticatedUserApplicationJSONForbidden) orgsListForAuthenticatedUserRes() {}

type OrgsListForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*OrgsListForAuthenticatedUserApplicationJSONUnauthorized) orgsListForAuthenticatedUserRes() {}

// OrgsListForAuthenticatedUserNotModified is response for OrgsListForAuthenticatedUser operation.
type OrgsListForAuthenticatedUserNotModified struct{}

func (*OrgsListForAuthenticatedUserNotModified) orgsListForAuthenticatedUserRes() {}

type OrgsListForAuthenticatedUserOKApplicationJSON []OrganizationSimple

func (*OrgsListForAuthenticatedUserOKApplicationJSON) orgsListForAuthenticatedUserRes() {}

type OrgsListInvitationTeamsOKApplicationJSON []Team

func (*OrgsListInvitationTeamsOKApplicationJSON) orgsListInvitationTeamsRes() {}

type OrgsListMembersFilter string

const (
	OrgsListMembersFilter2FADisabled OrgsListMembersFilter = "2fa_disabled"
	OrgsListMembersFilterAll         OrgsListMembersFilter = "all"
)

// OrgsListMembersFound is response for OrgsListMembers operation.
type OrgsListMembersFound struct{}

type OrgsListMembersRole string

const (
	OrgsListMembersRoleAll    OrgsListMembersRole = "all"
	OrgsListMembersRoleAdmin  OrgsListMembersRole = "admin"
	OrgsListMembersRoleMember OrgsListMembersRole = "member"
)

// OrgsListMembershipsForAuthenticatedUserNotModified is response for OrgsListMembershipsForAuthenticatedUser operation.
type OrgsListMembershipsForAuthenticatedUserNotModified struct{}

type OrgsListMembershipsForAuthenticatedUserState string

const (
	OrgsListMembershipsForAuthenticatedUserStateActive  OrgsListMembershipsForAuthenticatedUserState = "active"
	OrgsListMembershipsForAuthenticatedUserStatePending OrgsListMembershipsForAuthenticatedUserState = "pending"
)

// OrgsListNotModified is response for OrgsList operation.
type OrgsListNotModified struct{}

func (*OrgsListNotModified) orgsListRes() {}

type OrgsListOKApplicationJSON []OrganizationSimple

func (*OrgsListOKApplicationJSON) orgsListRes() {}

type OrgsListOutsideCollaboratorsFilter string

const (
	OrgsListOutsideCollaboratorsFilter2FADisabled OrgsListOutsideCollaboratorsFilter = "2fa_disabled"
	OrgsListOutsideCollaboratorsFilterAll         OrgsListOutsideCollaboratorsFilter = "all"
)

type OrgsListPendingInvitationsOKApplicationJSON []OrganizationInvitation

func (*OrgsListPendingInvitationsOKApplicationJSON) orgsListPendingInvitationsRes() {}

type OrgsListWebhooksOKApplicationJSON []OrgHook

func (*OrgsListWebhooksOKApplicationJSON) orgsListWebhooksRes() {}

// OrgsPingWebhookNoContent is response for OrgsPingWebhook operation.
type OrgsPingWebhookNoContent struct{}

func (*OrgsPingWebhookNoContent) orgsPingWebhookRes() {}

type OrgsRedeliverWebhookDeliveryAccepted struct{}

// OrgsRemoveMemberNoContent is response for OrgsRemoveMember operation.
type OrgsRemoveMemberNoContent struct{}

func (*OrgsRemoveMemberNoContent) orgsRemoveMemberRes() {}

type OrgsRemoveMembershipForUserApplicationJSONForbidden BasicError

func (*OrgsRemoveMembershipForUserApplicationJSONForbidden) orgsRemoveMembershipForUserRes() {}

type OrgsRemoveMembershipForUserApplicationJSONNotFound BasicError

func (*OrgsRemoveMembershipForUserApplicationJSONNotFound) orgsRemoveMembershipForUserRes() {}

// OrgsRemoveMembershipForUserNoContent is response for OrgsRemoveMembershipForUser operation.
type OrgsRemoveMembershipForUserNoContent struct{}

func (*OrgsRemoveMembershipForUserNoContent) orgsRemoveMembershipForUserRes() {}

// OrgsRemoveOutsideCollaboratorNoContent is response for OrgsRemoveOutsideCollaborator operation.
type OrgsRemoveOutsideCollaboratorNoContent struct{}

func (*OrgsRemoveOutsideCollaboratorNoContent) orgsRemoveOutsideCollaboratorRes() {}

type OrgsRemoveOutsideCollaboratorUnprocessableEntity struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*OrgsRemoveOutsideCollaboratorUnprocessableEntity) orgsRemoveOutsideCollaboratorRes() {}

// OrgsRemovePublicMembershipForAuthenticatedUserNoContent is response for OrgsRemovePublicMembershipForAuthenticatedUser operation.
type OrgsRemovePublicMembershipForAuthenticatedUserNoContent struct{}

// OrgsRemoveSamlSSOAuthorizationNoContent is response for OrgsRemoveSamlSSOAuthorization operation.
type OrgsRemoveSamlSSOAuthorizationNoContent struct{}

func (*OrgsRemoveSamlSSOAuthorizationNoContent) orgsRemoveSamlSSOAuthorizationRes() {}

type OrgsSetMembershipForUserReq struct {
	Role OptOrgsSetMembershipForUserReqRole `json:"role"`
}

type OrgsSetMembershipForUserReqRole string

const (
	OrgsSetMembershipForUserReqRoleAdmin  OrgsSetMembershipForUserReqRole = "admin"
	OrgsSetMembershipForUserReqRoleMember OrgsSetMembershipForUserReqRole = "member"
)

// OrgsSetPublicMembershipForAuthenticatedUserNoContent is response for OrgsSetPublicMembershipForAuthenticatedUser operation.
type OrgsSetPublicMembershipForAuthenticatedUserNoContent struct{}

func (*OrgsSetPublicMembershipForAuthenticatedUserNoContent) orgsSetPublicMembershipForAuthenticatedUserRes() {
}

// OrgsUnblockUserNoContent is response for OrgsUnblockUser operation.
type OrgsUnblockUserNoContent struct{}

type OrgsUpdateMembershipForAuthenticatedUserReq struct {
	State OrgsUpdateMembershipForAuthenticatedUserReqState `json:"state"`
}

type OrgsUpdateMembershipForAuthenticatedUserReqState string

const (
	OrgsUpdateMembershipForAuthenticatedUserReqStateActive OrgsUpdateMembershipForAuthenticatedUserReqState = "active"
)

type OrgsUpdateReq struct {
	BillingEmail                         OptString                                            `json:"billing_email"`
	Blog                                 OptString                                            `json:"blog"`
	Company                              OptString                                            `json:"company"`
	DefaultRepositoryPermission          OptOrgsUpdateReqDefaultRepositoryPermission          `json:"default_repository_permission"`
	Description                          OptString                                            `json:"description"`
	Email                                OptString                                            `json:"email"`
	HasOrganizationProjects              OptBool                                              `json:"has_organization_projects"`
	HasRepositoryProjects                OptBool                                              `json:"has_repository_projects"`
	Location                             OptString                                            `json:"location"`
	MembersAllowedRepositoryCreationType OptOrgsUpdateReqMembersAllowedRepositoryCreationType `json:"members_allowed_repository_creation_type"`
	MembersCanCreateInternalRepositories OptBool                                              `json:"members_can_create_internal_repositories"`
	MembersCanCreatePages                OptBool                                              `json:"members_can_create_pages"`
	MembersCanCreatePrivatePages         OptBool                                              `json:"members_can_create_private_pages"`
	MembersCanCreatePrivateRepositories  OptBool                                              `json:"members_can_create_private_repositories"`
	MembersCanCreatePublicPages          OptBool                                              `json:"members_can_create_public_pages"`
	MembersCanCreatePublicRepositories   OptBool                                              `json:"members_can_create_public_repositories"`
	MembersCanCreateRepositories         OptBool                                              `json:"members_can_create_repositories"`
	Name                                 OptString                                            `json:"name"`
	TwitterUsername                      OptString                                            `json:"twitter_username"`
}

type OrgsUpdateReqDefaultRepositoryPermission string

const (
	OrgsUpdateReqDefaultRepositoryPermissionRead  OrgsUpdateReqDefaultRepositoryPermission = "read"
	OrgsUpdateReqDefaultRepositoryPermissionWrite OrgsUpdateReqDefaultRepositoryPermission = "write"
	OrgsUpdateReqDefaultRepositoryPermissionAdmin OrgsUpdateReqDefaultRepositoryPermission = "admin"
	OrgsUpdateReqDefaultRepositoryPermissionNone  OrgsUpdateReqDefaultRepositoryPermission = "none"
)

type OrgsUpdateReqMembersAllowedRepositoryCreationType string

const (
	OrgsUpdateReqMembersAllowedRepositoryCreationTypeAll     OrgsUpdateReqMembersAllowedRepositoryCreationType = "all"
	OrgsUpdateReqMembersAllowedRepositoryCreationTypePrivate OrgsUpdateReqMembersAllowedRepositoryCreationType = "private"
	OrgsUpdateReqMembersAllowedRepositoryCreationTypeNone    OrgsUpdateReqMembersAllowedRepositoryCreationType = "none"
)

type OrgsUpdateUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

type OrgsUpdateWebhookConfigForOrgReq struct {
	ContentType OptWebhookConfigContentType `json:"content_type"`
	InsecureSsl *WebhookConfigInsecureSsl   `json:"insecure_ssl"`
	Secret      OptWebhookConfigSecret      `json:"secret"`
	URL         OptWebhookConfigURL         `json:"url"`
}

type OrgsUpdateWebhookReq struct {
	Active OptBool                       `json:"active"`
	Config OptOrgsUpdateWebhookReqConfig `json:"config"`
	Events []string                      `json:"events"`
	Name   OptString                     `json:"name"`
}

type OrgsUpdateWebhookReqConfig struct {
	ContentType OptWebhookConfigContentType `json:"content_type"`
	InsecureSsl *WebhookConfigInsecureSsl   `json:"insecure_ssl"`
	Secret      OptWebhookConfigSecret      `json:"secret"`
	URL         WebhookConfigURL            `json:"url"`
}

// Ref: #/components/schemas/package
type Package struct {
	CreatedAt    time.Time                       `json:"created_at"`
	HTMLURL      string                          `json:"html_url"`
	ID           int                             `json:"id"`
	Name         string                          `json:"name"`
	Owner        OptNilNullableSimpleUser        `json:"owner"`
	PackageType  PackagePackageType              `json:"package_type"`
	Repository   OptNilNullableMinimalRepository `json:"repository"`
	UpdatedAt    time.Time                       `json:"updated_at"`
	URL          string                          `json:"url"`
	VersionCount int                             `json:"version_count"`
	Visibility   PackageVisibility               `json:"visibility"`
}

type PackagePackageType string

const (
	PackagePackageTypeNpm       PackagePackageType = "npm"
	PackagePackageTypeMaven     PackagePackageType = "maven"
	PackagePackageTypeRubygems  PackagePackageType = "rubygems"
	PackagePackageTypeDocker    PackagePackageType = "docker"
	PackagePackageTypeNuget     PackagePackageType = "nuget"
	PackagePackageTypeContainer PackagePackageType = "container"
)

// Ref: #/components/schemas/package-version
type PackageVersion struct {
	CreatedAt      time.Time                 `json:"created_at"`
	DeletedAt      OptTime                   `json:"deleted_at"`
	Description    OptString                 `json:"description"`
	HTMLURL        OptString                 `json:"html_url"`
	ID             int                       `json:"id"`
	License        OptString                 `json:"license"`
	Metadata       OptPackageVersionMetadata `json:"metadata"`
	Name           string                    `json:"name"`
	PackageHTMLURL string                    `json:"package_html_url"`
	UpdatedAt      time.Time                 `json:"updated_at"`
	URL            string                    `json:"url"`
}

type PackageVersionMetadata struct {
	Container   OptPackageVersionMetadataContainer `json:"container"`
	Docker      OptPackageVersionMetadataDocker    `json:"docker"`
	PackageType PackageVersionMetadataPackageType  `json:"package_type"`
}

type PackageVersionMetadataContainer struct {
	Tags []string `json:"tags"`
}

type PackageVersionMetadataDocker struct {
	Tag []string `json:"tag"`
}

type PackageVersionMetadataPackageType string

const (
	PackageVersionMetadataPackageTypeNpm       PackageVersionMetadataPackageType = "npm"
	PackageVersionMetadataPackageTypeMaven     PackageVersionMetadataPackageType = "maven"
	PackageVersionMetadataPackageTypeRubygems  PackageVersionMetadataPackageType = "rubygems"
	PackageVersionMetadataPackageTypeDocker    PackageVersionMetadataPackageType = "docker"
	PackageVersionMetadataPackageTypeNuget     PackageVersionMetadataPackageType = "nuget"
	PackageVersionMetadataPackageTypeContainer PackageVersionMetadataPackageType = "container"
)

type PackageVisibility string

const (
	PackageVisibilityPrivate PackageVisibility = "private"
	PackageVisibilityPublic  PackageVisibility = "public"
)

// Ref: #/components/schemas/packages-billing-usage
type PackagesBillingUsage struct {
	IncludedGigabytesBandwidth      int `json:"included_gigabytes_bandwidth"`
	TotalGigabytesBandwidthUsed     int `json:"total_gigabytes_bandwidth_used"`
	TotalPaidGigabytesBandwidthUsed int `json:"total_paid_gigabytes_bandwidth_used"`
}

type PackagesDeletePackageForAuthenticatedUserApplicationJSONForbidden BasicError

func (*PackagesDeletePackageForAuthenticatedUserApplicationJSONForbidden) packagesDeletePackageForAuthenticatedUserRes() {
}

type PackagesDeletePackageForAuthenticatedUserApplicationJSONNotFound BasicError

func (*PackagesDeletePackageForAuthenticatedUserApplicationJSONNotFound) packagesDeletePackageForAuthenticatedUserRes() {
}

type PackagesDeletePackageForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*PackagesDeletePackageForAuthenticatedUserApplicationJSONUnauthorized) packagesDeletePackageForAuthenticatedUserRes() {
}

// PackagesDeletePackageForAuthenticatedUserNoContent is response for PackagesDeletePackageForAuthenticatedUser operation.
type PackagesDeletePackageForAuthenticatedUserNoContent struct{}

func (*PackagesDeletePackageForAuthenticatedUserNoContent) packagesDeletePackageForAuthenticatedUserRes() {
}

type PackagesDeletePackageForAuthenticatedUserPackageType string

const (
	PackagesDeletePackageForAuthenticatedUserPackageTypeNpm       PackagesDeletePackageForAuthenticatedUserPackageType = "npm"
	PackagesDeletePackageForAuthenticatedUserPackageTypeMaven     PackagesDeletePackageForAuthenticatedUserPackageType = "maven"
	PackagesDeletePackageForAuthenticatedUserPackageTypeRubygems  PackagesDeletePackageForAuthenticatedUserPackageType = "rubygems"
	PackagesDeletePackageForAuthenticatedUserPackageTypeDocker    PackagesDeletePackageForAuthenticatedUserPackageType = "docker"
	PackagesDeletePackageForAuthenticatedUserPackageTypeNuget     PackagesDeletePackageForAuthenticatedUserPackageType = "nuget"
	PackagesDeletePackageForAuthenticatedUserPackageTypeContainer PackagesDeletePackageForAuthenticatedUserPackageType = "container"
)

type PackagesDeletePackageForOrgApplicationJSONForbidden BasicError

func (*PackagesDeletePackageForOrgApplicationJSONForbidden) packagesDeletePackageForOrgRes() {}

type PackagesDeletePackageForOrgApplicationJSONNotFound BasicError

func (*PackagesDeletePackageForOrgApplicationJSONNotFound) packagesDeletePackageForOrgRes() {}

type PackagesDeletePackageForOrgApplicationJSONUnauthorized BasicError

func (*PackagesDeletePackageForOrgApplicationJSONUnauthorized) packagesDeletePackageForOrgRes() {}

// PackagesDeletePackageForOrgNoContent is response for PackagesDeletePackageForOrg operation.
type PackagesDeletePackageForOrgNoContent struct{}

func (*PackagesDeletePackageForOrgNoContent) packagesDeletePackageForOrgRes() {}

type PackagesDeletePackageForOrgPackageType string

const (
	PackagesDeletePackageForOrgPackageTypeNpm       PackagesDeletePackageForOrgPackageType = "npm"
	PackagesDeletePackageForOrgPackageTypeMaven     PackagesDeletePackageForOrgPackageType = "maven"
	PackagesDeletePackageForOrgPackageTypeRubygems  PackagesDeletePackageForOrgPackageType = "rubygems"
	PackagesDeletePackageForOrgPackageTypeDocker    PackagesDeletePackageForOrgPackageType = "docker"
	PackagesDeletePackageForOrgPackageTypeNuget     PackagesDeletePackageForOrgPackageType = "nuget"
	PackagesDeletePackageForOrgPackageTypeContainer PackagesDeletePackageForOrgPackageType = "container"
)

type PackagesDeletePackageForUserApplicationJSONForbidden BasicError

func (*PackagesDeletePackageForUserApplicationJSONForbidden) packagesDeletePackageForUserRes() {}

type PackagesDeletePackageForUserApplicationJSONNotFound BasicError

func (*PackagesDeletePackageForUserApplicationJSONNotFound) packagesDeletePackageForUserRes() {}

type PackagesDeletePackageForUserApplicationJSONUnauthorized BasicError

func (*PackagesDeletePackageForUserApplicationJSONUnauthorized) packagesDeletePackageForUserRes() {}

// PackagesDeletePackageForUserNoContent is response for PackagesDeletePackageForUser operation.
type PackagesDeletePackageForUserNoContent struct{}

func (*PackagesDeletePackageForUserNoContent) packagesDeletePackageForUserRes() {}

type PackagesDeletePackageForUserPackageType string

const (
	PackagesDeletePackageForUserPackageTypeNpm       PackagesDeletePackageForUserPackageType = "npm"
	PackagesDeletePackageForUserPackageTypeMaven     PackagesDeletePackageForUserPackageType = "maven"
	PackagesDeletePackageForUserPackageTypeRubygems  PackagesDeletePackageForUserPackageType = "rubygems"
	PackagesDeletePackageForUserPackageTypeDocker    PackagesDeletePackageForUserPackageType = "docker"
	PackagesDeletePackageForUserPackageTypeNuget     PackagesDeletePackageForUserPackageType = "nuget"
	PackagesDeletePackageForUserPackageTypeContainer PackagesDeletePackageForUserPackageType = "container"
)

type PackagesDeletePackageVersionForAuthenticatedUserApplicationJSONForbidden BasicError

func (*PackagesDeletePackageVersionForAuthenticatedUserApplicationJSONForbidden) packagesDeletePackageVersionForAuthenticatedUserRes() {
}

type PackagesDeletePackageVersionForAuthenticatedUserApplicationJSONNotFound BasicError

func (*PackagesDeletePackageVersionForAuthenticatedUserApplicationJSONNotFound) packagesDeletePackageVersionForAuthenticatedUserRes() {
}

type PackagesDeletePackageVersionForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*PackagesDeletePackageVersionForAuthenticatedUserApplicationJSONUnauthorized) packagesDeletePackageVersionForAuthenticatedUserRes() {
}

// PackagesDeletePackageVersionForAuthenticatedUserNoContent is response for PackagesDeletePackageVersionForAuthenticatedUser operation.
type PackagesDeletePackageVersionForAuthenticatedUserNoContent struct{}

func (*PackagesDeletePackageVersionForAuthenticatedUserNoContent) packagesDeletePackageVersionForAuthenticatedUserRes() {
}

type PackagesDeletePackageVersionForAuthenticatedUserPackageType string

const (
	PackagesDeletePackageVersionForAuthenticatedUserPackageTypeNpm       PackagesDeletePackageVersionForAuthenticatedUserPackageType = "npm"
	PackagesDeletePackageVersionForAuthenticatedUserPackageTypeMaven     PackagesDeletePackageVersionForAuthenticatedUserPackageType = "maven"
	PackagesDeletePackageVersionForAuthenticatedUserPackageTypeRubygems  PackagesDeletePackageVersionForAuthenticatedUserPackageType = "rubygems"
	PackagesDeletePackageVersionForAuthenticatedUserPackageTypeDocker    PackagesDeletePackageVersionForAuthenticatedUserPackageType = "docker"
	PackagesDeletePackageVersionForAuthenticatedUserPackageTypeNuget     PackagesDeletePackageVersionForAuthenticatedUserPackageType = "nuget"
	PackagesDeletePackageVersionForAuthenticatedUserPackageTypeContainer PackagesDeletePackageVersionForAuthenticatedUserPackageType = "container"
)

type PackagesDeletePackageVersionForOrgApplicationJSONForbidden BasicError

func (*PackagesDeletePackageVersionForOrgApplicationJSONForbidden) packagesDeletePackageVersionForOrgRes() {
}

type PackagesDeletePackageVersionForOrgApplicationJSONNotFound BasicError

func (*PackagesDeletePackageVersionForOrgApplicationJSONNotFound) packagesDeletePackageVersionForOrgRes() {
}

type PackagesDeletePackageVersionForOrgApplicationJSONUnauthorized BasicError

func (*PackagesDeletePackageVersionForOrgApplicationJSONUnauthorized) packagesDeletePackageVersionForOrgRes() {
}

// PackagesDeletePackageVersionForOrgNoContent is response for PackagesDeletePackageVersionForOrg operation.
type PackagesDeletePackageVersionForOrgNoContent struct{}

func (*PackagesDeletePackageVersionForOrgNoContent) packagesDeletePackageVersionForOrgRes() {}

type PackagesDeletePackageVersionForOrgPackageType string

const (
	PackagesDeletePackageVersionForOrgPackageTypeNpm       PackagesDeletePackageVersionForOrgPackageType = "npm"
	PackagesDeletePackageVersionForOrgPackageTypeMaven     PackagesDeletePackageVersionForOrgPackageType = "maven"
	PackagesDeletePackageVersionForOrgPackageTypeRubygems  PackagesDeletePackageVersionForOrgPackageType = "rubygems"
	PackagesDeletePackageVersionForOrgPackageTypeDocker    PackagesDeletePackageVersionForOrgPackageType = "docker"
	PackagesDeletePackageVersionForOrgPackageTypeNuget     PackagesDeletePackageVersionForOrgPackageType = "nuget"
	PackagesDeletePackageVersionForOrgPackageTypeContainer PackagesDeletePackageVersionForOrgPackageType = "container"
)

type PackagesDeletePackageVersionForUserApplicationJSONForbidden BasicError

func (*PackagesDeletePackageVersionForUserApplicationJSONForbidden) packagesDeletePackageVersionForUserRes() {
}

type PackagesDeletePackageVersionForUserApplicationJSONNotFound BasicError

func (*PackagesDeletePackageVersionForUserApplicationJSONNotFound) packagesDeletePackageVersionForUserRes() {
}

type PackagesDeletePackageVersionForUserApplicationJSONUnauthorized BasicError

func (*PackagesDeletePackageVersionForUserApplicationJSONUnauthorized) packagesDeletePackageVersionForUserRes() {
}

// PackagesDeletePackageVersionForUserNoContent is response for PackagesDeletePackageVersionForUser operation.
type PackagesDeletePackageVersionForUserNoContent struct{}

func (*PackagesDeletePackageVersionForUserNoContent) packagesDeletePackageVersionForUserRes() {}

type PackagesDeletePackageVersionForUserPackageType string

const (
	PackagesDeletePackageVersionForUserPackageTypeNpm       PackagesDeletePackageVersionForUserPackageType = "npm"
	PackagesDeletePackageVersionForUserPackageTypeMaven     PackagesDeletePackageVersionForUserPackageType = "maven"
	PackagesDeletePackageVersionForUserPackageTypeRubygems  PackagesDeletePackageVersionForUserPackageType = "rubygems"
	PackagesDeletePackageVersionForUserPackageTypeDocker    PackagesDeletePackageVersionForUserPackageType = "docker"
	PackagesDeletePackageVersionForUserPackageTypeNuget     PackagesDeletePackageVersionForUserPackageType = "nuget"
	PackagesDeletePackageVersionForUserPackageTypeContainer PackagesDeletePackageVersionForUserPackageType = "container"
)

type PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserApplicationJSONForbidden BasicError

func (*PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserApplicationJSONForbidden) packagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserRes() {
}

type PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserApplicationJSONNotFound BasicError

func (*PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserApplicationJSONNotFound) packagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserRes() {
}

type PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserApplicationJSONUnauthorized) packagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserRes() {
}

type PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserOKApplicationJSON []PackageVersion

func (*PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserOKApplicationJSON) packagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserRes() {
}

type PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserPackageType string

const (
	PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserPackageTypeNpm       PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserPackageType = "npm"
	PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserPackageTypeMaven     PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserPackageType = "maven"
	PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserPackageTypeRubygems  PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserPackageType = "rubygems"
	PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserPackageTypeDocker    PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserPackageType = "docker"
	PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserPackageTypeNuget     PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserPackageType = "nuget"
	PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserPackageTypeContainer PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserPackageType = "container"
)

type PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserState string

const (
	PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserStateActive  PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserState = "active"
	PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserStateDeleted PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserState = "deleted"
)

type PackagesGetAllPackageVersionsForPackageOwnedByOrgApplicationJSONForbidden BasicError

func (*PackagesGetAllPackageVersionsForPackageOwnedByOrgApplicationJSONForbidden) packagesGetAllPackageVersionsForPackageOwnedByOrgRes() {
}

type PackagesGetAllPackageVersionsForPackageOwnedByOrgApplicationJSONNotFound BasicError

func (*PackagesGetAllPackageVersionsForPackageOwnedByOrgApplicationJSONNotFound) packagesGetAllPackageVersionsForPackageOwnedByOrgRes() {
}

type PackagesGetAllPackageVersionsForPackageOwnedByOrgApplicationJSONUnauthorized BasicError

func (*PackagesGetAllPackageVersionsForPackageOwnedByOrgApplicationJSONUnauthorized) packagesGetAllPackageVersionsForPackageOwnedByOrgRes() {
}

type PackagesGetAllPackageVersionsForPackageOwnedByOrgOKApplicationJSON []PackageVersion

func (*PackagesGetAllPackageVersionsForPackageOwnedByOrgOKApplicationJSON) packagesGetAllPackageVersionsForPackageOwnedByOrgRes() {
}

type PackagesGetAllPackageVersionsForPackageOwnedByOrgPackageType string

const (
	PackagesGetAllPackageVersionsForPackageOwnedByOrgPackageTypeNpm       PackagesGetAllPackageVersionsForPackageOwnedByOrgPackageType = "npm"
	PackagesGetAllPackageVersionsForPackageOwnedByOrgPackageTypeMaven     PackagesGetAllPackageVersionsForPackageOwnedByOrgPackageType = "maven"
	PackagesGetAllPackageVersionsForPackageOwnedByOrgPackageTypeRubygems  PackagesGetAllPackageVersionsForPackageOwnedByOrgPackageType = "rubygems"
	PackagesGetAllPackageVersionsForPackageOwnedByOrgPackageTypeDocker    PackagesGetAllPackageVersionsForPackageOwnedByOrgPackageType = "docker"
	PackagesGetAllPackageVersionsForPackageOwnedByOrgPackageTypeNuget     PackagesGetAllPackageVersionsForPackageOwnedByOrgPackageType = "nuget"
	PackagesGetAllPackageVersionsForPackageOwnedByOrgPackageTypeContainer PackagesGetAllPackageVersionsForPackageOwnedByOrgPackageType = "container"
)

type PackagesGetAllPackageVersionsForPackageOwnedByOrgState string

const (
	PackagesGetAllPackageVersionsForPackageOwnedByOrgStateActive  PackagesGetAllPackageVersionsForPackageOwnedByOrgState = "active"
	PackagesGetAllPackageVersionsForPackageOwnedByOrgStateDeleted PackagesGetAllPackageVersionsForPackageOwnedByOrgState = "deleted"
)

type PackagesGetAllPackageVersionsForPackageOwnedByUserApplicationJSONForbidden BasicError

func (*PackagesGetAllPackageVersionsForPackageOwnedByUserApplicationJSONForbidden) packagesGetAllPackageVersionsForPackageOwnedByUserRes() {
}

type PackagesGetAllPackageVersionsForPackageOwnedByUserApplicationJSONNotFound BasicError

func (*PackagesGetAllPackageVersionsForPackageOwnedByUserApplicationJSONNotFound) packagesGetAllPackageVersionsForPackageOwnedByUserRes() {
}

type PackagesGetAllPackageVersionsForPackageOwnedByUserApplicationJSONUnauthorized BasicError

func (*PackagesGetAllPackageVersionsForPackageOwnedByUserApplicationJSONUnauthorized) packagesGetAllPackageVersionsForPackageOwnedByUserRes() {
}

type PackagesGetAllPackageVersionsForPackageOwnedByUserOKApplicationJSON []PackageVersion

func (*PackagesGetAllPackageVersionsForPackageOwnedByUserOKApplicationJSON) packagesGetAllPackageVersionsForPackageOwnedByUserRes() {
}

type PackagesGetAllPackageVersionsForPackageOwnedByUserPackageType string

const (
	PackagesGetAllPackageVersionsForPackageOwnedByUserPackageTypeNpm       PackagesGetAllPackageVersionsForPackageOwnedByUserPackageType = "npm"
	PackagesGetAllPackageVersionsForPackageOwnedByUserPackageTypeMaven     PackagesGetAllPackageVersionsForPackageOwnedByUserPackageType = "maven"
	PackagesGetAllPackageVersionsForPackageOwnedByUserPackageTypeRubygems  PackagesGetAllPackageVersionsForPackageOwnedByUserPackageType = "rubygems"
	PackagesGetAllPackageVersionsForPackageOwnedByUserPackageTypeDocker    PackagesGetAllPackageVersionsForPackageOwnedByUserPackageType = "docker"
	PackagesGetAllPackageVersionsForPackageOwnedByUserPackageTypeNuget     PackagesGetAllPackageVersionsForPackageOwnedByUserPackageType = "nuget"
	PackagesGetAllPackageVersionsForPackageOwnedByUserPackageTypeContainer PackagesGetAllPackageVersionsForPackageOwnedByUserPackageType = "container"
)

type PackagesGetPackageForAuthenticatedUserPackageType string

const (
	PackagesGetPackageForAuthenticatedUserPackageTypeNpm       PackagesGetPackageForAuthenticatedUserPackageType = "npm"
	PackagesGetPackageForAuthenticatedUserPackageTypeMaven     PackagesGetPackageForAuthenticatedUserPackageType = "maven"
	PackagesGetPackageForAuthenticatedUserPackageTypeRubygems  PackagesGetPackageForAuthenticatedUserPackageType = "rubygems"
	PackagesGetPackageForAuthenticatedUserPackageTypeDocker    PackagesGetPackageForAuthenticatedUserPackageType = "docker"
	PackagesGetPackageForAuthenticatedUserPackageTypeNuget     PackagesGetPackageForAuthenticatedUserPackageType = "nuget"
	PackagesGetPackageForAuthenticatedUserPackageTypeContainer PackagesGetPackageForAuthenticatedUserPackageType = "container"
)

type PackagesGetPackageForOrganizationPackageType string

const (
	PackagesGetPackageForOrganizationPackageTypeNpm       PackagesGetPackageForOrganizationPackageType = "npm"
	PackagesGetPackageForOrganizationPackageTypeMaven     PackagesGetPackageForOrganizationPackageType = "maven"
	PackagesGetPackageForOrganizationPackageTypeRubygems  PackagesGetPackageForOrganizationPackageType = "rubygems"
	PackagesGetPackageForOrganizationPackageTypeDocker    PackagesGetPackageForOrganizationPackageType = "docker"
	PackagesGetPackageForOrganizationPackageTypeNuget     PackagesGetPackageForOrganizationPackageType = "nuget"
	PackagesGetPackageForOrganizationPackageTypeContainer PackagesGetPackageForOrganizationPackageType = "container"
)

type PackagesGetPackageForUserPackageType string

const (
	PackagesGetPackageForUserPackageTypeNpm       PackagesGetPackageForUserPackageType = "npm"
	PackagesGetPackageForUserPackageTypeMaven     PackagesGetPackageForUserPackageType = "maven"
	PackagesGetPackageForUserPackageTypeRubygems  PackagesGetPackageForUserPackageType = "rubygems"
	PackagesGetPackageForUserPackageTypeDocker    PackagesGetPackageForUserPackageType = "docker"
	PackagesGetPackageForUserPackageTypeNuget     PackagesGetPackageForUserPackageType = "nuget"
	PackagesGetPackageForUserPackageTypeContainer PackagesGetPackageForUserPackageType = "container"
)

type PackagesGetPackageVersionForAuthenticatedUserPackageType string

const (
	PackagesGetPackageVersionForAuthenticatedUserPackageTypeNpm       PackagesGetPackageVersionForAuthenticatedUserPackageType = "npm"
	PackagesGetPackageVersionForAuthenticatedUserPackageTypeMaven     PackagesGetPackageVersionForAuthenticatedUserPackageType = "maven"
	PackagesGetPackageVersionForAuthenticatedUserPackageTypeRubygems  PackagesGetPackageVersionForAuthenticatedUserPackageType = "rubygems"
	PackagesGetPackageVersionForAuthenticatedUserPackageTypeDocker    PackagesGetPackageVersionForAuthenticatedUserPackageType = "docker"
	PackagesGetPackageVersionForAuthenticatedUserPackageTypeNuget     PackagesGetPackageVersionForAuthenticatedUserPackageType = "nuget"
	PackagesGetPackageVersionForAuthenticatedUserPackageTypeContainer PackagesGetPackageVersionForAuthenticatedUserPackageType = "container"
)

type PackagesGetPackageVersionForOrganizationPackageType string

const (
	PackagesGetPackageVersionForOrganizationPackageTypeNpm       PackagesGetPackageVersionForOrganizationPackageType = "npm"
	PackagesGetPackageVersionForOrganizationPackageTypeMaven     PackagesGetPackageVersionForOrganizationPackageType = "maven"
	PackagesGetPackageVersionForOrganizationPackageTypeRubygems  PackagesGetPackageVersionForOrganizationPackageType = "rubygems"
	PackagesGetPackageVersionForOrganizationPackageTypeDocker    PackagesGetPackageVersionForOrganizationPackageType = "docker"
	PackagesGetPackageVersionForOrganizationPackageTypeNuget     PackagesGetPackageVersionForOrganizationPackageType = "nuget"
	PackagesGetPackageVersionForOrganizationPackageTypeContainer PackagesGetPackageVersionForOrganizationPackageType = "container"
)

type PackagesGetPackageVersionForUserPackageType string

const (
	PackagesGetPackageVersionForUserPackageTypeNpm       PackagesGetPackageVersionForUserPackageType = "npm"
	PackagesGetPackageVersionForUserPackageTypeMaven     PackagesGetPackageVersionForUserPackageType = "maven"
	PackagesGetPackageVersionForUserPackageTypeRubygems  PackagesGetPackageVersionForUserPackageType = "rubygems"
	PackagesGetPackageVersionForUserPackageTypeDocker    PackagesGetPackageVersionForUserPackageType = "docker"
	PackagesGetPackageVersionForUserPackageTypeNuget     PackagesGetPackageVersionForUserPackageType = "nuget"
	PackagesGetPackageVersionForUserPackageTypeContainer PackagesGetPackageVersionForUserPackageType = "container"
)

type PackagesListPackagesForAuthenticatedUserPackageType string

const (
	PackagesListPackagesForAuthenticatedUserPackageTypeNpm       PackagesListPackagesForAuthenticatedUserPackageType = "npm"
	PackagesListPackagesForAuthenticatedUserPackageTypeMaven     PackagesListPackagesForAuthenticatedUserPackageType = "maven"
	PackagesListPackagesForAuthenticatedUserPackageTypeRubygems  PackagesListPackagesForAuthenticatedUserPackageType = "rubygems"
	PackagesListPackagesForAuthenticatedUserPackageTypeDocker    PackagesListPackagesForAuthenticatedUserPackageType = "docker"
	PackagesListPackagesForAuthenticatedUserPackageTypeNuget     PackagesListPackagesForAuthenticatedUserPackageType = "nuget"
	PackagesListPackagesForAuthenticatedUserPackageTypeContainer PackagesListPackagesForAuthenticatedUserPackageType = "container"
)

type PackagesListPackagesForAuthenticatedUserVisibility string

const (
	PackagesListPackagesForAuthenticatedUserVisibilityPublic   PackagesListPackagesForAuthenticatedUserVisibility = "public"
	PackagesListPackagesForAuthenticatedUserVisibilityPrivate  PackagesListPackagesForAuthenticatedUserVisibility = "private"
	PackagesListPackagesForAuthenticatedUserVisibilityInternal PackagesListPackagesForAuthenticatedUserVisibility = "internal"
)

type PackagesListPackagesForOrganizationApplicationJSONForbidden BasicError

func (*PackagesListPackagesForOrganizationApplicationJSONForbidden) packagesListPackagesForOrganizationRes() {
}

type PackagesListPackagesForOrganizationApplicationJSONUnauthorized BasicError

func (*PackagesListPackagesForOrganizationApplicationJSONUnauthorized) packagesListPackagesForOrganizationRes() {
}

type PackagesListPackagesForOrganizationOKApplicationJSON []Package

func (*PackagesListPackagesForOrganizationOKApplicationJSON) packagesListPackagesForOrganizationRes() {
}

type PackagesListPackagesForOrganizationPackageType string

const (
	PackagesListPackagesForOrganizationPackageTypeNpm       PackagesListPackagesForOrganizationPackageType = "npm"
	PackagesListPackagesForOrganizationPackageTypeMaven     PackagesListPackagesForOrganizationPackageType = "maven"
	PackagesListPackagesForOrganizationPackageTypeRubygems  PackagesListPackagesForOrganizationPackageType = "rubygems"
	PackagesListPackagesForOrganizationPackageTypeDocker    PackagesListPackagesForOrganizationPackageType = "docker"
	PackagesListPackagesForOrganizationPackageTypeNuget     PackagesListPackagesForOrganizationPackageType = "nuget"
	PackagesListPackagesForOrganizationPackageTypeContainer PackagesListPackagesForOrganizationPackageType = "container"
)

type PackagesListPackagesForOrganizationVisibility string

const (
	PackagesListPackagesForOrganizationVisibilityPublic   PackagesListPackagesForOrganizationVisibility = "public"
	PackagesListPackagesForOrganizationVisibilityPrivate  PackagesListPackagesForOrganizationVisibility = "private"
	PackagesListPackagesForOrganizationVisibilityInternal PackagesListPackagesForOrganizationVisibility = "internal"
)

type PackagesListPackagesForUserApplicationJSONForbidden BasicError

func (*PackagesListPackagesForUserApplicationJSONForbidden) packagesListPackagesForUserRes() {}

type PackagesListPackagesForUserApplicationJSONUnauthorized BasicError

func (*PackagesListPackagesForUserApplicationJSONUnauthorized) packagesListPackagesForUserRes() {}

type PackagesListPackagesForUserOKApplicationJSON []Package

func (*PackagesListPackagesForUserOKApplicationJSON) packagesListPackagesForUserRes() {}

type PackagesListPackagesForUserPackageType string

const (
	PackagesListPackagesForUserPackageTypeNpm       PackagesListPackagesForUserPackageType = "npm"
	PackagesListPackagesForUserPackageTypeMaven     PackagesListPackagesForUserPackageType = "maven"
	PackagesListPackagesForUserPackageTypeRubygems  PackagesListPackagesForUserPackageType = "rubygems"
	PackagesListPackagesForUserPackageTypeDocker    PackagesListPackagesForUserPackageType = "docker"
	PackagesListPackagesForUserPackageTypeNuget     PackagesListPackagesForUserPackageType = "nuget"
	PackagesListPackagesForUserPackageTypeContainer PackagesListPackagesForUserPackageType = "container"
)

type PackagesListPackagesForUserVisibility string

const (
	PackagesListPackagesForUserVisibilityPublic   PackagesListPackagesForUserVisibility = "public"
	PackagesListPackagesForUserVisibilityPrivate  PackagesListPackagesForUserVisibility = "private"
	PackagesListPackagesForUserVisibilityInternal PackagesListPackagesForUserVisibility = "internal"
)

type PackagesRestorePackageForAuthenticatedUserApplicationJSONForbidden BasicError

func (*PackagesRestorePackageForAuthenticatedUserApplicationJSONForbidden) packagesRestorePackageForAuthenticatedUserRes() {
}

type PackagesRestorePackageForAuthenticatedUserApplicationJSONNotFound BasicError

func (*PackagesRestorePackageForAuthenticatedUserApplicationJSONNotFound) packagesRestorePackageForAuthenticatedUserRes() {
}

type PackagesRestorePackageForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*PackagesRestorePackageForAuthenticatedUserApplicationJSONUnauthorized) packagesRestorePackageForAuthenticatedUserRes() {
}

// PackagesRestorePackageForAuthenticatedUserNoContent is response for PackagesRestorePackageForAuthenticatedUser operation.
type PackagesRestorePackageForAuthenticatedUserNoContent struct{}

func (*PackagesRestorePackageForAuthenticatedUserNoContent) packagesRestorePackageForAuthenticatedUserRes() {
}

type PackagesRestorePackageForAuthenticatedUserPackageType string

const (
	PackagesRestorePackageForAuthenticatedUserPackageTypeNpm       PackagesRestorePackageForAuthenticatedUserPackageType = "npm"
	PackagesRestorePackageForAuthenticatedUserPackageTypeMaven     PackagesRestorePackageForAuthenticatedUserPackageType = "maven"
	PackagesRestorePackageForAuthenticatedUserPackageTypeRubygems  PackagesRestorePackageForAuthenticatedUserPackageType = "rubygems"
	PackagesRestorePackageForAuthenticatedUserPackageTypeDocker    PackagesRestorePackageForAuthenticatedUserPackageType = "docker"
	PackagesRestorePackageForAuthenticatedUserPackageTypeNuget     PackagesRestorePackageForAuthenticatedUserPackageType = "nuget"
	PackagesRestorePackageForAuthenticatedUserPackageTypeContainer PackagesRestorePackageForAuthenticatedUserPackageType = "container"
)

type PackagesRestorePackageForOrgApplicationJSONForbidden BasicError

func (*PackagesRestorePackageForOrgApplicationJSONForbidden) packagesRestorePackageForOrgRes() {}

type PackagesRestorePackageForOrgApplicationJSONNotFound BasicError

func (*PackagesRestorePackageForOrgApplicationJSONNotFound) packagesRestorePackageForOrgRes() {}

type PackagesRestorePackageForOrgApplicationJSONUnauthorized BasicError

func (*PackagesRestorePackageForOrgApplicationJSONUnauthorized) packagesRestorePackageForOrgRes() {}

// PackagesRestorePackageForOrgNoContent is response for PackagesRestorePackageForOrg operation.
type PackagesRestorePackageForOrgNoContent struct{}

func (*PackagesRestorePackageForOrgNoContent) packagesRestorePackageForOrgRes() {}

type PackagesRestorePackageForOrgPackageType string

const (
	PackagesRestorePackageForOrgPackageTypeNpm       PackagesRestorePackageForOrgPackageType = "npm"
	PackagesRestorePackageForOrgPackageTypeMaven     PackagesRestorePackageForOrgPackageType = "maven"
	PackagesRestorePackageForOrgPackageTypeRubygems  PackagesRestorePackageForOrgPackageType = "rubygems"
	PackagesRestorePackageForOrgPackageTypeDocker    PackagesRestorePackageForOrgPackageType = "docker"
	PackagesRestorePackageForOrgPackageTypeNuget     PackagesRestorePackageForOrgPackageType = "nuget"
	PackagesRestorePackageForOrgPackageTypeContainer PackagesRestorePackageForOrgPackageType = "container"
)

type PackagesRestorePackageForUserApplicationJSONForbidden BasicError

func (*PackagesRestorePackageForUserApplicationJSONForbidden) packagesRestorePackageForUserRes() {}

type PackagesRestorePackageForUserApplicationJSONNotFound BasicError

func (*PackagesRestorePackageForUserApplicationJSONNotFound) packagesRestorePackageForUserRes() {}

type PackagesRestorePackageForUserApplicationJSONUnauthorized BasicError

func (*PackagesRestorePackageForUserApplicationJSONUnauthorized) packagesRestorePackageForUserRes() {}

// PackagesRestorePackageForUserNoContent is response for PackagesRestorePackageForUser operation.
type PackagesRestorePackageForUserNoContent struct{}

func (*PackagesRestorePackageForUserNoContent) packagesRestorePackageForUserRes() {}

type PackagesRestorePackageForUserPackageType string

const (
	PackagesRestorePackageForUserPackageTypeNpm       PackagesRestorePackageForUserPackageType = "npm"
	PackagesRestorePackageForUserPackageTypeMaven     PackagesRestorePackageForUserPackageType = "maven"
	PackagesRestorePackageForUserPackageTypeRubygems  PackagesRestorePackageForUserPackageType = "rubygems"
	PackagesRestorePackageForUserPackageTypeDocker    PackagesRestorePackageForUserPackageType = "docker"
	PackagesRestorePackageForUserPackageTypeNuget     PackagesRestorePackageForUserPackageType = "nuget"
	PackagesRestorePackageForUserPackageTypeContainer PackagesRestorePackageForUserPackageType = "container"
)

type PackagesRestorePackageVersionForAuthenticatedUserApplicationJSONForbidden BasicError

func (*PackagesRestorePackageVersionForAuthenticatedUserApplicationJSONForbidden) packagesRestorePackageVersionForAuthenticatedUserRes() {
}

type PackagesRestorePackageVersionForAuthenticatedUserApplicationJSONNotFound BasicError

func (*PackagesRestorePackageVersionForAuthenticatedUserApplicationJSONNotFound) packagesRestorePackageVersionForAuthenticatedUserRes() {
}

type PackagesRestorePackageVersionForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*PackagesRestorePackageVersionForAuthenticatedUserApplicationJSONUnauthorized) packagesRestorePackageVersionForAuthenticatedUserRes() {
}

// PackagesRestorePackageVersionForAuthenticatedUserNoContent is response for PackagesRestorePackageVersionForAuthenticatedUser operation.
type PackagesRestorePackageVersionForAuthenticatedUserNoContent struct{}

func (*PackagesRestorePackageVersionForAuthenticatedUserNoContent) packagesRestorePackageVersionForAuthenticatedUserRes() {
}

type PackagesRestorePackageVersionForAuthenticatedUserPackageType string

const (
	PackagesRestorePackageVersionForAuthenticatedUserPackageTypeNpm       PackagesRestorePackageVersionForAuthenticatedUserPackageType = "npm"
	PackagesRestorePackageVersionForAuthenticatedUserPackageTypeMaven     PackagesRestorePackageVersionForAuthenticatedUserPackageType = "maven"
	PackagesRestorePackageVersionForAuthenticatedUserPackageTypeRubygems  PackagesRestorePackageVersionForAuthenticatedUserPackageType = "rubygems"
	PackagesRestorePackageVersionForAuthenticatedUserPackageTypeDocker    PackagesRestorePackageVersionForAuthenticatedUserPackageType = "docker"
	PackagesRestorePackageVersionForAuthenticatedUserPackageTypeNuget     PackagesRestorePackageVersionForAuthenticatedUserPackageType = "nuget"
	PackagesRestorePackageVersionForAuthenticatedUserPackageTypeContainer PackagesRestorePackageVersionForAuthenticatedUserPackageType = "container"
)

type PackagesRestorePackageVersionForOrgApplicationJSONForbidden BasicError

func (*PackagesRestorePackageVersionForOrgApplicationJSONForbidden) packagesRestorePackageVersionForOrgRes() {
}

type PackagesRestorePackageVersionForOrgApplicationJSONNotFound BasicError

func (*PackagesRestorePackageVersionForOrgApplicationJSONNotFound) packagesRestorePackageVersionForOrgRes() {
}

type PackagesRestorePackageVersionForOrgApplicationJSONUnauthorized BasicError

func (*PackagesRestorePackageVersionForOrgApplicationJSONUnauthorized) packagesRestorePackageVersionForOrgRes() {
}

// PackagesRestorePackageVersionForOrgNoContent is response for PackagesRestorePackageVersionForOrg operation.
type PackagesRestorePackageVersionForOrgNoContent struct{}

func (*PackagesRestorePackageVersionForOrgNoContent) packagesRestorePackageVersionForOrgRes() {}

type PackagesRestorePackageVersionForOrgPackageType string

const (
	PackagesRestorePackageVersionForOrgPackageTypeNpm       PackagesRestorePackageVersionForOrgPackageType = "npm"
	PackagesRestorePackageVersionForOrgPackageTypeMaven     PackagesRestorePackageVersionForOrgPackageType = "maven"
	PackagesRestorePackageVersionForOrgPackageTypeRubygems  PackagesRestorePackageVersionForOrgPackageType = "rubygems"
	PackagesRestorePackageVersionForOrgPackageTypeDocker    PackagesRestorePackageVersionForOrgPackageType = "docker"
	PackagesRestorePackageVersionForOrgPackageTypeNuget     PackagesRestorePackageVersionForOrgPackageType = "nuget"
	PackagesRestorePackageVersionForOrgPackageTypeContainer PackagesRestorePackageVersionForOrgPackageType = "container"
)

type PackagesRestorePackageVersionForUserApplicationJSONForbidden BasicError

func (*PackagesRestorePackageVersionForUserApplicationJSONForbidden) packagesRestorePackageVersionForUserRes() {
}

type PackagesRestorePackageVersionForUserApplicationJSONNotFound BasicError

func (*PackagesRestorePackageVersionForUserApplicationJSONNotFound) packagesRestorePackageVersionForUserRes() {
}

type PackagesRestorePackageVersionForUserApplicationJSONUnauthorized BasicError

func (*PackagesRestorePackageVersionForUserApplicationJSONUnauthorized) packagesRestorePackageVersionForUserRes() {
}

// PackagesRestorePackageVersionForUserNoContent is response for PackagesRestorePackageVersionForUser operation.
type PackagesRestorePackageVersionForUserNoContent struct{}

func (*PackagesRestorePackageVersionForUserNoContent) packagesRestorePackageVersionForUserRes() {}

type PackagesRestorePackageVersionForUserPackageType string

const (
	PackagesRestorePackageVersionForUserPackageTypeNpm       PackagesRestorePackageVersionForUserPackageType = "npm"
	PackagesRestorePackageVersionForUserPackageTypeMaven     PackagesRestorePackageVersionForUserPackageType = "maven"
	PackagesRestorePackageVersionForUserPackageTypeRubygems  PackagesRestorePackageVersionForUserPackageType = "rubygems"
	PackagesRestorePackageVersionForUserPackageTypeDocker    PackagesRestorePackageVersionForUserPackageType = "docker"
	PackagesRestorePackageVersionForUserPackageTypeNuget     PackagesRestorePackageVersionForUserPackageType = "nuget"
	PackagesRestorePackageVersionForUserPackageTypeContainer PackagesRestorePackageVersionForUserPackageType = "container"
)

// Ref: #/components/schemas/page
type Page struct {
	Cname                     NilString                      `json:"cname"`
	Custom404                 bool                           `json:"custom_404"`
	HTMLURL                   OptURL                         `json:"html_url"`
	HTTPSCertificate          OptPagesHTTPSCertificate       `json:"https_certificate"`
	HTTPSEnforced             OptBool                        `json:"https_enforced"`
	PendingDomainUnverifiedAt OptNilTime                     `json:"pending_domain_unverified_at"`
	ProtectedDomainState      OptNilPageProtectedDomainState `json:"protected_domain_state"`
	Public                    bool                           `json:"public"`
	Source                    OptPagesSourceHash             `json:"source"`
	Status                    NilPageStatus                  `json:"status"`
	URL                       url.URL                        `json:"url"`
}

func (*Page) reposGetPagesRes() {}

// Ref: #/components/schemas/page-build
type PageBuild struct {
	Commit    string                `json:"commit"`
	CreatedAt time.Time             `json:"created_at"`
	Duration  int                   `json:"duration"`
	Error     PageBuildError        `json:"error"`
	Pusher    NilNullableSimpleUser `json:"pusher"`
	Status    string                `json:"status"`
	UpdatedAt time.Time             `json:"updated_at"`
	URL       url.URL               `json:"url"`
}

type PageBuildError struct {
	Message NilString `json:"message"`
}

// Ref: #/components/schemas/page-build-status
type PageBuildStatus struct {
	Status string  `json:"status"`
	URL    url.URL `json:"url"`
}

type PageProtectedDomainState string

const (
	PageProtectedDomainStatePending    PageProtectedDomainState = "pending"
	PageProtectedDomainStateVerified   PageProtectedDomainState = "verified"
	PageProtectedDomainStateUnverified PageProtectedDomainState = "unverified"
)

type PageStatus string

const (
	PageStatusBuilt    PageStatus = "built"
	PageStatusBuilding PageStatus = "building"
	PageStatusErrored  PageStatus = "errored"
)

// Ref: #/components/schemas/pages-https-certificate
type PagesHTTPSCertificate struct {
	Description string                     `json:"description"`
	Domains     []string                   `json:"domains"`
	ExpiresAt   OptTime                    `json:"expires_at"`
	State       PagesHTTPSCertificateState `json:"state"`
}

type PagesHTTPSCertificateState string

const (
	PagesHTTPSCertificateStateNew                  PagesHTTPSCertificateState = "new"
	PagesHTTPSCertificateStateAuthorizationCreated PagesHTTPSCertificateState = "authorization_created"
	PagesHTTPSCertificateStateAuthorizationPending PagesHTTPSCertificateState = "authorization_pending"
	PagesHTTPSCertificateStateAuthorized           PagesHTTPSCertificateState = "authorized"
	PagesHTTPSCertificateStateAuthorizationRevoked PagesHTTPSCertificateState = "authorization_revoked"
	PagesHTTPSCertificateStateIssued               PagesHTTPSCertificateState = "issued"
	PagesHTTPSCertificateStateUploaded             PagesHTTPSCertificateState = "uploaded"
	PagesHTTPSCertificateStateApproved             PagesHTTPSCertificateState = "approved"
	PagesHTTPSCertificateStateErrored              PagesHTTPSCertificateState = "errored"
	PagesHTTPSCertificateStateBadAuthz             PagesHTTPSCertificateState = "bad_authz"
	PagesHTTPSCertificateStateDestroyPending       PagesHTTPSCertificateState = "destroy_pending"
	PagesHTTPSCertificateStateDNSChanged           PagesHTTPSCertificateState = "dns_changed"
)

// Ref: #/components/schemas/pages-health-check
type PagesHealthCheck struct {
	AltDomain OptNilPagesHealthCheckAltDomain `json:"alt_domain"`
	Domain    OptPagesHealthCheckDomain       `json:"domain"`
}

func (*PagesHealthCheck) reposGetPagesHealthCheckRes() {}

type PagesHealthCheckAltDomain struct {
	CaaError                      OptNilString `json:"caa_error"`
	DNSResolves                   OptBool      `json:"dns_resolves"`
	EnforcesHTTPS                 OptBool      `json:"enforces_https"`
	HasCnameRecord                OptNilBool   `json:"has_cname_record"`
	HasMxRecordsPresent           OptNilBool   `json:"has_mx_records_present"`
	Host                          OptString    `json:"host"`
	HTTPSError                    OptNilString `json:"https_error"`
	IsARecord                     OptNilBool   `json:"is_a_record"`
	IsApexDomain                  OptBool      `json:"is_apex_domain"`
	IsCloudflareIP                OptNilBool   `json:"is_cloudflare_ip"`
	IsCnameToFastly               OptNilBool   `json:"is_cname_to_fastly"`
	IsCnameToGithubUserDomain     OptNilBool   `json:"is_cname_to_github_user_domain"`
	IsCnameToPagesDotGithubDotCom OptNilBool   `json:"is_cname_to_pages_dot_github_dot_com"`
	IsFastlyIP                    OptNilBool   `json:"is_fastly_ip"`
	IsHTTPSEligible               OptNilBool   `json:"is_https_eligible"`
	IsNonGithubPagesIPPresent     OptNilBool   `json:"is_non_github_pages_ip_present"`
	IsOldIPAddress                OptNilBool   `json:"is_old_ip_address"`
	IsPagesDomain                 OptBool      `json:"is_pages_domain"`
	IsPointedToGithubPagesIP      OptNilBool   `json:"is_pointed_to_github_pages_ip"`
	IsProxied                     OptNilBool   `json:"is_proxied"`
	IsServedByPages               OptNilBool   `json:"is_served_by_pages"`
	IsValid                       OptBool      `json:"is_valid"`
	IsValidDomain                 OptBool      `json:"is_valid_domain"`
	Nameservers                   OptString    `json:"nameservers"`
	Reason                        OptNilString `json:"reason"`
	RespondsToHTTPS               OptBool      `json:"responds_to_https"`
	ShouldBeARecord               OptNilBool   `json:"should_be_a_record"`
	URI                           OptString    `json:"uri"`
}

type PagesHealthCheckDomain struct {
	CaaError                      OptNilString `json:"caa_error"`
	DNSResolves                   OptBool      `json:"dns_resolves"`
	EnforcesHTTPS                 OptBool      `json:"enforces_https"`
	HasCnameRecord                OptNilBool   `json:"has_cname_record"`
	HasMxRecordsPresent           OptNilBool   `json:"has_mx_records_present"`
	Host                          OptString    `json:"host"`
	HTTPSError                    OptNilString `json:"https_error"`
	IsARecord                     OptNilBool   `json:"is_a_record"`
	IsApexDomain                  OptBool      `json:"is_apex_domain"`
	IsCloudflareIP                OptNilBool   `json:"is_cloudflare_ip"`
	IsCnameToFastly               OptNilBool   `json:"is_cname_to_fastly"`
	IsCnameToGithubUserDomain     OptNilBool   `json:"is_cname_to_github_user_domain"`
	IsCnameToPagesDotGithubDotCom OptNilBool   `json:"is_cname_to_pages_dot_github_dot_com"`
	IsFastlyIP                    OptNilBool   `json:"is_fastly_ip"`
	IsHTTPSEligible               OptNilBool   `json:"is_https_eligible"`
	IsNonGithubPagesIPPresent     OptNilBool   `json:"is_non_github_pages_ip_present"`
	IsOldIPAddress                OptNilBool   `json:"is_old_ip_address"`
	IsPagesDomain                 OptBool      `json:"is_pages_domain"`
	IsPointedToGithubPagesIP      OptNilBool   `json:"is_pointed_to_github_pages_ip"`
	IsProxied                     OptNilBool   `json:"is_proxied"`
	IsServedByPages               OptNilBool   `json:"is_served_by_pages"`
	IsValid                       OptBool      `json:"is_valid"`
	IsValidDomain                 OptBool      `json:"is_valid_domain"`
	Nameservers                   OptString    `json:"nameservers"`
	Reason                        OptNilString `json:"reason"`
	RespondsToHTTPS               OptBool      `json:"responds_to_https"`
	ShouldBeARecord               OptNilBool   `json:"should_be_a_record"`
	URI                           OptString    `json:"uri"`
}

// Ref: #/components/schemas/pages-source-hash
type PagesSourceHash struct {
	Branch string `json:"branch"`
	Path   string `json:"path"`
}

// Ref: #/components/schemas/participation-stats
type ParticipationStats struct {
	All   []int `json:"all"`
	Owner []int `json:"owner"`
}

func (*ParticipationStats) reposGetParticipationStatsRes() {}

// Ref: #/components/schemas/porter-author
type PorterAuthor struct {
	Email      string  `json:"email"`
	ID         int     `json:"id"`
	ImportURL  url.URL `json:"import_url"`
	Name       string  `json:"name"`
	RemoteID   string  `json:"remote_id"`
	RemoteName string  `json:"remote_name"`
	URL        url.URL `json:"url"`
}

// Ref: #/components/schemas/porter-large-file
type PorterLargeFile struct {
	Oid     string `json:"oid"`
	Path    string `json:"path"`
	RefName string `json:"ref_name"`
	Size    int    `json:"size"`
}

// Ref: #/components/schemas/private-user
type PrivateUser struct {
	AvatarURL               url.URL            `json:"avatar_url"`
	Bio                     NilString          `json:"bio"`
	Blog                    NilString          `json:"blog"`
	BusinessPlus            OptBool            `json:"business_plus"`
	Collaborators           int                `json:"collaborators"`
	Company                 NilString          `json:"company"`
	CreatedAt               time.Time          `json:"created_at"`
	DiskUsage               int                `json:"disk_usage"`
	Email                   NilString          `json:"email"`
	EventsURL               string             `json:"events_url"`
	Followers               int                `json:"followers"`
	FollowersURL            url.URL            `json:"followers_url"`
	Following               int                `json:"following"`
	FollowingURL            string             `json:"following_url"`
	GistsURL                string             `json:"gists_url"`
	GravatarID              NilString          `json:"gravatar_id"`
	Hireable                NilBool            `json:"hireable"`
	HTMLURL                 url.URL            `json:"html_url"`
	ID                      int                `json:"id"`
	LdapDn                  OptString          `json:"ldap_dn"`
	Location                NilString          `json:"location"`
	Login                   string             `json:"login"`
	Name                    NilString          `json:"name"`
	NodeID                  string             `json:"node_id"`
	OrganizationsURL        url.URL            `json:"organizations_url"`
	OwnedPrivateRepos       int                `json:"owned_private_repos"`
	Plan                    OptPrivateUserPlan `json:"plan"`
	PrivateGists            int                `json:"private_gists"`
	PublicGists             int                `json:"public_gists"`
	PublicRepos             int                `json:"public_repos"`
	ReceivedEventsURL       url.URL            `json:"received_events_url"`
	ReposURL                url.URL            `json:"repos_url"`
	SiteAdmin               bool               `json:"site_admin"`
	StarredURL              string             `json:"starred_url"`
	SubscriptionsURL        url.URL            `json:"subscriptions_url"`
	SuspendedAt             OptNilTime         `json:"suspended_at"`
	TotalPrivateRepos       int                `json:"total_private_repos"`
	TwitterUsername         OptNilString       `json:"twitter_username"`
	TwoFactorAuthentication bool               `json:"two_factor_authentication"`
	Type                    string             `json:"type"`
	UpdatedAt               time.Time          `json:"updated_at"`
	URL                     url.URL            `json:"url"`
}

type PrivateUserPlan struct {
	Collaborators int    `json:"collaborators"`
	Name          string `json:"name"`
	PrivateRepos  int    `json:"private_repos"`
	Space         int    `json:"space"`
}

// Ref: #/components/schemas/project
type Project struct {
	Body                   NilString                        `json:"body"`
	ColumnsURL             url.URL                          `json:"columns_url"`
	CreatedAt              time.Time                        `json:"created_at"`
	Creator                NilNullableSimpleUser            `json:"creator"`
	HTMLURL                url.URL                          `json:"html_url"`
	ID                     int                              `json:"id"`
	Name                   string                           `json:"name"`
	NodeID                 string                           `json:"node_id"`
	Number                 int                              `json:"number"`
	OrganizationPermission OptProjectOrganizationPermission `json:"organization_permission"`
	OwnerURL               url.URL                          `json:"owner_url"`
	Private                OptBool                          `json:"private"`
	State                  string                           `json:"state"`
	UpdatedAt              time.Time                        `json:"updated_at"`
	URL                    url.URL                          `json:"url"`
}

func (*Project) projectsCreateForAuthenticatedUserRes() {}
func (*Project) projectsCreateForOrgRes()               {}
func (*Project) projectsCreateForRepoRes()              {}
func (*Project) projectsGetRes()                        {}
func (*Project) projectsUpdateRes()                     {}

// Ref: #/components/schemas/project-card
type ProjectCard struct {
	Archived   OptBool               `json:"archived"`
	ColumnName OptString             `json:"column_name"`
	ColumnURL  url.URL               `json:"column_url"`
	ContentURL OptURL                `json:"content_url"`
	CreatedAt  time.Time             `json:"created_at"`
	Creator    NilNullableSimpleUser `json:"creator"`
	ID         int                   `json:"id"`
	NodeID     string                `json:"node_id"`
	Note       NilString             `json:"note"`
	ProjectID  OptString             `json:"project_id"`
	ProjectURL url.URL               `json:"project_url"`
	UpdatedAt  time.Time             `json:"updated_at"`
	URL        url.URL               `json:"url"`
}

func (*ProjectCard) projectsGetCardRes()    {}
func (*ProjectCard) projectsUpdateCardRes() {}

// Ref: #/components/schemas/project-column
type ProjectColumn struct {
	CardsURL   url.URL   `json:"cards_url"`
	CreatedAt  time.Time `json:"created_at"`
	ID         int       `json:"id"`
	Name       string    `json:"name"`
	NodeID     string    `json:"node_id"`
	ProjectURL url.URL   `json:"project_url"`
	UpdatedAt  time.Time `json:"updated_at"`
	URL        url.URL   `json:"url"`
}

func (*ProjectColumn) projectsCreateColumnRes() {}
func (*ProjectColumn) projectsGetColumnRes()    {}
func (*ProjectColumn) projectsUpdateColumnRes() {}

type ProjectOrganizationPermission string

const (
	ProjectOrganizationPermissionRead  ProjectOrganizationPermission = "read"
	ProjectOrganizationPermissionWrite ProjectOrganizationPermission = "write"
	ProjectOrganizationPermissionAdmin ProjectOrganizationPermission = "admin"
	ProjectOrganizationPermissionNone  ProjectOrganizationPermission = "none"
)

// ProjectsAddCollaboratorNoContent is response for ProjectsAddCollaborator operation.
type ProjectsAddCollaboratorNoContent struct{}

// ProjectsAddCollaboratorNotModified is response for ProjectsAddCollaborator operation.
type ProjectsAddCollaboratorNotModified struct{}

type ProjectsAddCollaboratorReq struct {
	Permission OptProjectsAddCollaboratorReqPermission `json:"permission"`
}

type ProjectsAddCollaboratorReqPermission string

const (
	ProjectsAddCollaboratorReqPermissionRead  ProjectsAddCollaboratorReqPermission = "read"
	ProjectsAddCollaboratorReqPermissionWrite ProjectsAddCollaboratorReqPermission = "write"
	ProjectsAddCollaboratorReqPermissionAdmin ProjectsAddCollaboratorReqPermission = "admin"
)

type ProjectsCreateColumnApplicationJSONForbidden BasicError

func (*ProjectsCreateColumnApplicationJSONForbidden) projectsCreateColumnRes() {}

type ProjectsCreateColumnApplicationJSONUnauthorized BasicError

func (*ProjectsCreateColumnApplicationJSONUnauthorized) projectsCreateColumnRes() {}

// ProjectsCreateColumnNotModified is response for ProjectsCreateColumn operation.
type ProjectsCreateColumnNotModified struct{}

func (*ProjectsCreateColumnNotModified) projectsCreateColumnRes() {}

type ProjectsCreateColumnReq struct {
	Name string `json:"name"`
}

type ProjectsCreateForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ProjectsCreateForAuthenticatedUserApplicationJSONForbidden) projectsCreateForAuthenticatedUserRes() {
}

type ProjectsCreateForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ProjectsCreateForAuthenticatedUserApplicationJSONUnauthorized) projectsCreateForAuthenticatedUserRes() {
}

// ProjectsCreateForAuthenticatedUserNotModified is response for ProjectsCreateForAuthenticatedUser operation.
type ProjectsCreateForAuthenticatedUserNotModified struct{}

func (*ProjectsCreateForAuthenticatedUserNotModified) projectsCreateForAuthenticatedUserRes() {}

type ProjectsCreateForAuthenticatedUserReq struct {
	Body OptNilString `json:"body"`
	Name string       `json:"name"`
}

type ProjectsCreateForAuthenticatedUserUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*ProjectsCreateForAuthenticatedUserUnsupportedMediaType) projectsCreateForAuthenticatedUserRes() {
}

type ProjectsCreateForOrgApplicationJSONForbidden BasicError

func (*ProjectsCreateForOrgApplicationJSONForbidden) projectsCreateForOrgRes() {}

type ProjectsCreateForOrgApplicationJSONGone BasicError

func (*ProjectsCreateForOrgApplicationJSONGone) projectsCreateForOrgRes() {}

type ProjectsCreateForOrgApplicationJSONNotFound BasicError

func (*ProjectsCreateForOrgApplicationJSONNotFound) projectsCreateForOrgRes() {}

type ProjectsCreateForOrgApplicationJSONUnauthorized BasicError

func (*ProjectsCreateForOrgApplicationJSONUnauthorized) projectsCreateForOrgRes() {}

type ProjectsCreateForOrgReq struct {
	Body OptString `json:"body"`
	Name string    `json:"name"`
}

type ProjectsCreateForRepoApplicationJSONForbidden BasicError

func (*ProjectsCreateForRepoApplicationJSONForbidden) projectsCreateForRepoRes() {}

type ProjectsCreateForRepoApplicationJSONGone BasicError

func (*ProjectsCreateForRepoApplicationJSONGone) projectsCreateForRepoRes() {}

type ProjectsCreateForRepoApplicationJSONNotFound BasicError

func (*ProjectsCreateForRepoApplicationJSONNotFound) projectsCreateForRepoRes() {}

type ProjectsCreateForRepoApplicationJSONUnauthorized BasicError

func (*ProjectsCreateForRepoApplicationJSONUnauthorized) projectsCreateForRepoRes() {}

type ProjectsCreateForRepoReq struct {
	Body OptString `json:"body"`
	Name string    `json:"name"`
}

type ProjectsDeleteApplicationJSONGone BasicError

func (*ProjectsDeleteApplicationJSONGone) projectsDeleteRes() {}

type ProjectsDeleteApplicationJSONNotFound BasicError

func (*ProjectsDeleteApplicationJSONNotFound) projectsDeleteRes() {}

type ProjectsDeleteApplicationJSONUnauthorized BasicError

func (*ProjectsDeleteApplicationJSONUnauthorized) projectsDeleteRes() {}

type ProjectsDeleteCardApplicationJSONNotFound BasicError

func (*ProjectsDeleteCardApplicationJSONNotFound) projectsDeleteCardRes() {}

type ProjectsDeleteCardApplicationJSONUnauthorized BasicError

func (*ProjectsDeleteCardApplicationJSONUnauthorized) projectsDeleteCardRes() {}

type ProjectsDeleteCardForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Errors           []string  `json:"errors"`
	Message          OptString `json:"message"`
}

func (*ProjectsDeleteCardForbidden) projectsDeleteCardRes() {}

// ProjectsDeleteCardNoContent is response for ProjectsDeleteCard operation.
type ProjectsDeleteCardNoContent struct{}

func (*ProjectsDeleteCardNoContent) projectsDeleteCardRes() {}

// ProjectsDeleteCardNotModified is response for ProjectsDeleteCard operation.
type ProjectsDeleteCardNotModified struct{}

func (*ProjectsDeleteCardNotModified) projectsDeleteCardRes() {}

type ProjectsDeleteColumnApplicationJSONForbidden BasicError

func (*ProjectsDeleteColumnApplicationJSONForbidden) projectsDeleteColumnRes() {}

type ProjectsDeleteColumnApplicationJSONUnauthorized BasicError

func (*ProjectsDeleteColumnApplicationJSONUnauthorized) projectsDeleteColumnRes() {}

// ProjectsDeleteColumnNoContent is response for ProjectsDeleteColumn operation.
type ProjectsDeleteColumnNoContent struct{}

func (*ProjectsDeleteColumnNoContent) projectsDeleteColumnRes() {}

// ProjectsDeleteColumnNotModified is response for ProjectsDeleteColumn operation.
type ProjectsDeleteColumnNotModified struct{}

func (*ProjectsDeleteColumnNotModified) projectsDeleteColumnRes() {}

type ProjectsDeleteForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Errors           []string  `json:"errors"`
	Message          OptString `json:"message"`
}

func (*ProjectsDeleteForbidden) projectsDeleteRes() {}

// ProjectsDeleteNoContent is response for ProjectsDelete operation.
type ProjectsDeleteNoContent struct{}

func (*ProjectsDeleteNoContent) projectsDeleteRes() {}

// ProjectsDeleteNotModified is response for ProjectsDelete operation.
type ProjectsDeleteNotModified struct{}

func (*ProjectsDeleteNotModified) projectsDeleteRes() {}

type ProjectsGetApplicationJSONForbidden BasicError

func (*ProjectsGetApplicationJSONForbidden) projectsGetRes() {}

type ProjectsGetApplicationJSONUnauthorized BasicError

func (*ProjectsGetApplicationJSONUnauthorized) projectsGetRes() {}

type ProjectsGetCardApplicationJSONForbidden BasicError

func (*ProjectsGetCardApplicationJSONForbidden) projectsGetCardRes() {}

type ProjectsGetCardApplicationJSONNotFound BasicError

func (*ProjectsGetCardApplicationJSONNotFound) projectsGetCardRes() {}

type ProjectsGetCardApplicationJSONUnauthorized BasicError

func (*ProjectsGetCardApplicationJSONUnauthorized) projectsGetCardRes() {}

// ProjectsGetCardNotModified is response for ProjectsGetCard operation.
type ProjectsGetCardNotModified struct{}

func (*ProjectsGetCardNotModified) projectsGetCardRes() {}

type ProjectsGetColumnApplicationJSONForbidden BasicError

func (*ProjectsGetColumnApplicationJSONForbidden) projectsGetColumnRes() {}

type ProjectsGetColumnApplicationJSONNotFound BasicError

func (*ProjectsGetColumnApplicationJSONNotFound) projectsGetColumnRes() {}

type ProjectsGetColumnApplicationJSONUnauthorized BasicError

func (*ProjectsGetColumnApplicationJSONUnauthorized) projectsGetColumnRes() {}

// ProjectsGetColumnNotModified is response for ProjectsGetColumn operation.
type ProjectsGetColumnNotModified struct{}

func (*ProjectsGetColumnNotModified) projectsGetColumnRes() {}

// ProjectsGetNotModified is response for ProjectsGet operation.
type ProjectsGetNotModified struct{}

func (*ProjectsGetNotModified) projectsGetRes() {}

// ProjectsGetPermissionForUserNotModified is response for ProjectsGetPermissionForUser operation.
type ProjectsGetPermissionForUserNotModified struct{}

type ProjectsListCardsApplicationJSONForbidden BasicError

func (*ProjectsListCardsApplicationJSONForbidden) projectsListCardsRes() {}

type ProjectsListCardsApplicationJSONUnauthorized BasicError

func (*ProjectsListCardsApplicationJSONUnauthorized) projectsListCardsRes() {}

type ProjectsListCardsArchivedState string

const (
	ProjectsListCardsArchivedStateAll         ProjectsListCardsArchivedState = "all"
	ProjectsListCardsArchivedStateArchived    ProjectsListCardsArchivedState = "archived"
	ProjectsListCardsArchivedStateNotArchived ProjectsListCardsArchivedState = "not_archived"
)

// ProjectsListCardsNotModified is response for ProjectsListCards operation.
type ProjectsListCardsNotModified struct{}

func (*ProjectsListCardsNotModified) projectsListCardsRes() {}

type ProjectsListCardsOKApplicationJSON []ProjectCard

func (*ProjectsListCardsOKApplicationJSON) projectsListCardsRes() {}

type ProjectsListCollaboratorsAffiliation string

const (
	ProjectsListCollaboratorsAffiliationOutside ProjectsListCollaboratorsAffiliation = "outside"
	ProjectsListCollaboratorsAffiliationDirect  ProjectsListCollaboratorsAffiliation = "direct"
	ProjectsListCollaboratorsAffiliationAll     ProjectsListCollaboratorsAffiliation = "all"
)

// ProjectsListCollaboratorsNotModified is response for ProjectsListCollaborators operation.
type ProjectsListCollaboratorsNotModified struct{}

type ProjectsListColumnsApplicationJSONForbidden BasicError

func (*ProjectsListColumnsApplicationJSONForbidden) projectsListColumnsRes() {}

type ProjectsListColumnsApplicationJSONUnauthorized BasicError

func (*ProjectsListColumnsApplicationJSONUnauthorized) projectsListColumnsRes() {}

// ProjectsListColumnsNotModified is response for ProjectsListColumns operation.
type ProjectsListColumnsNotModified struct{}

func (*ProjectsListColumnsNotModified) projectsListColumnsRes() {}

type ProjectsListColumnsOKApplicationJSON []ProjectColumn

func (*ProjectsListColumnsOKApplicationJSON) projectsListColumnsRes() {}

type ProjectsListForOrgOKApplicationJSON []Project

func (*ProjectsListForOrgOKApplicationJSON) projectsListForOrgRes() {}

type ProjectsListForOrgState string

const (
	ProjectsListForOrgStateOpen   ProjectsListForOrgState = "open"
	ProjectsListForOrgStateClosed ProjectsListForOrgState = "closed"
	ProjectsListForOrgStateAll    ProjectsListForOrgState = "all"
)

type ProjectsListForRepoApplicationJSONForbidden BasicError

func (*ProjectsListForRepoApplicationJSONForbidden) projectsListForRepoRes() {}

type ProjectsListForRepoApplicationJSONGone BasicError

func (*ProjectsListForRepoApplicationJSONGone) projectsListForRepoRes() {}

type ProjectsListForRepoApplicationJSONNotFound BasicError

func (*ProjectsListForRepoApplicationJSONNotFound) projectsListForRepoRes() {}

type ProjectsListForRepoApplicationJSONUnauthorized BasicError

func (*ProjectsListForRepoApplicationJSONUnauthorized) projectsListForRepoRes() {}

type ProjectsListForRepoOKApplicationJSON []Project

func (*ProjectsListForRepoOKApplicationJSON) projectsListForRepoRes() {}

type ProjectsListForRepoState string

const (
	ProjectsListForRepoStateOpen   ProjectsListForRepoState = "open"
	ProjectsListForRepoStateClosed ProjectsListForRepoState = "closed"
	ProjectsListForRepoStateAll    ProjectsListForRepoState = "all"
)

type ProjectsListForUserState string

const (
	ProjectsListForUserStateOpen   ProjectsListForUserState = "open"
	ProjectsListForUserStateClosed ProjectsListForUserState = "closed"
	ProjectsListForUserStateAll    ProjectsListForUserState = "all"
)

type ProjectsMoveCardCreated struct{}

type ProjectsMoveCardForbidden struct {
	DocumentationURL OptString                             `json:"documentation_url"`
	Errors           []ProjectsMoveCardForbiddenErrorsItem `json:"errors"`
	Message          OptString                             `json:"message"`
}

type ProjectsMoveCardForbiddenErrorsItem struct {
	Code     OptString `json:"code"`
	Field    OptString `json:"field"`
	Message  OptString `json:"message"`
	Resource OptString `json:"resource"`
}

// ProjectsMoveCardNotModified is response for ProjectsMoveCard operation.
type ProjectsMoveCardNotModified struct{}

type ProjectsMoveCardReq struct {
	ColumnID OptInt `json:"column_id"`
	Position string `json:"position"`
}

type ProjectsMoveColumnApplicationJSONForbidden BasicError

func (*ProjectsMoveColumnApplicationJSONForbidden) projectsMoveColumnRes() {}

type ProjectsMoveColumnApplicationJSONUnauthorized BasicError

func (*ProjectsMoveColumnApplicationJSONUnauthorized) projectsMoveColumnRes() {}

type ProjectsMoveColumnCreated struct{}

func (*ProjectsMoveColumnCreated) projectsMoveColumnRes() {}

// ProjectsMoveColumnNotModified is response for ProjectsMoveColumn operation.
type ProjectsMoveColumnNotModified struct{}

func (*ProjectsMoveColumnNotModified) projectsMoveColumnRes() {}

type ProjectsMoveColumnReq struct {
	Position string `json:"position"`
}

// ProjectsRemoveCollaboratorNoContent is response for ProjectsRemoveCollaborator operation.
type ProjectsRemoveCollaboratorNoContent struct{}

// ProjectsRemoveCollaboratorNotModified is response for ProjectsRemoveCollaborator operation.
type ProjectsRemoveCollaboratorNotModified struct{}

type ProjectsUpdateApplicationJSONGone BasicError

func (*ProjectsUpdateApplicationJSONGone) projectsUpdateRes() {}

type ProjectsUpdateApplicationJSONUnauthorized BasicError

func (*ProjectsUpdateApplicationJSONUnauthorized) projectsUpdateRes() {}

type ProjectsUpdateCardApplicationJSONForbidden BasicError

func (*ProjectsUpdateCardApplicationJSONForbidden) projectsUpdateCardRes() {}

type ProjectsUpdateCardApplicationJSONNotFound BasicError

func (*ProjectsUpdateCardApplicationJSONNotFound) projectsUpdateCardRes() {}

type ProjectsUpdateCardApplicationJSONUnauthorized BasicError

func (*ProjectsUpdateCardApplicationJSONUnauthorized) projectsUpdateCardRes() {}

// ProjectsUpdateCardNotModified is response for ProjectsUpdateCard operation.
type ProjectsUpdateCardNotModified struct{}

func (*ProjectsUpdateCardNotModified) projectsUpdateCardRes() {}

type ProjectsUpdateCardReq struct {
	Archived OptBool      `json:"archived"`
	Note     OptNilString `json:"note"`
}

type ProjectsUpdateColumnApplicationJSONForbidden BasicError

func (*ProjectsUpdateColumnApplicationJSONForbidden) projectsUpdateColumnRes() {}

type ProjectsUpdateColumnApplicationJSONUnauthorized BasicError

func (*ProjectsUpdateColumnApplicationJSONUnauthorized) projectsUpdateColumnRes() {}

// ProjectsUpdateColumnNotModified is response for ProjectsUpdateColumn operation.
type ProjectsUpdateColumnNotModified struct{}

func (*ProjectsUpdateColumnNotModified) projectsUpdateColumnRes() {}

type ProjectsUpdateColumnReq struct {
	Name string `json:"name"`
}

type ProjectsUpdateForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Errors           []string  `json:"errors"`
	Message          OptString `json:"message"`
}

func (*ProjectsUpdateForbidden) projectsUpdateRes() {}

// ProjectsUpdateNotFound is response for ProjectsUpdate operation.
type ProjectsUpdateNotFound struct{}

func (*ProjectsUpdateNotFound) projectsUpdateRes() {}

// ProjectsUpdateNotModified is response for ProjectsUpdate operation.
type ProjectsUpdateNotModified struct{}

func (*ProjectsUpdateNotModified) projectsUpdateRes() {}

type ProjectsUpdateReq struct {
	Body                   OptNilString                               `json:"body"`
	Name                   OptString                                  `json:"name"`
	OrganizationPermission OptProjectsUpdateReqOrganizationPermission `json:"organization_permission"`
	Private                OptBool                                    `json:"private"`
	State                  OptString                                  `json:"state"`
}

type ProjectsUpdateReqOrganizationPermission string

const (
	ProjectsUpdateReqOrganizationPermissionRead  ProjectsUpdateReqOrganizationPermission = "read"
	ProjectsUpdateReqOrganizationPermissionWrite ProjectsUpdateReqOrganizationPermission = "write"
	ProjectsUpdateReqOrganizationPermissionAdmin ProjectsUpdateReqOrganizationPermission = "admin"
	ProjectsUpdateReqOrganizationPermissionNone  ProjectsUpdateReqOrganizationPermission = "none"
)

// Ref: #/components/schemas/protected-branch
type ProtectedBranch struct {
	AllowDeletions                 OptProtectedBranchAllowDeletions                 `json:"allow_deletions"`
	AllowForcePushes               OptProtectedBranchAllowForcePushes               `json:"allow_force_pushes"`
	EnforceAdmins                  OptProtectedBranchEnforceAdmins                  `json:"enforce_admins"`
	RequiredConversationResolution OptProtectedBranchRequiredConversationResolution `json:"required_conversation_resolution"`
	RequiredLinearHistory          OptProtectedBranchRequiredLinearHistory          `json:"required_linear_history"`
	RequiredPullRequestReviews     OptProtectedBranchRequiredPullRequestReviews     `json:"required_pull_request_reviews"`
	RequiredSignatures             OptProtectedBranchRequiredSignatures             `json:"required_signatures"`
	RequiredStatusChecks           OptStatusCheckPolicy                             `json:"required_status_checks"`
	Restrictions                   OptBranchRestrictionPolicy                       `json:"restrictions"`
	URL                            url.URL                                          `json:"url"`
}

func (*ProtectedBranch) reposUpdateBranchProtectionRes() {}

// Ref: #/components/schemas/protected-branch-admin-enforced
type ProtectedBranchAdminEnforced struct {
	Enabled bool    `json:"enabled"`
	URL     url.URL `json:"url"`
}

func (*ProtectedBranchAdminEnforced) reposCreateCommitSignatureProtectionRes() {}
func (*ProtectedBranchAdminEnforced) reposGetCommitSignatureProtectionRes()    {}

type ProtectedBranchAllowDeletions struct {
	Enabled bool `json:"enabled"`
}

type ProtectedBranchAllowForcePushes struct {
	Enabled bool `json:"enabled"`
}

type ProtectedBranchEnforceAdmins struct {
	Enabled bool    `json:"enabled"`
	URL     url.URL `json:"url"`
}

// Ref: #/components/schemas/protected-branch-pull-request-review
type ProtectedBranchPullRequestReview struct {
	DismissStaleReviews          bool                                                     `json:"dismiss_stale_reviews"`
	DismissalRestrictions        OptProtectedBranchPullRequestReviewDismissalRestrictions `json:"dismissal_restrictions"`
	RequireCodeOwnerReviews      bool                                                     `json:"require_code_owner_reviews"`
	RequiredApprovingReviewCount OptInt                                                   `json:"required_approving_review_count"`
	URL                          OptURL                                                   `json:"url"`
}

type ProtectedBranchPullRequestReviewDismissalRestrictions struct {
	Teams    []Team       `json:"teams"`
	TeamsURL OptString    `json:"teams_url"`
	URL      OptString    `json:"url"`
	Users    []SimpleUser `json:"users"`
	UsersURL OptString    `json:"users_url"`
}

type ProtectedBranchRequiredConversationResolution struct {
	Enabled OptBool `json:"enabled"`
}

type ProtectedBranchRequiredLinearHistory struct {
	Enabled bool `json:"enabled"`
}

type ProtectedBranchRequiredPullRequestReviews struct {
	DismissStaleReviews          OptBool                                                           `json:"dismiss_stale_reviews"`
	DismissalRestrictions        OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions `json:"dismissal_restrictions"`
	RequireCodeOwnerReviews      OptBool                                                           `json:"require_code_owner_reviews"`
	RequiredApprovingReviewCount OptInt                                                            `json:"required_approving_review_count"`
	URL                          url.URL                                                           `json:"url"`
}

type ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions struct {
	Teams    []Team       `json:"teams"`
	TeamsURL url.URL      `json:"teams_url"`
	URL      url.URL      `json:"url"`
	Users    []SimpleUser `json:"users"`
	UsersURL url.URL      `json:"users_url"`
}

type ProtectedBranchRequiredSignatures struct {
	Enabled bool    `json:"enabled"`
	URL     url.URL `json:"url"`
}

// Ref: #/components/schemas/public-user
type PublicUser struct {
	AvatarURL         url.URL           `json:"avatar_url"`
	Bio               NilString         `json:"bio"`
	Blog              NilString         `json:"blog"`
	Collaborators     OptInt            `json:"collaborators"`
	Company           NilString         `json:"company"`
	CreatedAt         time.Time         `json:"created_at"`
	DiskUsage         OptInt            `json:"disk_usage"`
	Email             NilString         `json:"email"`
	EventsURL         string            `json:"events_url"`
	Followers         int               `json:"followers"`
	FollowersURL      url.URL           `json:"followers_url"`
	Following         int               `json:"following"`
	FollowingURL      string            `json:"following_url"`
	GistsURL          string            `json:"gists_url"`
	GravatarID        NilString         `json:"gravatar_id"`
	Hireable          NilBool           `json:"hireable"`
	HTMLURL           url.URL           `json:"html_url"`
	ID                int               `json:"id"`
	Location          NilString         `json:"location"`
	Login             string            `json:"login"`
	Name              NilString         `json:"name"`
	NodeID            string            `json:"node_id"`
	OrganizationsURL  url.URL           `json:"organizations_url"`
	OwnedPrivateRepos OptInt            `json:"owned_private_repos"`
	Plan              OptPublicUserPlan `json:"plan"`
	PrivateGists      OptInt            `json:"private_gists"`
	PublicGists       int               `json:"public_gists"`
	PublicRepos       int               `json:"public_repos"`
	ReceivedEventsURL url.URL           `json:"received_events_url"`
	ReposURL          url.URL           `json:"repos_url"`
	SiteAdmin         bool              `json:"site_admin"`
	StarredURL        string            `json:"starred_url"`
	SubscriptionsURL  url.URL           `json:"subscriptions_url"`
	SuspendedAt       OptNilTime        `json:"suspended_at"`
	TotalPrivateRepos OptInt            `json:"total_private_repos"`
	TwitterUsername   OptNilString      `json:"twitter_username"`
	Type              string            `json:"type"`
	UpdatedAt         time.Time         `json:"updated_at"`
	URL               url.URL           `json:"url"`
}

type PublicUserPlan struct {
	Collaborators int    `json:"collaborators"`
	Name          string `json:"name"`
	PrivateRepos  int    `json:"private_repos"`
	Space         int    `json:"space"`
}

// Ref: #/components/schemas/pull-request
type PullRequest struct {
	Links               PullRequestLinks        `json:"_links"`
	ActiveLockReason    OptNilString            `json:"active_lock_reason"`
	Additions           int                     `json:"additions"`
	Assignee            NilNullableSimpleUser   `json:"assignee"`
	Assignees           OptNilSimpleUserArray   `json:"assignees"`
	AuthorAssociation   AuthorAssociation       `json:"author_association"`
	AutoMerge           NilAutoMerge            `json:"auto_merge"`
	Base                PullRequestBase         `json:"base"`
	Body                NilString               `json:"body"`
	ChangedFiles        int                     `json:"changed_files"`
	ClosedAt            NilTime                 `json:"closed_at"`
	Comments            int                     `json:"comments"`
	CommentsURL         url.URL                 `json:"comments_url"`
	Commits             int                     `json:"commits"`
	CommitsURL          url.URL                 `json:"commits_url"`
	CreatedAt           time.Time               `json:"created_at"`
	Deletions           int                     `json:"deletions"`
	DiffURL             url.URL                 `json:"diff_url"`
	Draft               OptBool                 `json:"draft"`
	Head                PullRequestHead         `json:"head"`
	HTMLURL             url.URL                 `json:"html_url"`
	ID                  int                     `json:"id"`
	IssueURL            url.URL                 `json:"issue_url"`
	Labels              []PullRequestLabelsItem `json:"labels"`
	Locked              bool                    `json:"locked"`
	MaintainerCanModify bool                    `json:"maintainer_can_modify"`
	MergeCommitSha      NilString               `json:"merge_commit_sha"`
	Mergeable           NilBool                 `json:"mergeable"`
	MergeableState      string                  `json:"mergeable_state"`
	Merged              bool                    `json:"merged"`
	MergedAt            NilTime                 `json:"merged_at"`
	MergedBy            NilNullableSimpleUser   `json:"merged_by"`
	Milestone           NilNullableMilestone    `json:"milestone"`
	NodeID              string                  `json:"node_id"`
	Number              int                     `json:"number"`
	PatchURL            url.URL                 `json:"patch_url"`
	Rebaseable          OptNilBool              `json:"rebaseable"`
	RequestedReviewers  OptNilSimpleUserArray   `json:"requested_reviewers"`
	RequestedTeams      OptNilTeamSimpleArray   `json:"requested_teams"`
	ReviewCommentURL    string                  `json:"review_comment_url"`
	ReviewComments      int                     `json:"review_comments"`
	ReviewCommentsURL   url.URL                 `json:"review_comments_url"`
	State               PullRequestState        `json:"state"`
	StatusesURL         url.URL                 `json:"statuses_url"`
	Title               string                  `json:"title"`
	UpdatedAt           time.Time               `json:"updated_at"`
	URL                 url.URL                 `json:"url"`
	User                NilNullableSimpleUser   `json:"user"`
}

func (*PullRequest) pullsGetRes() {}

type PullRequestBase struct {
	Label string              `json:"label"`
	Ref   string              `json:"ref"`
	Repo  PullRequestBaseRepo `json:"repo"`
	Sha   string              `json:"sha"`
	User  PullRequestBaseUser `json:"user"`
}

type PullRequestBaseRepo struct {
	AllowForking     OptBool                           `json:"allow_forking"`
	AllowMergeCommit OptBool                           `json:"allow_merge_commit"`
	AllowRebaseMerge OptBool                           `json:"allow_rebase_merge"`
	AllowSquashMerge OptBool                           `json:"allow_squash_merge"`
	ArchiveURL       string                            `json:"archive_url"`
	Archived         bool                              `json:"archived"`
	AssigneesURL     string                            `json:"assignees_url"`
	BlobsURL         string                            `json:"blobs_url"`
	BranchesURL      string                            `json:"branches_url"`
	CloneURL         string                            `json:"clone_url"`
	CollaboratorsURL string                            `json:"collaborators_url"`
	CommentsURL      string                            `json:"comments_url"`
	CommitsURL       string                            `json:"commits_url"`
	CompareURL       string                            `json:"compare_url"`
	ContentsURL      string                            `json:"contents_url"`
	ContributorsURL  url.URL                           `json:"contributors_url"`
	CreatedAt        time.Time                         `json:"created_at"`
	DefaultBranch    string                            `json:"default_branch"`
	DeploymentsURL   url.URL                           `json:"deployments_url"`
	Description      NilString                         `json:"description"`
	Disabled         bool                              `json:"disabled"`
	DownloadsURL     url.URL                           `json:"downloads_url"`
	EventsURL        url.URL                           `json:"events_url"`
	Fork             bool                              `json:"fork"`
	Forks            int                               `json:"forks"`
	ForksCount       int                               `json:"forks_count"`
	ForksURL         url.URL                           `json:"forks_url"`
	FullName         string                            `json:"full_name"`
	GitCommitsURL    string                            `json:"git_commits_url"`
	GitRefsURL       string                            `json:"git_refs_url"`
	GitTagsURL       string                            `json:"git_tags_url"`
	GitURL           string                            `json:"git_url"`
	HasDownloads     bool                              `json:"has_downloads"`
	HasIssues        bool                              `json:"has_issues"`
	HasPages         bool                              `json:"has_pages"`
	HasProjects      bool                              `json:"has_projects"`
	HasWiki          bool                              `json:"has_wiki"`
	Homepage         NilURL                            `json:"homepage"`
	HooksURL         url.URL                           `json:"hooks_url"`
	HTMLURL          url.URL                           `json:"html_url"`
	ID               int                               `json:"id"`
	IssueCommentURL  string                            `json:"issue_comment_url"`
	IssueEventsURL   string                            `json:"issue_events_url"`
	IssuesURL        string                            `json:"issues_url"`
	KeysURL          string                            `json:"keys_url"`
	LabelsURL        string                            `json:"labels_url"`
	Language         NilString                         `json:"language"`
	LanguagesURL     url.URL                           `json:"languages_url"`
	License          NilNullableLicenseSimple          `json:"license"`
	MasterBranch     OptString                         `json:"master_branch"`
	MergesURL        url.URL                           `json:"merges_url"`
	MilestonesURL    string                            `json:"milestones_url"`
	MirrorURL        NilURL                            `json:"mirror_url"`
	Name             string                            `json:"name"`
	NodeID           string                            `json:"node_id"`
	NotificationsURL string                            `json:"notifications_url"`
	OpenIssues       int                               `json:"open_issues"`
	OpenIssuesCount  int                               `json:"open_issues_count"`
	Owner            PullRequestBaseRepoOwner          `json:"owner"`
	Permissions      OptPullRequestBaseRepoPermissions `json:"permissions"`
	Private          bool                              `json:"private"`
	PullsURL         string                            `json:"pulls_url"`
	PushedAt         time.Time                         `json:"pushed_at"`
	ReleasesURL      string                            `json:"releases_url"`
	Size             int                               `json:"size"`
	SSHURL           string                            `json:"ssh_url"`
	StargazersCount  int                               `json:"stargazers_count"`
	StargazersURL    url.URL                           `json:"stargazers_url"`
	StatusesURL      string                            `json:"statuses_url"`
	SubscribersURL   url.URL                           `json:"subscribers_url"`
	SubscriptionURL  url.URL                           `json:"subscription_url"`
	SvnURL           url.URL                           `json:"svn_url"`
	TagsURL          url.URL                           `json:"tags_url"`
	TeamsURL         url.URL                           `json:"teams_url"`
	TempCloneToken   OptString                         `json:"temp_clone_token"`
	Topics           []string                          `json:"topics"`
	TreesURL         string                            `json:"trees_url"`
	UpdatedAt        time.Time                         `json:"updated_at"`
	URL              url.URL                           `json:"url"`
	Watchers         int                               `json:"watchers"`
	WatchersCount    int                               `json:"watchers_count"`
}

type PullRequestBaseRepoOwner struct {
	AvatarURL         url.URL   `json:"avatar_url"`
	EventsURL         string    `json:"events_url"`
	FollowersURL      url.URL   `json:"followers_url"`
	FollowingURL      string    `json:"following_url"`
	GistsURL          string    `json:"gists_url"`
	GravatarID        NilString `json:"gravatar_id"`
	HTMLURL           url.URL   `json:"html_url"`
	ID                int       `json:"id"`
	Login             string    `json:"login"`
	NodeID            string    `json:"node_id"`
	OrganizationsURL  url.URL   `json:"organizations_url"`
	ReceivedEventsURL url.URL   `json:"received_events_url"`
	ReposURL          url.URL   `json:"repos_url"`
	SiteAdmin         bool      `json:"site_admin"`
	StarredURL        string    `json:"starred_url"`
	SubscriptionsURL  url.URL   `json:"subscriptions_url"`
	Type              string    `json:"type"`
	URL               url.URL   `json:"url"`
}

type PullRequestBaseRepoPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

type PullRequestBaseUser struct {
	AvatarURL         url.URL   `json:"avatar_url"`
	EventsURL         string    `json:"events_url"`
	FollowersURL      url.URL   `json:"followers_url"`
	FollowingURL      string    `json:"following_url"`
	GistsURL          string    `json:"gists_url"`
	GravatarID        NilString `json:"gravatar_id"`
	HTMLURL           url.URL   `json:"html_url"`
	ID                int       `json:"id"`
	Login             string    `json:"login"`
	NodeID            string    `json:"node_id"`
	OrganizationsURL  url.URL   `json:"organizations_url"`
	ReceivedEventsURL url.URL   `json:"received_events_url"`
	ReposURL          url.URL   `json:"repos_url"`
	SiteAdmin         bool      `json:"site_admin"`
	StarredURL        string    `json:"starred_url"`
	SubscriptionsURL  url.URL   `json:"subscriptions_url"`
	Type              string    `json:"type"`
	URL               url.URL   `json:"url"`
}

type PullRequestHead struct {
	Label string                 `json:"label"`
	Ref   string                 `json:"ref"`
	Repo  NilPullRequestHeadRepo `json:"repo"`
	Sha   string                 `json:"sha"`
	User  PullRequestHeadUser    `json:"user"`
}

type PullRequestHeadRepo struct {
	AllowForking     OptBool                           `json:"allow_forking"`
	AllowMergeCommit OptBool                           `json:"allow_merge_commit"`
	AllowRebaseMerge OptBool                           `json:"allow_rebase_merge"`
	AllowSquashMerge OptBool                           `json:"allow_squash_merge"`
	ArchiveURL       string                            `json:"archive_url"`
	Archived         bool                              `json:"archived"`
	AssigneesURL     string                            `json:"assignees_url"`
	BlobsURL         string                            `json:"blobs_url"`
	BranchesURL      string                            `json:"branches_url"`
	CloneURL         string                            `json:"clone_url"`
	CollaboratorsURL string                            `json:"collaborators_url"`
	CommentsURL      string                            `json:"comments_url"`
	CommitsURL       string                            `json:"commits_url"`
	CompareURL       string                            `json:"compare_url"`
	ContentsURL      string                            `json:"contents_url"`
	ContributorsURL  url.URL                           `json:"contributors_url"`
	CreatedAt        time.Time                         `json:"created_at"`
	DefaultBranch    string                            `json:"default_branch"`
	DeploymentsURL   url.URL                           `json:"deployments_url"`
	Description      NilString                         `json:"description"`
	Disabled         bool                              `json:"disabled"`
	DownloadsURL     url.URL                           `json:"downloads_url"`
	EventsURL        url.URL                           `json:"events_url"`
	Fork             bool                              `json:"fork"`
	Forks            int                               `json:"forks"`
	ForksCount       int                               `json:"forks_count"`
	ForksURL         url.URL                           `json:"forks_url"`
	FullName         string                            `json:"full_name"`
	GitCommitsURL    string                            `json:"git_commits_url"`
	GitRefsURL       string                            `json:"git_refs_url"`
	GitTagsURL       string                            `json:"git_tags_url"`
	GitURL           string                            `json:"git_url"`
	HasDownloads     bool                              `json:"has_downloads"`
	HasIssues        bool                              `json:"has_issues"`
	HasPages         bool                              `json:"has_pages"`
	HasProjects      bool                              `json:"has_projects"`
	HasWiki          bool                              `json:"has_wiki"`
	Homepage         NilURL                            `json:"homepage"`
	HooksURL         url.URL                           `json:"hooks_url"`
	HTMLURL          url.URL                           `json:"html_url"`
	ID               int                               `json:"id"`
	IssueCommentURL  string                            `json:"issue_comment_url"`
	IssueEventsURL   string                            `json:"issue_events_url"`
	IssuesURL        string                            `json:"issues_url"`
	KeysURL          string                            `json:"keys_url"`
	LabelsURL        string                            `json:"labels_url"`
	Language         NilString                         `json:"language"`
	LanguagesURL     url.URL                           `json:"languages_url"`
	License          NilPullRequestHeadRepoLicense     `json:"license"`
	MasterBranch     OptString                         `json:"master_branch"`
	MergesURL        url.URL                           `json:"merges_url"`
	MilestonesURL    string                            `json:"milestones_url"`
	MirrorURL        NilURL                            `json:"mirror_url"`
	Name             string                            `json:"name"`
	NodeID           string                            `json:"node_id"`
	NotificationsURL string                            `json:"notifications_url"`
	OpenIssues       int                               `json:"open_issues"`
	OpenIssuesCount  int                               `json:"open_issues_count"`
	Owner            PullRequestHeadRepoOwner          `json:"owner"`
	Permissions      OptPullRequestHeadRepoPermissions `json:"permissions"`
	Private          bool                              `json:"private"`
	PullsURL         string                            `json:"pulls_url"`
	PushedAt         time.Time                         `json:"pushed_at"`
	ReleasesURL      string                            `json:"releases_url"`
	Size             int                               `json:"size"`
	SSHURL           string                            `json:"ssh_url"`
	StargazersCount  int                               `json:"stargazers_count"`
	StargazersURL    url.URL                           `json:"stargazers_url"`
	StatusesURL      string                            `json:"statuses_url"`
	SubscribersURL   url.URL                           `json:"subscribers_url"`
	SubscriptionURL  url.URL                           `json:"subscription_url"`
	SvnURL           url.URL                           `json:"svn_url"`
	TagsURL          url.URL                           `json:"tags_url"`
	TeamsURL         url.URL                           `json:"teams_url"`
	TempCloneToken   OptString                         `json:"temp_clone_token"`
	Topics           []string                          `json:"topics"`
	TreesURL         string                            `json:"trees_url"`
	UpdatedAt        time.Time                         `json:"updated_at"`
	URL              url.URL                           `json:"url"`
	Watchers         int                               `json:"watchers"`
	WatchersCount    int                               `json:"watchers_count"`
}

type PullRequestHeadRepoLicense struct {
	Key    string    `json:"key"`
	Name   string    `json:"name"`
	NodeID string    `json:"node_id"`
	SpdxID NilString `json:"spdx_id"`
	URL    NilURL    `json:"url"`
}

type PullRequestHeadRepoOwner struct {
	AvatarURL         url.URL   `json:"avatar_url"`
	EventsURL         string    `json:"events_url"`
	FollowersURL      url.URL   `json:"followers_url"`
	FollowingURL      string    `json:"following_url"`
	GistsURL          string    `json:"gists_url"`
	GravatarID        NilString `json:"gravatar_id"`
	HTMLURL           url.URL   `json:"html_url"`
	ID                int       `json:"id"`
	Login             string    `json:"login"`
	NodeID            string    `json:"node_id"`
	OrganizationsURL  url.URL   `json:"organizations_url"`
	ReceivedEventsURL url.URL   `json:"received_events_url"`
	ReposURL          url.URL   `json:"repos_url"`
	SiteAdmin         bool      `json:"site_admin"`
	StarredURL        string    `json:"starred_url"`
	SubscriptionsURL  url.URL   `json:"subscriptions_url"`
	Type              string    `json:"type"`
	URL               url.URL   `json:"url"`
}

type PullRequestHeadRepoPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

type PullRequestHeadUser struct {
	AvatarURL         url.URL   `json:"avatar_url"`
	EventsURL         string    `json:"events_url"`
	FollowersURL      url.URL   `json:"followers_url"`
	FollowingURL      string    `json:"following_url"`
	GistsURL          string    `json:"gists_url"`
	GravatarID        NilString `json:"gravatar_id"`
	HTMLURL           url.URL   `json:"html_url"`
	ID                int       `json:"id"`
	Login             string    `json:"login"`
	NodeID            string    `json:"node_id"`
	OrganizationsURL  url.URL   `json:"organizations_url"`
	ReceivedEventsURL url.URL   `json:"received_events_url"`
	ReposURL          url.URL   `json:"repos_url"`
	SiteAdmin         bool      `json:"site_admin"`
	StarredURL        string    `json:"starred_url"`
	SubscriptionsURL  url.URL   `json:"subscriptions_url"`
	Type              string    `json:"type"`
	URL               url.URL   `json:"url"`
}

type PullRequestLabelsItem struct {
	Color       OptString    `json:"color"`
	Default     OptBool      `json:"default"`
	Description OptNilString `json:"description"`
	ID          OptInt64     `json:"id"`
	Name        OptString    `json:"name"`
	NodeID      OptString    `json:"node_id"`
	URL         OptString    `json:"url"`
}

type PullRequestLinks struct {
	Comments       Link `json:"comments"`
	Commits        Link `json:"commits"`
	HTML           Link `json:"html"`
	Issue          Link `json:"issue"`
	ReviewComment  Link `json:"review_comment"`
	ReviewComments Link `json:"review_comments"`
	Self           Link `json:"self"`
	Statuses       Link `json:"statuses"`
}

// Ref: #/components/schemas/pull-request-merge-result
type PullRequestMergeResult struct {
	Merged  bool   `json:"merged"`
	Message string `json:"message"`
	Sha     string `json:"sha"`
}

// Ref: #/components/schemas/pull-request-minimal
type PullRequestMinimal struct {
	Base   PullRequestMinimalBase `json:"base"`
	Head   PullRequestMinimalHead `json:"head"`
	ID     int                    `json:"id"`
	Number int                    `json:"number"`
	URL    string                 `json:"url"`
}

type PullRequestMinimalBase struct {
	Ref  string                     `json:"ref"`
	Repo PullRequestMinimalBaseRepo `json:"repo"`
	Sha  string                     `json:"sha"`
}

type PullRequestMinimalBaseRepo struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
	URL  string `json:"url"`
}

type PullRequestMinimalHead struct {
	Ref  string                     `json:"ref"`
	Repo PullRequestMinimalHeadRepo `json:"repo"`
	Sha  string                     `json:"sha"`
}

type PullRequestMinimalHeadRepo struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
	URL  string `json:"url"`
}

// Ref: #/components/schemas/pull-request-review
type PullRequestReview struct {
	Links             PullRequestReviewLinks `json:"_links"`
	AuthorAssociation AuthorAssociation      `json:"author_association"`
	Body              string                 `json:"body"`
	BodyHTML          OptString              `json:"body_html"`
	BodyText          OptString              `json:"body_text"`
	CommitID          string                 `json:"commit_id"`
	HTMLURL           url.URL                `json:"html_url"`
	ID                int                    `json:"id"`
	NodeID            string                 `json:"node_id"`
	PullRequestURL    url.URL                `json:"pull_request_url"`
	State             string                 `json:"state"`
	SubmittedAt       OptTime                `json:"submitted_at"`
	User              NilNullableSimpleUser  `json:"user"`
}

func (*PullRequestReview) pullsCreateReviewRes()        {}
func (*PullRequestReview) pullsDeletePendingReviewRes() {}
func (*PullRequestReview) pullsDismissReviewRes()       {}
func (*PullRequestReview) pullsGetReviewRes()           {}
func (*PullRequestReview) pullsSubmitReviewRes()        {}
func (*PullRequestReview) pullsUpdateReviewRes()        {}

// Ref: #/components/schemas/pull-request-review-comment
type PullRequestReviewComment struct {
	Links               PullRequestReviewCommentLinks           `json:"_links"`
	AuthorAssociation   AuthorAssociation                       `json:"author_association"`
	Body                string                                  `json:"body"`
	BodyHTML            OptString                               `json:"body_html"`
	BodyText            OptString                               `json:"body_text"`
	CommitID            string                                  `json:"commit_id"`
	CreatedAt           time.Time                               `json:"created_at"`
	DiffHunk            string                                  `json:"diff_hunk"`
	HTMLURL             url.URL                                 `json:"html_url"`
	ID                  int                                     `json:"id"`
	InReplyToID         OptInt                                  `json:"in_reply_to_id"`
	Line                OptInt                                  `json:"line"`
	NodeID              string                                  `json:"node_id"`
	OriginalCommitID    string                                  `json:"original_commit_id"`
	OriginalLine        OptInt                                  `json:"original_line"`
	OriginalPosition    int                                     `json:"original_position"`
	OriginalStartLine   OptNilInt                               `json:"original_start_line"`
	Path                string                                  `json:"path"`
	Position            int                                     `json:"position"`
	PullRequestReviewID NilInt                                  `json:"pull_request_review_id"`
	PullRequestURL      url.URL                                 `json:"pull_request_url"`
	Reactions           OptReactionRollup                       `json:"reactions"`
	Side                OptPullRequestReviewCommentSide         `json:"side"`
	StartLine           OptNilInt                               `json:"start_line"`
	StartSide           OptNilPullRequestReviewCommentStartSide `json:"start_side"`
	UpdatedAt           time.Time                               `json:"updated_at"`
	URL                 string                                  `json:"url"`
	User                SimpleUser                              `json:"user"`
}

func (*PullRequestReviewComment) pullsCreateReplyForReviewCommentRes() {}
func (*PullRequestReviewComment) pullsGetReviewCommentRes()            {}

type PullRequestReviewCommentLinks struct {
	HTML        PullRequestReviewCommentLinksHTML        `json:"html"`
	PullRequest PullRequestReviewCommentLinksPullRequest `json:"pull_request"`
	Self        PullRequestReviewCommentLinksSelf        `json:"self"`
}

type PullRequestReviewCommentLinksHTML struct {
	Href url.URL `json:"href"`
}

type PullRequestReviewCommentLinksPullRequest struct {
	Href url.URL `json:"href"`
}

type PullRequestReviewCommentLinksSelf struct {
	Href url.URL `json:"href"`
}

type PullRequestReviewCommentSide string

const (
	PullRequestReviewCommentSideLEFT  PullRequestReviewCommentSide = "LEFT"
	PullRequestReviewCommentSideRIGHT PullRequestReviewCommentSide = "RIGHT"
)

type PullRequestReviewCommentStartSide string

const (
	PullRequestReviewCommentStartSideLEFT  PullRequestReviewCommentStartSide = "LEFT"
	PullRequestReviewCommentStartSideRIGHT PullRequestReviewCommentStartSide = "RIGHT"
)

type PullRequestReviewLinks struct {
	HTML        PullRequestReviewLinksHTML        `json:"html"`
	PullRequest PullRequestReviewLinksPullRequest `json:"pull_request"`
}

type PullRequestReviewLinksHTML struct {
	Href string `json:"href"`
}

type PullRequestReviewLinksPullRequest struct {
	Href string `json:"href"`
}

// Ref: #/components/schemas/pull-request-review-request
type PullRequestReviewRequest struct {
	Teams []Team       `json:"teams"`
	Users []SimpleUser `json:"users"`
}

// Ref: #/components/schemas/pull-request-simple
type PullRequestSimple struct {
	Links              PullRequestSimpleLinks        `json:"_links"`
	ActiveLockReason   OptNilString                  `json:"active_lock_reason"`
	Assignee           NilNullableSimpleUser         `json:"assignee"`
	Assignees          OptNilSimpleUserArray         `json:"assignees"`
	AuthorAssociation  AuthorAssociation             `json:"author_association"`
	AutoMerge          NilAutoMerge                  `json:"auto_merge"`
	Base               PullRequestSimpleBase         `json:"base"`
	Body               NilString                     `json:"body"`
	ClosedAt           NilTime                       `json:"closed_at"`
	CommentsURL        url.URL                       `json:"comments_url"`
	CommitsURL         url.URL                       `json:"commits_url"`
	CreatedAt          time.Time                     `json:"created_at"`
	DiffURL            url.URL                       `json:"diff_url"`
	Draft              OptBool                       `json:"draft"`
	Head               PullRequestSimpleHead         `json:"head"`
	HTMLURL            url.URL                       `json:"html_url"`
	ID                 int                           `json:"id"`
	IssueURL           url.URL                       `json:"issue_url"`
	Labels             []PullRequestSimpleLabelsItem `json:"labels"`
	Locked             bool                          `json:"locked"`
	MergeCommitSha     NilString                     `json:"merge_commit_sha"`
	MergedAt           NilTime                       `json:"merged_at"`
	Milestone          NilNullableMilestone          `json:"milestone"`
	NodeID             string                        `json:"node_id"`
	Number             int                           `json:"number"`
	PatchURL           url.URL                       `json:"patch_url"`
	RequestedReviewers OptNilSimpleUserArray         `json:"requested_reviewers"`
	RequestedTeams     OptNilTeamArray               `json:"requested_teams"`
	ReviewCommentURL   string                        `json:"review_comment_url"`
	ReviewCommentsURL  url.URL                       `json:"review_comments_url"`
	State              string                        `json:"state"`
	StatusesURL        url.URL                       `json:"statuses_url"`
	Title              string                        `json:"title"`
	UpdatedAt          time.Time                     `json:"updated_at"`
	URL                url.URL                       `json:"url"`
	User               NilNullableSimpleUser         `json:"user"`
}

type PullRequestSimpleBase struct {
	Label string                `json:"label"`
	Ref   string                `json:"ref"`
	Repo  Repository            `json:"repo"`
	Sha   string                `json:"sha"`
	User  NilNullableSimpleUser `json:"user"`
}

type PullRequestSimpleHead struct {
	Label string                `json:"label"`
	Ref   string                `json:"ref"`
	Repo  Repository            `json:"repo"`
	Sha   string                `json:"sha"`
	User  NilNullableSimpleUser `json:"user"`
}

type PullRequestSimpleLabelsItem struct {
	Color       OptString `json:"color"`
	Default     OptBool   `json:"default"`
	Description OptString `json:"description"`
	ID          OptInt64  `json:"id"`
	Name        OptString `json:"name"`
	NodeID      OptString `json:"node_id"`
	URL         OptString `json:"url"`
}

type PullRequestSimpleLinks struct {
	Comments       Link `json:"comments"`
	Commits        Link `json:"commits"`
	HTML           Link `json:"html"`
	Issue          Link `json:"issue"`
	ReviewComment  Link `json:"review_comment"`
	ReviewComments Link `json:"review_comments"`
	Self           Link `json:"self"`
	Statuses       Link `json:"statuses"`
}

type PullRequestState string

const (
	PullRequestStateOpen   PullRequestState = "open"
	PullRequestStateClosed PullRequestState = "closed"
)

// PullsCheckIfMergedNoContent is response for PullsCheckIfMerged operation.
type PullsCheckIfMergedNoContent struct{}

func (*PullsCheckIfMergedNoContent) pullsCheckIfMergedRes() {}

// PullsCheckIfMergedNotFound is response for PullsCheckIfMerged operation.
type PullsCheckIfMergedNotFound struct{}

func (*PullsCheckIfMergedNotFound) pullsCheckIfMergedRes() {}

type PullsCreateReplyForReviewCommentReq struct {
	Body string `json:"body"`
}

type PullsCreateReq struct {
	Base                string    `json:"base"`
	Body                OptString `json:"body"`
	Draft               OptBool   `json:"draft"`
	Head                string    `json:"head"`
	Issue               OptInt    `json:"issue"`
	MaintainerCanModify OptBool   `json:"maintainer_can_modify"`
	Title               OptString `json:"title"`
}

type PullsCreateReviewCommentReq struct {
	Body      string                                  `json:"body"`
	CommitID  OptString                               `json:"commit_id"`
	InReplyTo OptInt                                  `json:"in_reply_to"`
	Line      OptInt                                  `json:"line"`
	Path      OptString                               `json:"path"`
	Position  OptInt                                  `json:"position"`
	Side      OptPullsCreateReviewCommentReqSide      `json:"side"`
	StartLine OptInt                                  `json:"start_line"`
	StartSide OptPullsCreateReviewCommentReqStartSide `json:"start_side"`
}

type PullsCreateReviewCommentReqSide string

const (
	PullsCreateReviewCommentReqSideLEFT  PullsCreateReviewCommentReqSide = "LEFT"
	PullsCreateReviewCommentReqSideRIGHT PullsCreateReviewCommentReqSide = "RIGHT"
)

type PullsCreateReviewCommentReqStartSide string

const (
	PullsCreateReviewCommentReqStartSideLEFT  PullsCreateReviewCommentReqStartSide = "LEFT"
	PullsCreateReviewCommentReqStartSideRIGHT PullsCreateReviewCommentReqStartSide = "RIGHT"
	PullsCreateReviewCommentReqStartSideSide  PullsCreateReviewCommentReqStartSide = "side"
)

type PullsCreateReviewReq struct {
	Body     OptString                          `json:"body"`
	Comments []PullsCreateReviewReqCommentsItem `json:"comments"`
	CommitID OptString                          `json:"commit_id"`
	Event    OptPullsCreateReviewReqEvent       `json:"event"`
}

type PullsCreateReviewReqCommentsItem struct {
	Body      string    `json:"body"`
	Line      OptInt    `json:"line"`
	Path      string    `json:"path"`
	Position  OptInt    `json:"position"`
	Side      OptString `json:"side"`
	StartLine OptInt    `json:"start_line"`
	StartSide OptString `json:"start_side"`
}

type PullsCreateReviewReqEvent string

const (
	PullsCreateReviewReqEventAPPROVE        PullsCreateReviewReqEvent = "APPROVE"
	PullsCreateReviewReqEventREQUESTCHANGES PullsCreateReviewReqEvent = "REQUEST_CHANGES"
	PullsCreateReviewReqEventCOMMENT        PullsCreateReviewReqEvent = "COMMENT"
)

// PullsDeleteReviewCommentNoContent is response for PullsDeleteReviewComment operation.
type PullsDeleteReviewCommentNoContent struct{}

func (*PullsDeleteReviewCommentNoContent) pullsDeleteReviewCommentRes() {}

type PullsDismissReviewReq struct {
	Event   OptString `json:"event"`
	Message string    `json:"message"`
}

type PullsGetApplicationJSONInternalServerError BasicError

func (*PullsGetApplicationJSONInternalServerError) pullsGetRes() {}

type PullsGetApplicationJSONNotFound BasicError

func (*PullsGetApplicationJSONNotFound) pullsGetRes() {}

// PullsGetNotModified is response for PullsGet operation.
type PullsGetNotModified struct{}

func (*PullsGetNotModified) pullsGetRes() {}

type PullsListCommentsForReviewOKApplicationJSON []ReviewComment

func (*PullsListCommentsForReviewOKApplicationJSON) pullsListCommentsForReviewRes() {}

type PullsListDirection string

const (
	PullsListDirectionAsc  PullsListDirection = "asc"
	PullsListDirectionDesc PullsListDirection = "desc"
)

// PullsListNotModified is response for PullsList operation.
type PullsListNotModified struct{}

type PullsListReviewCommentsDirection string

const (
	PullsListReviewCommentsDirectionAsc  PullsListReviewCommentsDirection = "asc"
	PullsListReviewCommentsDirectionDesc PullsListReviewCommentsDirection = "desc"
)

type PullsListReviewCommentsForRepoDirection string

const (
	PullsListReviewCommentsForRepoDirectionAsc  PullsListReviewCommentsForRepoDirection = "asc"
	PullsListReviewCommentsForRepoDirectionDesc PullsListReviewCommentsForRepoDirection = "desc"
)

type PullsListReviewCommentsForRepoSort string

const (
	PullsListReviewCommentsForRepoSortCreated   PullsListReviewCommentsForRepoSort = "created"
	PullsListReviewCommentsForRepoSortUpdated   PullsListReviewCommentsForRepoSort = "updated"
	PullsListReviewCommentsForRepoSortCreatedAt PullsListReviewCommentsForRepoSort = "created_at"
)

type PullsListReviewCommentsSort string

const (
	PullsListReviewCommentsSortCreated PullsListReviewCommentsSort = "created"
	PullsListReviewCommentsSortUpdated PullsListReviewCommentsSort = "updated"
)

type PullsListSort string

const (
	PullsListSortCreated          PullsListSort = "created"
	PullsListSortUpdated          PullsListSort = "updated"
	PullsListSortPopularity       PullsListSort = "popularity"
	PullsListSortLongMinusRunning PullsListSort = "long-running"
)

type PullsListState string

const (
	PullsListStateOpen   PullsListState = "open"
	PullsListStateClosed PullsListState = "closed"
	PullsListStateAll    PullsListState = "all"
)

type PullsMergeConflict struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

type PullsMergeMethodNotAllowed struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

type PullsMergeReq struct {
	CommitMessage OptString                   `json:"commit_message"`
	CommitTitle   OptString                   `json:"commit_title"`
	MergeMethod   OptPullsMergeReqMergeMethod `json:"merge_method"`
	Sha           OptString                   `json:"sha"`
}

type PullsMergeReqMergeMethod string

const (
	PullsMergeReqMergeMethodMerge  PullsMergeReqMergeMethod = "merge"
	PullsMergeReqMergeMethodSquash PullsMergeReqMergeMethod = "squash"
	PullsMergeReqMergeMethodRebase PullsMergeReqMergeMethod = "rebase"
)

type PullsRemoveRequestedReviewersReq struct {
	Reviewers     []string `json:"reviewers"`
	TeamReviewers []string `json:"team_reviewers"`
}

type PullsSubmitReviewApplicationJSONForbidden BasicError

func (*PullsSubmitReviewApplicationJSONForbidden) pullsSubmitReviewRes() {}

type PullsSubmitReviewApplicationJSONNotFound BasicError

func (*PullsSubmitReviewApplicationJSONNotFound) pullsSubmitReviewRes() {}

type PullsSubmitReviewReq struct {
	Body  OptString                 `json:"body"`
	Event PullsSubmitReviewReqEvent `json:"event"`
}

type PullsSubmitReviewReqEvent string

const (
	PullsSubmitReviewReqEventAPPROVE        PullsSubmitReviewReqEvent = "APPROVE"
	PullsSubmitReviewReqEventREQUESTCHANGES PullsSubmitReviewReqEvent = "REQUEST_CHANGES"
	PullsSubmitReviewReqEventCOMMENT        PullsSubmitReviewReqEvent = "COMMENT"
)

type PullsUpdateBranchAccepted struct {
	Message OptString `json:"message"`
	URL     OptString `json:"url"`
}

type PullsUpdateBranchReq struct {
	ExpectedHeadSha OptString `json:"expected_head_sha"`
}

type PullsUpdateReq struct {
	Base                OptString              `json:"base"`
	Body                OptString              `json:"body"`
	MaintainerCanModify OptBool                `json:"maintainer_can_modify"`
	State               OptPullsUpdateReqState `json:"state"`
	Title               OptString              `json:"title"`
}

type PullsUpdateReqState string

const (
	PullsUpdateReqStateOpen   PullsUpdateReqState = "open"
	PullsUpdateReqStateClosed PullsUpdateReqState = "closed"
)

type PullsUpdateReviewCommentReq struct {
	Body string `json:"body"`
}

type PullsUpdateReviewReq struct {
	Body string `json:"body"`
}

// Ref: #/components/schemas/rate-limit
type RateLimit struct {
	Limit     int `json:"limit"`
	Remaining int `json:"remaining"`
	Reset     int `json:"reset"`
	Used      int `json:"used"`
}

// RateLimitGetNotModified is response for RateLimitGet operation.
type RateLimitGetNotModified struct{}

func (*RateLimitGetNotModified) rateLimitGetRes() {}

// Ref: #/components/schemas/rate-limit-overview
type RateLimitOverview struct {
	Rate      RateLimit                  `json:"rate"`
	Resources RateLimitOverviewResources `json:"resources"`
}

func (*RateLimitOverview) rateLimitGetRes() {}

type RateLimitOverviewResources struct {
	ActionsRunnerRegistration OptRateLimit `json:"actions_runner_registration"`
	CodeScanningUpload        OptRateLimit `json:"code_scanning_upload"`
	Core                      RateLimit    `json:"core"`
	Graphql                   OptRateLimit `json:"graphql"`
	IntegrationManifest       OptRateLimit `json:"integration_manifest"`
	Search                    RateLimit    `json:"search"`
	SourceImport              OptRateLimit `json:"source_import"`
}

// Ref: #/components/schemas/reaction
type Reaction struct {
	Content   ReactionContent       `json:"content"`
	CreatedAt time.Time             `json:"created_at"`
	ID        int                   `json:"id"`
	NodeID    string                `json:"node_id"`
	User      NilNullableSimpleUser `json:"user"`
}

type ReactionContent string

const (
	ReactionContentPlus1    ReactionContent = "+1"
	ReactionContentMinus1   ReactionContent = "-1"
	ReactionContentLaugh    ReactionContent = "laugh"
	ReactionContentConfused ReactionContent = "confused"
	ReactionContentHeart    ReactionContent = "heart"
	ReactionContentHooray   ReactionContent = "hooray"
	ReactionContentRocket   ReactionContent = "rocket"
	ReactionContentEyes     ReactionContent = "eyes"
)

// Ref: #/components/schemas/reaction-rollup
type ReactionRollup struct {
	Plus1      int     `json:"+1"`
	Minus1     int     `json:"-1"`
	Confused   int     `json:"confused"`
	Eyes       int     `json:"eyes"`
	Heart      int     `json:"heart"`
	Hooray     int     `json:"hooray"`
	Laugh      int     `json:"laugh"`
	Rocket     int     `json:"rocket"`
	TotalCount int     `json:"total_count"`
	URL        url.URL `json:"url"`
}

type ReactionsCreateForCommitCommentReq struct {
	Content ReactionsCreateForCommitCommentReqContent `json:"content"`
}

type ReactionsCreateForCommitCommentReqContent string

const (
	ReactionsCreateForCommitCommentReqContentPlus1    ReactionsCreateForCommitCommentReqContent = "+1"
	ReactionsCreateForCommitCommentReqContentMinus1   ReactionsCreateForCommitCommentReqContent = "-1"
	ReactionsCreateForCommitCommentReqContentLaugh    ReactionsCreateForCommitCommentReqContent = "laugh"
	ReactionsCreateForCommitCommentReqContentConfused ReactionsCreateForCommitCommentReqContent = "confused"
	ReactionsCreateForCommitCommentReqContentHeart    ReactionsCreateForCommitCommentReqContent = "heart"
	ReactionsCreateForCommitCommentReqContentHooray   ReactionsCreateForCommitCommentReqContent = "hooray"
	ReactionsCreateForCommitCommentReqContentRocket   ReactionsCreateForCommitCommentReqContent = "rocket"
	ReactionsCreateForCommitCommentReqContentEyes     ReactionsCreateForCommitCommentReqContent = "eyes"
)

type ReactionsCreateForCommitCommentUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

type ReactionsCreateForIssueCommentReq struct {
	Content ReactionsCreateForIssueCommentReqContent `json:"content"`
}

type ReactionsCreateForIssueCommentReqContent string

const (
	ReactionsCreateForIssueCommentReqContentPlus1    ReactionsCreateForIssueCommentReqContent = "+1"
	ReactionsCreateForIssueCommentReqContentMinus1   ReactionsCreateForIssueCommentReqContent = "-1"
	ReactionsCreateForIssueCommentReqContentLaugh    ReactionsCreateForIssueCommentReqContent = "laugh"
	ReactionsCreateForIssueCommentReqContentConfused ReactionsCreateForIssueCommentReqContent = "confused"
	ReactionsCreateForIssueCommentReqContentHeart    ReactionsCreateForIssueCommentReqContent = "heart"
	ReactionsCreateForIssueCommentReqContentHooray   ReactionsCreateForIssueCommentReqContent = "hooray"
	ReactionsCreateForIssueCommentReqContentRocket   ReactionsCreateForIssueCommentReqContent = "rocket"
	ReactionsCreateForIssueCommentReqContentEyes     ReactionsCreateForIssueCommentReqContent = "eyes"
)

type ReactionsCreateForIssueCommentUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

type ReactionsCreateForIssueReq struct {
	Content ReactionsCreateForIssueReqContent `json:"content"`
}

type ReactionsCreateForIssueReqContent string

const (
	ReactionsCreateForIssueReqContentPlus1    ReactionsCreateForIssueReqContent = "+1"
	ReactionsCreateForIssueReqContentMinus1   ReactionsCreateForIssueReqContent = "-1"
	ReactionsCreateForIssueReqContentLaugh    ReactionsCreateForIssueReqContent = "laugh"
	ReactionsCreateForIssueReqContentConfused ReactionsCreateForIssueReqContent = "confused"
	ReactionsCreateForIssueReqContentHeart    ReactionsCreateForIssueReqContent = "heart"
	ReactionsCreateForIssueReqContentHooray   ReactionsCreateForIssueReqContent = "hooray"
	ReactionsCreateForIssueReqContentRocket   ReactionsCreateForIssueReqContent = "rocket"
	ReactionsCreateForIssueReqContentEyes     ReactionsCreateForIssueReqContent = "eyes"
)

type ReactionsCreateForIssueUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

type ReactionsCreateForPullRequestReviewCommentReq struct {
	Content ReactionsCreateForPullRequestReviewCommentReqContent `json:"content"`
}

type ReactionsCreateForPullRequestReviewCommentReqContent string

const (
	ReactionsCreateForPullRequestReviewCommentReqContentPlus1    ReactionsCreateForPullRequestReviewCommentReqContent = "+1"
	ReactionsCreateForPullRequestReviewCommentReqContentMinus1   ReactionsCreateForPullRequestReviewCommentReqContent = "-1"
	ReactionsCreateForPullRequestReviewCommentReqContentLaugh    ReactionsCreateForPullRequestReviewCommentReqContent = "laugh"
	ReactionsCreateForPullRequestReviewCommentReqContentConfused ReactionsCreateForPullRequestReviewCommentReqContent = "confused"
	ReactionsCreateForPullRequestReviewCommentReqContentHeart    ReactionsCreateForPullRequestReviewCommentReqContent = "heart"
	ReactionsCreateForPullRequestReviewCommentReqContentHooray   ReactionsCreateForPullRequestReviewCommentReqContent = "hooray"
	ReactionsCreateForPullRequestReviewCommentReqContentRocket   ReactionsCreateForPullRequestReviewCommentReqContent = "rocket"
	ReactionsCreateForPullRequestReviewCommentReqContentEyes     ReactionsCreateForPullRequestReviewCommentReqContent = "eyes"
)

type ReactionsCreateForPullRequestReviewCommentUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

type ReactionsCreateForReleaseReq struct {
	Content ReactionsCreateForReleaseReqContent `json:"content"`
}

type ReactionsCreateForReleaseReqContent string

const (
	ReactionsCreateForReleaseReqContentPlus1  ReactionsCreateForReleaseReqContent = "+1"
	ReactionsCreateForReleaseReqContentLaugh  ReactionsCreateForReleaseReqContent = "laugh"
	ReactionsCreateForReleaseReqContentHeart  ReactionsCreateForReleaseReqContent = "heart"
	ReactionsCreateForReleaseReqContentHooray ReactionsCreateForReleaseReqContent = "hooray"
	ReactionsCreateForReleaseReqContentRocket ReactionsCreateForReleaseReqContent = "rocket"
	ReactionsCreateForReleaseReqContentEyes   ReactionsCreateForReleaseReqContent = "eyes"
)

type ReactionsCreateForReleaseUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

type ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONCreated Reaction

func (*ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONCreated) reactionsCreateForTeamDiscussionCommentInOrgRes() {
}

type ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONOK Reaction

func (*ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONOK) reactionsCreateForTeamDiscussionCommentInOrgRes() {
}

type ReactionsCreateForTeamDiscussionCommentInOrgReq struct {
	Content ReactionsCreateForTeamDiscussionCommentInOrgReqContent `json:"content"`
}

type ReactionsCreateForTeamDiscussionCommentInOrgReqContent string

const (
	ReactionsCreateForTeamDiscussionCommentInOrgReqContentPlus1    ReactionsCreateForTeamDiscussionCommentInOrgReqContent = "+1"
	ReactionsCreateForTeamDiscussionCommentInOrgReqContentMinus1   ReactionsCreateForTeamDiscussionCommentInOrgReqContent = "-1"
	ReactionsCreateForTeamDiscussionCommentInOrgReqContentLaugh    ReactionsCreateForTeamDiscussionCommentInOrgReqContent = "laugh"
	ReactionsCreateForTeamDiscussionCommentInOrgReqContentConfused ReactionsCreateForTeamDiscussionCommentInOrgReqContent = "confused"
	ReactionsCreateForTeamDiscussionCommentInOrgReqContentHeart    ReactionsCreateForTeamDiscussionCommentInOrgReqContent = "heart"
	ReactionsCreateForTeamDiscussionCommentInOrgReqContentHooray   ReactionsCreateForTeamDiscussionCommentInOrgReqContent = "hooray"
	ReactionsCreateForTeamDiscussionCommentInOrgReqContentRocket   ReactionsCreateForTeamDiscussionCommentInOrgReqContent = "rocket"
	ReactionsCreateForTeamDiscussionCommentInOrgReqContentEyes     ReactionsCreateForTeamDiscussionCommentInOrgReqContent = "eyes"
)

type ReactionsCreateForTeamDiscussionCommentLegacyReq struct {
	Content ReactionsCreateForTeamDiscussionCommentLegacyReqContent `json:"content"`
}

type ReactionsCreateForTeamDiscussionCommentLegacyReqContent string

const (
	ReactionsCreateForTeamDiscussionCommentLegacyReqContentPlus1    ReactionsCreateForTeamDiscussionCommentLegacyReqContent = "+1"
	ReactionsCreateForTeamDiscussionCommentLegacyReqContentMinus1   ReactionsCreateForTeamDiscussionCommentLegacyReqContent = "-1"
	ReactionsCreateForTeamDiscussionCommentLegacyReqContentLaugh    ReactionsCreateForTeamDiscussionCommentLegacyReqContent = "laugh"
	ReactionsCreateForTeamDiscussionCommentLegacyReqContentConfused ReactionsCreateForTeamDiscussionCommentLegacyReqContent = "confused"
	ReactionsCreateForTeamDiscussionCommentLegacyReqContentHeart    ReactionsCreateForTeamDiscussionCommentLegacyReqContent = "heart"
	ReactionsCreateForTeamDiscussionCommentLegacyReqContentHooray   ReactionsCreateForTeamDiscussionCommentLegacyReqContent = "hooray"
	ReactionsCreateForTeamDiscussionCommentLegacyReqContentRocket   ReactionsCreateForTeamDiscussionCommentLegacyReqContent = "rocket"
	ReactionsCreateForTeamDiscussionCommentLegacyReqContentEyes     ReactionsCreateForTeamDiscussionCommentLegacyReqContent = "eyes"
)

type ReactionsCreateForTeamDiscussionInOrgApplicationJSONCreated Reaction

func (*ReactionsCreateForTeamDiscussionInOrgApplicationJSONCreated) reactionsCreateForTeamDiscussionInOrgRes() {
}

type ReactionsCreateForTeamDiscussionInOrgApplicationJSONOK Reaction

func (*ReactionsCreateForTeamDiscussionInOrgApplicationJSONOK) reactionsCreateForTeamDiscussionInOrgRes() {
}

type ReactionsCreateForTeamDiscussionInOrgReq struct {
	Content ReactionsCreateForTeamDiscussionInOrgReqContent `json:"content"`
}

type ReactionsCreateForTeamDiscussionInOrgReqContent string

const (
	ReactionsCreateForTeamDiscussionInOrgReqContentPlus1    ReactionsCreateForTeamDiscussionInOrgReqContent = "+1"
	ReactionsCreateForTeamDiscussionInOrgReqContentMinus1   ReactionsCreateForTeamDiscussionInOrgReqContent = "-1"
	ReactionsCreateForTeamDiscussionInOrgReqContentLaugh    ReactionsCreateForTeamDiscussionInOrgReqContent = "laugh"
	ReactionsCreateForTeamDiscussionInOrgReqContentConfused ReactionsCreateForTeamDiscussionInOrgReqContent = "confused"
	ReactionsCreateForTeamDiscussionInOrgReqContentHeart    ReactionsCreateForTeamDiscussionInOrgReqContent = "heart"
	ReactionsCreateForTeamDiscussionInOrgReqContentHooray   ReactionsCreateForTeamDiscussionInOrgReqContent = "hooray"
	ReactionsCreateForTeamDiscussionInOrgReqContentRocket   ReactionsCreateForTeamDiscussionInOrgReqContent = "rocket"
	ReactionsCreateForTeamDiscussionInOrgReqContentEyes     ReactionsCreateForTeamDiscussionInOrgReqContent = "eyes"
)

type ReactionsCreateForTeamDiscussionLegacyReq struct {
	Content ReactionsCreateForTeamDiscussionLegacyReqContent `json:"content"`
}

type ReactionsCreateForTeamDiscussionLegacyReqContent string

const (
	ReactionsCreateForTeamDiscussionLegacyReqContentPlus1    ReactionsCreateForTeamDiscussionLegacyReqContent = "+1"
	ReactionsCreateForTeamDiscussionLegacyReqContentMinus1   ReactionsCreateForTeamDiscussionLegacyReqContent = "-1"
	ReactionsCreateForTeamDiscussionLegacyReqContentLaugh    ReactionsCreateForTeamDiscussionLegacyReqContent = "laugh"
	ReactionsCreateForTeamDiscussionLegacyReqContentConfused ReactionsCreateForTeamDiscussionLegacyReqContent = "confused"
	ReactionsCreateForTeamDiscussionLegacyReqContentHeart    ReactionsCreateForTeamDiscussionLegacyReqContent = "heart"
	ReactionsCreateForTeamDiscussionLegacyReqContentHooray   ReactionsCreateForTeamDiscussionLegacyReqContent = "hooray"
	ReactionsCreateForTeamDiscussionLegacyReqContentRocket   ReactionsCreateForTeamDiscussionLegacyReqContent = "rocket"
	ReactionsCreateForTeamDiscussionLegacyReqContentEyes     ReactionsCreateForTeamDiscussionLegacyReqContent = "eyes"
)

// ReactionsDeleteForCommitCommentNoContent is response for ReactionsDeleteForCommitComment operation.
type ReactionsDeleteForCommitCommentNoContent struct{}

// ReactionsDeleteForIssueCommentNoContent is response for ReactionsDeleteForIssueComment operation.
type ReactionsDeleteForIssueCommentNoContent struct{}

// ReactionsDeleteForIssueNoContent is response for ReactionsDeleteForIssue operation.
type ReactionsDeleteForIssueNoContent struct{}

// ReactionsDeleteForPullRequestCommentNoContent is response for ReactionsDeleteForPullRequestComment operation.
type ReactionsDeleteForPullRequestCommentNoContent struct{}

// ReactionsDeleteForTeamDiscussionCommentNoContent is response for ReactionsDeleteForTeamDiscussionComment operation.
type ReactionsDeleteForTeamDiscussionCommentNoContent struct{}

// ReactionsDeleteForTeamDiscussionNoContent is response for ReactionsDeleteForTeamDiscussion operation.
type ReactionsDeleteForTeamDiscussionNoContent struct{}

type ReactionsDeleteLegacyApplicationJSONForbidden BasicError

func (*ReactionsDeleteLegacyApplicationJSONForbidden) reactionsDeleteLegacyRes() {}

type ReactionsDeleteLegacyApplicationJSONGone BasicError

func (*ReactionsDeleteLegacyApplicationJSONGone) reactionsDeleteLegacyRes() {}

type ReactionsDeleteLegacyApplicationJSONUnauthorized BasicError

func (*ReactionsDeleteLegacyApplicationJSONUnauthorized) reactionsDeleteLegacyRes() {}

// ReactionsDeleteLegacyNoContent is response for ReactionsDeleteLegacy operation.
type ReactionsDeleteLegacyNoContent struct{}

func (*ReactionsDeleteLegacyNoContent) reactionsDeleteLegacyRes() {}

// ReactionsDeleteLegacyNotModified is response for ReactionsDeleteLegacy operation.
type ReactionsDeleteLegacyNotModified struct{}

func (*ReactionsDeleteLegacyNotModified) reactionsDeleteLegacyRes() {}

type ReactionsDeleteLegacyUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*ReactionsDeleteLegacyUnsupportedMediaType) reactionsDeleteLegacyRes() {}

type ReactionsListForCommitCommentContent string

const (
	ReactionsListForCommitCommentContentPlus1    ReactionsListForCommitCommentContent = "+1"
	ReactionsListForCommitCommentContentMinus1   ReactionsListForCommitCommentContent = "-1"
	ReactionsListForCommitCommentContentLaugh    ReactionsListForCommitCommentContent = "laugh"
	ReactionsListForCommitCommentContentConfused ReactionsListForCommitCommentContent = "confused"
	ReactionsListForCommitCommentContentHeart    ReactionsListForCommitCommentContent = "heart"
	ReactionsListForCommitCommentContentHooray   ReactionsListForCommitCommentContent = "hooray"
	ReactionsListForCommitCommentContentRocket   ReactionsListForCommitCommentContent = "rocket"
	ReactionsListForCommitCommentContentEyes     ReactionsListForCommitCommentContent = "eyes"
)

type ReactionsListForCommitCommentOKApplicationJSON []Reaction

func (*ReactionsListForCommitCommentOKApplicationJSON) reactionsListForCommitCommentRes() {}

type ReactionsListForCommitCommentUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*ReactionsListForCommitCommentUnsupportedMediaType) reactionsListForCommitCommentRes() {}

type ReactionsListForIssueApplicationJSONGone BasicError

func (*ReactionsListForIssueApplicationJSONGone) reactionsListForIssueRes() {}

type ReactionsListForIssueApplicationJSONNotFound BasicError

func (*ReactionsListForIssueApplicationJSONNotFound) reactionsListForIssueRes() {}

type ReactionsListForIssueCommentContent string

const (
	ReactionsListForIssueCommentContentPlus1    ReactionsListForIssueCommentContent = "+1"
	ReactionsListForIssueCommentContentMinus1   ReactionsListForIssueCommentContent = "-1"
	ReactionsListForIssueCommentContentLaugh    ReactionsListForIssueCommentContent = "laugh"
	ReactionsListForIssueCommentContentConfused ReactionsListForIssueCommentContent = "confused"
	ReactionsListForIssueCommentContentHeart    ReactionsListForIssueCommentContent = "heart"
	ReactionsListForIssueCommentContentHooray   ReactionsListForIssueCommentContent = "hooray"
	ReactionsListForIssueCommentContentRocket   ReactionsListForIssueCommentContent = "rocket"
	ReactionsListForIssueCommentContentEyes     ReactionsListForIssueCommentContent = "eyes"
)

type ReactionsListForIssueCommentOKApplicationJSON []Reaction

func (*ReactionsListForIssueCommentOKApplicationJSON) reactionsListForIssueCommentRes() {}

type ReactionsListForIssueCommentUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*ReactionsListForIssueCommentUnsupportedMediaType) reactionsListForIssueCommentRes() {}

type ReactionsListForIssueContent string

const (
	ReactionsListForIssueContentPlus1    ReactionsListForIssueContent = "+1"
	ReactionsListForIssueContentMinus1   ReactionsListForIssueContent = "-1"
	ReactionsListForIssueContentLaugh    ReactionsListForIssueContent = "laugh"
	ReactionsListForIssueContentConfused ReactionsListForIssueContent = "confused"
	ReactionsListForIssueContentHeart    ReactionsListForIssueContent = "heart"
	ReactionsListForIssueContentHooray   ReactionsListForIssueContent = "hooray"
	ReactionsListForIssueContentRocket   ReactionsListForIssueContent = "rocket"
	ReactionsListForIssueContentEyes     ReactionsListForIssueContent = "eyes"
)

type ReactionsListForIssueOKApplicationJSON []Reaction

func (*ReactionsListForIssueOKApplicationJSON) reactionsListForIssueRes() {}

type ReactionsListForIssueUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*ReactionsListForIssueUnsupportedMediaType) reactionsListForIssueRes() {}

type ReactionsListForPullRequestReviewCommentContent string

const (
	ReactionsListForPullRequestReviewCommentContentPlus1    ReactionsListForPullRequestReviewCommentContent = "+1"
	ReactionsListForPullRequestReviewCommentContentMinus1   ReactionsListForPullRequestReviewCommentContent = "-1"
	ReactionsListForPullRequestReviewCommentContentLaugh    ReactionsListForPullRequestReviewCommentContent = "laugh"
	ReactionsListForPullRequestReviewCommentContentConfused ReactionsListForPullRequestReviewCommentContent = "confused"
	ReactionsListForPullRequestReviewCommentContentHeart    ReactionsListForPullRequestReviewCommentContent = "heart"
	ReactionsListForPullRequestReviewCommentContentHooray   ReactionsListForPullRequestReviewCommentContent = "hooray"
	ReactionsListForPullRequestReviewCommentContentRocket   ReactionsListForPullRequestReviewCommentContent = "rocket"
	ReactionsListForPullRequestReviewCommentContentEyes     ReactionsListForPullRequestReviewCommentContent = "eyes"
)

type ReactionsListForPullRequestReviewCommentOKApplicationJSON []Reaction

func (*ReactionsListForPullRequestReviewCommentOKApplicationJSON) reactionsListForPullRequestReviewCommentRes() {
}

type ReactionsListForPullRequestReviewCommentUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*ReactionsListForPullRequestReviewCommentUnsupportedMediaType) reactionsListForPullRequestReviewCommentRes() {
}

type ReactionsListForTeamDiscussionCommentInOrgContent string

const (
	ReactionsListForTeamDiscussionCommentInOrgContentPlus1    ReactionsListForTeamDiscussionCommentInOrgContent = "+1"
	ReactionsListForTeamDiscussionCommentInOrgContentMinus1   ReactionsListForTeamDiscussionCommentInOrgContent = "-1"
	ReactionsListForTeamDiscussionCommentInOrgContentLaugh    ReactionsListForTeamDiscussionCommentInOrgContent = "laugh"
	ReactionsListForTeamDiscussionCommentInOrgContentConfused ReactionsListForTeamDiscussionCommentInOrgContent = "confused"
	ReactionsListForTeamDiscussionCommentInOrgContentHeart    ReactionsListForTeamDiscussionCommentInOrgContent = "heart"
	ReactionsListForTeamDiscussionCommentInOrgContentHooray   ReactionsListForTeamDiscussionCommentInOrgContent = "hooray"
	ReactionsListForTeamDiscussionCommentInOrgContentRocket   ReactionsListForTeamDiscussionCommentInOrgContent = "rocket"
	ReactionsListForTeamDiscussionCommentInOrgContentEyes     ReactionsListForTeamDiscussionCommentInOrgContent = "eyes"
)

type ReactionsListForTeamDiscussionCommentLegacyContent string

const (
	ReactionsListForTeamDiscussionCommentLegacyContentPlus1    ReactionsListForTeamDiscussionCommentLegacyContent = "+1"
	ReactionsListForTeamDiscussionCommentLegacyContentMinus1   ReactionsListForTeamDiscussionCommentLegacyContent = "-1"
	ReactionsListForTeamDiscussionCommentLegacyContentLaugh    ReactionsListForTeamDiscussionCommentLegacyContent = "laugh"
	ReactionsListForTeamDiscussionCommentLegacyContentConfused ReactionsListForTeamDiscussionCommentLegacyContent = "confused"
	ReactionsListForTeamDiscussionCommentLegacyContentHeart    ReactionsListForTeamDiscussionCommentLegacyContent = "heart"
	ReactionsListForTeamDiscussionCommentLegacyContentHooray   ReactionsListForTeamDiscussionCommentLegacyContent = "hooray"
	ReactionsListForTeamDiscussionCommentLegacyContentRocket   ReactionsListForTeamDiscussionCommentLegacyContent = "rocket"
	ReactionsListForTeamDiscussionCommentLegacyContentEyes     ReactionsListForTeamDiscussionCommentLegacyContent = "eyes"
)

type ReactionsListForTeamDiscussionInOrgContent string

const (
	ReactionsListForTeamDiscussionInOrgContentPlus1    ReactionsListForTeamDiscussionInOrgContent = "+1"
	ReactionsListForTeamDiscussionInOrgContentMinus1   ReactionsListForTeamDiscussionInOrgContent = "-1"
	ReactionsListForTeamDiscussionInOrgContentLaugh    ReactionsListForTeamDiscussionInOrgContent = "laugh"
	ReactionsListForTeamDiscussionInOrgContentConfused ReactionsListForTeamDiscussionInOrgContent = "confused"
	ReactionsListForTeamDiscussionInOrgContentHeart    ReactionsListForTeamDiscussionInOrgContent = "heart"
	ReactionsListForTeamDiscussionInOrgContentHooray   ReactionsListForTeamDiscussionInOrgContent = "hooray"
	ReactionsListForTeamDiscussionInOrgContentRocket   ReactionsListForTeamDiscussionInOrgContent = "rocket"
	ReactionsListForTeamDiscussionInOrgContentEyes     ReactionsListForTeamDiscussionInOrgContent = "eyes"
)

type ReactionsListForTeamDiscussionLegacyContent string

const (
	ReactionsListForTeamDiscussionLegacyContentPlus1    ReactionsListForTeamDiscussionLegacyContent = "+1"
	ReactionsListForTeamDiscussionLegacyContentMinus1   ReactionsListForTeamDiscussionLegacyContent = "-1"
	ReactionsListForTeamDiscussionLegacyContentLaugh    ReactionsListForTeamDiscussionLegacyContent = "laugh"
	ReactionsListForTeamDiscussionLegacyContentConfused ReactionsListForTeamDiscussionLegacyContent = "confused"
	ReactionsListForTeamDiscussionLegacyContentHeart    ReactionsListForTeamDiscussionLegacyContent = "heart"
	ReactionsListForTeamDiscussionLegacyContentHooray   ReactionsListForTeamDiscussionLegacyContent = "hooray"
	ReactionsListForTeamDiscussionLegacyContentRocket   ReactionsListForTeamDiscussionLegacyContent = "rocket"
	ReactionsListForTeamDiscussionLegacyContentEyes     ReactionsListForTeamDiscussionLegacyContent = "eyes"
)

// Ref: #/components/schemas/referrer-traffic
type ReferrerTraffic struct {
	Count    int    `json:"count"`
	Referrer string `json:"referrer"`
	Uniques  int    `json:"uniques"`
}

// Ref: #/components/schemas/release
type Release struct {
	Assets          []ReleaseAsset    `json:"assets"`
	AssetsURL       url.URL           `json:"assets_url"`
	Author          SimpleUser        `json:"author"`
	Body            OptNilString      `json:"body"`
	BodyHTML        OptString         `json:"body_html"`
	BodyText        OptString         `json:"body_text"`
	CreatedAt       time.Time         `json:"created_at"`
	DiscussionURL   OptURL            `json:"discussion_url"`
	Draft           bool              `json:"draft"`
	HTMLURL         url.URL           `json:"html_url"`
	ID              int               `json:"id"`
	MentionsCount   OptInt            `json:"mentions_count"`
	Name            NilString         `json:"name"`
	NodeID          string            `json:"node_id"`
	Prerelease      bool              `json:"prerelease"`
	PublishedAt     NilTime           `json:"published_at"`
	Reactions       OptReactionRollup `json:"reactions"`
	TagName         string            `json:"tag_name"`
	TarballURL      NilURL            `json:"tarball_url"`
	TargetCommitish string            `json:"target_commitish"`
	UploadURL       string            `json:"upload_url"`
	URL             url.URL           `json:"url"`
	ZipballURL      NilURL            `json:"zipball_url"`
}

func (*Release) reposGetReleaseByTagRes() {}
func (*Release) reposGetReleaseRes()      {}
func (*Release) reposUpdateReleaseRes()   {}

// Ref: #/components/schemas/release-asset
type ReleaseAsset struct {
	BrowserDownloadURL url.URL               `json:"browser_download_url"`
	ContentType        string                `json:"content_type"`
	CreatedAt          time.Time             `json:"created_at"`
	DownloadCount      int                   `json:"download_count"`
	ID                 int                   `json:"id"`
	Label              NilString             `json:"label"`
	Name               string                `json:"name"`
	NodeID             string                `json:"node_id"`
	Size               int                   `json:"size"`
	State              ReleaseAssetState     `json:"state"`
	UpdatedAt          time.Time             `json:"updated_at"`
	Uploader           NilNullableSimpleUser `json:"uploader"`
	URL                url.URL               `json:"url"`
}

func (*ReleaseAsset) reposGetReleaseAssetRes() {}

type ReleaseAssetState string

const (
	ReleaseAssetStateUploaded ReleaseAssetState = "uploaded"
	ReleaseAssetStateOpen     ReleaseAssetState = "open"
)

// Ref: #/components/schemas/repo-search-result-item
type RepoSearchResultItem struct {
	AllowAutoMerge      OptBool                            `json:"allow_auto_merge"`
	AllowForking        OptBool                            `json:"allow_forking"`
	AllowMergeCommit    OptBool                            `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                            `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                            `json:"allow_squash_merge"`
	ArchiveURL          string                             `json:"archive_url"`
	Archived            bool                               `json:"archived"`
	AssigneesURL        string                             `json:"assignees_url"`
	BlobsURL            string                             `json:"blobs_url"`
	BranchesURL         string                             `json:"branches_url"`
	CloneURL            string                             `json:"clone_url"`
	CollaboratorsURL    string                             `json:"collaborators_url"`
	CommentsURL         string                             `json:"comments_url"`
	CommitsURL          string                             `json:"commits_url"`
	CompareURL          string                             `json:"compare_url"`
	ContentsURL         string                             `json:"contents_url"`
	ContributorsURL     url.URL                            `json:"contributors_url"`
	CreatedAt           time.Time                          `json:"created_at"`
	DefaultBranch       string                             `json:"default_branch"`
	DeleteBranchOnMerge OptBool                            `json:"delete_branch_on_merge"`
	DeploymentsURL      url.URL                            `json:"deployments_url"`
	Description         NilString                          `json:"description"`
	Disabled            bool                               `json:"disabled"`
	DownloadsURL        url.URL                            `json:"downloads_url"`
	EventsURL           url.URL                            `json:"events_url"`
	Fork                bool                               `json:"fork"`
	Forks               int                                `json:"forks"`
	ForksCount          int                                `json:"forks_count"`
	ForksURL            url.URL                            `json:"forks_url"`
	FullName            string                             `json:"full_name"`
	GitCommitsURL       string                             `json:"git_commits_url"`
	GitRefsURL          string                             `json:"git_refs_url"`
	GitTagsURL          string                             `json:"git_tags_url"`
	GitURL              string                             `json:"git_url"`
	HasDownloads        bool                               `json:"has_downloads"`
	HasIssues           bool                               `json:"has_issues"`
	HasPages            bool                               `json:"has_pages"`
	HasProjects         bool                               `json:"has_projects"`
	HasWiki             bool                               `json:"has_wiki"`
	Homepage            NilURL                             `json:"homepage"`
	HooksURL            url.URL                            `json:"hooks_url"`
	HTMLURL             url.URL                            `json:"html_url"`
	ID                  int                                `json:"id"`
	IssueCommentURL     string                             `json:"issue_comment_url"`
	IssueEventsURL      string                             `json:"issue_events_url"`
	IssuesURL           string                             `json:"issues_url"`
	KeysURL             string                             `json:"keys_url"`
	LabelsURL           string                             `json:"labels_url"`
	Language            NilString                          `json:"language"`
	LanguagesURL        url.URL                            `json:"languages_url"`
	License             NilNullableLicenseSimple           `json:"license"`
	MasterBranch        OptString                          `json:"master_branch"`
	MergesURL           url.URL                            `json:"merges_url"`
	MilestonesURL       string                             `json:"milestones_url"`
	MirrorURL           NilURL                             `json:"mirror_url"`
	Name                string                             `json:"name"`
	NodeID              string                             `json:"node_id"`
	NotificationsURL    string                             `json:"notifications_url"`
	OpenIssues          int                                `json:"open_issues"`
	OpenIssuesCount     int                                `json:"open_issues_count"`
	Owner               NilNullableSimpleUser              `json:"owner"`
	Permissions         OptRepoSearchResultItemPermissions `json:"permissions"`
	Private             bool                               `json:"private"`
	PullsURL            string                             `json:"pulls_url"`
	PushedAt            time.Time                          `json:"pushed_at"`
	ReleasesURL         string                             `json:"releases_url"`
	Score               float64                            `json:"score"`
	Size                int                                `json:"size"`
	SSHURL              string                             `json:"ssh_url"`
	StargazersCount     int                                `json:"stargazers_count"`
	StargazersURL       url.URL                            `json:"stargazers_url"`
	StatusesURL         string                             `json:"statuses_url"`
	SubscribersURL      url.URL                            `json:"subscribers_url"`
	SubscriptionURL     url.URL                            `json:"subscription_url"`
	SvnURL              url.URL                            `json:"svn_url"`
	TagsURL             url.URL                            `json:"tags_url"`
	TeamsURL            url.URL                            `json:"teams_url"`
	TempCloneToken      OptString                          `json:"temp_clone_token"`
	TextMatches         *SearchResultTextMatches           `json:"text_matches"`
	Topics              []string                           `json:"topics"`
	TreesURL            string                             `json:"trees_url"`
	UpdatedAt           time.Time                          `json:"updated_at"`
	URL                 url.URL                            `json:"url"`
	Watchers            int                                `json:"watchers"`
	WatchersCount       int                                `json:"watchers_count"`
}

type RepoSearchResultItemPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

type ReposAcceptInvitationApplicationJSONConflict BasicError

func (*ReposAcceptInvitationApplicationJSONConflict) reposAcceptInvitationRes() {}

type ReposAcceptInvitationApplicationJSONForbidden BasicError

func (*ReposAcceptInvitationApplicationJSONForbidden) reposAcceptInvitationRes() {}

type ReposAcceptInvitationApplicationJSONNotFound BasicError

func (*ReposAcceptInvitationApplicationJSONNotFound) reposAcceptInvitationRes() {}

// ReposAcceptInvitationNoContent is response for ReposAcceptInvitation operation.
type ReposAcceptInvitationNoContent struct{}

func (*ReposAcceptInvitationNoContent) reposAcceptInvitationRes() {}

// ReposAcceptInvitationNotModified is response for ReposAcceptInvitation operation.
type ReposAcceptInvitationNotModified struct{}

func (*ReposAcceptInvitationNotModified) reposAcceptInvitationRes() {}

// ReposAddCollaboratorNoContent is response for ReposAddCollaborator operation.
type ReposAddCollaboratorNoContent struct{}

type ReposAddCollaboratorReq struct {
	Permission  OptReposAddCollaboratorReqPermission `json:"permission"`
	Permissions OptString                            `json:"permissions"`
}

type ReposAddCollaboratorReqPermission string

const (
	ReposAddCollaboratorReqPermissionPull     ReposAddCollaboratorReqPermission = "pull"
	ReposAddCollaboratorReqPermissionPush     ReposAddCollaboratorReqPermission = "push"
	ReposAddCollaboratorReqPermissionAdmin    ReposAddCollaboratorReqPermission = "admin"
	ReposAddCollaboratorReqPermissionMaintain ReposAddCollaboratorReqPermission = "maintain"
	ReposAddCollaboratorReqPermissionTriage   ReposAddCollaboratorReqPermission = "triage"
)

// ReposCheckCollaboratorNoContent is response for ReposCheckCollaborator operation.
type ReposCheckCollaboratorNoContent struct{}

func (*ReposCheckCollaboratorNoContent) reposCheckCollaboratorRes() {}

// ReposCheckCollaboratorNotFound is response for ReposCheckCollaborator operation.
type ReposCheckCollaboratorNotFound struct{}

func (*ReposCheckCollaboratorNotFound) reposCheckCollaboratorRes() {}

// ReposCheckVulnerabilityAlertsNoContent is response for ReposCheckVulnerabilityAlerts operation.
type ReposCheckVulnerabilityAlertsNoContent struct{}

func (*ReposCheckVulnerabilityAlertsNoContent) reposCheckVulnerabilityAlertsRes() {}

// ReposCheckVulnerabilityAlertsNotFound is response for ReposCheckVulnerabilityAlerts operation.
type ReposCheckVulnerabilityAlertsNotFound struct{}

func (*ReposCheckVulnerabilityAlertsNotFound) reposCheckVulnerabilityAlertsRes() {}

type ReposCompareCommitsApplicationJSONInternalServerError BasicError

func (*ReposCompareCommitsApplicationJSONInternalServerError) reposCompareCommitsRes() {}

type ReposCompareCommitsApplicationJSONNotFound BasicError

func (*ReposCompareCommitsApplicationJSONNotFound) reposCompareCommitsRes() {}

type ReposCreateAutolinkReq struct {
	KeyPrefix   string `json:"key_prefix"`
	URLTemplate string `json:"url_template"`
}

type ReposCreateCommitCommentReq struct {
	Body     string    `json:"body"`
	Line     OptInt    `json:"line"`
	Path     OptString `json:"path"`
	Position OptInt    `json:"position"`
}

type ReposCreateCommitStatusReq struct {
	Context     OptString                       `json:"context"`
	Description OptString                       `json:"description"`
	State       ReposCreateCommitStatusReqState `json:"state"`
	TargetURL   OptString                       `json:"target_url"`
}

type ReposCreateCommitStatusReqState string

const (
	ReposCreateCommitStatusReqStateError   ReposCreateCommitStatusReqState = "error"
	ReposCreateCommitStatusReqStateFailure ReposCreateCommitStatusReqState = "failure"
	ReposCreateCommitStatusReqStatePending ReposCreateCommitStatusReqState = "pending"
	ReposCreateCommitStatusReqStateSuccess ReposCreateCommitStatusReqState = "success"
)

type ReposCreateDeployKeyReq struct {
	Key      string    `json:"key"`
	ReadOnly OptBool   `json:"read_only"`
	Title    OptString `json:"title"`
}

type ReposCreateDeploymentStatusReq struct {
	AutoInactive   OptBool                                      `json:"auto_inactive"`
	Description    OptString                                    `json:"description"`
	Environment    OptReposCreateDeploymentStatusReqEnvironment `json:"environment"`
	EnvironmentURL OptString                                    `json:"environment_url"`
	LogURL         OptString                                    `json:"log_url"`
	State          ReposCreateDeploymentStatusReqState          `json:"state"`
	TargetURL      OptString                                    `json:"target_url"`
}

type ReposCreateDeploymentStatusReqEnvironment string

const (
	ReposCreateDeploymentStatusReqEnvironmentProduction ReposCreateDeploymentStatusReqEnvironment = "production"
	ReposCreateDeploymentStatusReqEnvironmentStaging    ReposCreateDeploymentStatusReqEnvironment = "staging"
	ReposCreateDeploymentStatusReqEnvironmentQa         ReposCreateDeploymentStatusReqEnvironment = "qa"
)

type ReposCreateDeploymentStatusReqState string

const (
	ReposCreateDeploymentStatusReqStateError      ReposCreateDeploymentStatusReqState = "error"
	ReposCreateDeploymentStatusReqStateFailure    ReposCreateDeploymentStatusReqState = "failure"
	ReposCreateDeploymentStatusReqStateInactive   ReposCreateDeploymentStatusReqState = "inactive"
	ReposCreateDeploymentStatusReqStateInProgress ReposCreateDeploymentStatusReqState = "in_progress"
	ReposCreateDeploymentStatusReqStateQueued     ReposCreateDeploymentStatusReqState = "queued"
	ReposCreateDeploymentStatusReqStatePending    ReposCreateDeploymentStatusReqState = "pending"
	ReposCreateDeploymentStatusReqStateSuccess    ReposCreateDeploymentStatusReqState = "success"
)

// ReposCreateDispatchEventNoContent is response for ReposCreateDispatchEvent operation.
type ReposCreateDispatchEventNoContent struct{}

type ReposCreateDispatchEventReq struct {
	ClientPayload *ReposCreateDispatchEventReqClientPayload `json:"client_payload"`
	EventType     string                                    `json:"event_type"`
}

type ReposCreateDispatchEventReqClientPayload struct{}

// ReposCreateForAuthenticatedUserNotModified is response for ReposCreateForAuthenticatedUser operation.
type ReposCreateForAuthenticatedUserNotModified struct{}

type ReposCreateForAuthenticatedUserReq struct {
	AllowAutoMerge      OptBool   `json:"allow_auto_merge"`
	AllowMergeCommit    OptBool   `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool   `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool   `json:"allow_squash_merge"`
	AutoInit            OptBool   `json:"auto_init"`
	DeleteBranchOnMerge OptBool   `json:"delete_branch_on_merge"`
	Description         OptString `json:"description"`
	GitignoreTemplate   OptString `json:"gitignore_template"`
	HasDownloads        OptBool   `json:"has_downloads"`
	HasIssues           OptBool   `json:"has_issues"`
	HasProjects         OptBool   `json:"has_projects"`
	HasWiki             OptBool   `json:"has_wiki"`
	Homepage            OptString `json:"homepage"`
	IsTemplate          OptBool   `json:"is_template"`
	LicenseTemplate     OptString `json:"license_template"`
	Name                string    `json:"name"`
	Private             OptBool   `json:"private"`
	TeamID              OptInt    `json:"team_id"`
}

type ReposCreateForkReq struct {
	Organization OptString `json:"organization"`
}

type ReposCreateInOrgReq struct {
	AllowAutoMerge      OptBool                          `json:"allow_auto_merge"`
	AllowMergeCommit    OptBool                          `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                          `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                          `json:"allow_squash_merge"`
	AutoInit            OptBool                          `json:"auto_init"`
	DeleteBranchOnMerge OptBool                          `json:"delete_branch_on_merge"`
	Description         OptString                        `json:"description"`
	GitignoreTemplate   OptString                        `json:"gitignore_template"`
	HasIssues           OptBool                          `json:"has_issues"`
	HasProjects         OptBool                          `json:"has_projects"`
	HasWiki             OptBool                          `json:"has_wiki"`
	Homepage            OptString                        `json:"homepage"`
	IsTemplate          OptBool                          `json:"is_template"`
	LicenseTemplate     OptString                        `json:"license_template"`
	Name                string                           `json:"name"`
	Private             OptBool                          `json:"private"`
	TeamID              OptInt                           `json:"team_id"`
	Visibility          OptReposCreateInOrgReqVisibility `json:"visibility"`
}

type ReposCreateInOrgReqVisibility string

const (
	ReposCreateInOrgReqVisibilityPublic     ReposCreateInOrgReqVisibility = "public"
	ReposCreateInOrgReqVisibilityPrivate    ReposCreateInOrgReqVisibility = "private"
	ReposCreateInOrgReqVisibilityVisibility ReposCreateInOrgReqVisibility = "visibility"
	ReposCreateInOrgReqVisibilityInternal   ReposCreateInOrgReqVisibility = "internal"
)

type ReposCreateOrUpdateEnvironmentReq struct {
	DeploymentBranchPolicy OptNilDeploymentBranchPolicy                              `json:"deployment_branch_policy"`
	Reviewers              OptNilReposCreateOrUpdateEnvironmentReqReviewersItemArray `json:"reviewers"`
	WaitTimer              OptWaitTimer                                              `json:"wait_timer"`
}

type ReposCreateOrUpdateEnvironmentReqReviewersItem struct {
	ID   OptInt                    `json:"id"`
	Type OptDeploymentReviewerType `json:"type"`
}

type ReposCreateOrUpdateFileContentsReq struct {
	Author    OptReposCreateOrUpdateFileContentsReqAuthor    `json:"author"`
	Branch    OptString                                      `json:"branch"`
	Committer OptReposCreateOrUpdateFileContentsReqCommitter `json:"committer"`
	Content   string                                         `json:"content"`
	Message   string                                         `json:"message"`
	Sha       OptString                                      `json:"sha"`
}

type ReposCreateOrUpdateFileContentsReqAuthor struct {
	Date  OptString `json:"date"`
	Email string    `json:"email"`
	Name  string    `json:"name"`
}

type ReposCreateOrUpdateFileContentsReqCommitter struct {
	Date  OptString `json:"date"`
	Email string    `json:"email"`
	Name  string    `json:"name"`
}

type ReposCreatePagesSiteReq struct {
	Source ReposCreatePagesSiteReqSource `json:"source"`
}

type ReposCreatePagesSiteReqSource struct {
	Branch string                               `json:"branch"`
	Path   OptReposCreatePagesSiteReqSourcePath `json:"path"`
}

type ReposCreatePagesSiteReqSourcePath string

const (
	ReposCreatePagesSiteReqSourcePathSlash     ReposCreatePagesSiteReqSourcePath = "/"
	ReposCreatePagesSiteReqSourcePathSlashDocs ReposCreatePagesSiteReqSourcePath = "/docs"
)

type ReposCreatePagesSiteUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

type ReposCreateReleaseReq struct {
	Body                   OptString `json:"body"`
	DiscussionCategoryName OptString `json:"discussion_category_name"`
	Draft                  OptBool   `json:"draft"`
	Name                   OptString `json:"name"`
	Prerelease             OptBool   `json:"prerelease"`
	TagName                string    `json:"tag_name"`
	TargetCommitish        OptString `json:"target_commitish"`
}

type ReposCreateUsingTemplateReq struct {
	Description        OptString `json:"description"`
	IncludeAllBranches OptBool   `json:"include_all_branches"`
	Name               string    `json:"name"`
	Owner              OptString `json:"owner"`
	Private            OptBool   `json:"private"`
}

type ReposCreateWebhookReq struct {
	Active OptBool                        `json:"active"`
	Config OptReposCreateWebhookReqConfig `json:"config"`
	Events []string                       `json:"events"`
	Name   OptString                      `json:"name"`
}

type ReposCreateWebhookReqConfig struct {
	ContentType OptWebhookConfigContentType `json:"content_type"`
	Digest      OptString                   `json:"digest"`
	InsecureSsl *WebhookConfigInsecureSsl   `json:"insecure_ssl"`
	Secret      OptWebhookConfigSecret      `json:"secret"`
	Token       OptString                   `json:"token"`
	URL         OptWebhookConfigURL         `json:"url"`
}

type ReposDeclineInvitationApplicationJSONConflict BasicError

func (*ReposDeclineInvitationApplicationJSONConflict) reposDeclineInvitationRes() {}

type ReposDeclineInvitationApplicationJSONForbidden BasicError

func (*ReposDeclineInvitationApplicationJSONForbidden) reposDeclineInvitationRes() {}

type ReposDeclineInvitationApplicationJSONNotFound BasicError

func (*ReposDeclineInvitationApplicationJSONNotFound) reposDeclineInvitationRes() {}

// ReposDeclineInvitationNoContent is response for ReposDeclineInvitation operation.
type ReposDeclineInvitationNoContent struct{}

func (*ReposDeclineInvitationNoContent) reposDeclineInvitationRes() {}

// ReposDeclineInvitationNotModified is response for ReposDeclineInvitation operation.
type ReposDeclineInvitationNotModified struct{}

func (*ReposDeclineInvitationNotModified) reposDeclineInvitationRes() {}

// ReposDeleteAccessRestrictionsNoContent is response for ReposDeleteAccessRestrictions operation.
type ReposDeleteAccessRestrictionsNoContent struct{}

// ReposDeleteAdminBranchProtectionNoContent is response for ReposDeleteAdminBranchProtection operation.
type ReposDeleteAdminBranchProtectionNoContent struct{}

func (*ReposDeleteAdminBranchProtectionNoContent) reposDeleteAdminBranchProtectionRes() {}

// ReposDeleteAnEnvironmentNoContent is response for ReposDeleteAnEnvironment operation.
type ReposDeleteAnEnvironmentNoContent struct{}

type ReposDeleteApplicationJSONNotFound BasicError

func (*ReposDeleteApplicationJSONNotFound) reposDeleteRes() {}

type ReposDeleteApplicationJSONTemporaryRedirect BasicError

func (*ReposDeleteApplicationJSONTemporaryRedirect) reposDeleteRes() {}

// ReposDeleteAutolinkNoContent is response for ReposDeleteAutolink operation.
type ReposDeleteAutolinkNoContent struct{}

func (*ReposDeleteAutolinkNoContent) reposDeleteAutolinkRes() {}

// ReposDeleteBranchProtectionNoContent is response for ReposDeleteBranchProtection operation.
type ReposDeleteBranchProtectionNoContent struct{}

func (*ReposDeleteBranchProtectionNoContent) reposDeleteBranchProtectionRes() {}

// ReposDeleteCommitCommentNoContent is response for ReposDeleteCommitComment operation.
type ReposDeleteCommitCommentNoContent struct{}

func (*ReposDeleteCommitCommentNoContent) reposDeleteCommitCommentRes() {}

// ReposDeleteCommitSignatureProtectionNoContent is response for ReposDeleteCommitSignatureProtection operation.
type ReposDeleteCommitSignatureProtectionNoContent struct{}

func (*ReposDeleteCommitSignatureProtectionNoContent) reposDeleteCommitSignatureProtectionRes() {}

// ReposDeleteDeployKeyNoContent is response for ReposDeleteDeployKey operation.
type ReposDeleteDeployKeyNoContent struct{}

// ReposDeleteDeploymentNoContent is response for ReposDeleteDeployment operation.
type ReposDeleteDeploymentNoContent struct{}

func (*ReposDeleteDeploymentNoContent) reposDeleteDeploymentRes() {}

type ReposDeleteFileReq struct {
	Author    OptReposDeleteFileReqAuthor    `json:"author"`
	Branch    OptString                      `json:"branch"`
	Committer OptReposDeleteFileReqCommitter `json:"committer"`
	Message   string                         `json:"message"`
	Sha       string                         `json:"sha"`
}

type ReposDeleteFileReqAuthor struct {
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type ReposDeleteFileReqCommitter struct {
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type ReposDeleteForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*ReposDeleteForbidden) reposDeleteRes() {}

// ReposDeleteInvitationNoContent is response for ReposDeleteInvitation operation.
type ReposDeleteInvitationNoContent struct{}

// ReposDeleteNoContent is response for ReposDelete operation.
type ReposDeleteNoContent struct{}

func (*ReposDeleteNoContent) reposDeleteRes() {}

// ReposDeletePagesSiteNoContent is response for ReposDeletePagesSite operation.
type ReposDeletePagesSiteNoContent struct{}

type ReposDeletePagesSiteUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

// ReposDeletePullRequestReviewProtectionNoContent is response for ReposDeletePullRequestReviewProtection operation.
type ReposDeletePullRequestReviewProtectionNoContent struct{}

func (*ReposDeletePullRequestReviewProtectionNoContent) reposDeletePullRequestReviewProtectionRes() {}

// ReposDeleteReleaseAssetNoContent is response for ReposDeleteReleaseAsset operation.
type ReposDeleteReleaseAssetNoContent struct{}

// ReposDeleteReleaseNoContent is response for ReposDeleteRelease operation.
type ReposDeleteReleaseNoContent struct{}

// ReposDeleteWebhookNoContent is response for ReposDeleteWebhook operation.
type ReposDeleteWebhookNoContent struct{}

func (*ReposDeleteWebhookNoContent) reposDeleteWebhookRes() {}

// ReposDisableAutomatedSecurityFixesNoContent is response for ReposDisableAutomatedSecurityFixes operation.
type ReposDisableAutomatedSecurityFixesNoContent struct{}

// ReposDisableLfsForRepoNoContent is response for ReposDisableLfsForRepo operation.
type ReposDisableLfsForRepoNoContent struct{}

// ReposDisableVulnerabilityAlertsNoContent is response for ReposDisableVulnerabilityAlerts operation.
type ReposDisableVulnerabilityAlertsNoContent struct{}

// ReposDownloadTarballArchiveFound is response for ReposDownloadTarballArchive operation.
type ReposDownloadTarballArchiveFound struct{}

// ReposDownloadZipballArchiveFound is response for ReposDownloadZipballArchive operation.
type ReposDownloadZipballArchiveFound struct{}

// ReposEnableAutomatedSecurityFixesNoContent is response for ReposEnableAutomatedSecurityFixes operation.
type ReposEnableAutomatedSecurityFixesNoContent struct{}

type ReposEnableLfsForRepoAccepted struct{}

func (*ReposEnableLfsForRepoAccepted) reposEnableLfsForRepoRes() {}

// ReposEnableLfsForRepoForbidden is response for ReposEnableLfsForRepo operation.
type ReposEnableLfsForRepoForbidden struct{}

func (*ReposEnableLfsForRepoForbidden) reposEnableLfsForRepoRes() {}

// ReposEnableVulnerabilityAlertsNoContent is response for ReposEnableVulnerabilityAlerts operation.
type ReposEnableVulnerabilityAlertsNoContent struct{}

type ReposGetAllStatusCheckContextsOKApplicationJSON []string

func (*ReposGetAllStatusCheckContextsOKApplicationJSON) reposGetAllStatusCheckContextsRes() {}

type ReposGetAllTopicsUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*ReposGetAllTopicsUnsupportedMediaType) reposGetAllTopicsRes() {}

type ReposGetApplicationJSONForbidden BasicError

func (*ReposGetApplicationJSONForbidden) reposGetRes() {}

type ReposGetApplicationJSONMovedPermanently BasicError

func (*ReposGetApplicationJSONMovedPermanently) reposGetRes() {}

type ReposGetApplicationJSONNotFound BasicError

func (*ReposGetApplicationJSONNotFound) reposGetRes() {}

type ReposGetAppsWithAccessToProtectedBranchOKApplicationJSON []Integration

func (*ReposGetAppsWithAccessToProtectedBranchOKApplicationJSON) reposGetAppsWithAccessToProtectedBranchRes() {
}

type ReposGetBranchApplicationJSONMovedPermanently BasicError

func (*ReposGetBranchApplicationJSONMovedPermanently) reposGetBranchRes() {}

type ReposGetBranchApplicationJSONNotFound BasicError

func (*ReposGetBranchApplicationJSONNotFound) reposGetBranchRes() {}

type ReposGetBranchUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*ReposGetBranchUnsupportedMediaType) reposGetBranchRes() {}

type ReposGetClonesPer string

const (
	ReposGetClonesPerEmpty ReposGetClonesPer = ""
	ReposGetClonesPerDay   ReposGetClonesPer = "day"
	ReposGetClonesPerWeek  ReposGetClonesPer = "week"
)

type ReposGetCodeFrequencyStatsAccepted struct{}

func (*ReposGetCodeFrequencyStatsAccepted) reposGetCodeFrequencyStatsRes() {}

// ReposGetCodeFrequencyStatsNoContent is response for ReposGetCodeFrequencyStats operation.
type ReposGetCodeFrequencyStatsNoContent struct{}

func (*ReposGetCodeFrequencyStatsNoContent) reposGetCodeFrequencyStatsRes() {}

type ReposGetCodeFrequencyStatsOKApplicationJSON []CodeFrequencyStat

func (*ReposGetCodeFrequencyStatsOKApplicationJSON) reposGetCodeFrequencyStatsRes() {}

type ReposGetCommitActivityStatsAccepted struct{}

func (*ReposGetCommitActivityStatsAccepted) reposGetCommitActivityStatsRes() {}

// ReposGetCommitActivityStatsNoContent is response for ReposGetCommitActivityStats operation.
type ReposGetCommitActivityStatsNoContent struct{}

func (*ReposGetCommitActivityStatsNoContent) reposGetCommitActivityStatsRes() {}

type ReposGetCommitActivityStatsOKApplicationJSON []CommitActivity

func (*ReposGetCommitActivityStatsOKApplicationJSON) reposGetCommitActivityStatsRes() {}

type ReposGetContributorsStatsAccepted struct{}

func (*ReposGetContributorsStatsAccepted) reposGetContributorsStatsRes() {}

// ReposGetContributorsStatsNoContent is response for ReposGetContributorsStats operation.
type ReposGetContributorsStatsNoContent struct{}

func (*ReposGetContributorsStatsNoContent) reposGetContributorsStatsRes() {}

type ReposGetContributorsStatsOKApplicationJSON []ContributorActivity

func (*ReposGetContributorsStatsOKApplicationJSON) reposGetContributorsStatsRes() {}

type ReposGetDeploymentStatusUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*ReposGetDeploymentStatusUnsupportedMediaType) reposGetDeploymentStatusRes() {}

// ReposGetPagesHealthCheckBadRequest is response for ReposGetPagesHealthCheck operation.
type ReposGetPagesHealthCheckBadRequest struct{}

func (*ReposGetPagesHealthCheckBadRequest) reposGetPagesHealthCheckRes() {}

// ReposGetPagesHealthCheckUnprocessableEntity is response for ReposGetPagesHealthCheck operation.
type ReposGetPagesHealthCheckUnprocessableEntity struct{}

func (*ReposGetPagesHealthCheckUnprocessableEntity) reposGetPagesHealthCheckRes() {}

// ReposGetPunchCardStatsNoContent is response for ReposGetPunchCardStats operation.
type ReposGetPunchCardStatsNoContent struct{}

func (*ReposGetPunchCardStatsNoContent) reposGetPunchCardStatsRes() {}

type ReposGetPunchCardStatsOKApplicationJSON []CodeFrequencyStat

func (*ReposGetPunchCardStatsOKApplicationJSON) reposGetPunchCardStatsRes() {}

// ReposGetReleaseAssetFound is response for ReposGetReleaseAsset operation.
type ReposGetReleaseAssetFound struct{}

func (*ReposGetReleaseAssetFound) reposGetReleaseAssetRes() {}

type ReposGetReleaseAssetUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*ReposGetReleaseAssetUnsupportedMediaType) reposGetReleaseAssetRes() {}

type ReposGetTeamsWithAccessToProtectedBranchOKApplicationJSON []Team

func (*ReposGetTeamsWithAccessToProtectedBranchOKApplicationJSON) reposGetTeamsWithAccessToProtectedBranchRes() {
}

type ReposGetTopPathsOKApplicationJSON []ContentTraffic

func (*ReposGetTopPathsOKApplicationJSON) reposGetTopPathsRes() {}

type ReposGetTopReferrersOKApplicationJSON []ReferrerTraffic

func (*ReposGetTopReferrersOKApplicationJSON) reposGetTopReferrersRes() {}

type ReposGetUsersWithAccessToProtectedBranchOKApplicationJSON []SimpleUser

func (*ReposGetUsersWithAccessToProtectedBranchOKApplicationJSON) reposGetUsersWithAccessToProtectedBranchRes() {
}

type ReposGetViewsPer string

const (
	ReposGetViewsPerEmpty ReposGetViewsPer = ""
	ReposGetViewsPerDay   ReposGetViewsPer = "day"
	ReposGetViewsPerWeek  ReposGetViewsPer = "week"
)

type ReposListBranchesOKApplicationJSON []ShortBranch

func (*ReposListBranchesOKApplicationJSON) reposListBranchesRes() {}

type ReposListCollaboratorsAffiliation string

const (
	ReposListCollaboratorsAffiliationOutside ReposListCollaboratorsAffiliation = "outside"
	ReposListCollaboratorsAffiliationDirect  ReposListCollaboratorsAffiliation = "direct"
	ReposListCollaboratorsAffiliationAll     ReposListCollaboratorsAffiliation = "all"
)

type ReposListCollaboratorsOKApplicationJSON []Collaborator

func (*ReposListCollaboratorsOKApplicationJSON) reposListCollaboratorsRes() {}

type ReposListCommitStatusesForRefOKApplicationJSON []Status

func (*ReposListCommitStatusesForRefOKApplicationJSON) reposListCommitStatusesForRefRes() {}

type ReposListCommitsApplicationJSONBadRequest BasicError

func (*ReposListCommitsApplicationJSONBadRequest) reposListCommitsRes() {}

type ReposListCommitsApplicationJSONConflict BasicError

func (*ReposListCommitsApplicationJSONConflict) reposListCommitsRes() {}

type ReposListCommitsApplicationJSONInternalServerError BasicError

func (*ReposListCommitsApplicationJSONInternalServerError) reposListCommitsRes() {}

type ReposListCommitsApplicationJSONNotFound BasicError

func (*ReposListCommitsApplicationJSONNotFound) reposListCommitsRes() {}

type ReposListCommitsOKApplicationJSON []Commit

func (*ReposListCommitsOKApplicationJSON) reposListCommitsRes() {}

type ReposListContributorsApplicationJSONForbidden BasicError

func (*ReposListContributorsApplicationJSONForbidden) reposListContributorsRes() {}

type ReposListContributorsApplicationJSONNotFound BasicError

func (*ReposListContributorsApplicationJSONNotFound) reposListContributorsRes() {}

// ReposListContributorsNoContent is response for ReposListContributors operation.
type ReposListContributorsNoContent struct{}

func (*ReposListContributorsNoContent) reposListContributorsRes() {}

type ReposListContributorsOKApplicationJSON []Contributor

func (*ReposListContributorsOKApplicationJSON) reposListContributorsRes() {}

type ReposListDeploymentStatusesOKApplicationJSON []DeploymentStatus

func (*ReposListDeploymentStatusesOKApplicationJSON) reposListDeploymentStatusesRes() {}

type ReposListForAuthenticatedUserDirection string

const (
	ReposListForAuthenticatedUserDirectionAsc  ReposListForAuthenticatedUserDirection = "asc"
	ReposListForAuthenticatedUserDirectionDesc ReposListForAuthenticatedUserDirection = "desc"
)

// ReposListForAuthenticatedUserNotModified is response for ReposListForAuthenticatedUser operation.
type ReposListForAuthenticatedUserNotModified struct{}

type ReposListForAuthenticatedUserSort string

const (
	ReposListForAuthenticatedUserSortCreated  ReposListForAuthenticatedUserSort = "created"
	ReposListForAuthenticatedUserSortUpdated  ReposListForAuthenticatedUserSort = "updated"
	ReposListForAuthenticatedUserSortPushed   ReposListForAuthenticatedUserSort = "pushed"
	ReposListForAuthenticatedUserSortFullName ReposListForAuthenticatedUserSort = "full_name"
)

type ReposListForAuthenticatedUserType string

const (
	ReposListForAuthenticatedUserTypeAll     ReposListForAuthenticatedUserType = "all"
	ReposListForAuthenticatedUserTypeOwner   ReposListForAuthenticatedUserType = "owner"
	ReposListForAuthenticatedUserTypePublic  ReposListForAuthenticatedUserType = "public"
	ReposListForAuthenticatedUserTypePrivate ReposListForAuthenticatedUserType = "private"
	ReposListForAuthenticatedUserTypeMember  ReposListForAuthenticatedUserType = "member"
)

type ReposListForAuthenticatedUserVisibility string

const (
	ReposListForAuthenticatedUserVisibilityAll     ReposListForAuthenticatedUserVisibility = "all"
	ReposListForAuthenticatedUserVisibilityPublic  ReposListForAuthenticatedUserVisibility = "public"
	ReposListForAuthenticatedUserVisibilityPrivate ReposListForAuthenticatedUserVisibility = "private"
)

type ReposListForOrgDirection string

const (
	ReposListForOrgDirectionAsc  ReposListForOrgDirection = "asc"
	ReposListForOrgDirectionDesc ReposListForOrgDirection = "desc"
)

type ReposListForOrgSort string

const (
	ReposListForOrgSortCreated  ReposListForOrgSort = "created"
	ReposListForOrgSortUpdated  ReposListForOrgSort = "updated"
	ReposListForOrgSortPushed   ReposListForOrgSort = "pushed"
	ReposListForOrgSortFullName ReposListForOrgSort = "full_name"
)

type ReposListForOrgType string

const (
	ReposListForOrgTypeAll      ReposListForOrgType = "all"
	ReposListForOrgTypePublic   ReposListForOrgType = "public"
	ReposListForOrgTypePrivate  ReposListForOrgType = "private"
	ReposListForOrgTypeForks    ReposListForOrgType = "forks"
	ReposListForOrgTypeSources  ReposListForOrgType = "sources"
	ReposListForOrgTypeMember   ReposListForOrgType = "member"
	ReposListForOrgTypeInternal ReposListForOrgType = "internal"
)

type ReposListForUserDirection string

const (
	ReposListForUserDirectionAsc  ReposListForUserDirection = "asc"
	ReposListForUserDirectionDesc ReposListForUserDirection = "desc"
)

type ReposListForUserSort string

const (
	ReposListForUserSortCreated  ReposListForUserSort = "created"
	ReposListForUserSortUpdated  ReposListForUserSort = "updated"
	ReposListForUserSortPushed   ReposListForUserSort = "pushed"
	ReposListForUserSortFullName ReposListForUserSort = "full_name"
)

type ReposListForUserType string

const (
	ReposListForUserTypeAll    ReposListForUserType = "all"
	ReposListForUserTypeOwner  ReposListForUserType = "owner"
	ReposListForUserTypeMember ReposListForUserType = "member"
)

type ReposListForksOKApplicationJSON []MinimalRepository

func (*ReposListForksOKApplicationJSON) reposListForksRes() {}

type ReposListForksSort string

const (
	ReposListForksSortNewest     ReposListForksSort = "newest"
	ReposListForksSortOldest     ReposListForksSort = "oldest"
	ReposListForksSortStargazers ReposListForksSort = "stargazers"
	ReposListForksSortWatchers   ReposListForksSort = "watchers"
)

type ReposListInvitationsForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ReposListInvitationsForAuthenticatedUserApplicationJSONForbidden) reposListInvitationsForAuthenticatedUserRes() {
}

type ReposListInvitationsForAuthenticatedUserApplicationJSONNotFound BasicError

func (*ReposListInvitationsForAuthenticatedUserApplicationJSONNotFound) reposListInvitationsForAuthenticatedUserRes() {
}

type ReposListInvitationsForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ReposListInvitationsForAuthenticatedUserApplicationJSONUnauthorized) reposListInvitationsForAuthenticatedUserRes() {
}

// ReposListInvitationsForAuthenticatedUserNotModified is response for ReposListInvitationsForAuthenticatedUser operation.
type ReposListInvitationsForAuthenticatedUserNotModified struct{}

func (*ReposListInvitationsForAuthenticatedUserNotModified) reposListInvitationsForAuthenticatedUserRes() {
}

type ReposListInvitationsForAuthenticatedUserOKApplicationJSON []RepositoryInvitation

func (*ReposListInvitationsForAuthenticatedUserOKApplicationJSON) reposListInvitationsForAuthenticatedUserRes() {
}

// ReposListPublicNotModified is response for ReposListPublic operation.
type ReposListPublicNotModified struct{}

type ReposListReleasesOKApplicationJSON []Release

func (*ReposListReleasesOKApplicationJSON) reposListReleasesRes() {}

type ReposListWebhooksOKApplicationJSON []Hook

func (*ReposListWebhooksOKApplicationJSON) reposListWebhooksRes() {}

// ReposMergeConflict is response for ReposMerge operation.
type ReposMergeConflict struct{}

// ReposMergeNoContent is response for ReposMerge operation.
type ReposMergeNoContent struct{}

// ReposMergeNotFound is response for ReposMerge operation.
type ReposMergeNotFound struct{}

type ReposMergeReq struct {
	Base          string    `json:"base"`
	CommitMessage OptString `json:"commit_message"`
	Head          string    `json:"head"`
}

// ReposMergeUpstreamConflict is response for ReposMergeUpstream operation.
type ReposMergeUpstreamConflict struct{}

func (*ReposMergeUpstreamConflict) reposMergeUpstreamRes() {}

type ReposMergeUpstreamReq struct {
	Branch string `json:"branch"`
}

// ReposMergeUpstreamUnprocessableEntity is response for ReposMergeUpstream operation.
type ReposMergeUpstreamUnprocessableEntity struct{}

func (*ReposMergeUpstreamUnprocessableEntity) reposMergeUpstreamRes() {}

// ReposPingWebhookNoContent is response for ReposPingWebhook operation.
type ReposPingWebhookNoContent struct{}

func (*ReposPingWebhookNoContent) reposPingWebhookRes() {}

type ReposRedeliverWebhookDeliveryAccepted struct{}

// ReposRemoveCollaboratorNoContent is response for ReposRemoveCollaborator operation.
type ReposRemoveCollaboratorNoContent struct{}

// ReposRemoveStatusCheckProtectionNoContent is response for ReposRemoveStatusCheckProtection operation.
type ReposRemoveStatusCheckProtectionNoContent struct{}

type ReposRenameBranchReq struct {
	NewName string `json:"new_name"`
}

type ReposReplaceAllTopicsReq struct {
	Names []string `json:"names"`
}

type ReposReplaceAllTopicsUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*ReposReplaceAllTopicsUnsupportedMediaType) reposReplaceAllTopicsRes() {}

// ReposTestPushWebhookNoContent is response for ReposTestPushWebhook operation.
type ReposTestPushWebhookNoContent struct{}

func (*ReposTestPushWebhookNoContent) reposTestPushWebhookRes() {}

type ReposTransferReq struct {
	NewOwner string `json:"new_owner"`
	TeamIds  []int  `json:"team_ids"`
}

type ReposUpdateBranchProtectionApplicationJSONForbidden BasicError

func (*ReposUpdateBranchProtectionApplicationJSONForbidden) reposUpdateBranchProtectionRes() {}

type ReposUpdateBranchProtectionApplicationJSONNotFound BasicError

func (*ReposUpdateBranchProtectionApplicationJSONNotFound) reposUpdateBranchProtectionRes() {}

type ReposUpdateBranchProtectionReq struct {
	AllowDeletions                 OptBool                                                     `json:"allow_deletions"`
	AllowForcePushes               OptNilBool                                                  `json:"allow_force_pushes"`
	EnforceAdmins                  NilBool                                                     `json:"enforce_admins"`
	RequiredConversationResolution OptBool                                                     `json:"required_conversation_resolution"`
	RequiredLinearHistory          OptBool                                                     `json:"required_linear_history"`
	RequiredPullRequestReviews     NilReposUpdateBranchProtectionReqRequiredPullRequestReviews `json:"required_pull_request_reviews"`
	RequiredStatusChecks           NilReposUpdateBranchProtectionReqRequiredStatusChecks       `json:"required_status_checks"`
	Restrictions                   NilReposUpdateBranchProtectionReqRestrictions               `json:"restrictions"`
}

type ReposUpdateBranchProtectionReqRequiredPullRequestReviews struct {
	DismissStaleReviews          OptBool                                                                          `json:"dismiss_stale_reviews"`
	DismissalRestrictions        OptReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions `json:"dismissal_restrictions"`
	RequireCodeOwnerReviews      OptBool                                                                          `json:"require_code_owner_reviews"`
	RequiredApprovingReviewCount OptInt                                                                           `json:"required_approving_review_count"`
}

type ReposUpdateBranchProtectionReqRequiredPullRequestReviewsDismissalRestrictions struct {
	Teams []string `json:"teams"`
	Users []string `json:"users"`
}

type ReposUpdateBranchProtectionReqRequiredStatusChecks struct {
	Contexts []string `json:"contexts"`
	Strict   bool     `json:"strict"`
}

type ReposUpdateBranchProtectionReqRestrictions struct {
	Apps  []string `json:"apps"`
	Teams []string `json:"teams"`
	Users []string `json:"users"`
}

type ReposUpdateCommitCommentReq struct {
	Body string `json:"body"`
}

type ReposUpdateInvitationReq struct {
	Permissions OptReposUpdateInvitationReqPermissions `json:"permissions"`
}

type ReposUpdateInvitationReqPermissions string

const (
	ReposUpdateInvitationReqPermissionsRead     ReposUpdateInvitationReqPermissions = "read"
	ReposUpdateInvitationReqPermissionsWrite    ReposUpdateInvitationReqPermissions = "write"
	ReposUpdateInvitationReqPermissionsMaintain ReposUpdateInvitationReqPermissions = "maintain"
	ReposUpdateInvitationReqPermissionsTriage   ReposUpdateInvitationReqPermissions = "triage"
	ReposUpdateInvitationReqPermissionsAdmin    ReposUpdateInvitationReqPermissions = "admin"
)

type ReposUpdatePullRequestReviewProtectionReq struct {
	DismissStaleReviews          OptBool                                                           `json:"dismiss_stale_reviews"`
	DismissalRestrictions        OptReposUpdatePullRequestReviewProtectionReqDismissalRestrictions `json:"dismissal_restrictions"`
	RequireCodeOwnerReviews      OptBool                                                           `json:"require_code_owner_reviews"`
	RequiredApprovingReviewCount OptInt                                                            `json:"required_approving_review_count"`
}

type ReposUpdatePullRequestReviewProtectionReqDismissalRestrictions struct {
	Teams []string `json:"teams"`
	Users []string `json:"users"`
}

type ReposUpdateReleaseAssetReq struct {
	Label OptString `json:"label"`
	Name  OptString `json:"name"`
	State OptString `json:"state"`
}

type ReposUpdateReleaseReq struct {
	Body                   OptString `json:"body"`
	DiscussionCategoryName OptString `json:"discussion_category_name"`
	Draft                  OptBool   `json:"draft"`
	Name                   OptString `json:"name"`
	Prerelease             OptBool   `json:"prerelease"`
	TagName                OptString `json:"tag_name"`
	TargetCommitish        OptString `json:"target_commitish"`
}

type ReposUpdateReq struct {
	AllowAutoMerge      OptBool                                 `json:"allow_auto_merge"`
	AllowForking        OptBool                                 `json:"allow_forking"`
	AllowMergeCommit    OptBool                                 `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                                 `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                                 `json:"allow_squash_merge"`
	Archived            OptBool                                 `json:"archived"`
	DefaultBranch       OptString                               `json:"default_branch"`
	DeleteBranchOnMerge OptBool                                 `json:"delete_branch_on_merge"`
	Description         OptString                               `json:"description"`
	HasIssues           OptBool                                 `json:"has_issues"`
	HasProjects         OptBool                                 `json:"has_projects"`
	HasWiki             OptBool                                 `json:"has_wiki"`
	Homepage            OptString                               `json:"homepage"`
	IsTemplate          OptBool                                 `json:"is_template"`
	Name                OptString                               `json:"name"`
	Private             OptBool                                 `json:"private"`
	SecurityAndAnalysis OptNilReposUpdateReqSecurityAndAnalysis `json:"security_and_analysis"`
	Visibility          OptReposUpdateReqVisibility             `json:"visibility"`
}

type ReposUpdateReqSecurityAndAnalysis struct {
	AdvancedSecurity OptReposUpdateReqSecurityAndAnalysisAdvancedSecurity `json:"advanced_security"`
	SecretScanning   OptReposUpdateReqSecurityAndAnalysisSecretScanning   `json:"secret_scanning"`
}

type ReposUpdateReqSecurityAndAnalysisAdvancedSecurity struct {
	Status OptString `json:"status"`
}

type ReposUpdateReqSecurityAndAnalysisSecretScanning struct {
	Status OptString `json:"status"`
}

type ReposUpdateReqVisibility string

const (
	ReposUpdateReqVisibilityPublic     ReposUpdateReqVisibility = "public"
	ReposUpdateReqVisibilityPrivate    ReposUpdateReqVisibility = "private"
	ReposUpdateReqVisibilityVisibility ReposUpdateReqVisibility = "visibility"
	ReposUpdateReqVisibilityInternal   ReposUpdateReqVisibility = "internal"
)

type ReposUpdateStatusCheckProtectionReq struct {
	Contexts []string `json:"contexts"`
	Strict   OptBool  `json:"strict"`
}

type ReposUpdateWebhookConfigForRepoReq struct {
	ContentType OptWebhookConfigContentType `json:"content_type"`
	InsecureSsl *WebhookConfigInsecureSsl   `json:"insecure_ssl"`
	Secret      OptWebhookConfigSecret      `json:"secret"`
	URL         OptWebhookConfigURL         `json:"url"`
}

type ReposUpdateWebhookReq struct {
	Active       OptBool                        `json:"active"`
	AddEvents    []string                       `json:"add_events"`
	Config       OptReposUpdateWebhookReqConfig `json:"config"`
	Events       []string                       `json:"events"`
	RemoveEvents []string                       `json:"remove_events"`
}

type ReposUpdateWebhookReqConfig struct {
	Address     OptString                   `json:"address"`
	ContentType OptWebhookConfigContentType `json:"content_type"`
	InsecureSsl *WebhookConfigInsecureSsl   `json:"insecure_ssl"`
	Room        OptString                   `json:"room"`
	Secret      OptWebhookConfigSecret      `json:"secret"`
	URL         WebhookConfigURL            `json:"url"`
}

// Ref: #/components/schemas/repository
type Repository struct {
	AllowAutoMerge      OptBool                            `json:"allow_auto_merge"`
	AllowForking        OptBool                            `json:"allow_forking"`
	AllowMergeCommit    OptBool                            `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                            `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                            `json:"allow_squash_merge"`
	ArchiveURL          string                             `json:"archive_url"`
	Archived            bool                               `json:"archived"`
	AssigneesURL        string                             `json:"assignees_url"`
	BlobsURL            string                             `json:"blobs_url"`
	BranchesURL         string                             `json:"branches_url"`
	CloneURL            string                             `json:"clone_url"`
	CollaboratorsURL    string                             `json:"collaborators_url"`
	CommentsURL         string                             `json:"comments_url"`
	CommitsURL          string                             `json:"commits_url"`
	CompareURL          string                             `json:"compare_url"`
	ContentsURL         string                             `json:"contents_url"`
	ContributorsURL     url.URL                            `json:"contributors_url"`
	CreatedAt           NilTime                            `json:"created_at"`
	DefaultBranch       string                             `json:"default_branch"`
	DeleteBranchOnMerge OptBool                            `json:"delete_branch_on_merge"`
	DeploymentsURL      url.URL                            `json:"deployments_url"`
	Description         NilString                          `json:"description"`
	Disabled            bool                               `json:"disabled"`
	DownloadsURL        url.URL                            `json:"downloads_url"`
	EventsURL           url.URL                            `json:"events_url"`
	Fork                bool                               `json:"fork"`
	Forks               int                                `json:"forks"`
	ForksCount          int                                `json:"forks_count"`
	ForksURL            url.URL                            `json:"forks_url"`
	FullName            string                             `json:"full_name"`
	GitCommitsURL       string                             `json:"git_commits_url"`
	GitRefsURL          string                             `json:"git_refs_url"`
	GitTagsURL          string                             `json:"git_tags_url"`
	GitURL              string                             `json:"git_url"`
	HasDownloads        bool                               `json:"has_downloads"`
	HasIssues           bool                               `json:"has_issues"`
	HasPages            bool                               `json:"has_pages"`
	HasProjects         bool                               `json:"has_projects"`
	HasWiki             bool                               `json:"has_wiki"`
	Homepage            NilURL                             `json:"homepage"`
	HooksURL            url.URL                            `json:"hooks_url"`
	HTMLURL             url.URL                            `json:"html_url"`
	ID                  int                                `json:"id"`
	IsTemplate          OptBool                            `json:"is_template"`
	IssueCommentURL     string                             `json:"issue_comment_url"`
	IssueEventsURL      string                             `json:"issue_events_url"`
	IssuesURL           string                             `json:"issues_url"`
	KeysURL             string                             `json:"keys_url"`
	LabelsURL           string                             `json:"labels_url"`
	Language            NilString                          `json:"language"`
	LanguagesURL        url.URL                            `json:"languages_url"`
	License             NilNullableLicenseSimple           `json:"license"`
	MasterBranch        OptString                          `json:"master_branch"`
	MergesURL           url.URL                            `json:"merges_url"`
	MilestonesURL       string                             `json:"milestones_url"`
	MirrorURL           NilURL                             `json:"mirror_url"`
	Name                string                             `json:"name"`
	NetworkCount        OptInt                             `json:"network_count"`
	NodeID              string                             `json:"node_id"`
	NotificationsURL    string                             `json:"notifications_url"`
	OpenIssues          int                                `json:"open_issues"`
	OpenIssuesCount     int                                `json:"open_issues_count"`
	Organization        OptNilNullableSimpleUser           `json:"organization"`
	Owner               SimpleUser                         `json:"owner"`
	Permissions         OptRepositoryPermissions           `json:"permissions"`
	Private             bool                               `json:"private"`
	PullsURL            string                             `json:"pulls_url"`
	PushedAt            NilTime                            `json:"pushed_at"`
	ReleasesURL         string                             `json:"releases_url"`
	Size                int                                `json:"size"`
	SSHURL              string                             `json:"ssh_url"`
	StargazersCount     int                                `json:"stargazers_count"`
	StargazersURL       url.URL                            `json:"stargazers_url"`
	StarredAt           OptString                          `json:"starred_at"`
	StatusesURL         string                             `json:"statuses_url"`
	SubscribersCount    OptInt                             `json:"subscribers_count"`
	SubscribersURL      url.URL                            `json:"subscribers_url"`
	SubscriptionURL     url.URL                            `json:"subscription_url"`
	SvnURL              url.URL                            `json:"svn_url"`
	TagsURL             url.URL                            `json:"tags_url"`
	TeamsURL            url.URL                            `json:"teams_url"`
	TempCloneToken      OptString                          `json:"temp_clone_token"`
	TemplateRepository  OptNilRepositoryTemplateRepository `json:"template_repository"`
	Topics              []string                           `json:"topics"`
	TreesURL            string                             `json:"trees_url"`
	UpdatedAt           NilTime                            `json:"updated_at"`
	URL                 url.URL                            `json:"url"`
	Visibility          OptString                          `json:"visibility"`
	Watchers            int                                `json:"watchers"`
	WatchersCount       int                                `json:"watchers_count"`
}

// Ref: #/components/schemas/repository-collaborator-permission
type RepositoryCollaboratorPermission struct {
	Permission string                `json:"permission"`
	User       NilNullableSimpleUser `json:"user"`
}

func (*RepositoryCollaboratorPermission) reposGetCollaboratorPermissionLevelRes() {}

// Ref: #/components/schemas/repository-invitation
type RepositoryInvitation struct {
	CreatedAt   time.Time                       `json:"created_at"`
	Expired     OptBool                         `json:"expired"`
	HTMLURL     string                          `json:"html_url"`
	ID          int                             `json:"id"`
	Invitee     NilNullableSimpleUser           `json:"invitee"`
	Inviter     NilNullableSimpleUser           `json:"inviter"`
	NodeID      string                          `json:"node_id"`
	Permissions RepositoryInvitationPermissions `json:"permissions"`
	Repository  MinimalRepository               `json:"repository"`
	URL         string                          `json:"url"`
}

type RepositoryInvitationPermissions string

const (
	RepositoryInvitationPermissionsRead     RepositoryInvitationPermissions = "read"
	RepositoryInvitationPermissionsWrite    RepositoryInvitationPermissions = "write"
	RepositoryInvitationPermissionsAdmin    RepositoryInvitationPermissions = "admin"
	RepositoryInvitationPermissionsTriage   RepositoryInvitationPermissions = "triage"
	RepositoryInvitationPermissionsMaintain RepositoryInvitationPermissions = "maintain"
)

type RepositoryPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

// Ref: #/components/schemas/repository-subscription
type RepositorySubscription struct {
	CreatedAt     time.Time `json:"created_at"`
	Ignored       bool      `json:"ignored"`
	Reason        NilString `json:"reason"`
	RepositoryURL url.URL   `json:"repository_url"`
	Subscribed    bool      `json:"subscribed"`
	URL           url.URL   `json:"url"`
}

func (*RepositorySubscription) activityGetRepoSubscriptionRes() {}

type RepositoryTemplateRepository struct {
	AllowAutoMerge      OptBool                                    `json:"allow_auto_merge"`
	AllowMergeCommit    OptBool                                    `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                                    `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                                    `json:"allow_squash_merge"`
	ArchiveURL          OptString                                  `json:"archive_url"`
	Archived            OptBool                                    `json:"archived"`
	AssigneesURL        OptString                                  `json:"assignees_url"`
	BlobsURL            OptString                                  `json:"blobs_url"`
	BranchesURL         OptString                                  `json:"branches_url"`
	CloneURL            OptString                                  `json:"clone_url"`
	CollaboratorsURL    OptString                                  `json:"collaborators_url"`
	CommentsURL         OptString                                  `json:"comments_url"`
	CommitsURL          OptString                                  `json:"commits_url"`
	CompareURL          OptString                                  `json:"compare_url"`
	ContentsURL         OptString                                  `json:"contents_url"`
	ContributorsURL     OptString                                  `json:"contributors_url"`
	CreatedAt           OptString                                  `json:"created_at"`
	DefaultBranch       OptString                                  `json:"default_branch"`
	DeleteBranchOnMerge OptBool                                    `json:"delete_branch_on_merge"`
	DeploymentsURL      OptString                                  `json:"deployments_url"`
	Description         OptString                                  `json:"description"`
	Disabled            OptBool                                    `json:"disabled"`
	DownloadsURL        OptString                                  `json:"downloads_url"`
	EventsURL           OptString                                  `json:"events_url"`
	Fork                OptBool                                    `json:"fork"`
	ForksCount          OptInt                                     `json:"forks_count"`
	ForksURL            OptString                                  `json:"forks_url"`
	FullName            OptString                                  `json:"full_name"`
	GitCommitsURL       OptString                                  `json:"git_commits_url"`
	GitRefsURL          OptString                                  `json:"git_refs_url"`
	GitTagsURL          OptString                                  `json:"git_tags_url"`
	GitURL              OptString                                  `json:"git_url"`
	HasDownloads        OptBool                                    `json:"has_downloads"`
	HasIssues           OptBool                                    `json:"has_issues"`
	HasPages            OptBool                                    `json:"has_pages"`
	HasProjects         OptBool                                    `json:"has_projects"`
	HasWiki             OptBool                                    `json:"has_wiki"`
	Homepage            OptString                                  `json:"homepage"`
	HooksURL            OptString                                  `json:"hooks_url"`
	HTMLURL             OptString                                  `json:"html_url"`
	ID                  OptInt                                     `json:"id"`
	IsTemplate          OptBool                                    `json:"is_template"`
	IssueCommentURL     OptString                                  `json:"issue_comment_url"`
	IssueEventsURL      OptString                                  `json:"issue_events_url"`
	IssuesURL           OptString                                  `json:"issues_url"`
	KeysURL             OptString                                  `json:"keys_url"`
	LabelsURL           OptString                                  `json:"labels_url"`
	Language            OptString                                  `json:"language"`
	LanguagesURL        OptString                                  `json:"languages_url"`
	MergesURL           OptString                                  `json:"merges_url"`
	MilestonesURL       OptString                                  `json:"milestones_url"`
	MirrorURL           OptString                                  `json:"mirror_url"`
	Name                OptString                                  `json:"name"`
	NetworkCount        OptInt                                     `json:"network_count"`
	NodeID              OptString                                  `json:"node_id"`
	NotificationsURL    OptString                                  `json:"notifications_url"`
	OpenIssuesCount     OptInt                                     `json:"open_issues_count"`
	Owner               OptRepositoryTemplateRepositoryOwner       `json:"owner"`
	Permissions         OptRepositoryTemplateRepositoryPermissions `json:"permissions"`
	Private             OptBool                                    `json:"private"`
	PullsURL            OptString                                  `json:"pulls_url"`
	PushedAt            OptString                                  `json:"pushed_at"`
	ReleasesURL         OptString                                  `json:"releases_url"`
	Size                OptInt                                     `json:"size"`
	SSHURL              OptString                                  `json:"ssh_url"`
	StargazersCount     OptInt                                     `json:"stargazers_count"`
	StargazersURL       OptString                                  `json:"stargazers_url"`
	StatusesURL         OptString                                  `json:"statuses_url"`
	SubscribersCount    OptInt                                     `json:"subscribers_count"`
	SubscribersURL      OptString                                  `json:"subscribers_url"`
	SubscriptionURL     OptString                                  `json:"subscription_url"`
	SvnURL              OptString                                  `json:"svn_url"`
	TagsURL             OptString                                  `json:"tags_url"`
	TeamsURL            OptString                                  `json:"teams_url"`
	TempCloneToken      OptString                                  `json:"temp_clone_token"`
	Topics              []string                                   `json:"topics"`
	TreesURL            OptString                                  `json:"trees_url"`
	UpdatedAt           OptString                                  `json:"updated_at"`
	URL                 OptString                                  `json:"url"`
	Visibility          OptString                                  `json:"visibility"`
	WatchersCount       OptInt                                     `json:"watchers_count"`
}

type RepositoryTemplateRepositoryOwner struct {
	AvatarURL         OptString `json:"avatar_url"`
	EventsURL         OptString `json:"events_url"`
	FollowersURL      OptString `json:"followers_url"`
	FollowingURL      OptString `json:"following_url"`
	GistsURL          OptString `json:"gists_url"`
	GravatarID        OptString `json:"gravatar_id"`
	HTMLURL           OptString `json:"html_url"`
	ID                OptInt    `json:"id"`
	Login             OptString `json:"login"`
	NodeID            OptString `json:"node_id"`
	OrganizationsURL  OptString `json:"organizations_url"`
	ReceivedEventsURL OptString `json:"received_events_url"`
	ReposURL          OptString `json:"repos_url"`
	SiteAdmin         OptBool   `json:"site_admin"`
	StarredURL        OptString `json:"starred_url"`
	SubscriptionsURL  OptString `json:"subscriptions_url"`
	Type              OptString `json:"type"`
	URL               OptString `json:"url"`
}

type RepositoryTemplateRepositoryPermissions struct {
	Admin    OptBool `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     OptBool `json:"pull"`
	Push     OptBool `json:"push"`
	Triage   OptBool `json:"triage"`
}

// Ref: #/components/schemas/review-comment
type ReviewComment struct {
	Links               ReviewCommentLinks           `json:"_links"`
	AuthorAssociation   AuthorAssociation            `json:"author_association"`
	Body                string                       `json:"body"`
	BodyHTML            OptString                    `json:"body_html"`
	BodyText            OptString                    `json:"body_text"`
	CommitID            string                       `json:"commit_id"`
	CreatedAt           time.Time                    `json:"created_at"`
	DiffHunk            string                       `json:"diff_hunk"`
	HTMLURL             url.URL                      `json:"html_url"`
	ID                  int                          `json:"id"`
	InReplyToID         OptInt                       `json:"in_reply_to_id"`
	Line                OptInt                       `json:"line"`
	NodeID              string                       `json:"node_id"`
	OriginalCommitID    string                       `json:"original_commit_id"`
	OriginalLine        OptInt                       `json:"original_line"`
	OriginalPosition    int                          `json:"original_position"`
	OriginalStartLine   OptNilInt                    `json:"original_start_line"`
	Path                string                       `json:"path"`
	Position            NilInt                       `json:"position"`
	PullRequestReviewID NilInt                       `json:"pull_request_review_id"`
	PullRequestURL      url.URL                      `json:"pull_request_url"`
	Reactions           OptReactionRollup            `json:"reactions"`
	Side                OptReviewCommentSide         `json:"side"`
	StartLine           OptNilInt                    `json:"start_line"`
	StartSide           OptNilReviewCommentStartSide `json:"start_side"`
	UpdatedAt           time.Time                    `json:"updated_at"`
	URL                 url.URL                      `json:"url"`
	User                NilNullableSimpleUser        `json:"user"`
}

type ReviewCommentLinks struct {
	HTML        Link `json:"html"`
	PullRequest Link `json:"pull_request"`
	Self        Link `json:"self"`
}

type ReviewCommentSide string

const (
	ReviewCommentSideLEFT  ReviewCommentSide = "LEFT"
	ReviewCommentSideRIGHT ReviewCommentSide = "RIGHT"
)

type ReviewCommentStartSide string

const (
	ReviewCommentStartSideLEFT  ReviewCommentStartSide = "LEFT"
	ReviewCommentStartSideRIGHT ReviewCommentStartSide = "RIGHT"
)

// Ref: #/components/schemas/runner
type Runner struct {
	Busy   bool               `json:"busy"`
	ID     int                `json:"id"`
	Labels []RunnerLabelsItem `json:"labels"`
	Name   string             `json:"name"`
	Os     string             `json:"os"`
	Status string             `json:"status"`
}

// Ref: #/components/schemas/runner-application
type RunnerApplication struct {
	Architecture      string    `json:"architecture"`
	DownloadURL       string    `json:"download_url"`
	Filename          string    `json:"filename"`
	Os                string    `json:"os"`
	SHA256Checksum    OptString `json:"sha256_checksum"`
	TempDownloadToken OptString `json:"temp_download_token"`
}

// Ref: #/components/schemas/runner-groups-enterprise
type RunnerGroupsEnterprise struct {
	AllowsPublicRepositories bool      `json:"allows_public_repositories"`
	Default                  bool      `json:"default"`
	ID                       float64   `json:"id"`
	Name                     string    `json:"name"`
	RunnersURL               string    `json:"runners_url"`
	SelectedOrganizationsURL OptString `json:"selected_organizations_url"`
	Visibility               string    `json:"visibility"`
}

// Ref: #/components/schemas/runner-groups-org
type RunnerGroupsOrg struct {
	AllowsPublicRepositories          bool      `json:"allows_public_repositories"`
	Default                           bool      `json:"default"`
	ID                                float64   `json:"id"`
	Inherited                         bool      `json:"inherited"`
	InheritedAllowsPublicRepositories OptBool   `json:"inherited_allows_public_repositories"`
	Name                              string    `json:"name"`
	RunnersURL                        string    `json:"runners_url"`
	SelectedRepositoriesURL           OptString `json:"selected_repositories_url"`
	Visibility                        string    `json:"visibility"`
}

type RunnerLabelsItem struct {
	ID   OptInt                  `json:"id"`
	Name OptString               `json:"name"`
	Type OptRunnerLabelsItemType `json:"type"`
}

type RunnerLabelsItemType string

const (
	RunnerLabelsItemTypeReadMinusOnly RunnerLabelsItemType = "read-only"
	RunnerLabelsItemTypeCustom        RunnerLabelsItemType = "custom"
)

type ScimDeleteUserFromOrgApplicationJSONForbidden ScimError

func (*ScimDeleteUserFromOrgApplicationJSONForbidden) scimDeleteUserFromOrgRes() {}

type ScimDeleteUserFromOrgApplicationJSONNotFound ScimError

func (*ScimDeleteUserFromOrgApplicationJSONNotFound) scimDeleteUserFromOrgRes() {}

type ScimDeleteUserFromOrgApplicationScimJSONForbidden ScimError

func (*ScimDeleteUserFromOrgApplicationScimJSONForbidden) scimDeleteUserFromOrgRes() {}

type ScimDeleteUserFromOrgApplicationScimJSONNotFound ScimError

func (*ScimDeleteUserFromOrgApplicationScimJSONNotFound) scimDeleteUserFromOrgRes() {}

// ScimDeleteUserFromOrgNoContent is response for ScimDeleteUserFromOrg operation.
type ScimDeleteUserFromOrgNoContent struct{}

func (*ScimDeleteUserFromOrgNoContent) scimDeleteUserFromOrgRes() {}

// ScimDeleteUserFromOrgNotModified is response for ScimDeleteUserFromOrg operation.
type ScimDeleteUserFromOrgNotModified struct{}

func (*ScimDeleteUserFromOrgNotModified) scimDeleteUserFromOrgRes() {}

// Ref: #/components/schemas/scim-enterprise-group
type ScimEnterpriseGroup struct {
	DisplayName OptString                        `json:"displayName"`
	ExternalId  OptNilString                     `json:"externalId"`
	ID          string                           `json:"id"`
	Members     []ScimEnterpriseGroupMembersItem `json:"members"`
	Meta        OptScimEnterpriseGroupMeta       `json:"meta"`
	Schemas     []string                         `json:"schemas"`
}

type ScimEnterpriseGroupMembersItem struct {
	Ref     OptString `json:"$ref"`
	Display OptString `json:"display"`
	Value   OptString `json:"value"`
}

type ScimEnterpriseGroupMeta struct {
	Created      OptString `json:"created"`
	LastModified OptString `json:"lastModified"`
	Location     OptString `json:"location"`
	ResourceType OptString `json:"resourceType"`
}

// Ref: #/components/schemas/scim-enterprise-user
type ScimEnterpriseUser struct {
	Active     OptBool                        `json:"active"`
	Emails     []ScimEnterpriseUserEmailsItem `json:"emails"`
	ExternalId OptString                      `json:"externalId"`
	Groups     []ScimEnterpriseUserGroupsItem `json:"groups"`
	ID         string                         `json:"id"`
	Meta       OptScimEnterpriseUserMeta      `json:"meta"`
	Name       OptScimEnterpriseUserName      `json:"name"`
	Schemas    []string                       `json:"schemas"`
	UserName   OptString                      `json:"userName"`
}

type ScimEnterpriseUserEmailsItem struct {
	Primary OptBool   `json:"primary"`
	Type    OptString `json:"type"`
	Value   OptString `json:"value"`
}

type ScimEnterpriseUserGroupsItem struct {
	Value OptString `json:"value"`
}

type ScimEnterpriseUserMeta struct {
	Created      OptString `json:"created"`
	LastModified OptString `json:"lastModified"`
	Location     OptString `json:"location"`
	ResourceType OptString `json:"resourceType"`
}

type ScimEnterpriseUserName struct {
	FamilyName OptString `json:"familyName"`
	GivenName  OptString `json:"givenName"`
}

// Ref: #/components/schemas/scim-error
type ScimError struct {
	Detail           OptNilString `json:"detail"`
	DocumentationURL OptNilString `json:"documentation_url"`
	Message          OptNilString `json:"message"`
	Schemas          []string     `json:"schemas"`
	ScimType         OptNilString `json:"scimType"`
	Status           OptInt       `json:"status"`
}

func (*ScimError) codeScanningDeleteAnalysisRes() {}
func (*ScimError) reposListCommitsRes()           {}
func (*ScimError) reposListForksRes()             {}

// Ref: #/components/schemas/scim-group-list-enterprise
type ScimGroupListEnterprise struct {
	Resources    []ScimGroupListEnterpriseResourcesItem `json:"Resources"`
	ItemsPerPage float64                                `json:"itemsPerPage"`
	Schemas      []string                               `json:"schemas"`
	StartIndex   float64                                `json:"startIndex"`
	TotalResults float64                                `json:"totalResults"`
}

type ScimGroupListEnterpriseResourcesItem struct {
	DisplayName OptString                                         `json:"displayName"`
	ExternalId  OptNilString                                      `json:"externalId"`
	ID          string                                            `json:"id"`
	Members     []ScimGroupListEnterpriseResourcesItemMembersItem `json:"members"`
	Meta        OptScimGroupListEnterpriseResourcesItemMeta       `json:"meta"`
	Schemas     []string                                          `json:"schemas"`
}

type ScimGroupListEnterpriseResourcesItemMembersItem struct {
	Ref     OptString `json:"$ref"`
	Display OptString `json:"display"`
	Value   OptString `json:"value"`
}

type ScimGroupListEnterpriseResourcesItemMeta struct {
	Created      OptString `json:"created"`
	LastModified OptString `json:"lastModified"`
	Location     OptString `json:"location"`
	ResourceType OptString `json:"resourceType"`
}

type ScimProvisionAndInviteUserReq struct {
	Active      OptBool                                   `json:"active"`
	DisplayName OptString                                 `json:"displayName"`
	Emails      []ScimProvisionAndInviteUserReqEmailsItem `json:"emails"`
	ExternalId  OptString                                 `json:"externalId"`
	Groups      []string                                  `json:"groups"`
	Name        ScimProvisionAndInviteUserReqName         `json:"name"`
	Schemas     []string                                  `json:"schemas"`
	UserName    string                                    `json:"userName"`
}

type ScimProvisionAndInviteUserReqEmailsItem struct {
	Primary OptBool   `json:"primary"`
	Type    OptString `json:"type"`
	Value   string    `json:"value"`
}

type ScimProvisionAndInviteUserReqName struct {
	FamilyName string    `json:"familyName"`
	Formatted  OptString `json:"formatted"`
	GivenName  string    `json:"givenName"`
}

type ScimSetInformationForProvisionedUserReq struct {
	Active      OptBool                                             `json:"active"`
	DisplayName OptString                                           `json:"displayName"`
	Emails      []ScimSetInformationForProvisionedUserReqEmailsItem `json:"emails"`
	ExternalId  OptString                                           `json:"externalId"`
	Groups      []string                                            `json:"groups"`
	Name        ScimSetInformationForProvisionedUserReqName         `json:"name"`
	Schemas     []string                                            `json:"schemas"`
	UserName    string                                              `json:"userName"`
}

type ScimSetInformationForProvisionedUserReqEmailsItem struct {
	Primary OptBool   `json:"primary"`
	Type    OptString `json:"type"`
	Value   string    `json:"value"`
}

type ScimSetInformationForProvisionedUserReqName struct {
	FamilyName string    `json:"familyName"`
	Formatted  OptString `json:"formatted"`
	GivenName  string    `json:"givenName"`
}

// Ref: #/components/schemas/scim-user-list-enterprise
type ScimUserListEnterprise struct {
	Resources    []ScimUserListEnterpriseResourcesItem `json:"Resources"`
	ItemsPerPage float64                               `json:"itemsPerPage"`
	Schemas      []string                              `json:"schemas"`
	StartIndex   float64                               `json:"startIndex"`
	TotalResults float64                               `json:"totalResults"`
}

type ScimUserListEnterpriseResourcesItem struct {
	Active     OptBool                                         `json:"active"`
	Emails     []ScimUserListEnterpriseResourcesItemEmailsItem `json:"emails"`
	ExternalId OptString                                       `json:"externalId"`
	Groups     []ScimUserListEnterpriseResourcesItemGroupsItem `json:"groups"`
	ID         string                                          `json:"id"`
	Meta       OptScimUserListEnterpriseResourcesItemMeta      `json:"meta"`
	Name       OptScimUserListEnterpriseResourcesItemName      `json:"name"`
	Schemas    []string                                        `json:"schemas"`
	UserName   OptString                                       `json:"userName"`
}

type ScimUserListEnterpriseResourcesItemEmailsItem struct {
	Primary OptBool   `json:"primary"`
	Type    OptString `json:"type"`
	Value   OptString `json:"value"`
}

type ScimUserListEnterpriseResourcesItemGroupsItem struct {
	Value OptString `json:"value"`
}

type ScimUserListEnterpriseResourcesItemMeta struct {
	Created      OptString `json:"created"`
	LastModified OptString `json:"lastModified"`
	Location     OptString `json:"location"`
	ResourceType OptString `json:"resourceType"`
}

type ScimUserListEnterpriseResourcesItemName struct {
	FamilyName OptString `json:"familyName"`
	GivenName  OptString `json:"givenName"`
}

// SearchCodeNotModified is response for SearchCode operation.
type SearchCodeNotModified struct{}

type SearchCodeOK struct {
	IncompleteResults bool                   `json:"incomplete_results"`
	Items             []CodeSearchResultItem `json:"items"`
	TotalCount        int                    `json:"total_count"`
}

type SearchCodeOrder string

const (
	SearchCodeOrderDesc SearchCodeOrder = "desc"
	SearchCodeOrderAsc  SearchCodeOrder = "asc"
)

type SearchCodeSort string

const (
	SearchCodeSortIndexed SearchCodeSort = "indexed"
)

// SearchCommitsNotModified is response for SearchCommits operation.
type SearchCommitsNotModified struct{}

func (*SearchCommitsNotModified) searchCommitsRes() {}

type SearchCommitsOK struct {
	IncompleteResults bool                     `json:"incomplete_results"`
	Items             []CommitSearchResultItem `json:"items"`
	TotalCount        int                      `json:"total_count"`
}

func (*SearchCommitsOK) searchCommitsRes() {}

type SearchCommitsOrder string

const (
	SearchCommitsOrderDesc SearchCommitsOrder = "desc"
	SearchCommitsOrderAsc  SearchCommitsOrder = "asc"
)

type SearchCommitsSort string

const (
	SearchCommitsSortAuthorMinusDate    SearchCommitsSort = "author-date"
	SearchCommitsSortCommitterMinusDate SearchCommitsSort = "committer-date"
)

type SearchCommitsUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*SearchCommitsUnsupportedMediaType) searchCommitsRes() {}

// SearchIssuesAndPullRequestsNotModified is response for SearchIssuesAndPullRequests operation.
type SearchIssuesAndPullRequestsNotModified struct{}

type SearchIssuesAndPullRequestsOK struct {
	IncompleteResults bool                    `json:"incomplete_results"`
	Items             []IssueSearchResultItem `json:"items"`
	TotalCount        int                     `json:"total_count"`
}

type SearchIssuesAndPullRequestsOrder string

const (
	SearchIssuesAndPullRequestsOrderDesc SearchIssuesAndPullRequestsOrder = "desc"
	SearchIssuesAndPullRequestsOrderAsc  SearchIssuesAndPullRequestsOrder = "asc"
)

type SearchIssuesAndPullRequestsSort string

const (
	SearchIssuesAndPullRequestsSortComments                   SearchIssuesAndPullRequestsSort = "comments"
	SearchIssuesAndPullRequestsSortReactions                  SearchIssuesAndPullRequestsSort = "reactions"
	SearchIssuesAndPullRequestsSortReactionsMinusPlus1        SearchIssuesAndPullRequestsSort = "reactions-+1"
	SearchIssuesAndPullRequestsSortReactionsMinusMinus1       SearchIssuesAndPullRequestsSort = "reactions--1"
	SearchIssuesAndPullRequestsSortReactionsMinusSmile        SearchIssuesAndPullRequestsSort = "reactions-smile"
	SearchIssuesAndPullRequestsSortReactionsMinusThinkingFace SearchIssuesAndPullRequestsSort = "reactions-thinking_face"
	SearchIssuesAndPullRequestsSortReactionsMinusHeart        SearchIssuesAndPullRequestsSort = "reactions-heart"
	SearchIssuesAndPullRequestsSortReactionsMinusTada         SearchIssuesAndPullRequestsSort = "reactions-tada"
	SearchIssuesAndPullRequestsSortInteractions               SearchIssuesAndPullRequestsSort = "interactions"
	SearchIssuesAndPullRequestsSortCreated                    SearchIssuesAndPullRequestsSort = "created"
	SearchIssuesAndPullRequestsSortUpdated                    SearchIssuesAndPullRequestsSort = "updated"
)

// SearchLabelsNotModified is response for SearchLabels operation.
type SearchLabelsNotModified struct{}

type SearchLabelsOK struct {
	IncompleteResults bool                    `json:"incomplete_results"`
	Items             []LabelSearchResultItem `json:"items"`
	TotalCount        int                     `json:"total_count"`
}

type SearchLabelsOrder string

const (
	SearchLabelsOrderDesc SearchLabelsOrder = "desc"
	SearchLabelsOrderAsc  SearchLabelsOrder = "asc"
)

type SearchLabelsSort string

const (
	SearchLabelsSortCreated SearchLabelsSort = "created"
	SearchLabelsSortUpdated SearchLabelsSort = "updated"
)

// SearchReposNotModified is response for SearchRepos operation.
type SearchReposNotModified struct{}

type SearchReposOK struct {
	IncompleteResults bool                   `json:"incomplete_results"`
	Items             []RepoSearchResultItem `json:"items"`
	TotalCount        int                    `json:"total_count"`
}

type SearchReposOrder string

const (
	SearchReposOrderDesc SearchReposOrder = "desc"
	SearchReposOrderAsc  SearchReposOrder = "asc"
)

type SearchReposSort string

const (
	SearchReposSortStars                      SearchReposSort = "stars"
	SearchReposSortForks                      SearchReposSort = "forks"
	SearchReposSortHelpMinusWantedMinusIssues SearchReposSort = "help-wanted-issues"
	SearchReposSortUpdated                    SearchReposSort = "updated"
)

type SearchResultTextMatches []SearchResultTextMatchesItem

type SearchResultTextMatchesItem struct {
	Fragment   OptString                                `json:"fragment"`
	Matches    []SearchResultTextMatchesItemMatchesItem `json:"matches"`
	ObjectType OptNilString                             `json:"object_type"`
	ObjectURL  OptString                                `json:"object_url"`
	Property   OptString                                `json:"property"`
}

type SearchResultTextMatchesItemMatchesItem struct {
	Indices []int     `json:"indices"`
	Text    OptString `json:"text"`
}

// SearchTopicsNotModified is response for SearchTopics operation.
type SearchTopicsNotModified struct{}

func (*SearchTopicsNotModified) searchTopicsRes() {}

type SearchTopicsOK struct {
	IncompleteResults bool                    `json:"incomplete_results"`
	Items             []TopicSearchResultItem `json:"items"`
	TotalCount        int                     `json:"total_count"`
}

func (*SearchTopicsOK) searchTopicsRes() {}

type SearchTopicsUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*SearchTopicsUnsupportedMediaType) searchTopicsRes() {}

// SearchUsersNotModified is response for SearchUsers operation.
type SearchUsersNotModified struct{}

type SearchUsersOK struct {
	IncompleteResults bool                   `json:"incomplete_results"`
	Items             []UserSearchResultItem `json:"items"`
	TotalCount        int                    `json:"total_count"`
}

type SearchUsersOrder string

const (
	SearchUsersOrderDesc SearchUsersOrder = "desc"
	SearchUsersOrderAsc  SearchUsersOrder = "asc"
)

type SearchUsersSort string

const (
	SearchUsersSortFollowers    SearchUsersSort = "followers"
	SearchUsersSortRepositories SearchUsersSort = "repositories"
	SearchUsersSortJoined       SearchUsersSort = "joined"
)

// Ref: #/components/schemas/secret-scanning-alert
type SecretScanningAlert struct {
	CreatedAt    OptAlertCreatedAt                   `json:"created_at"`
	HTMLURL      OptAlertHTMLURL                     `json:"html_url"`
	LocationsURL OptURL                              `json:"locations_url"`
	Number       OptAlertNumber                      `json:"number"`
	Resolution   OptNilSecretScanningAlertResolution `json:"resolution"`
	ResolvedAt   OptNilTime                          `json:"resolved_at"`
	ResolvedBy   OptNilNullableSimpleUser            `json:"resolved_by"`
	Secret       OptString                           `json:"secret"`
	SecretType   OptString                           `json:"secret_type"`
	State        OptSecretScanningAlertState         `json:"state"`
	URL          OptAlertURL                         `json:"url"`
}

func (*SecretScanningAlert) secretScanningGetAlertRes()    {}
func (*SecretScanningAlert) secretScanningUpdateAlertRes() {}

// Ref: #/components/schemas/secret-scanning-alert-resolution
type SecretScanningAlertResolution string

const (
	SecretScanningAlertResolutionFalsePositive SecretScanningAlertResolution = "false_positive"
	SecretScanningAlertResolutionWontFix       SecretScanningAlertResolution = "wont_fix"
	SecretScanningAlertResolutionRevoked       SecretScanningAlertResolution = "revoked"
	SecretScanningAlertResolutionUsedInTests   SecretScanningAlertResolution = "used_in_tests"
)

// Ref: #/components/schemas/secret-scanning-alert-state
type SecretScanningAlertState string

const (
	SecretScanningAlertStateOpen     SecretScanningAlertState = "open"
	SecretScanningAlertStateResolved SecretScanningAlertState = "resolved"
)

// SecretScanningGetAlertNotFound is response for SecretScanningGetAlert operation.
type SecretScanningGetAlertNotFound struct{}

func (*SecretScanningGetAlertNotFound) secretScanningGetAlertRes() {}

type SecretScanningGetAlertServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*SecretScanningGetAlertServiceUnavailable) secretScanningGetAlertRes() {}

type SecretScanningListAlertsForOrgOKApplicationJSON []OrganizationSecretScanningAlert

func (*SecretScanningListAlertsForOrgOKApplicationJSON) secretScanningListAlertsForOrgRes() {}

type SecretScanningListAlertsForOrgServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*SecretScanningListAlertsForOrgServiceUnavailable) secretScanningListAlertsForOrgRes() {}

type SecretScanningListAlertsForOrgState string

const (
	SecretScanningListAlertsForOrgStateOpen     SecretScanningListAlertsForOrgState = "open"
	SecretScanningListAlertsForOrgStateResolved SecretScanningListAlertsForOrgState = "resolved"
)

// SecretScanningListAlertsForRepoNotFound is response for SecretScanningListAlertsForRepo operation.
type SecretScanningListAlertsForRepoNotFound struct{}

func (*SecretScanningListAlertsForRepoNotFound) secretScanningListAlertsForRepoRes() {}

type SecretScanningListAlertsForRepoOKApplicationJSON []SecretScanningAlert

func (*SecretScanningListAlertsForRepoOKApplicationJSON) secretScanningListAlertsForRepoRes() {}

type SecretScanningListAlertsForRepoServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*SecretScanningListAlertsForRepoServiceUnavailable) secretScanningListAlertsForRepoRes() {}

type SecretScanningListAlertsForRepoState string

const (
	SecretScanningListAlertsForRepoStateOpen     SecretScanningListAlertsForRepoState = "open"
	SecretScanningListAlertsForRepoStateResolved SecretScanningListAlertsForRepoState = "resolved"
)

// SecretScanningUpdateAlertNotFound is response for SecretScanningUpdateAlert operation.
type SecretScanningUpdateAlertNotFound struct{}

func (*SecretScanningUpdateAlertNotFound) secretScanningUpdateAlertRes() {}

type SecretScanningUpdateAlertReq struct {
	Resolution OptNilSecretScanningAlertResolution `json:"resolution"`
	State      SecretScanningAlertState            `json:"state"`
}

type SecretScanningUpdateAlertServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*SecretScanningUpdateAlertServiceUnavailable) secretScanningUpdateAlertRes() {}

// SecretScanningUpdateAlertUnprocessableEntity is response for SecretScanningUpdateAlert operation.
type SecretScanningUpdateAlertUnprocessableEntity struct{}

func (*SecretScanningUpdateAlertUnprocessableEntity) secretScanningUpdateAlertRes() {}

// Ref: #/components/schemas/selected-actions
type SelectedActions struct {
	GithubOwnedAllowed OptBool  `json:"github_owned_allowed"`
	PatternsAllowed    []string `json:"patterns_allowed"`
	VerifiedAllowed    OptBool  `json:"verified_allowed"`
}

type SelectedActionsURL string

// Ref: #/components/schemas/short-blob
type ShortBlob struct {
	Sha string `json:"sha"`
	URL string `json:"url"`
}

// Ref: #/components/schemas/short-branch
type ShortBranch struct {
	Commit        ShortBranchCommit   `json:"commit"`
	Name          string              `json:"name"`
	Protected     bool                `json:"protected"`
	Protection    OptBranchProtection `json:"protection"`
	ProtectionURL OptURL              `json:"protection_url"`
}

type ShortBranchCommit struct {
	Sha string  `json:"sha"`
	URL url.URL `json:"url"`
}

// Ref: #/components/schemas/simple-commit
type SimpleCommit struct {
	Author    NilSimpleCommitAuthor    `json:"author"`
	Committer NilSimpleCommitCommitter `json:"committer"`
	ID        string                   `json:"id"`
	Message   string                   `json:"message"`
	Timestamp time.Time                `json:"timestamp"`
	TreeID    string                   `json:"tree_id"`
}

type SimpleCommitAuthor struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

type SimpleCommitCommitter struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

// Ref: #/components/schemas/simple-commit-status
type SimpleCommitStatus struct {
	AvatarURL   NilURL     `json:"avatar_url"`
	Context     string     `json:"context"`
	CreatedAt   time.Time  `json:"created_at"`
	Description NilString  `json:"description"`
	ID          int        `json:"id"`
	NodeID      string     `json:"node_id"`
	Required    OptNilBool `json:"required"`
	State       string     `json:"state"`
	TargetURL   url.URL    `json:"target_url"`
	UpdatedAt   time.Time  `json:"updated_at"`
	URL         url.URL    `json:"url"`
}

// Ref: #/components/schemas/simple-user
type SimpleUser struct {
	AvatarURL         url.URL      `json:"avatar_url"`
	Email             OptNilString `json:"email"`
	EventsURL         string       `json:"events_url"`
	FollowersURL      url.URL      `json:"followers_url"`
	FollowingURL      string       `json:"following_url"`
	GistsURL          string       `json:"gists_url"`
	GravatarID        NilString    `json:"gravatar_id"`
	HTMLURL           url.URL      `json:"html_url"`
	ID                int          `json:"id"`
	Login             string       `json:"login"`
	Name              OptNilString `json:"name"`
	NodeID            string       `json:"node_id"`
	OrganizationsURL  url.URL      `json:"organizations_url"`
	ReceivedEventsURL url.URL      `json:"received_events_url"`
	ReposURL          url.URL      `json:"repos_url"`
	SiteAdmin         bool         `json:"site_admin"`
	StarredAt         OptString    `json:"starred_at"`
	StarredURL        string       `json:"starred_url"`
	SubscriptionsURL  url.URL      `json:"subscriptions_url"`
	Type              string       `json:"type"`
	URL               url.URL      `json:"url"`
}

// Ref: #/components/schemas/starred-repository
type StarredRepository struct {
	Repo      Repository `json:"repo"`
	StarredAt time.Time  `json:"starred_at"`
}

// Ref: #/components/schemas/status
type Status struct {
	AvatarURL   NilString             `json:"avatar_url"`
	Context     string                `json:"context"`
	CreatedAt   string                `json:"created_at"`
	Creator     NilNullableSimpleUser `json:"creator"`
	Description string                `json:"description"`
	ID          int                   `json:"id"`
	NodeID      string                `json:"node_id"`
	State       string                `json:"state"`
	TargetURL   string                `json:"target_url"`
	UpdatedAt   string                `json:"updated_at"`
	URL         string                `json:"url"`
}

// Ref: #/components/schemas/status-check-policy
type StatusCheckPolicy struct {
	Contexts    []string `json:"contexts"`
	ContextsURL url.URL  `json:"contexts_url"`
	Strict      bool     `json:"strict"`
	URL         url.URL  `json:"url"`
}

func (*StatusCheckPolicy) reposGetStatusChecksProtectionRes() {}

// Ref: #/components/schemas/tag
type Tag struct {
	Commit     TagCommit `json:"commit"`
	Name       string    `json:"name"`
	NodeID     string    `json:"node_id"`
	TarballURL url.URL   `json:"tarball_url"`
	ZipballURL url.URL   `json:"zipball_url"`
}

type TagCommit struct {
	Sha string  `json:"sha"`
	URL url.URL `json:"url"`
}

// Ref: #/components/schemas/team
type Team struct {
	Description     NilString             `json:"description"`
	HTMLURL         url.URL               `json:"html_url"`
	ID              int                   `json:"id"`
	MembersURL      string                `json:"members_url"`
	Name            string                `json:"name"`
	NodeID          string                `json:"node_id"`
	Parent          NilNullableTeamSimple `json:"parent"`
	Permission      string                `json:"permission"`
	Permissions     OptTeamPermissions    `json:"permissions"`
	Privacy         OptString             `json:"privacy"`
	RepositoriesURL url.URL               `json:"repositories_url"`
	Slug            string                `json:"slug"`
	URL             url.URL               `json:"url"`
}

// Ref: #/components/schemas/team-discussion
type TeamDiscussion struct {
	Author        NilNullableSimpleUser `json:"author"`
	Body          string                `json:"body"`
	BodyHTML      string                `json:"body_html"`
	BodyVersion   string                `json:"body_version"`
	CommentsCount int                   `json:"comments_count"`
	CommentsURL   url.URL               `json:"comments_url"`
	CreatedAt     time.Time             `json:"created_at"`
	HTMLURL       url.URL               `json:"html_url"`
	LastEditedAt  NilTime               `json:"last_edited_at"`
	NodeID        string                `json:"node_id"`
	Number        int                   `json:"number"`
	Pinned        bool                  `json:"pinned"`
	Private       bool                  `json:"private"`
	Reactions     OptReactionRollup     `json:"reactions"`
	TeamURL       url.URL               `json:"team_url"`
	Title         string                `json:"title"`
	UpdatedAt     time.Time             `json:"updated_at"`
	URL           url.URL               `json:"url"`
}

// Ref: #/components/schemas/team-discussion-comment
type TeamDiscussionComment struct {
	Author        NilNullableSimpleUser `json:"author"`
	Body          string                `json:"body"`
	BodyHTML      string                `json:"body_html"`
	BodyVersion   string                `json:"body_version"`
	CreatedAt     time.Time             `json:"created_at"`
	DiscussionURL url.URL               `json:"discussion_url"`
	HTMLURL       url.URL               `json:"html_url"`
	LastEditedAt  NilTime               `json:"last_edited_at"`
	NodeID        string                `json:"node_id"`
	Number        int                   `json:"number"`
	Reactions     OptReactionRollup     `json:"reactions"`
	UpdatedAt     time.Time             `json:"updated_at"`
	URL           url.URL               `json:"url"`
}

// Ref: #/components/schemas/team-full
type TeamFull struct {
	CreatedAt       time.Time                `json:"created_at"`
	Description     NilString                `json:"description"`
	HTMLURL         url.URL                  `json:"html_url"`
	ID              int                      `json:"id"`
	LdapDn          OptString                `json:"ldap_dn"`
	MembersCount    int                      `json:"members_count"`
	MembersURL      string                   `json:"members_url"`
	Name            string                   `json:"name"`
	NodeID          string                   `json:"node_id"`
	Organization    OrganizationFull         `json:"organization"`
	Parent          OptNilNullableTeamSimple `json:"parent"`
	Permission      string                   `json:"permission"`
	Privacy         OptTeamFullPrivacy       `json:"privacy"`
	ReposCount      int                      `json:"repos_count"`
	RepositoriesURL url.URL                  `json:"repositories_url"`
	Slug            string                   `json:"slug"`
	UpdatedAt       time.Time                `json:"updated_at"`
	URL             url.URL                  `json:"url"`
}

func (*TeamFull) teamsGetByNameRes() {}
func (*TeamFull) teamsGetLegacyRes() {}

type TeamFullPrivacy string

const (
	TeamFullPrivacyClosed TeamFullPrivacy = "closed"
	TeamFullPrivacySecret TeamFullPrivacy = "secret"
)

// Ref: #/components/schemas/team-membership
type TeamMembership struct {
	Role  TeamMembershipRole  `json:"role"`
	State TeamMembershipState `json:"state"`
	URL   url.URL             `json:"url"`
}

func (*TeamMembership) teamsAddOrUpdateMembershipForUserInOrgRes()  {}
func (*TeamMembership) teamsAddOrUpdateMembershipForUserLegacyRes() {}
func (*TeamMembership) teamsGetMembershipForUserInOrgRes()          {}
func (*TeamMembership) teamsGetMembershipForUserLegacyRes()         {}

type TeamMembershipRole string

const (
	TeamMembershipRoleMember     TeamMembershipRole = "member"
	TeamMembershipRoleMaintainer TeamMembershipRole = "maintainer"
)

type TeamMembershipState string

const (
	TeamMembershipStateActive  TeamMembershipState = "active"
	TeamMembershipStatePending TeamMembershipState = "pending"
)

type TeamPermissions struct {
	Admin    bool `json:"admin"`
	Maintain bool `json:"maintain"`
	Pull     bool `json:"pull"`
	Push     bool `json:"push"`
	Triage   bool `json:"triage"`
}

// Ref: #/components/schemas/team-project
type TeamProject struct {
	Body                   NilString              `json:"body"`
	ColumnsURL             string                 `json:"columns_url"`
	CreatedAt              string                 `json:"created_at"`
	Creator                SimpleUser             `json:"creator"`
	HTMLURL                string                 `json:"html_url"`
	ID                     int                    `json:"id"`
	Name                   string                 `json:"name"`
	NodeID                 string                 `json:"node_id"`
	Number                 int                    `json:"number"`
	OrganizationPermission OptString              `json:"organization_permission"`
	OwnerURL               string                 `json:"owner_url"`
	Permissions            TeamProjectPermissions `json:"permissions"`
	Private                OptBool                `json:"private"`
	State                  string                 `json:"state"`
	UpdatedAt              string                 `json:"updated_at"`
	URL                    string                 `json:"url"`
}

func (*TeamProject) teamsCheckPermissionsForProjectInOrgRes()  {}
func (*TeamProject) teamsCheckPermissionsForProjectLegacyRes() {}

type TeamProjectPermissions struct {
	Admin bool `json:"admin"`
	Read  bool `json:"read"`
	Write bool `json:"write"`
}

// Ref: #/components/schemas/team-repository
type TeamRepository struct {
	AllowAutoMerge      OptBool                      `json:"allow_auto_merge"`
	AllowForking        OptBool                      `json:"allow_forking"`
	AllowMergeCommit    OptBool                      `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                      `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                      `json:"allow_squash_merge"`
	ArchiveURL          string                       `json:"archive_url"`
	Archived            bool                         `json:"archived"`
	AssigneesURL        string                       `json:"assignees_url"`
	BlobsURL            string                       `json:"blobs_url"`
	BranchesURL         string                       `json:"branches_url"`
	CloneURL            string                       `json:"clone_url"`
	CollaboratorsURL    string                       `json:"collaborators_url"`
	CommentsURL         string                       `json:"comments_url"`
	CommitsURL          string                       `json:"commits_url"`
	CompareURL          string                       `json:"compare_url"`
	ContentsURL         string                       `json:"contents_url"`
	ContributorsURL     url.URL                      `json:"contributors_url"`
	CreatedAt           NilTime                      `json:"created_at"`
	DefaultBranch       string                       `json:"default_branch"`
	DeleteBranchOnMerge OptBool                      `json:"delete_branch_on_merge"`
	DeploymentsURL      url.URL                      `json:"deployments_url"`
	Description         NilString                    `json:"description"`
	Disabled            bool                         `json:"disabled"`
	DownloadsURL        url.URL                      `json:"downloads_url"`
	EventsURL           url.URL                      `json:"events_url"`
	Fork                bool                         `json:"fork"`
	Forks               int                          `json:"forks"`
	ForksCount          int                          `json:"forks_count"`
	ForksURL            url.URL                      `json:"forks_url"`
	FullName            string                       `json:"full_name"`
	GitCommitsURL       string                       `json:"git_commits_url"`
	GitRefsURL          string                       `json:"git_refs_url"`
	GitTagsURL          string                       `json:"git_tags_url"`
	GitURL              string                       `json:"git_url"`
	HasDownloads        bool                         `json:"has_downloads"`
	HasIssues           bool                         `json:"has_issues"`
	HasPages            bool                         `json:"has_pages"`
	HasProjects         bool                         `json:"has_projects"`
	HasWiki             bool                         `json:"has_wiki"`
	Homepage            NilURL                       `json:"homepage"`
	HooksURL            url.URL                      `json:"hooks_url"`
	HTMLURL             url.URL                      `json:"html_url"`
	ID                  int                          `json:"id"`
	IsTemplate          OptBool                      `json:"is_template"`
	IssueCommentURL     string                       `json:"issue_comment_url"`
	IssueEventsURL      string                       `json:"issue_events_url"`
	IssuesURL           string                       `json:"issues_url"`
	KeysURL             string                       `json:"keys_url"`
	LabelsURL           string                       `json:"labels_url"`
	Language            NilString                    `json:"language"`
	LanguagesURL        url.URL                      `json:"languages_url"`
	License             NilNullableLicenseSimple     `json:"license"`
	MasterBranch        OptString                    `json:"master_branch"`
	MergesURL           url.URL                      `json:"merges_url"`
	MilestonesURL       string                       `json:"milestones_url"`
	MirrorURL           NilURL                       `json:"mirror_url"`
	Name                string                       `json:"name"`
	NetworkCount        OptInt                       `json:"network_count"`
	NodeID              string                       `json:"node_id"`
	NotificationsURL    string                       `json:"notifications_url"`
	OpenIssues          int                          `json:"open_issues"`
	OpenIssuesCount     int                          `json:"open_issues_count"`
	Owner               NilNullableSimpleUser        `json:"owner"`
	Permissions         OptTeamRepositoryPermissions `json:"permissions"`
	Private             bool                         `json:"private"`
	PullsURL            string                       `json:"pulls_url"`
	PushedAt            NilTime                      `json:"pushed_at"`
	ReleasesURL         string                       `json:"releases_url"`
	Size                int                          `json:"size"`
	SSHURL              string                       `json:"ssh_url"`
	StargazersCount     int                          `json:"stargazers_count"`
	StargazersURL       url.URL                      `json:"stargazers_url"`
	StatusesURL         string                       `json:"statuses_url"`
	SubscribersCount    OptInt                       `json:"subscribers_count"`
	SubscribersURL      url.URL                      `json:"subscribers_url"`
	SubscriptionURL     url.URL                      `json:"subscription_url"`
	SvnURL              url.URL                      `json:"svn_url"`
	TagsURL             url.URL                      `json:"tags_url"`
	TeamsURL            url.URL                      `json:"teams_url"`
	TempCloneToken      OptString                    `json:"temp_clone_token"`
	TemplateRepository  OptNilNullableRepository     `json:"template_repository"`
	Topics              []string                     `json:"topics"`
	TreesURL            string                       `json:"trees_url"`
	UpdatedAt           NilTime                      `json:"updated_at"`
	URL                 url.URL                      `json:"url"`
	Visibility          OptString                    `json:"visibility"`
	Watchers            int                          `json:"watchers"`
	WatchersCount       int                          `json:"watchers_count"`
}

func (*TeamRepository) teamsCheckPermissionsForRepoInOrgRes()  {}
func (*TeamRepository) teamsCheckPermissionsForRepoLegacyRes() {}

type TeamRepositoryPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

// Ref: #/components/schemas/team-simple
type TeamSimple struct {
	Description     NilString `json:"description"`
	HTMLURL         url.URL   `json:"html_url"`
	ID              int       `json:"id"`
	LdapDn          OptString `json:"ldap_dn"`
	MembersURL      string    `json:"members_url"`
	Name            string    `json:"name"`
	NodeID          string    `json:"node_id"`
	Permission      string    `json:"permission"`
	Privacy         OptString `json:"privacy"`
	RepositoriesURL url.URL   `json:"repositories_url"`
	Slug            string    `json:"slug"`
	URL             url.URL   `json:"url"`
}

// TeamsAddMemberLegacyNoContent is response for TeamsAddMemberLegacy operation.
type TeamsAddMemberLegacyNoContent struct{}

func (*TeamsAddMemberLegacyNoContent) teamsAddMemberLegacyRes() {}

// TeamsAddMemberLegacyNotFound is response for TeamsAddMemberLegacy operation.
type TeamsAddMemberLegacyNotFound struct{}

func (*TeamsAddMemberLegacyNotFound) teamsAddMemberLegacyRes() {}

// TeamsAddMemberLegacyUnprocessableEntity is response for TeamsAddMemberLegacy operation.
type TeamsAddMemberLegacyUnprocessableEntity struct{}

func (*TeamsAddMemberLegacyUnprocessableEntity) teamsAddMemberLegacyRes() {}

// TeamsAddOrUpdateMembershipForUserInOrgForbidden is response for TeamsAddOrUpdateMembershipForUserInOrg operation.
type TeamsAddOrUpdateMembershipForUserInOrgForbidden struct{}

func (*TeamsAddOrUpdateMembershipForUserInOrgForbidden) teamsAddOrUpdateMembershipForUserInOrgRes() {}

type TeamsAddOrUpdateMembershipForUserInOrgReq struct {
	Role OptTeamsAddOrUpdateMembershipForUserInOrgReqRole `json:"role"`
}

type TeamsAddOrUpdateMembershipForUserInOrgReqRole string

const (
	TeamsAddOrUpdateMembershipForUserInOrgReqRoleMember     TeamsAddOrUpdateMembershipForUserInOrgReqRole = "member"
	TeamsAddOrUpdateMembershipForUserInOrgReqRoleMaintainer TeamsAddOrUpdateMembershipForUserInOrgReqRole = "maintainer"
)

// TeamsAddOrUpdateMembershipForUserInOrgUnprocessableEntity is response for TeamsAddOrUpdateMembershipForUserInOrg operation.
type TeamsAddOrUpdateMembershipForUserInOrgUnprocessableEntity struct{}

func (*TeamsAddOrUpdateMembershipForUserInOrgUnprocessableEntity) teamsAddOrUpdateMembershipForUserInOrgRes() {
}

// TeamsAddOrUpdateMembershipForUserLegacyForbidden is response for TeamsAddOrUpdateMembershipForUserLegacy operation.
type TeamsAddOrUpdateMembershipForUserLegacyForbidden struct{}

func (*TeamsAddOrUpdateMembershipForUserLegacyForbidden) teamsAddOrUpdateMembershipForUserLegacyRes() {
}

type TeamsAddOrUpdateMembershipForUserLegacyReq struct {
	Role OptTeamsAddOrUpdateMembershipForUserLegacyReqRole `json:"role"`
}

type TeamsAddOrUpdateMembershipForUserLegacyReqRole string

const (
	TeamsAddOrUpdateMembershipForUserLegacyReqRoleMember     TeamsAddOrUpdateMembershipForUserLegacyReqRole = "member"
	TeamsAddOrUpdateMembershipForUserLegacyReqRoleMaintainer TeamsAddOrUpdateMembershipForUserLegacyReqRole = "maintainer"
)

// TeamsAddOrUpdateMembershipForUserLegacyUnprocessableEntity is response for TeamsAddOrUpdateMembershipForUserLegacy operation.
type TeamsAddOrUpdateMembershipForUserLegacyUnprocessableEntity struct{}

func (*TeamsAddOrUpdateMembershipForUserLegacyUnprocessableEntity) teamsAddOrUpdateMembershipForUserLegacyRes() {
}

type TeamsAddOrUpdateProjectPermissionsInOrgForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*TeamsAddOrUpdateProjectPermissionsInOrgForbidden) teamsAddOrUpdateProjectPermissionsInOrgRes() {
}

// TeamsAddOrUpdateProjectPermissionsInOrgNoContent is response for TeamsAddOrUpdateProjectPermissionsInOrg operation.
type TeamsAddOrUpdateProjectPermissionsInOrgNoContent struct{}

func (*TeamsAddOrUpdateProjectPermissionsInOrgNoContent) teamsAddOrUpdateProjectPermissionsInOrgRes() {
}

type TeamsAddOrUpdateProjectPermissionsInOrgReq struct {
	Permission OptTeamsAddOrUpdateProjectPermissionsInOrgReqPermission `json:"permission"`
}

type TeamsAddOrUpdateProjectPermissionsInOrgReqPermission string

const (
	TeamsAddOrUpdateProjectPermissionsInOrgReqPermissionRead  TeamsAddOrUpdateProjectPermissionsInOrgReqPermission = "read"
	TeamsAddOrUpdateProjectPermissionsInOrgReqPermissionWrite TeamsAddOrUpdateProjectPermissionsInOrgReqPermission = "write"
	TeamsAddOrUpdateProjectPermissionsInOrgReqPermissionAdmin TeamsAddOrUpdateProjectPermissionsInOrgReqPermission = "admin"
)

type TeamsAddOrUpdateProjectPermissionsLegacyForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

// TeamsAddOrUpdateProjectPermissionsLegacyNoContent is response for TeamsAddOrUpdateProjectPermissionsLegacy operation.
type TeamsAddOrUpdateProjectPermissionsLegacyNoContent struct{}

type TeamsAddOrUpdateProjectPermissionsLegacyReq struct {
	Permission OptTeamsAddOrUpdateProjectPermissionsLegacyReqPermission `json:"permission"`
}

type TeamsAddOrUpdateProjectPermissionsLegacyReqPermission string

const (
	TeamsAddOrUpdateProjectPermissionsLegacyReqPermissionRead  TeamsAddOrUpdateProjectPermissionsLegacyReqPermission = "read"
	TeamsAddOrUpdateProjectPermissionsLegacyReqPermissionWrite TeamsAddOrUpdateProjectPermissionsLegacyReqPermission = "write"
	TeamsAddOrUpdateProjectPermissionsLegacyReqPermissionAdmin TeamsAddOrUpdateProjectPermissionsLegacyReqPermission = "admin"
)

// TeamsAddOrUpdateRepoPermissionsInOrgNoContent is response for TeamsAddOrUpdateRepoPermissionsInOrg operation.
type TeamsAddOrUpdateRepoPermissionsInOrgNoContent struct{}

type TeamsAddOrUpdateRepoPermissionsInOrgReq struct {
	Permission OptTeamsAddOrUpdateRepoPermissionsInOrgReqPermission `json:"permission"`
}

type TeamsAddOrUpdateRepoPermissionsInOrgReqPermission string

const (
	TeamsAddOrUpdateRepoPermissionsInOrgReqPermissionPull     TeamsAddOrUpdateRepoPermissionsInOrgReqPermission = "pull"
	TeamsAddOrUpdateRepoPermissionsInOrgReqPermissionPush     TeamsAddOrUpdateRepoPermissionsInOrgReqPermission = "push"
	TeamsAddOrUpdateRepoPermissionsInOrgReqPermissionAdmin    TeamsAddOrUpdateRepoPermissionsInOrgReqPermission = "admin"
	TeamsAddOrUpdateRepoPermissionsInOrgReqPermissionMaintain TeamsAddOrUpdateRepoPermissionsInOrgReqPermission = "maintain"
	TeamsAddOrUpdateRepoPermissionsInOrgReqPermissionTriage   TeamsAddOrUpdateRepoPermissionsInOrgReqPermission = "triage"
)

// TeamsAddOrUpdateRepoPermissionsLegacyNoContent is response for TeamsAddOrUpdateRepoPermissionsLegacy operation.
type TeamsAddOrUpdateRepoPermissionsLegacyNoContent struct{}

type TeamsAddOrUpdateRepoPermissionsLegacyReq struct {
	Permission OptTeamsAddOrUpdateRepoPermissionsLegacyReqPermission `json:"permission"`
}

type TeamsAddOrUpdateRepoPermissionsLegacyReqPermission string

const (
	TeamsAddOrUpdateRepoPermissionsLegacyReqPermissionPull  TeamsAddOrUpdateRepoPermissionsLegacyReqPermission = "pull"
	TeamsAddOrUpdateRepoPermissionsLegacyReqPermissionPush  TeamsAddOrUpdateRepoPermissionsLegacyReqPermission = "push"
	TeamsAddOrUpdateRepoPermissionsLegacyReqPermissionAdmin TeamsAddOrUpdateRepoPermissionsLegacyReqPermission = "admin"
)

// TeamsCheckPermissionsForProjectInOrgNotFound is response for TeamsCheckPermissionsForProjectInOrg operation.
type TeamsCheckPermissionsForProjectInOrgNotFound struct{}

func (*TeamsCheckPermissionsForProjectInOrgNotFound) teamsCheckPermissionsForProjectInOrgRes() {}

// TeamsCheckPermissionsForProjectLegacyNotFound is response for TeamsCheckPermissionsForProjectLegacy operation.
type TeamsCheckPermissionsForProjectLegacyNotFound struct{}

func (*TeamsCheckPermissionsForProjectLegacyNotFound) teamsCheckPermissionsForProjectLegacyRes() {}

// TeamsCheckPermissionsForRepoInOrgNoContent is response for TeamsCheckPermissionsForRepoInOrg operation.
type TeamsCheckPermissionsForRepoInOrgNoContent struct{}

func (*TeamsCheckPermissionsForRepoInOrgNoContent) teamsCheckPermissionsForRepoInOrgRes() {}

// TeamsCheckPermissionsForRepoInOrgNotFound is response for TeamsCheckPermissionsForRepoInOrg operation.
type TeamsCheckPermissionsForRepoInOrgNotFound struct{}

func (*TeamsCheckPermissionsForRepoInOrgNotFound) teamsCheckPermissionsForRepoInOrgRes() {}

// TeamsCheckPermissionsForRepoLegacyNoContent is response for TeamsCheckPermissionsForRepoLegacy operation.
type TeamsCheckPermissionsForRepoLegacyNoContent struct{}

func (*TeamsCheckPermissionsForRepoLegacyNoContent) teamsCheckPermissionsForRepoLegacyRes() {}

// TeamsCheckPermissionsForRepoLegacyNotFound is response for TeamsCheckPermissionsForRepoLegacy operation.
type TeamsCheckPermissionsForRepoLegacyNotFound struct{}

func (*TeamsCheckPermissionsForRepoLegacyNotFound) teamsCheckPermissionsForRepoLegacyRes() {}

type TeamsCreateDiscussionCommentInOrgReq struct {
	Body string `json:"body"`
}

type TeamsCreateDiscussionCommentLegacyReq struct {
	Body string `json:"body"`
}

type TeamsCreateDiscussionInOrgReq struct {
	Body    string  `json:"body"`
	Private OptBool `json:"private"`
	Title   string  `json:"title"`
}

type TeamsCreateDiscussionLegacyReq struct {
	Body    string  `json:"body"`
	Private OptBool `json:"private"`
	Title   string  `json:"title"`
}

type TeamsCreateOrUpdateIdpGroupConnectionsInOrgReq struct {
	Groups []TeamsCreateOrUpdateIdpGroupConnectionsInOrgReqGroupsItem `json:"groups"`
}

type TeamsCreateOrUpdateIdpGroupConnectionsInOrgReqGroupsItem struct {
	GroupDescription string `json:"group_description"`
	GroupID          string `json:"group_id"`
	GroupName        string `json:"group_name"`
}

type TeamsCreateOrUpdateIdpGroupConnectionsLegacyReq struct {
	Groups   []TeamsCreateOrUpdateIdpGroupConnectionsLegacyReqGroupsItem `json:"groups"`
	SyncedAt OptString                                                   `json:"synced_at"`
}

type TeamsCreateOrUpdateIdpGroupConnectionsLegacyReqGroupsItem struct {
	Description      OptString `json:"description"`
	GroupDescription string    `json:"group_description"`
	GroupID          string    `json:"group_id"`
	GroupName        string    `json:"group_name"`
	ID               OptString `json:"id"`
	Name             OptString `json:"name"`
}

type TeamsCreateReq struct {
	Description  OptString                   `json:"description"`
	Maintainers  []string                    `json:"maintainers"`
	Name         string                      `json:"name"`
	ParentTeamID OptInt                      `json:"parent_team_id"`
	Permission   OptTeamsCreateReqPermission `json:"permission"`
	Privacy      OptTeamsCreateReqPrivacy    `json:"privacy"`
	RepoNames    []string                    `json:"repo_names"`
}

type TeamsCreateReqPermission string

const (
	TeamsCreateReqPermissionPull  TeamsCreateReqPermission = "pull"
	TeamsCreateReqPermissionPush  TeamsCreateReqPermission = "push"
	TeamsCreateReqPermissionAdmin TeamsCreateReqPermission = "admin"
)

type TeamsCreateReqPrivacy string

const (
	TeamsCreateReqPrivacySecret TeamsCreateReqPrivacy = "secret"
	TeamsCreateReqPrivacyClosed TeamsCreateReqPrivacy = "closed"
)

// TeamsDeleteDiscussionCommentInOrgNoContent is response for TeamsDeleteDiscussionCommentInOrg operation.
type TeamsDeleteDiscussionCommentInOrgNoContent struct{}

// TeamsDeleteDiscussionCommentLegacyNoContent is response for TeamsDeleteDiscussionCommentLegacy operation.
type TeamsDeleteDiscussionCommentLegacyNoContent struct{}

// TeamsDeleteDiscussionInOrgNoContent is response for TeamsDeleteDiscussionInOrg operation.
type TeamsDeleteDiscussionInOrgNoContent struct{}

// TeamsDeleteDiscussionLegacyNoContent is response for TeamsDeleteDiscussionLegacy operation.
type TeamsDeleteDiscussionLegacyNoContent struct{}

// TeamsDeleteInOrgNoContent is response for TeamsDeleteInOrg operation.
type TeamsDeleteInOrgNoContent struct{}

// TeamsDeleteLegacyNoContent is response for TeamsDeleteLegacy operation.
type TeamsDeleteLegacyNoContent struct{}

// TeamsGetMemberLegacyNoContent is response for TeamsGetMemberLegacy operation.
type TeamsGetMemberLegacyNoContent struct{}

func (*TeamsGetMemberLegacyNoContent) teamsGetMemberLegacyRes() {}

// TeamsGetMemberLegacyNotFound is response for TeamsGetMemberLegacy operation.
type TeamsGetMemberLegacyNotFound struct{}

func (*TeamsGetMemberLegacyNotFound) teamsGetMemberLegacyRes() {}

// TeamsGetMembershipForUserInOrgNotFound is response for TeamsGetMembershipForUserInOrg operation.
type TeamsGetMembershipForUserInOrgNotFound struct{}

func (*TeamsGetMembershipForUserInOrgNotFound) teamsGetMembershipForUserInOrgRes() {}

type TeamsListDiscussionCommentsInOrgDirection string

const (
	TeamsListDiscussionCommentsInOrgDirectionAsc  TeamsListDiscussionCommentsInOrgDirection = "asc"
	TeamsListDiscussionCommentsInOrgDirectionDesc TeamsListDiscussionCommentsInOrgDirection = "desc"
)

type TeamsListDiscussionCommentsLegacyDirection string

const (
	TeamsListDiscussionCommentsLegacyDirectionAsc  TeamsListDiscussionCommentsLegacyDirection = "asc"
	TeamsListDiscussionCommentsLegacyDirectionDesc TeamsListDiscussionCommentsLegacyDirection = "desc"
)

type TeamsListDiscussionsInOrgDirection string

const (
	TeamsListDiscussionsInOrgDirectionAsc  TeamsListDiscussionsInOrgDirection = "asc"
	TeamsListDiscussionsInOrgDirectionDesc TeamsListDiscussionsInOrgDirection = "desc"
)

type TeamsListDiscussionsLegacyDirection string

const (
	TeamsListDiscussionsLegacyDirectionAsc  TeamsListDiscussionsLegacyDirection = "asc"
	TeamsListDiscussionsLegacyDirectionDesc TeamsListDiscussionsLegacyDirection = "desc"
)

type TeamsListForAuthenticatedUserApplicationJSONForbidden BasicError

func (*TeamsListForAuthenticatedUserApplicationJSONForbidden) teamsListForAuthenticatedUserRes() {}

type TeamsListForAuthenticatedUserApplicationJSONNotFound BasicError

func (*TeamsListForAuthenticatedUserApplicationJSONNotFound) teamsListForAuthenticatedUserRes() {}

// TeamsListForAuthenticatedUserNotModified is response for TeamsListForAuthenticatedUser operation.
type TeamsListForAuthenticatedUserNotModified struct{}

func (*TeamsListForAuthenticatedUserNotModified) teamsListForAuthenticatedUserRes() {}

type TeamsListForAuthenticatedUserOKApplicationJSON []TeamFull

func (*TeamsListForAuthenticatedUserOKApplicationJSON) teamsListForAuthenticatedUserRes() {}

type TeamsListIdpGroupsForLegacyApplicationJSONForbidden BasicError

func (*TeamsListIdpGroupsForLegacyApplicationJSONForbidden) teamsListIdpGroupsForLegacyRes() {}

type TeamsListIdpGroupsForLegacyApplicationJSONNotFound BasicError

func (*TeamsListIdpGroupsForLegacyApplicationJSONNotFound) teamsListIdpGroupsForLegacyRes() {}

type TeamsListMembersInOrgRole string

const (
	TeamsListMembersInOrgRoleMember     TeamsListMembersInOrgRole = "member"
	TeamsListMembersInOrgRoleMaintainer TeamsListMembersInOrgRole = "maintainer"
	TeamsListMembersInOrgRoleAll        TeamsListMembersInOrgRole = "all"
)

type TeamsListMembersLegacyOKApplicationJSON []SimpleUser

func (*TeamsListMembersLegacyOKApplicationJSON) teamsListMembersLegacyRes() {}

type TeamsListMembersLegacyRole string

const (
	TeamsListMembersLegacyRoleMember     TeamsListMembersLegacyRole = "member"
	TeamsListMembersLegacyRoleMaintainer TeamsListMembersLegacyRole = "maintainer"
	TeamsListMembersLegacyRoleAll        TeamsListMembersLegacyRole = "all"
)

type TeamsListOKApplicationJSON []Team

func (*TeamsListOKApplicationJSON) teamsListRes() {}

type TeamsListProjectsLegacyOKApplicationJSON []TeamProject

func (*TeamsListProjectsLegacyOKApplicationJSON) teamsListProjectsLegacyRes() {}

type TeamsListReposLegacyOKApplicationJSON []MinimalRepository

func (*TeamsListReposLegacyOKApplicationJSON) teamsListReposLegacyRes() {}

// TeamsRemoveMemberLegacyNoContent is response for TeamsRemoveMemberLegacy operation.
type TeamsRemoveMemberLegacyNoContent struct{}

func (*TeamsRemoveMemberLegacyNoContent) teamsRemoveMemberLegacyRes() {}

// TeamsRemoveMemberLegacyNotFound is response for TeamsRemoveMemberLegacy operation.
type TeamsRemoveMemberLegacyNotFound struct{}

func (*TeamsRemoveMemberLegacyNotFound) teamsRemoveMemberLegacyRes() {}

// TeamsRemoveMembershipForUserInOrgForbidden is response for TeamsRemoveMembershipForUserInOrg operation.
type TeamsRemoveMembershipForUserInOrgForbidden struct{}

func (*TeamsRemoveMembershipForUserInOrgForbidden) teamsRemoveMembershipForUserInOrgRes() {}

// TeamsRemoveMembershipForUserInOrgNoContent is response for TeamsRemoveMembershipForUserInOrg operation.
type TeamsRemoveMembershipForUserInOrgNoContent struct{}

func (*TeamsRemoveMembershipForUserInOrgNoContent) teamsRemoveMembershipForUserInOrgRes() {}

// TeamsRemoveMembershipForUserLegacyForbidden is response for TeamsRemoveMembershipForUserLegacy operation.
type TeamsRemoveMembershipForUserLegacyForbidden struct{}

func (*TeamsRemoveMembershipForUserLegacyForbidden) teamsRemoveMembershipForUserLegacyRes() {}

// TeamsRemoveMembershipForUserLegacyNoContent is response for TeamsRemoveMembershipForUserLegacy operation.
type TeamsRemoveMembershipForUserLegacyNoContent struct{}

func (*TeamsRemoveMembershipForUserLegacyNoContent) teamsRemoveMembershipForUserLegacyRes() {}

// TeamsRemoveProjectInOrgNoContent is response for TeamsRemoveProjectInOrg operation.
type TeamsRemoveProjectInOrgNoContent struct{}

// TeamsRemoveProjectLegacyNoContent is response for TeamsRemoveProjectLegacy operation.
type TeamsRemoveProjectLegacyNoContent struct{}

type TeamsRemoveProjectLegacyUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

// TeamsRemoveRepoInOrgNoContent is response for TeamsRemoveRepoInOrg operation.
type TeamsRemoveRepoInOrgNoContent struct{}

// TeamsRemoveRepoLegacyNoContent is response for TeamsRemoveRepoLegacy operation.
type TeamsRemoveRepoLegacyNoContent struct{}

type TeamsUpdateDiscussionCommentInOrgReq struct {
	Body string `json:"body"`
}

type TeamsUpdateDiscussionCommentLegacyReq struct {
	Body string `json:"body"`
}

type TeamsUpdateDiscussionInOrgReq struct {
	Body  OptString `json:"body"`
	Title OptString `json:"title"`
}

type TeamsUpdateDiscussionLegacyReq struct {
	Body  OptString `json:"body"`
	Title OptString `json:"title"`
}

type TeamsUpdateInOrgReq struct {
	Description  OptString                        `json:"description"`
	Name         OptString                        `json:"name"`
	ParentTeamID OptNilInt                        `json:"parent_team_id"`
	Permission   OptTeamsUpdateInOrgReqPermission `json:"permission"`
	Privacy      OptTeamsUpdateInOrgReqPrivacy    `json:"privacy"`
}

type TeamsUpdateInOrgReqPermission string

const (
	TeamsUpdateInOrgReqPermissionPull  TeamsUpdateInOrgReqPermission = "pull"
	TeamsUpdateInOrgReqPermissionPush  TeamsUpdateInOrgReqPermission = "push"
	TeamsUpdateInOrgReqPermissionAdmin TeamsUpdateInOrgReqPermission = "admin"
)

type TeamsUpdateInOrgReqPrivacy string

const (
	TeamsUpdateInOrgReqPrivacySecret TeamsUpdateInOrgReqPrivacy = "secret"
	TeamsUpdateInOrgReqPrivacyClosed TeamsUpdateInOrgReqPrivacy = "closed"
)

type TeamsUpdateLegacyReq struct {
	Description  OptString                         `json:"description"`
	Name         string                            `json:"name"`
	ParentTeamID OptNilInt                         `json:"parent_team_id"`
	Permission   OptTeamsUpdateLegacyReqPermission `json:"permission"`
	Privacy      OptTeamsUpdateLegacyReqPrivacy    `json:"privacy"`
}

type TeamsUpdateLegacyReqPermission string

const (
	TeamsUpdateLegacyReqPermissionPull  TeamsUpdateLegacyReqPermission = "pull"
	TeamsUpdateLegacyReqPermissionPush  TeamsUpdateLegacyReqPermission = "push"
	TeamsUpdateLegacyReqPermissionAdmin TeamsUpdateLegacyReqPermission = "admin"
)

type TeamsUpdateLegacyReqPrivacy string

const (
	TeamsUpdateLegacyReqPrivacySecret TeamsUpdateLegacyReqPrivacy = "secret"
	TeamsUpdateLegacyReqPrivacyClosed TeamsUpdateLegacyReqPrivacy = "closed"
)

// Ref: #/components/schemas/thread
type Thread struct {
	ID              string            `json:"id"`
	LastReadAt      NilString         `json:"last_read_at"`
	Reason          string            `json:"reason"`
	Repository      MinimalRepository `json:"repository"`
	Subject         ThreadSubject     `json:"subject"`
	SubscriptionURL string            `json:"subscription_url"`
	Unread          bool              `json:"unread"`
	UpdatedAt       string            `json:"updated_at"`
	URL             string            `json:"url"`
}

func (*Thread) activityGetThreadRes() {}

type ThreadSubject struct {
	LatestCommentURL string `json:"latest_comment_url"`
	Title            string `json:"title"`
	Type             string `json:"type"`
	URL              string `json:"url"`
}

// Ref: #/components/schemas/thread-subscription
type ThreadSubscription struct {
	CreatedAt     NilTime   `json:"created_at"`
	Ignored       bool      `json:"ignored"`
	Reason        NilString `json:"reason"`
	RepositoryURL OptURL    `json:"repository_url"`
	Subscribed    bool      `json:"subscribed"`
	ThreadURL     OptURL    `json:"thread_url"`
	URL           url.URL   `json:"url"`
}

func (*ThreadSubscription) activityGetThreadSubscriptionForAuthenticatedUserRes() {}
func (*ThreadSubscription) activitySetThreadSubscriptionRes()                     {}

// Ref: #/components/schemas/topic
type Topic struct {
	Names []string `json:"names"`
}

func (*Topic) reposGetAllTopicsRes()     {}
func (*Topic) reposReplaceAllTopicsRes() {}

// Ref: #/components/schemas/topic-search-result-item
type TopicSearchResultItem struct {
	Aliases          OptNilTopicSearchResultItemAliasesItemArray `json:"aliases"`
	CreatedAt        time.Time                                   `json:"created_at"`
	CreatedBy        NilString                                   `json:"created_by"`
	Curated          bool                                        `json:"curated"`
	Description      NilString                                   `json:"description"`
	DisplayName      NilString                                   `json:"display_name"`
	Featured         bool                                        `json:"featured"`
	LogoURL          OptNilURL                                   `json:"logo_url"`
	Name             string                                      `json:"name"`
	Related          OptNilTopicSearchResultItemRelatedItemArray `json:"related"`
	Released         NilString                                   `json:"released"`
	RepositoryCount  OptNilInt                                   `json:"repository_count"`
	Score            float64                                     `json:"score"`
	ShortDescription NilString                                   `json:"short_description"`
	TextMatches      *SearchResultTextMatches                    `json:"text_matches"`
	UpdatedAt        time.Time                                   `json:"updated_at"`
}

type TopicSearchResultItemAliasesItem struct {
	TopicRelation OptTopicSearchResultItemAliasesItemTopicRelation `json:"topic_relation"`
}

type TopicSearchResultItemAliasesItemTopicRelation struct {
	ID           OptInt    `json:"id"`
	Name         OptString `json:"name"`
	RelationType OptString `json:"relation_type"`
	TopicID      OptInt    `json:"topic_id"`
}

type TopicSearchResultItemRelatedItem struct {
	TopicRelation OptTopicSearchResultItemRelatedItemTopicRelation `json:"topic_relation"`
}

type TopicSearchResultItemRelatedItemTopicRelation struct {
	ID           OptInt    `json:"id"`
	Name         OptString `json:"name"`
	RelationType OptString `json:"relation_type"`
	TopicID      OptInt    `json:"topic_id"`
}

// Ref: #/components/schemas/traffic
type Traffic struct {
	Count     int       `json:"count"`
	Timestamp time.Time `json:"timestamp"`
	Uniques   int       `json:"uniques"`
}

// Ref: #/components/schemas/user-marketplace-purchase
type UserMarketplacePurchase struct {
	Account         MarketplaceAccount     `json:"account"`
	BillingCycle    string                 `json:"billing_cycle"`
	FreeTrialEndsOn NilTime                `json:"free_trial_ends_on"`
	NextBillingDate NilTime                `json:"next_billing_date"`
	OnFreeTrial     bool                   `json:"on_free_trial"`
	Plan            MarketplaceListingPlan `json:"plan"`
	UnitCount       NilInt                 `json:"unit_count"`
	UpdatedAt       NilTime                `json:"updated_at"`
}

// Ref: #/components/schemas/user-search-result-item
type UserSearchResultItem struct {
	AvatarURL         url.URL                  `json:"avatar_url"`
	Bio               OptNilString             `json:"bio"`
	Blog              OptNilString             `json:"blog"`
	Company           OptNilString             `json:"company"`
	CreatedAt         OptTime                  `json:"created_at"`
	Email             OptNilString             `json:"email"`
	EventsURL         string                   `json:"events_url"`
	Followers         OptInt                   `json:"followers"`
	FollowersURL      url.URL                  `json:"followers_url"`
	Following         OptInt                   `json:"following"`
	FollowingURL      string                   `json:"following_url"`
	GistsURL          string                   `json:"gists_url"`
	GravatarID        NilString                `json:"gravatar_id"`
	Hireable          OptNilBool               `json:"hireable"`
	HTMLURL           url.URL                  `json:"html_url"`
	ID                int                      `json:"id"`
	Location          OptNilString             `json:"location"`
	Login             string                   `json:"login"`
	Name              OptNilString             `json:"name"`
	NodeID            string                   `json:"node_id"`
	OrganizationsURL  url.URL                  `json:"organizations_url"`
	PublicGists       OptInt                   `json:"public_gists"`
	PublicRepos       OptInt                   `json:"public_repos"`
	ReceivedEventsURL url.URL                  `json:"received_events_url"`
	ReposURL          url.URL                  `json:"repos_url"`
	Score             float64                  `json:"score"`
	SiteAdmin         bool                     `json:"site_admin"`
	StarredURL        string                   `json:"starred_url"`
	SubscriptionsURL  url.URL                  `json:"subscriptions_url"`
	SuspendedAt       OptNilTime               `json:"suspended_at"`
	TextMatches       *SearchResultTextMatches `json:"text_matches"`
	Type              string                   `json:"type"`
	UpdatedAt         OptTime                  `json:"updated_at"`
	URL               url.URL                  `json:"url"`
}

// UsersBlockNoContent is response for UsersBlock operation.
type UsersBlockNoContent struct{}

// UsersBlockNotModified is response for UsersBlock operation.
type UsersBlockNotModified struct{}

type UsersCheckBlockedApplicationJSONForbidden BasicError

func (*UsersCheckBlockedApplicationJSONForbidden) usersCheckBlockedRes() {}

type UsersCheckBlockedApplicationJSONNotFound BasicError

func (*UsersCheckBlockedApplicationJSONNotFound) usersCheckBlockedRes() {}

type UsersCheckBlockedApplicationJSONUnauthorized BasicError

func (*UsersCheckBlockedApplicationJSONUnauthorized) usersCheckBlockedRes() {}

// UsersCheckBlockedNoContent is response for UsersCheckBlocked operation.
type UsersCheckBlockedNoContent struct{}

func (*UsersCheckBlockedNoContent) usersCheckBlockedRes() {}

// UsersCheckBlockedNotModified is response for UsersCheckBlocked operation.
type UsersCheckBlockedNotModified struct{}

func (*UsersCheckBlockedNotModified) usersCheckBlockedRes() {}

// UsersCheckFollowingForUserNoContent is response for UsersCheckFollowingForUser operation.
type UsersCheckFollowingForUserNoContent struct{}

func (*UsersCheckFollowingForUserNoContent) usersCheckFollowingForUserRes() {}

// UsersCheckFollowingForUserNotFound is response for UsersCheckFollowingForUser operation.
type UsersCheckFollowingForUserNotFound struct{}

func (*UsersCheckFollowingForUserNotFound) usersCheckFollowingForUserRes() {}

type UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONForbidden BasicError

func (*UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONForbidden) usersCheckPersonIsFollowedByAuthenticatedRes() {
}

type UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONNotFound BasicError

func (*UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONNotFound) usersCheckPersonIsFollowedByAuthenticatedRes() {
}

type UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONUnauthorized) usersCheckPersonIsFollowedByAuthenticatedRes() {
}

// UsersCheckPersonIsFollowedByAuthenticatedNoContent is response for UsersCheckPersonIsFollowedByAuthenticated operation.
type UsersCheckPersonIsFollowedByAuthenticatedNoContent struct{}

func (*UsersCheckPersonIsFollowedByAuthenticatedNoContent) usersCheckPersonIsFollowedByAuthenticatedRes() {
}

// UsersCheckPersonIsFollowedByAuthenticatedNotModified is response for UsersCheckPersonIsFollowedByAuthenticated operation.
type UsersCheckPersonIsFollowedByAuthenticatedNotModified struct{}

func (*UsersCheckPersonIsFollowedByAuthenticatedNotModified) usersCheckPersonIsFollowedByAuthenticatedRes() {
}

// UsersCreateGpgKeyForAuthenticatedNotModified is response for UsersCreateGpgKeyForAuthenticated operation.
type UsersCreateGpgKeyForAuthenticatedNotModified struct{}

type UsersCreateGpgKeyForAuthenticatedReq struct {
	ArmoredPublicKey string `json:"armored_public_key"`
}

// UsersCreatePublicSSHKeyForAuthenticatedNotModified is response for UsersCreatePublicSSHKeyForAuthenticated operation.
type UsersCreatePublicSSHKeyForAuthenticatedNotModified struct{}

type UsersCreatePublicSSHKeyForAuthenticatedReq struct {
	Key   string    `json:"key"`
	Title OptString `json:"title"`
}

// UsersDeleteGpgKeyForAuthenticatedNoContent is response for UsersDeleteGpgKeyForAuthenticated operation.
type UsersDeleteGpgKeyForAuthenticatedNoContent struct{}

// UsersDeleteGpgKeyForAuthenticatedNotModified is response for UsersDeleteGpgKeyForAuthenticated operation.
type UsersDeleteGpgKeyForAuthenticatedNotModified struct{}

type UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONForbidden) usersDeletePublicSSHKeyForAuthenticatedRes() {
}

type UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONNotFound) usersDeletePublicSSHKeyForAuthenticatedRes() {
}

type UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONUnauthorized) usersDeletePublicSSHKeyForAuthenticatedRes() {
}

// UsersDeletePublicSSHKeyForAuthenticatedNoContent is response for UsersDeletePublicSSHKeyForAuthenticated operation.
type UsersDeletePublicSSHKeyForAuthenticatedNoContent struct{}

func (*UsersDeletePublicSSHKeyForAuthenticatedNoContent) usersDeletePublicSSHKeyForAuthenticatedRes() {
}

// UsersDeletePublicSSHKeyForAuthenticatedNotModified is response for UsersDeletePublicSSHKeyForAuthenticated operation.
type UsersDeletePublicSSHKeyForAuthenticatedNotModified struct{}

func (*UsersDeletePublicSSHKeyForAuthenticatedNotModified) usersDeletePublicSSHKeyForAuthenticatedRes() {
}

type UsersFollowApplicationJSONForbidden BasicError

func (*UsersFollowApplicationJSONForbidden) usersFollowRes() {}

type UsersFollowApplicationJSONNotFound BasicError

func (*UsersFollowApplicationJSONNotFound) usersFollowRes() {}

type UsersFollowApplicationJSONUnauthorized BasicError

func (*UsersFollowApplicationJSONUnauthorized) usersFollowRes() {}

// UsersFollowNoContent is response for UsersFollow operation.
type UsersFollowNoContent struct{}

func (*UsersFollowNoContent) usersFollowRes() {}

// UsersFollowNotModified is response for UsersFollow operation.
type UsersFollowNotModified struct{}

func (*UsersFollowNotModified) usersFollowRes() {}

type UsersGetContextForUserSubjectType string

const (
	UsersGetContextForUserSubjectTypeOrganization UsersGetContextForUserSubjectType = "organization"
	UsersGetContextForUserSubjectTypeRepository   UsersGetContextForUserSubjectType = "repository"
	UsersGetContextForUserSubjectTypeIssue        UsersGetContextForUserSubjectType = "issue"
	UsersGetContextForUserSubjectTypePullRequest  UsersGetContextForUserSubjectType = "pull_request"
)

type UsersGetGpgKeyForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersGetGpgKeyForAuthenticatedApplicationJSONForbidden) usersGetGpgKeyForAuthenticatedRes() {}

type UsersGetGpgKeyForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersGetGpgKeyForAuthenticatedApplicationJSONNotFound) usersGetGpgKeyForAuthenticatedRes() {}

type UsersGetGpgKeyForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersGetGpgKeyForAuthenticatedApplicationJSONUnauthorized) usersGetGpgKeyForAuthenticatedRes() {
}

// UsersGetGpgKeyForAuthenticatedNotModified is response for UsersGetGpgKeyForAuthenticated operation.
type UsersGetGpgKeyForAuthenticatedNotModified struct{}

func (*UsersGetGpgKeyForAuthenticatedNotModified) usersGetGpgKeyForAuthenticatedRes() {}

type UsersGetPublicSSHKeyForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersGetPublicSSHKeyForAuthenticatedApplicationJSONForbidden) usersGetPublicSSHKeyForAuthenticatedRes() {
}

type UsersGetPublicSSHKeyForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersGetPublicSSHKeyForAuthenticatedApplicationJSONNotFound) usersGetPublicSSHKeyForAuthenticatedRes() {
}

type UsersGetPublicSSHKeyForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersGetPublicSSHKeyForAuthenticatedApplicationJSONUnauthorized) usersGetPublicSSHKeyForAuthenticatedRes() {
}

// UsersGetPublicSSHKeyForAuthenticatedNotModified is response for UsersGetPublicSSHKeyForAuthenticated operation.
type UsersGetPublicSSHKeyForAuthenticatedNotModified struct{}

func (*UsersGetPublicSSHKeyForAuthenticatedNotModified) usersGetPublicSSHKeyForAuthenticatedRes() {}

type UsersListBlockedByAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListBlockedByAuthenticatedApplicationJSONForbidden) usersListBlockedByAuthenticatedRes() {
}

type UsersListBlockedByAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListBlockedByAuthenticatedApplicationJSONNotFound) usersListBlockedByAuthenticatedRes() {}

type UsersListBlockedByAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListBlockedByAuthenticatedApplicationJSONUnauthorized) usersListBlockedByAuthenticatedRes() {
}

// UsersListBlockedByAuthenticatedNotModified is response for UsersListBlockedByAuthenticated operation.
type UsersListBlockedByAuthenticatedNotModified struct{}

func (*UsersListBlockedByAuthenticatedNotModified) usersListBlockedByAuthenticatedRes() {}

type UsersListBlockedByAuthenticatedOKApplicationJSON []SimpleUser

func (*UsersListBlockedByAuthenticatedOKApplicationJSON) usersListBlockedByAuthenticatedRes() {}

type UsersListBlockedByAuthenticatedUnsupportedMediaType struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*UsersListBlockedByAuthenticatedUnsupportedMediaType) usersListBlockedByAuthenticatedRes() {}

type UsersListEmailsForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListEmailsForAuthenticatedApplicationJSONForbidden) usersListEmailsForAuthenticatedRes() {
}

type UsersListEmailsForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListEmailsForAuthenticatedApplicationJSONNotFound) usersListEmailsForAuthenticatedRes() {}

type UsersListEmailsForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListEmailsForAuthenticatedApplicationJSONUnauthorized) usersListEmailsForAuthenticatedRes() {
}

// UsersListEmailsForAuthenticatedNotModified is response for UsersListEmailsForAuthenticated operation.
type UsersListEmailsForAuthenticatedNotModified struct{}

func (*UsersListEmailsForAuthenticatedNotModified) usersListEmailsForAuthenticatedRes() {}

type UsersListEmailsForAuthenticatedOKApplicationJSON []Email

func (*UsersListEmailsForAuthenticatedOKApplicationJSON) usersListEmailsForAuthenticatedRes() {}

type UsersListFollowedByAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListFollowedByAuthenticatedApplicationJSONForbidden) usersListFollowedByAuthenticatedRes() {
}

type UsersListFollowedByAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListFollowedByAuthenticatedApplicationJSONUnauthorized) usersListFollowedByAuthenticatedRes() {
}

// UsersListFollowedByAuthenticatedNotModified is response for UsersListFollowedByAuthenticated operation.
type UsersListFollowedByAuthenticatedNotModified struct{}

func (*UsersListFollowedByAuthenticatedNotModified) usersListFollowedByAuthenticatedRes() {}

type UsersListFollowedByAuthenticatedOKApplicationJSON []SimpleUser

func (*UsersListFollowedByAuthenticatedOKApplicationJSON) usersListFollowedByAuthenticatedRes() {}

type UsersListFollowersForAuthenticatedUserApplicationJSONForbidden BasicError

func (*UsersListFollowersForAuthenticatedUserApplicationJSONForbidden) usersListFollowersForAuthenticatedUserRes() {
}

type UsersListFollowersForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*UsersListFollowersForAuthenticatedUserApplicationJSONUnauthorized) usersListFollowersForAuthenticatedUserRes() {
}

// UsersListFollowersForAuthenticatedUserNotModified is response for UsersListFollowersForAuthenticatedUser operation.
type UsersListFollowersForAuthenticatedUserNotModified struct{}

func (*UsersListFollowersForAuthenticatedUserNotModified) usersListFollowersForAuthenticatedUserRes() {
}

type UsersListFollowersForAuthenticatedUserOKApplicationJSON []SimpleUser

func (*UsersListFollowersForAuthenticatedUserOKApplicationJSON) usersListFollowersForAuthenticatedUserRes() {
}

type UsersListGpgKeysForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListGpgKeysForAuthenticatedApplicationJSONForbidden) usersListGpgKeysForAuthenticatedRes() {
}

type UsersListGpgKeysForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListGpgKeysForAuthenticatedApplicationJSONNotFound) usersListGpgKeysForAuthenticatedRes() {
}

type UsersListGpgKeysForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListGpgKeysForAuthenticatedApplicationJSONUnauthorized) usersListGpgKeysForAuthenticatedRes() {
}

// UsersListGpgKeysForAuthenticatedNotModified is response for UsersListGpgKeysForAuthenticated operation.
type UsersListGpgKeysForAuthenticatedNotModified struct{}

func (*UsersListGpgKeysForAuthenticatedNotModified) usersListGpgKeysForAuthenticatedRes() {}

type UsersListGpgKeysForAuthenticatedOKApplicationJSON []GpgKey

func (*UsersListGpgKeysForAuthenticatedOKApplicationJSON) usersListGpgKeysForAuthenticatedRes() {}

// UsersListNotModified is response for UsersList operation.
type UsersListNotModified struct{}

func (*UsersListNotModified) usersListRes() {}

type UsersListOKApplicationJSON []SimpleUser

func (*UsersListOKApplicationJSON) usersListRes() {}

type UsersListPublicEmailsForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListPublicEmailsForAuthenticatedApplicationJSONForbidden) usersListPublicEmailsForAuthenticatedRes() {
}

type UsersListPublicEmailsForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListPublicEmailsForAuthenticatedApplicationJSONNotFound) usersListPublicEmailsForAuthenticatedRes() {
}

type UsersListPublicEmailsForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListPublicEmailsForAuthenticatedApplicationJSONUnauthorized) usersListPublicEmailsForAuthenticatedRes() {
}

// UsersListPublicEmailsForAuthenticatedNotModified is response for UsersListPublicEmailsForAuthenticated operation.
type UsersListPublicEmailsForAuthenticatedNotModified struct{}

func (*UsersListPublicEmailsForAuthenticatedNotModified) usersListPublicEmailsForAuthenticatedRes() {}

type UsersListPublicEmailsForAuthenticatedOKApplicationJSON []Email

func (*UsersListPublicEmailsForAuthenticatedOKApplicationJSON) usersListPublicEmailsForAuthenticatedRes() {
}

type UsersListPublicSSHKeysForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListPublicSSHKeysForAuthenticatedApplicationJSONForbidden) usersListPublicSSHKeysForAuthenticatedRes() {
}

type UsersListPublicSSHKeysForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListPublicSSHKeysForAuthenticatedApplicationJSONNotFound) usersListPublicSSHKeysForAuthenticatedRes() {
}

type UsersListPublicSSHKeysForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListPublicSSHKeysForAuthenticatedApplicationJSONUnauthorized) usersListPublicSSHKeysForAuthenticatedRes() {
}

// UsersListPublicSSHKeysForAuthenticatedNotModified is response for UsersListPublicSSHKeysForAuthenticated operation.
type UsersListPublicSSHKeysForAuthenticatedNotModified struct{}

func (*UsersListPublicSSHKeysForAuthenticatedNotModified) usersListPublicSSHKeysForAuthenticatedRes() {
}

type UsersListPublicSSHKeysForAuthenticatedOKApplicationJSON []Key

func (*UsersListPublicSSHKeysForAuthenticatedOKApplicationJSON) usersListPublicSSHKeysForAuthenticatedRes() {
}

// UsersSetPrimaryEmailVisibilityForAuthenticatedNotModified is response for UsersSetPrimaryEmailVisibilityForAuthenticated operation.
type UsersSetPrimaryEmailVisibilityForAuthenticatedNotModified struct{}

type UsersSetPrimaryEmailVisibilityForAuthenticatedReq struct {
	Visibility UsersSetPrimaryEmailVisibilityForAuthenticatedReqVisibility `json:"visibility"`
}

type UsersSetPrimaryEmailVisibilityForAuthenticatedReqVisibility string

const (
	UsersSetPrimaryEmailVisibilityForAuthenticatedReqVisibilityPublic  UsersSetPrimaryEmailVisibilityForAuthenticatedReqVisibility = "public"
	UsersSetPrimaryEmailVisibilityForAuthenticatedReqVisibilityPrivate UsersSetPrimaryEmailVisibilityForAuthenticatedReqVisibility = "private"
)

type UsersUnblockApplicationJSONForbidden BasicError

func (*UsersUnblockApplicationJSONForbidden) usersUnblockRes() {}

type UsersUnblockApplicationJSONNotFound BasicError

func (*UsersUnblockApplicationJSONNotFound) usersUnblockRes() {}

type UsersUnblockApplicationJSONUnauthorized BasicError

func (*UsersUnblockApplicationJSONUnauthorized) usersUnblockRes() {}

// UsersUnblockNoContent is response for UsersUnblock operation.
type UsersUnblockNoContent struct{}

func (*UsersUnblockNoContent) usersUnblockRes() {}

// UsersUnblockNotModified is response for UsersUnblock operation.
type UsersUnblockNotModified struct{}

func (*UsersUnblockNotModified) usersUnblockRes() {}

type UsersUnfollowApplicationJSONForbidden BasicError

func (*UsersUnfollowApplicationJSONForbidden) usersUnfollowRes() {}

type UsersUnfollowApplicationJSONNotFound BasicError

func (*UsersUnfollowApplicationJSONNotFound) usersUnfollowRes() {}

type UsersUnfollowApplicationJSONUnauthorized BasicError

func (*UsersUnfollowApplicationJSONUnauthorized) usersUnfollowRes() {}

// UsersUnfollowNoContent is response for UsersUnfollow operation.
type UsersUnfollowNoContent struct{}

func (*UsersUnfollowNoContent) usersUnfollowRes() {}

// UsersUnfollowNotModified is response for UsersUnfollow operation.
type UsersUnfollowNotModified struct{}

func (*UsersUnfollowNotModified) usersUnfollowRes() {}

// UsersUpdateAuthenticatedNotModified is response for UsersUpdateAuthenticated operation.
type UsersUpdateAuthenticatedNotModified struct{}

type UsersUpdateAuthenticatedReq struct {
	Bio             OptString    `json:"bio"`
	Blog            OptString    `json:"blog"`
	Company         OptString    `json:"company"`
	Email           OptString    `json:"email"`
	Hireable        OptBool      `json:"hireable"`
	Location        OptString    `json:"location"`
	Name            OptString    `json:"name"`
	TwitterUsername OptNilString `json:"twitter_username"`
}

// Ref: #/components/schemas/validation-error-simple
type ValidationErrorSimple struct {
	DocumentationURL string   `json:"documentation_url"`
	Errors           []string `json:"errors"`
	Message          string   `json:"message"`
}

func (*ValidationErrorSimple) projectsCreateColumnRes()               {}
func (*ValidationErrorSimple) projectsCreateForAuthenticatedUserRes() {}
func (*ValidationErrorSimple) projectsCreateForOrgRes()               {}
func (*ValidationErrorSimple) projectsCreateForRepoRes()              {}
func (*ValidationErrorSimple) projectsListForOrgRes()                 {}
func (*ValidationErrorSimple) projectsListForRepoRes()                {}
func (*ValidationErrorSimple) projectsMoveColumnRes()                 {}
func (*ValidationErrorSimple) projectsUpdateCardRes()                 {}
func (*ValidationErrorSimple) projectsUpdateRes()                     {}
func (*ValidationErrorSimple) pullsCreateReviewRes()                  {}
func (*ValidationErrorSimple) pullsDeletePendingReviewRes()           {}
func (*ValidationErrorSimple) pullsDismissReviewRes()                 {}
func (*ValidationErrorSimple) pullsSubmitReviewRes()                  {}
func (*ValidationErrorSimple) pullsUpdateReviewRes()                  {}
func (*ValidationErrorSimple) reposDeleteDeploymentRes()              {}
func (*ValidationErrorSimple) reposReplaceAllTopicsRes()              {}
func (*ValidationErrorSimple) reposUpdateBranchProtectionRes()        {}

// Ref: #/components/schemas/verification
type Verification struct {
	Payload   NilString `json:"payload"`
	Reason    string    `json:"reason"`
	Signature NilString `json:"signature"`
	Verified  bool      `json:"verified"`
}

// Ref: #/components/schemas/view-traffic
type ViewTraffic struct {
	Count   int       `json:"count"`
	Uniques int       `json:"uniques"`
	Views   []Traffic `json:"views"`
}

func (*ViewTraffic) reposGetViewsRes() {}

type WaitTimer int

// Ref: #/components/schemas/webhook-config
type WebhookConfig struct {
	ContentType OptWebhookConfigContentType `json:"content_type"`
	InsecureSsl *WebhookConfigInsecureSsl   `json:"insecure_ssl"`
	Secret      OptWebhookConfigSecret      `json:"secret"`
	URL         OptWebhookConfigURL         `json:"url"`
}

type WebhookConfigContentType string

// Ref: #/components/schemas/webhook-config-insecure-ssl
// WebhookConfigInsecureSsl represents sum type.
type WebhookConfigInsecureSsl struct {
	Type    WebhookConfigInsecureSslType // switch on this field
	String  string
	Float64 float64
}

// WebhookConfigInsecureSslType is oneOf type of WebhookConfigInsecureSsl.
type WebhookConfigInsecureSslType string

// Possible values for WebhookConfigInsecureSslType.
const (
	StringWebhookConfigInsecureSsl  WebhookConfigInsecureSslType = "string"
	Float64WebhookConfigInsecureSsl WebhookConfigInsecureSslType = "float64"
)

// IsString reports whether WebhookConfigInsecureSsl is string.
func (s WebhookConfigInsecureSsl) IsString() bool { return s.Type == StringWebhookConfigInsecureSsl }

// IsFloat64 reports whether WebhookConfigInsecureSsl is float64.
func (s WebhookConfigInsecureSsl) IsFloat64() bool { return s.Type == Float64WebhookConfigInsecureSsl }

// SetString sets WebhookConfigInsecureSsl to string.
func (s *WebhookConfigInsecureSsl) SetString(v string) {
	s.Type = StringWebhookConfigInsecureSsl
	s.String = v
}

// GetString returns string and true boolean if WebhookConfigInsecureSsl is string.
func (s WebhookConfigInsecureSsl) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringWebhookConfigInsecureSsl returns new WebhookConfigInsecureSsl from string.
func NewStringWebhookConfigInsecureSsl(v string) WebhookConfigInsecureSsl {
	var s WebhookConfigInsecureSsl
	s.SetString(v)
	return s
}

// SetFloat64 sets WebhookConfigInsecureSsl to float64.
func (s *WebhookConfigInsecureSsl) SetFloat64(v float64) {
	s.Type = Float64WebhookConfigInsecureSsl
	s.Float64 = v
}

// GetFloat64 returns float64 and true boolean if WebhookConfigInsecureSsl is float64.
func (s WebhookConfigInsecureSsl) GetFloat64() (v float64, ok bool) {
	if !s.IsFloat64() {
		return v, false
	}
	return s.Float64, true
}

// NewFloat64WebhookConfigInsecureSsl returns new WebhookConfigInsecureSsl from float64.
func NewFloat64WebhookConfigInsecureSsl(v float64) WebhookConfigInsecureSsl {
	var s WebhookConfigInsecureSsl
	s.SetFloat64(v)
	return s
}

type WebhookConfigSecret string

type WebhookConfigURL url.URL

// Ref: #/components/schemas/workflow
type Workflow struct {
	BadgeURL  string        `json:"badge_url"`
	CreatedAt time.Time     `json:"created_at"`
	DeletedAt OptTime       `json:"deleted_at"`
	HTMLURL   string        `json:"html_url"`
	ID        int           `json:"id"`
	Name      string        `json:"name"`
	NodeID    string        `json:"node_id"`
	Path      string        `json:"path"`
	State     WorkflowState `json:"state"`
	UpdatedAt time.Time     `json:"updated_at"`
	URL       string        `json:"url"`
}

// Ref: #/components/schemas/workflow-run
type WorkflowRun struct {
	ArtifactsURL       string                  `json:"artifacts_url"`
	CancelURL          string                  `json:"cancel_url"`
	CheckSuiteID       OptInt                  `json:"check_suite_id"`
	CheckSuiteNodeID   OptString               `json:"check_suite_node_id"`
	CheckSuiteURL      string                  `json:"check_suite_url"`
	Conclusion         NilString               `json:"conclusion"`
	CreatedAt          time.Time               `json:"created_at"`
	Event              string                  `json:"event"`
	HeadBranch         NilString               `json:"head_branch"`
	HeadCommit         NilNullableSimpleCommit `json:"head_commit"`
	HeadRepository     MinimalRepository       `json:"head_repository"`
	HeadRepositoryID   OptInt                  `json:"head_repository_id"`
	HeadSha            string                  `json:"head_sha"`
	HTMLURL            string                  `json:"html_url"`
	ID                 int                     `json:"id"`
	JobsURL            string                  `json:"jobs_url"`
	LogsURL            string                  `json:"logs_url"`
	Name               OptNilString            `json:"name"`
	NodeID             string                  `json:"node_id"`
	PreviousAttemptURL OptNilString            `json:"previous_attempt_url"`
	PullRequests       []PullRequestMinimal    `json:"pull_requests"`
	Repository         MinimalRepository       `json:"repository"`
	RerunURL           string                  `json:"rerun_url"`
	RunAttempt         OptInt                  `json:"run_attempt"`
	RunNumber          int                     `json:"run_number"`
	Status             NilString               `json:"status"`
	UpdatedAt          time.Time               `json:"updated_at"`
	URL                string                  `json:"url"`
	WorkflowID         int                     `json:"workflow_id"`
	WorkflowURL        string                  `json:"workflow_url"`
}

// Ref: #/components/schemas/workflow-run-usage
type WorkflowRunUsage struct {
	Billable      WorkflowRunUsageBillable `json:"billable"`
	RunDurationMs OptInt                   `json:"run_duration_ms"`
}

type WorkflowRunUsageBillable struct {
	MACOS   OptWorkflowRunUsageBillableMACOS   `json:"MACOS"`
	UBUNTU  OptWorkflowRunUsageBillableUBUNTU  `json:"UBUNTU"`
	WINDOWS OptWorkflowRunUsageBillableWINDOWS `json:"WINDOWS"`
}

type WorkflowRunUsageBillableMACOS struct {
	Jobs    int `json:"jobs"`
	TotalMs int `json:"total_ms"`
}

type WorkflowRunUsageBillableUBUNTU struct {
	Jobs    int `json:"jobs"`
	TotalMs int `json:"total_ms"`
}

type WorkflowRunUsageBillableWINDOWS struct {
	Jobs    int `json:"jobs"`
	TotalMs int `json:"total_ms"`
}

type WorkflowState string

const (
	WorkflowStateActive             WorkflowState = "active"
	WorkflowStateDeleted            WorkflowState = "deleted"
	WorkflowStateDisabledFork       WorkflowState = "disabled_fork"
	WorkflowStateDisabledInactivity WorkflowState = "disabled_inactivity"
	WorkflowStateDisabledManually   WorkflowState = "disabled_manually"
)
