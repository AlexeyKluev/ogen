// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
)

type APIOverviewSSHKeyFingerprints struct {
	SHA256DSA     OptString `json:"SHA256_DSA"`
	SHA256ECDSA   OptString `json:"SHA256_ECDSA"`
	SHA256ED25519 OptString `json:"SHA256_ED25519"`
	SHA256RSA     OptString `json:"SHA256_RSA"`
}

type Accepted struct{}

func (*Accepted) reposEnableLfsForRepoRes()       {}
func (*Accepted) reposGetCodeFrequencyStatsRes()  {}
func (*Accepted) reposGetCommitActivityStatsRes() {}
func (*Accepted) reposGetContributorsStatsRes()   {}

type ActionsAddRepoAccessToSelfHostedRunnerGroupInOrg struct{}

type ActionsAddSelectedRepoToOrgSecretConflict struct{}

func (*ActionsAddSelectedRepoToOrgSecretConflict) actionsAddSelectedRepoToOrgSecretRes() {}

type ActionsAddSelectedRepoToOrgSecretNoContent struct{}

func (*ActionsAddSelectedRepoToOrgSecretNoContent) actionsAddSelectedRepoToOrgSecretRes() {}

type ActionsAddSelfHostedRunnerToGroupForOrg struct{}

type ActionsApproveWorkflowRunApplicationJSONForbidden BasicError

func (*ActionsApproveWorkflowRunApplicationJSONForbidden) actionsApproveWorkflowRunRes() {}

type ActionsApproveWorkflowRunApplicationJSONNotFound BasicError

func (*ActionsApproveWorkflowRunApplicationJSONNotFound) actionsApproveWorkflowRunRes() {}

type ActionsBillingUsageMinutesUsedBreakdown struct {
	MACOS   OptInt `json:"MACOS"`
	UBUNTU  OptInt `json:"UBUNTU"`
	WINDOWS OptInt `json:"WINDOWS"`
}

type ActionsCancelWorkflowRun struct{}

type ActionsCreateOrUpdateEnvironmentSecretApplicationJSONReq struct {
	EncryptedValue string `json:"encrypted_value"`
	KeyID          string `json:"key_id"`
}

type ActionsCreateOrUpdateEnvironmentSecretNoContent struct{}

func (*ActionsCreateOrUpdateEnvironmentSecretNoContent) actionsCreateOrUpdateEnvironmentSecretRes() {}

type ActionsCreateOrUpdateOrgSecretApplicationJSONReq struct {
	EncryptedValue        OptString                                                  `json:"encrypted_value"`
	KeyID                 OptString                                                  `json:"key_id"`
	SelectedRepositoryIds []string                                                   `json:"selected_repository_ids"`
	Visibility            ActionsCreateOrUpdateOrgSecretApplicationJSONReqVisibility `json:"visibility"`
}

type ActionsCreateOrUpdateOrgSecretApplicationJSONReqVisibility string

const (
	ActionsCreateOrUpdateOrgSecretApplicationJSONReqVisibilityAll      ActionsCreateOrUpdateOrgSecretApplicationJSONReqVisibility = "all"
	ActionsCreateOrUpdateOrgSecretApplicationJSONReqVisibilityPrivate  ActionsCreateOrUpdateOrgSecretApplicationJSONReqVisibility = "private"
	ActionsCreateOrUpdateOrgSecretApplicationJSONReqVisibilitySelected ActionsCreateOrUpdateOrgSecretApplicationJSONReqVisibility = "selected"
)

type ActionsCreateOrUpdateOrgSecretNoContent struct{}

func (*ActionsCreateOrUpdateOrgSecretNoContent) actionsCreateOrUpdateOrgSecretRes() {}

type ActionsCreateOrUpdateRepoSecretApplicationJSONReq struct {
	EncryptedValue OptString `json:"encrypted_value"`
	KeyID          OptString `json:"key_id"`
}

type ActionsCreateOrUpdateRepoSecretCreated struct{}

func (*ActionsCreateOrUpdateRepoSecretCreated) actionsCreateOrUpdateRepoSecretRes() {}

type ActionsCreateOrUpdateRepoSecretNoContent struct{}

func (*ActionsCreateOrUpdateRepoSecretNoContent) actionsCreateOrUpdateRepoSecretRes() {}

type ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReq struct {
	Name                  string                                                                  `json:"name"`
	Runners               []int                                                                   `json:"runners"`
	SelectedRepositoryIds []int                                                                   `json:"selected_repository_ids"`
	Visibility            OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility `json:"visibility"`
}

type ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility string

const (
	ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibilitySelected ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility = "selected"
	ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibilityAll      ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility = "all"
	ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibilityPrivate  ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility = "private"
)

type ActionsDeleteArtifact struct{}

type ActionsDeleteEnvironmentSecret struct{}

type ActionsDeleteOrgSecret struct{}

type ActionsDeleteRepoSecret struct{}

type ActionsDeleteSelfHostedRunnerFromOrg struct{}

type ActionsDeleteSelfHostedRunnerFromRepo struct{}

type ActionsDeleteSelfHostedRunnerGroupFromOrg struct{}

type ActionsDeleteWorkflowRun struct{}

type ActionsDeleteWorkflowRunLogs struct{}

type ActionsDisableSelectedRepositoryGithubActionsOrganization struct{}

type ActionsDownloadArtifact struct{}

type ActionsDownloadJobLogsForWorkflowRun struct{}

type ActionsDownloadWorkflowRunLogs struct{}

type ActionsEnableSelectedRepositoryGithubActionsOrganization struct{}

type ActionsListArtifactsForRepo struct {
	Artifacts  []Artifact `json:"artifacts"`
	TotalCount int        `json:"total_count"`
}

type ActionsListEnvironmentSecrets struct {
	Secrets    []ActionsSecret `json:"secrets"`
	TotalCount int             `json:"total_count"`
}

type ActionsListOrgSecrets struct {
	Secrets    []OrganizationActionsSecret `json:"secrets"`
	TotalCount int                         `json:"total_count"`
}

type ActionsListRepoAccessToSelfHostedRunnerGroupInOrg struct {
	Repositories []MinimalRepository `json:"repositories"`
	TotalCount   float64             `json:"total_count"`
}

type ActionsListRepoSecrets struct {
	Secrets    []ActionsSecret `json:"secrets"`
	TotalCount int             `json:"total_count"`
}

type ActionsListRepoWorkflows struct {
	TotalCount int        `json:"total_count"`
	Workflows  []Workflow `json:"workflows"`
}

type ActionsListSelectedReposForOrgSecret struct {
	Repositories []MinimalRepository `json:"repositories"`
	TotalCount   int                 `json:"total_count"`
}

type ActionsListSelectedRepositoriesEnabledGithubActionsOrganization struct {
	Repositories []Repository `json:"repositories"`
	TotalCount   float64      `json:"total_count"`
}

type ActionsListSelfHostedRunnerGroupsForOrg struct {
	RunnerGroups []RunnerGroupsOrg `json:"runner_groups"`
	TotalCount   float64           `json:"total_count"`
}

type ActionsListSelfHostedRunnersForOrg struct {
	Runners    []Runner `json:"runners"`
	TotalCount int      `json:"total_count"`
}

type ActionsListSelfHostedRunnersForRepo struct {
	Runners    []Runner `json:"runners"`
	TotalCount int      `json:"total_count"`
}

type ActionsListSelfHostedRunnersInGroupForOrg struct {
	Runners    []Runner `json:"runners"`
	TotalCount float64  `json:"total_count"`
}

type ActionsListWorkflowRunArtifacts struct {
	Artifacts  []Artifact `json:"artifacts"`
	TotalCount int        `json:"total_count"`
}

type ActionsReRunWorkflow struct{}

type ActionsRemoveRepoAccessToSelfHostedRunnerGroupInOrg struct{}

type ActionsRemoveSelectedRepoFromOrgSecretConflict struct{}

func (*ActionsRemoveSelectedRepoFromOrgSecretConflict) actionsRemoveSelectedRepoFromOrgSecretRes() {}

type ActionsRemoveSelectedRepoFromOrgSecretNoContent struct{}

func (*ActionsRemoveSelectedRepoFromOrgSecretNoContent) actionsRemoveSelectedRepoFromOrgSecretRes() {}

type ActionsRemoveSelfHostedRunnerFromGroupForOrg struct{}

type ActionsRetryWorkflow struct{}

type ActionsReviewPendingDeploymentsForRunApplicationJSONReq struct {
	Comment        string                                                       `json:"comment"`
	EnvironmentIds []int                                                        `json:"environment_ids"`
	State          ActionsReviewPendingDeploymentsForRunApplicationJSONReqState `json:"state"`
}

func (*ActionsReviewPendingDeploymentsForRunApplicationJSONReq) actionsReviewPendingDeploymentsForRunReq() {
}

type ActionsReviewPendingDeploymentsForRunApplicationJSONReqState string

const (
	ActionsReviewPendingDeploymentsForRunApplicationJSONReqStateApproved ActionsReviewPendingDeploymentsForRunApplicationJSONReqState = "approved"
	ActionsReviewPendingDeploymentsForRunApplicationJSONReqStateRejected ActionsReviewPendingDeploymentsForRunApplicationJSONReqState = "rejected"
)

type ActionsSetAllowedActionsOrganization struct{}

type ActionsSetAllowedActionsRepository struct{}

type ActionsSetGithubActionsPermissionsOrganization struct{}

type ActionsSetGithubActionsPermissionsOrganizationApplicationJSONReq struct {
	AllowedActions      OptAllowedActions   `json:"allowed_actions"`
	EnabledRepositories EnabledRepositories `json:"enabled_repositories"`
}

type ActionsSetGithubActionsPermissionsRepository struct{}

type ActionsSetGithubActionsPermissionsRepositoryApplicationJSONReq struct {
	AllowedActions OptAllowedActions `json:"allowed_actions"`
	Enabled        ActionsEnabled    `json:"enabled"`
}

type ActionsSetRepoAccessToSelfHostedRunnerGroupInOrg struct{}

type ActionsSetRepoAccessToSelfHostedRunnerGroupInOrgApplicationJSONReq struct {
	SelectedRepositoryIds []int `json:"selected_repository_ids"`
}

type ActionsSetSelectedReposForOrgSecret struct{}

type ActionsSetSelectedReposForOrgSecretApplicationJSONReq struct {
	SelectedRepositoryIds []int `json:"selected_repository_ids"`
}

type ActionsSetSelectedRepositoriesEnabledGithubActionsOrganization struct{}

type ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationApplicationJSONReq struct {
	SelectedRepositoryIds []int `json:"selected_repository_ids"`
}

type ActionsSetSelfHostedRunnersInGroupForOrg struct{}

type ActionsSetSelfHostedRunnersInGroupForOrgApplicationJSONReq struct {
	Runners []int `json:"runners"`
}

type ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReq struct {
	Name       string                                                                  `json:"name"`
	Visibility OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility `json:"visibility"`
}

type ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility string

const (
	ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibilitySelected ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility = "selected"
	ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibilityAll      ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility = "all"
	ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibilityPrivate  ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility = "private"
)

type ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONForbidden) activityCheckRepoIsStarredByAuthenticatedUserRes() {
}

type ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONNotFound BasicError

func (*ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONNotFound) activityCheckRepoIsStarredByAuthenticatedUserRes() {
}

type ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityCheckRepoIsStarredByAuthenticatedUserApplicationJSONUnauthorized) activityCheckRepoIsStarredByAuthenticatedUserRes() {
}

type ActivityCheckRepoIsStarredByAuthenticatedUserNoContent struct{}

func (*ActivityCheckRepoIsStarredByAuthenticatedUserNoContent) activityCheckRepoIsStarredByAuthenticatedUserRes() {
}

type ActivityDeleteRepoSubscription struct{}

type ActivityDeleteThreadSubscriptionApplicationJSONForbidden BasicError

func (*ActivityDeleteThreadSubscriptionApplicationJSONForbidden) activityDeleteThreadSubscriptionRes() {
}

type ActivityDeleteThreadSubscriptionApplicationJSONUnauthorized BasicError

func (*ActivityDeleteThreadSubscriptionApplicationJSONUnauthorized) activityDeleteThreadSubscriptionRes() {
}

type ActivityDeleteThreadSubscriptionNoContent struct{}

func (*ActivityDeleteThreadSubscriptionNoContent) activityDeleteThreadSubscriptionRes() {}

type ActivityGetRepoSubscriptionNotFound struct{}

func (*ActivityGetRepoSubscriptionNotFound) activityGetRepoSubscriptionRes() {}

type ActivityGetThreadApplicationJSONForbidden BasicError

func (*ActivityGetThreadApplicationJSONForbidden) activityGetThreadRes() {}

type ActivityGetThreadApplicationJSONUnauthorized BasicError

func (*ActivityGetThreadApplicationJSONUnauthorized) activityGetThreadRes() {}

type ActivityGetThreadSubscriptionForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityGetThreadSubscriptionForAuthenticatedUserApplicationJSONForbidden) activityGetThreadSubscriptionForAuthenticatedUserRes() {
}

type ActivityGetThreadSubscriptionForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityGetThreadSubscriptionForAuthenticatedUserApplicationJSONUnauthorized) activityGetThreadSubscriptionForAuthenticatedUserRes() {
}

type ActivityListNotificationsForAuthenticatedUserOK []Thread

type ActivityListWatchedReposForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityListWatchedReposForAuthenticatedUserApplicationJSONForbidden) activityListWatchedReposForAuthenticatedUserRes() {
}

type ActivityListWatchedReposForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityListWatchedReposForAuthenticatedUserApplicationJSONUnauthorized) activityListWatchedReposForAuthenticatedUserRes() {
}

type ActivityListWatchedReposForAuthenticatedUserOK []MinimalRepository

func (*ActivityListWatchedReposForAuthenticatedUserOK) activityListWatchedReposForAuthenticatedUserRes() {
}

type ActivityMarkNotificationsAsReadAccepted struct {
	Message OptString `json:"message"`
}

func (*ActivityMarkNotificationsAsReadAccepted) activityMarkNotificationsAsReadRes() {}

type ActivityMarkNotificationsAsReadApplicationJSONForbidden BasicError

func (*ActivityMarkNotificationsAsReadApplicationJSONForbidden) activityMarkNotificationsAsReadRes() {
}

type ActivityMarkNotificationsAsReadApplicationJSONReq struct {
	LastReadAt OptTime `json:"last_read_at"`
	Read       OptBool `json:"read"`
}

type ActivityMarkNotificationsAsReadApplicationJSONUnauthorized BasicError

func (*ActivityMarkNotificationsAsReadApplicationJSONUnauthorized) activityMarkNotificationsAsReadRes() {
}

type ActivityMarkNotificationsAsReadResetContent struct{}

func (*ActivityMarkNotificationsAsReadResetContent) activityMarkNotificationsAsReadRes() {}

type ActivityMarkRepoNotificationsAsReadAccepted struct {
	Message OptString `json:"message"`
	URL     OptString `json:"url"`
}

func (*ActivityMarkRepoNotificationsAsReadAccepted) activityMarkRepoNotificationsAsReadRes() {}

type ActivityMarkRepoNotificationsAsReadApplicationJSONReq struct {
	LastReadAt OptTime `json:"last_read_at"`
}

type ActivityMarkRepoNotificationsAsReadResetContent struct{}

func (*ActivityMarkRepoNotificationsAsReadResetContent) activityMarkRepoNotificationsAsReadRes() {}

type ActivityMarkThreadAsReadResetContent struct{}

func (*ActivityMarkThreadAsReadResetContent) activityMarkThreadAsReadRes() {}

type ActivitySetRepoSubscriptionApplicationJSONReq struct {
	Ignored    OptBool `json:"ignored"`
	Subscribed OptBool `json:"subscribed"`
}

type ActivitySetThreadSubscriptionApplicationJSONForbidden BasicError

func (*ActivitySetThreadSubscriptionApplicationJSONForbidden) activitySetThreadSubscriptionRes() {}

type ActivitySetThreadSubscriptionApplicationJSONReq struct {
	Ignored OptBool `json:"ignored"`
}

type ActivitySetThreadSubscriptionApplicationJSONUnauthorized BasicError

func (*ActivitySetThreadSubscriptionApplicationJSONUnauthorized) activitySetThreadSubscriptionRes() {}

type ActivityStarRepoForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityStarRepoForAuthenticatedUserApplicationJSONForbidden) activityStarRepoForAuthenticatedUserRes() {
}

type ActivityStarRepoForAuthenticatedUserApplicationJSONNotFound BasicError

func (*ActivityStarRepoForAuthenticatedUserApplicationJSONNotFound) activityStarRepoForAuthenticatedUserRes() {
}

type ActivityStarRepoForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityStarRepoForAuthenticatedUserApplicationJSONUnauthorized) activityStarRepoForAuthenticatedUserRes() {
}

type ActivityStarRepoForAuthenticatedUserNoContent struct{}

func (*ActivityStarRepoForAuthenticatedUserNoContent) activityStarRepoForAuthenticatedUserRes() {}

type ActivityUnstarRepoForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ActivityUnstarRepoForAuthenticatedUserApplicationJSONForbidden) activityUnstarRepoForAuthenticatedUserRes() {
}

type ActivityUnstarRepoForAuthenticatedUserApplicationJSONNotFound BasicError

func (*ActivityUnstarRepoForAuthenticatedUserApplicationJSONNotFound) activityUnstarRepoForAuthenticatedUserRes() {
}

type ActivityUnstarRepoForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ActivityUnstarRepoForAuthenticatedUserApplicationJSONUnauthorized) activityUnstarRepoForAuthenticatedUserRes() {
}

type ActivityUnstarRepoForAuthenticatedUserNoContent struct{}

func (*ActivityUnstarRepoForAuthenticatedUserNoContent) activityUnstarRepoForAuthenticatedUserRes() {}

type AppPermissionsActions string

const (
	AppPermissionsActionsRead  AppPermissionsActions = "read"
	AppPermissionsActionsWrite AppPermissionsActions = "write"
)

type AppPermissionsAdministration string

const (
	AppPermissionsAdministrationRead  AppPermissionsAdministration = "read"
	AppPermissionsAdministrationWrite AppPermissionsAdministration = "write"
)

type AppPermissionsChecks string

const (
	AppPermissionsChecksRead  AppPermissionsChecks = "read"
	AppPermissionsChecksWrite AppPermissionsChecks = "write"
)

type AppPermissionsContentReferences string

const (
	AppPermissionsContentReferencesRead  AppPermissionsContentReferences = "read"
	AppPermissionsContentReferencesWrite AppPermissionsContentReferences = "write"
)

type AppPermissionsContents string

const (
	AppPermissionsContentsRead  AppPermissionsContents = "read"
	AppPermissionsContentsWrite AppPermissionsContents = "write"
)

type AppPermissionsDeployments string

const (
	AppPermissionsDeploymentsRead  AppPermissionsDeployments = "read"
	AppPermissionsDeploymentsWrite AppPermissionsDeployments = "write"
)

type AppPermissionsEnvironments string

const (
	AppPermissionsEnvironmentsRead  AppPermissionsEnvironments = "read"
	AppPermissionsEnvironmentsWrite AppPermissionsEnvironments = "write"
)

type AppPermissionsIssues string

const (
	AppPermissionsIssuesRead  AppPermissionsIssues = "read"
	AppPermissionsIssuesWrite AppPermissionsIssues = "write"
)

type AppPermissionsMembers string

const (
	AppPermissionsMembersRead  AppPermissionsMembers = "read"
	AppPermissionsMembersWrite AppPermissionsMembers = "write"
)

type AppPermissionsMetadata string

const (
	AppPermissionsMetadataRead  AppPermissionsMetadata = "read"
	AppPermissionsMetadataWrite AppPermissionsMetadata = "write"
)

type AppPermissionsOrganizationAdministration string

const (
	AppPermissionsOrganizationAdministrationRead  AppPermissionsOrganizationAdministration = "read"
	AppPermissionsOrganizationAdministrationWrite AppPermissionsOrganizationAdministration = "write"
)

type AppPermissionsOrganizationHooks string

const (
	AppPermissionsOrganizationHooksRead  AppPermissionsOrganizationHooks = "read"
	AppPermissionsOrganizationHooksWrite AppPermissionsOrganizationHooks = "write"
)

type AppPermissionsOrganizationPackages string

const (
	AppPermissionsOrganizationPackagesRead  AppPermissionsOrganizationPackages = "read"
	AppPermissionsOrganizationPackagesWrite AppPermissionsOrganizationPackages = "write"
)

type AppPermissionsOrganizationPlan string

const (
	AppPermissionsOrganizationPlanRead AppPermissionsOrganizationPlan = "read"
)

type AppPermissionsOrganizationProjects string

const (
	AppPermissionsOrganizationProjectsRead  AppPermissionsOrganizationProjects = "read"
	AppPermissionsOrganizationProjectsWrite AppPermissionsOrganizationProjects = "write"
	AppPermissionsOrganizationProjectsAdmin AppPermissionsOrganizationProjects = "admin"
)

type AppPermissionsOrganizationSecrets string

const (
	AppPermissionsOrganizationSecretsRead  AppPermissionsOrganizationSecrets = "read"
	AppPermissionsOrganizationSecretsWrite AppPermissionsOrganizationSecrets = "write"
)

type AppPermissionsOrganizationSelfHostedRunners string

const (
	AppPermissionsOrganizationSelfHostedRunnersRead  AppPermissionsOrganizationSelfHostedRunners = "read"
	AppPermissionsOrganizationSelfHostedRunnersWrite AppPermissionsOrganizationSelfHostedRunners = "write"
)

type AppPermissionsOrganizationUserBlocking string

const (
	AppPermissionsOrganizationUserBlockingRead  AppPermissionsOrganizationUserBlocking = "read"
	AppPermissionsOrganizationUserBlockingWrite AppPermissionsOrganizationUserBlocking = "write"
)

type AppPermissionsPackages string

const (
	AppPermissionsPackagesRead  AppPermissionsPackages = "read"
	AppPermissionsPackagesWrite AppPermissionsPackages = "write"
)

type AppPermissionsPages string

const (
	AppPermissionsPagesRead  AppPermissionsPages = "read"
	AppPermissionsPagesWrite AppPermissionsPages = "write"
)

type AppPermissionsPullRequests string

const (
	AppPermissionsPullRequestsRead  AppPermissionsPullRequests = "read"
	AppPermissionsPullRequestsWrite AppPermissionsPullRequests = "write"
)

type AppPermissionsRepositoryHooks string

const (
	AppPermissionsRepositoryHooksRead  AppPermissionsRepositoryHooks = "read"
	AppPermissionsRepositoryHooksWrite AppPermissionsRepositoryHooks = "write"
)

type AppPermissionsRepositoryProjects string

const (
	AppPermissionsRepositoryProjectsRead  AppPermissionsRepositoryProjects = "read"
	AppPermissionsRepositoryProjectsWrite AppPermissionsRepositoryProjects = "write"
	AppPermissionsRepositoryProjectsAdmin AppPermissionsRepositoryProjects = "admin"
)

type AppPermissionsSecretScanningAlerts string

const (
	AppPermissionsSecretScanningAlertsRead  AppPermissionsSecretScanningAlerts = "read"
	AppPermissionsSecretScanningAlertsWrite AppPermissionsSecretScanningAlerts = "write"
)

type AppPermissionsSecrets string

const (
	AppPermissionsSecretsRead  AppPermissionsSecrets = "read"
	AppPermissionsSecretsWrite AppPermissionsSecrets = "write"
)

type AppPermissionsSecurityEvents string

const (
	AppPermissionsSecurityEventsRead  AppPermissionsSecurityEvents = "read"
	AppPermissionsSecurityEventsWrite AppPermissionsSecurityEvents = "write"
)

type AppPermissionsSingleFile string

const (
	AppPermissionsSingleFileRead  AppPermissionsSingleFile = "read"
	AppPermissionsSingleFileWrite AppPermissionsSingleFile = "write"
)

type AppPermissionsStatuses string

const (
	AppPermissionsStatusesRead  AppPermissionsStatuses = "read"
	AppPermissionsStatusesWrite AppPermissionsStatuses = "write"
)

type AppPermissionsTeamDiscussions string

const (
	AppPermissionsTeamDiscussionsRead  AppPermissionsTeamDiscussions = "read"
	AppPermissionsTeamDiscussionsWrite AppPermissionsTeamDiscussions = "write"
)

type AppPermissionsVulnerabilityAlerts string

const (
	AppPermissionsVulnerabilityAlertsRead AppPermissionsVulnerabilityAlerts = "read"
)

type AppPermissionsWorkflows string

const (
	AppPermissionsWorkflowsWrite AppPermissionsWorkflows = "write"
)

type ApplicationGrantApp struct {
	ClientID string  `json:"client_id"`
	Name     string  `json:"name"`
	URL      url.URL `json:"url"`
}

type AppsAddRepoToInstallationApplicationJSONForbidden BasicError

func (*AppsAddRepoToInstallationApplicationJSONForbidden) appsAddRepoToInstallationRes() {}

type AppsAddRepoToInstallationApplicationJSONNotFound BasicError

func (*AppsAddRepoToInstallationApplicationJSONNotFound) appsAddRepoToInstallationRes() {}

type AppsAddRepoToInstallationNoContent struct{}

func (*AppsAddRepoToInstallationNoContent) appsAddRepoToInstallationRes() {}

type AppsCheckTokenApplicationJSONReq struct {
	AccessToken string `json:"access_token"`
}

func (*AppsCheckTokenApplicationJSONReq) appsCheckTokenReq() {}

type AppsCreateContentAttachmentApplicationJSONReq struct {
	Body  string `json:"body"`
	Title string `json:"title"`
}

func (*AppsCreateContentAttachmentApplicationJSONReq) appsCreateContentAttachmentReq() {}

type AppsCreateFromManifestApplicationJSONReq struct{}

func (*AppsCreateFromManifestApplicationJSONReq) appsCreateFromManifestReq() {}

type AppsCreateInstallationAccessTokenApplicationJSONReq struct {
	Permissions   OptAppPermissions `json:"permissions"`
	Repositories  []string          `json:"repositories"`
	RepositoryIds []int             `json:"repository_ids"`
}

func (*AppsCreateInstallationAccessTokenApplicationJSONReq) appsCreateInstallationAccessTokenReq() {}

type AppsDeleteAuthorizationApplicationJSONReq struct {
	AccessToken string `json:"access_token"`
}

func (*AppsDeleteAuthorizationApplicationJSONReq) appsDeleteAuthorizationReq() {}

type AppsDeleteAuthorizationNoContent struct{}

type AppsDeleteInstallationNoContent struct{}

func (*AppsDeleteInstallationNoContent) appsDeleteInstallationRes() {}

type AppsDeleteTokenApplicationJSONReq struct {
	AccessToken string `json:"access_token"`
}

func (*AppsDeleteTokenApplicationJSONReq) appsDeleteTokenReq() {}

type AppsDeleteTokenNoContent struct{}

type AppsGetBySlugApplicationJSONForbidden BasicError

func (*AppsGetBySlugApplicationJSONForbidden) appsGetBySlugRes() {}

type AppsGetBySlugApplicationJSONNotFound BasicError

func (*AppsGetBySlugApplicationJSONNotFound) appsGetBySlugRes() {}

type AppsGetSubscriptionPlanForAccountApplicationJSONNotFound BasicError

func (*AppsGetSubscriptionPlanForAccountApplicationJSONNotFound) appsGetSubscriptionPlanForAccountRes() {
}

type AppsGetSubscriptionPlanForAccountApplicationJSONUnauthorized BasicError

func (*AppsGetSubscriptionPlanForAccountApplicationJSONUnauthorized) appsGetSubscriptionPlanForAccountRes() {
}

type AppsGetSubscriptionPlanForAccountStubbedNotFound struct{}

func (*AppsGetSubscriptionPlanForAccountStubbedNotFound) appsGetSubscriptionPlanForAccountStubbedRes() {
}

type AppsListInstallationReposForAuthenticatedUserApplicationJSONForbidden BasicError

func (*AppsListInstallationReposForAuthenticatedUserApplicationJSONForbidden) appsListInstallationReposForAuthenticatedUserRes() {
}

type AppsListInstallationReposForAuthenticatedUserApplicationJSONNotFound BasicError

func (*AppsListInstallationReposForAuthenticatedUserApplicationJSONNotFound) appsListInstallationReposForAuthenticatedUserRes() {
}

type AppsListInstallationReposForAuthenticatedUserOK struct {
	Repositories        []Repository `json:"repositories"`
	RepositorySelection OptString    `json:"repository_selection"`
	TotalCount          int          `json:"total_count"`
}

func (*AppsListInstallationReposForAuthenticatedUserOK) appsListInstallationReposForAuthenticatedUserRes() {
}

type AppsListPlansApplicationJSONNotFound BasicError

func (*AppsListPlansApplicationJSONNotFound) appsListPlansRes() {}

type AppsListPlansApplicationJSONUnauthorized BasicError

func (*AppsListPlansApplicationJSONUnauthorized) appsListPlansRes() {}

type AppsListPlansOK []MarketplaceListingPlan

func (*AppsListPlansOK) appsListPlansRes() {}

type AppsListPlansStubbedOK []MarketplaceListingPlan

func (*AppsListPlansStubbedOK) appsListPlansStubbedRes() {}

type AppsListReposAccessibleToInstallationApplicationJSONForbidden BasicError

func (*AppsListReposAccessibleToInstallationApplicationJSONForbidden) appsListReposAccessibleToInstallationRes() {
}

type AppsListReposAccessibleToInstallationApplicationJSONUnauthorized BasicError

func (*AppsListReposAccessibleToInstallationApplicationJSONUnauthorized) appsListReposAccessibleToInstallationRes() {
}

type AppsListReposAccessibleToInstallationOK struct {
	Repositories        []Repository `json:"repositories"`
	RepositorySelection OptString    `json:"repository_selection"`
	TotalCount          int          `json:"total_count"`
}

func (*AppsListReposAccessibleToInstallationOK) appsListReposAccessibleToInstallationRes() {}

type AppsListSubscriptionsForAuthenticatedUserApplicationJSONNotFound BasicError

func (*AppsListSubscriptionsForAuthenticatedUserApplicationJSONNotFound) appsListSubscriptionsForAuthenticatedUserRes() {
}

type AppsListSubscriptionsForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*AppsListSubscriptionsForAuthenticatedUserApplicationJSONUnauthorized) appsListSubscriptionsForAuthenticatedUserRes() {
}

type AppsListSubscriptionsForAuthenticatedUserOK []UserMarketplacePurchase

func (*AppsListSubscriptionsForAuthenticatedUserOK) appsListSubscriptionsForAuthenticatedUserRes() {}

type AppsListSubscriptionsForAuthenticatedUserStubbedOK []UserMarketplacePurchase

func (*AppsListSubscriptionsForAuthenticatedUserStubbedOK) appsListSubscriptionsForAuthenticatedUserStubbedRes() {
}

type AppsListWebhookDeliveriesOK []HookDeliveryItem

type AppsRemoveRepoFromInstallationApplicationJSONForbidden BasicError

func (*AppsRemoveRepoFromInstallationApplicationJSONForbidden) appsRemoveRepoFromInstallationRes() {}

type AppsRemoveRepoFromInstallationApplicationJSONNotFound BasicError

func (*AppsRemoveRepoFromInstallationApplicationJSONNotFound) appsRemoveRepoFromInstallationRes() {}

type AppsRemoveRepoFromInstallationNoContent struct{}

func (*AppsRemoveRepoFromInstallationNoContent) appsRemoveRepoFromInstallationRes() {}

type AppsResetTokenApplicationJSONReq struct {
	AccessToken string `json:"access_token"`
}

func (*AppsResetTokenApplicationJSONReq) appsResetTokenReq() {}

type AppsRevokeInstallationAccessToken struct{}

type AppsScopeTokenApplicationJSONReq struct {
	AccessToken   string            `json:"access_token"`
	Permissions   OptAppPermissions `json:"permissions"`
	Repositories  []string          `json:"repositories"`
	RepositoryIds []int             `json:"repository_ids"`
	Target        OptString         `json:"target"`
	TargetID      OptInt            `json:"target_id"`
}

func (*AppsScopeTokenApplicationJSONReq) appsScopeTokenReq() {}

type AppsSuspendInstallationNoContent struct{}

func (*AppsSuspendInstallationNoContent) appsSuspendInstallationRes() {}

type AppsUnsuspendInstallationNoContent struct{}

func (*AppsUnsuspendInstallationNoContent) appsUnsuspendInstallationRes() {}

type AuthenticationTokenPermissions struct{}

type AuthenticationTokenRepositorySelection string

const (
	AuthenticationTokenRepositorySelectionAll      AuthenticationTokenRepositorySelection = "all"
	AuthenticationTokenRepositorySelectionSelected AuthenticationTokenRepositorySelection = "selected"
)

type AuthorizationApp struct {
	ClientID string  `json:"client_id"`
	Name     string  `json:"name"`
	URL      url.URL `json:"url"`
}

type BaseGistFiles struct{}

type BranchProtectionAllowDeletions struct {
	Enabled OptBool `json:"enabled"`
}

type BranchProtectionAllowForcePushes struct {
	Enabled OptBool `json:"enabled"`
}

type BranchProtectionRequiredConversationResolution struct {
	Enabled OptBool `json:"enabled"`
}

type BranchProtectionRequiredLinearHistory struct {
	Enabled OptBool `json:"enabled"`
}

type BranchProtectionRequiredSignatures struct {
	Enabled bool    `json:"enabled"`
	URL     url.URL `json:"url"`
}

type BranchProtectionRequiredStatusChecks struct {
	Contexts         []string  `json:"contexts"`
	ContextsURL      OptString `json:"contexts_url"`
	EnforcementLevel OptString `json:"enforcement_level"`
	Strict           OptBool   `json:"strict"`
	URL              OptString `json:"url"`
}

type BranchRestrictionPolicyAppsItem struct {
	CreatedAt   OptString                                     `json:"created_at"`
	Description OptString                                     `json:"description"`
	Events      []string                                      `json:"events"`
	ExternalURL OptString                                     `json:"external_url"`
	HTMLURL     OptString                                     `json:"html_url"`
	ID          OptInt                                        `json:"id"`
	Name        OptString                                     `json:"name"`
	NodeID      OptString                                     `json:"node_id"`
	Owner       OptBranchRestrictionPolicyAppsItemOwner       `json:"owner"`
	Permissions OptBranchRestrictionPolicyAppsItemPermissions `json:"permissions"`
	Slug        OptString                                     `json:"slug"`
	UpdatedAt   OptString                                     `json:"updated_at"`
}

type BranchRestrictionPolicyAppsItemOwner struct {
	AvatarURL         OptString `json:"avatar_url"`
	Description       OptString `json:"description"`
	EventsURL         OptString `json:"events_url"`
	FollowersURL      OptString `json:"followers_url"`
	FollowingURL      OptString `json:"following_url"`
	GistsURL          OptString `json:"gists_url"`
	GravatarID        OptString `json:"gravatar_id"`
	HTMLURL           OptString `json:"html_url"`
	HooksURL          OptString `json:"hooks_url"`
	ID                OptInt    `json:"id"`
	IssuesURL         OptString `json:"issues_url"`
	Login             OptString `json:"login"`
	MembersURL        OptString `json:"members_url"`
	NodeID            OptString `json:"node_id"`
	OrganizationsURL  OptString `json:"organizations_url"`
	PublicMembersURL  OptString `json:"public_members_url"`
	ReceivedEventsURL OptString `json:"received_events_url"`
	ReposURL          OptString `json:"repos_url"`
	SiteAdmin         OptBool   `json:"site_admin"`
	StarredURL        OptString `json:"starred_url"`
	SubscriptionsURL  OptString `json:"subscriptions_url"`
	Type              OptString `json:"type"`
	URL               OptString `json:"url"`
}

type BranchRestrictionPolicyAppsItemPermissions struct {
	Contents   OptString `json:"contents"`
	Issues     OptString `json:"issues"`
	Metadata   OptString `json:"metadata"`
	SingleFile OptString `json:"single_file"`
}

type BranchRestrictionPolicyTeamsItem struct {
	Description     OptNilString `json:"description"`
	HTMLURL         OptString    `json:"html_url"`
	ID              OptInt       `json:"id"`
	MembersURL      OptString    `json:"members_url"`
	Name            OptString    `json:"name"`
	NodeID          OptString    `json:"node_id"`
	Parent          OptNilString `json:"parent"`
	Permission      OptString    `json:"permission"`
	Privacy         OptString    `json:"privacy"`
	RepositoriesURL OptString    `json:"repositories_url"`
	Slug            OptString    `json:"slug"`
	URL             OptString    `json:"url"`
}

type BranchRestrictionPolicyUsersItem struct {
	AvatarURL         OptString `json:"avatar_url"`
	EventsURL         OptString `json:"events_url"`
	FollowersURL      OptString `json:"followers_url"`
	FollowingURL      OptString `json:"following_url"`
	GistsURL          OptString `json:"gists_url"`
	GravatarID        OptString `json:"gravatar_id"`
	HTMLURL           OptString `json:"html_url"`
	ID                OptInt    `json:"id"`
	Login             OptString `json:"login"`
	NodeID            OptString `json:"node_id"`
	OrganizationsURL  OptString `json:"organizations_url"`
	ReceivedEventsURL OptString `json:"received_events_url"`
	ReposURL          OptString `json:"repos_url"`
	SiteAdmin         OptBool   `json:"site_admin"`
	StarredURL        OptString `json:"starred_url"`
	SubscriptionsURL  OptString `json:"subscriptions_url"`
	Type              OptString `json:"type"`
	URL               OptString `json:"url"`
}

type BranchShortCommit struct {
	Sha string `json:"sha"`
	URL string `json:"url"`
}

type BranchWithProtectionLinks struct {
	HTML string  `json:"html"`
	Self url.URL `json:"self"`
}

type CheckRunCheckSuite struct {
	ID int `json:"id"`
}

type CheckRunConclusion string

const (
	CheckRunConclusionSuccess        CheckRunConclusion = "success"
	CheckRunConclusionFailure        CheckRunConclusion = "failure"
	CheckRunConclusionNeutral        CheckRunConclusion = "neutral"
	CheckRunConclusionCancelled      CheckRunConclusion = "cancelled"
	CheckRunConclusionSkipped        CheckRunConclusion = "skipped"
	CheckRunConclusionTimedOut       CheckRunConclusion = "timed_out"
	CheckRunConclusionActionRequired CheckRunConclusion = "action_required"
)

type CheckRunOutput struct {
	AnnotationsCount int       `json:"annotations_count"`
	AnnotationsURL   url.URL   `json:"annotations_url"`
	Summary          NilString `json:"summary"`
	Text             NilString `json:"text"`
	Title            NilString `json:"title"`
}

type CheckRunStatus string

const (
	CheckRunStatusQueued     CheckRunStatus = "queued"
	CheckRunStatusInProgress CheckRunStatus = "in_progress"
	CheckRunStatusCompleted  CheckRunStatus = "completed"
)

type CheckSuiteConclusion string

const (
	CheckSuiteConclusionSuccess        CheckSuiteConclusion = "success"
	CheckSuiteConclusionFailure        CheckSuiteConclusion = "failure"
	CheckSuiteConclusionNeutral        CheckSuiteConclusion = "neutral"
	CheckSuiteConclusionCancelled      CheckSuiteConclusion = "cancelled"
	CheckSuiteConclusionSkipped        CheckSuiteConclusion = "skipped"
	CheckSuiteConclusionTimedOut       CheckSuiteConclusion = "timed_out"
	CheckSuiteConclusionActionRequired CheckSuiteConclusion = "action_required"
)

type CheckSuitePreferencePreferences struct {
	AutoTriggerChecks []CheckSuitePreferencePreferencesAutoTriggerChecksItem `json:"auto_trigger_checks"`
}

type CheckSuitePreferencePreferencesAutoTriggerChecksItem struct {
	AppID   int  `json:"app_id"`
	Setting bool `json:"setting"`
}

type CheckSuiteStatus string

const (
	CheckSuiteStatusQueued     CheckSuiteStatus = "queued"
	CheckSuiteStatusInProgress CheckSuiteStatus = "in_progress"
	CheckSuiteStatusCompleted  CheckSuiteStatus = "completed"
)

type ChecksCreateSuiteApplicationJSONCreated CheckSuite

func (*ChecksCreateSuiteApplicationJSONCreated) checksCreateSuiteRes() {}

type ChecksCreateSuiteApplicationJSONOK CheckSuite

func (*ChecksCreateSuiteApplicationJSONOK) checksCreateSuiteRes() {}

type ChecksCreateSuiteApplicationJSONReq struct {
	HeadSha string `json:"head_sha"`
}

type ChecksListSuitesForRef struct {
	CheckSuites []CheckSuite `json:"check_suites"`
	TotalCount  int          `json:"total_count"`
}

type ChecksRerequestSuite struct{}

type ChecksSetSuitesPreferencesApplicationJSONReq struct {
	AutoTriggerChecks []ChecksSetSuitesPreferencesApplicationJSONReqAutoTriggerChecksItem `json:"auto_trigger_checks"`
}

type ChecksSetSuitesPreferencesApplicationJSONReqAutoTriggerChecksItem struct {
	AppID   int  `json:"app_id"`
	Setting bool `json:"setting"`
}

type CodeScanningAlertInstanceMessage struct {
	Text OptString `json:"text"`
}

type CodeScanningDeleteAnalysisApplicationJSONBadRequest BasicError

func (*CodeScanningDeleteAnalysisApplicationJSONBadRequest) codeScanningDeleteAnalysisRes() {}

type CodeScanningDeleteAnalysisApplicationJSONForbidden BasicError

func (*CodeScanningDeleteAnalysisApplicationJSONForbidden) codeScanningDeleteAnalysisRes() {}

type CodeScanningDeleteAnalysisApplicationJSONNotFound BasicError

func (*CodeScanningDeleteAnalysisApplicationJSONNotFound) codeScanningDeleteAnalysisRes() {}

type CodeScanningGetSarifNotFound struct{}

func (*CodeScanningGetSarifNotFound) codeScanningGetSarifRes() {}

type CodeScanningListAlertInstancesApplicationJSONForbidden BasicError

func (*CodeScanningListAlertInstancesApplicationJSONForbidden) codeScanningListAlertInstancesRes() {}

type CodeScanningListAlertInstancesApplicationJSONNotFound BasicError

func (*CodeScanningListAlertInstancesApplicationJSONNotFound) codeScanningListAlertInstancesRes() {}

type CodeScanningListAlertInstancesOK []CodeScanningAlertInstance

func (*CodeScanningListAlertInstancesOK) codeScanningListAlertInstancesRes() {}

type CodeScanningListRecentAnalysesApplicationJSONForbidden BasicError

func (*CodeScanningListRecentAnalysesApplicationJSONForbidden) codeScanningListRecentAnalysesRes() {}

type CodeScanningListRecentAnalysesApplicationJSONNotFound BasicError

func (*CodeScanningListRecentAnalysesApplicationJSONNotFound) codeScanningListRecentAnalysesRes() {}

type CodeScanningListRecentAnalysesOK []CodeScanningAnalysis

func (*CodeScanningListRecentAnalysesOK) codeScanningListRecentAnalysesRes() {}

type CodeScanningSarifsStatusProcessingStatus string

const (
	CodeScanningSarifsStatusProcessingStatusPending  CodeScanningSarifsStatusProcessingStatus = "pending"
	CodeScanningSarifsStatusProcessingStatusComplete CodeScanningSarifsStatusProcessingStatus = "complete"
)

type CodeScanningUpdateAlertApplicationJSONReq struct {
	DismissedReason OptCodeScanningAlertDismissedReason `json:"dismissed_reason"`
	State           CodeScanningAlertSetState           `json:"state"`
}

func (*CodeScanningUpdateAlertApplicationJSONReq) codeScanningUpdateAlertReq() {}

type CodeScanningUploadSarifApplicationJSONForbidden BasicError

func (*CodeScanningUploadSarifApplicationJSONForbidden) codeScanningUploadSarifRes() {}

type CodeScanningUploadSarifApplicationJSONNotFound BasicError

func (*CodeScanningUploadSarifApplicationJSONNotFound) codeScanningUploadSarifRes() {}

type CodeScanningUploadSarifApplicationJSONReq struct {
	CheckoutURI OptURL                        `json:"checkout_uri"`
	CommitSha   CodeScanningAnalysisCommitSha `json:"commit_sha"`
	Ref         CodeScanningRef               `json:"ref"`
	Sarif       CodeScanningAnalysisSarifFile `json:"sarif"`
	StartedAt   OptTime                       `json:"started_at"`
	ToolName    OptString                     `json:"tool_name"`
}

type CodeScanningUploadSarifBadRequest struct{}

func (*CodeScanningUploadSarifBadRequest) codeScanningUploadSarifRes() {}

type CodeScanningUploadSarifRequestEntityTooLarge struct{}

func (*CodeScanningUploadSarifRequestEntityTooLarge) codeScanningUploadSarifRes() {}

type CodesOfConductGetAllCodesOfConductOK []CodeOfConduct

func (*CodesOfConductGetAllCodesOfConductOK) codesOfConductGetAllCodesOfConductRes() {}

type CommitCommit struct {
	Author       NullableGitUser  `json:"author"`
	CommentCount int              `json:"comment_count"`
	Committer    NullableGitUser  `json:"committer"`
	Message      string           `json:"message"`
	Tree         CommitCommitTree `json:"tree"`
	URL          url.URL          `json:"url"`
	Verification OptVerification  `json:"verification"`
}

type CommitCommitTree struct {
	Sha string  `json:"sha"`
	URL url.URL `json:"url"`
}

type CommitComparisonStatus string

const (
	CommitComparisonStatusDiverged  CommitComparisonStatus = "diverged"
	CommitComparisonStatusAhead     CommitComparisonStatus = "ahead"
	CommitComparisonStatusBehind    CommitComparisonStatus = "behind"
	CommitComparisonStatusIdentical CommitComparisonStatus = "identical"
)

type CommitFilesItem struct {
	Additions        OptInt    `json:"additions"`
	BlobURL          OptString `json:"blob_url"`
	Changes          OptInt    `json:"changes"`
	ContentsURL      OptString `json:"contents_url"`
	Deletions        OptInt    `json:"deletions"`
	Filename         OptString `json:"filename"`
	Patch            OptString `json:"patch"`
	PreviousFilename OptString `json:"previous_filename"`
	RawURL           OptString `json:"raw_url"`
	Sha              OptString `json:"sha"`
	Status           OptString `json:"status"`
}

type CommitParentsItem struct {
	HTMLURL OptURL  `json:"html_url"`
	Sha     string  `json:"sha"`
	URL     url.URL `json:"url"`
}

type CommitStats struct {
	Additions OptInt `json:"additions"`
	Deletions OptInt `json:"deletions"`
	Total     OptInt `json:"total"`
}

type CommunityProfileFiles struct {
	CodeOfConduct       NullableCodeOfConductSimple `json:"code_of_conduct"`
	CodeOfConductFile   NullableCommunityHealthFile `json:"code_of_conduct_file"`
	Contributing        NullableCommunityHealthFile `json:"contributing"`
	IssueTemplate       NullableCommunityHealthFile `json:"issue_template"`
	License             NullableLicenseSimple       `json:"license"`
	PullRequestTemplate NullableCommunityHealthFile `json:"pull_request_template"`
	Readme              NullableCommunityHealthFile `json:"readme"`
}

type ContentFileLinks struct {
	Git  NilURL  `json:"git"`
	HTML NilURL  `json:"html"`
	Self url.URL `json:"self"`
}

type ContributorActivityWeeksItem struct {
	A OptInt `json:"a"`
	C OptInt `json:"c"`
	D OptInt `json:"d"`
	W OptInt `json:"w"`
}

type DeploymentStatusState string

const (
	DeploymentStatusStateError      DeploymentStatusState = "error"
	DeploymentStatusStateFailure    DeploymentStatusState = "failure"
	DeploymentStatusStateInactive   DeploymentStatusState = "inactive"
	DeploymentStatusStatePending    DeploymentStatusState = "pending"
	DeploymentStatusStateSuccess    DeploymentStatusState = "success"
	DeploymentStatusStateQueued     DeploymentStatusState = "queued"
	DeploymentStatusStateInProgress DeploymentStatusState = "in_progress"
)

type DiffEntryStatus string

const (
	DiffEntryStatusAdded     DiffEntryStatus = "added"
	DiffEntryStatusRemoved   DiffEntryStatus = "removed"
	DiffEntryStatusModified  DiffEntryStatus = "modified"
	DiffEntryStatusRenamed   DiffEntryStatus = "renamed"
	DiffEntryStatusCopied    DiffEntryStatus = "copied"
	DiffEntryStatusChanged   DiffEntryStatus = "changed"
	DiffEntryStatusUnchanged DiffEntryStatus = "unchanged"
)

type EmojisGetOK struct{}

func (*EmojisGetOK) emojisGetRes() {}

type EnterpriseAdminAddOrgAccessToSelfHostedRunnerGroupInEnterprise struct{}

type EnterpriseAdminAddSelfHostedRunnerToGroupForEnterprise struct{}

type EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReq struct {
	Name                    string                                                                                 `json:"name"`
	Runners                 []int                                                                                  `json:"runners"`
	SelectedOrganizationIds []int                                                                                  `json:"selected_organization_ids"`
	Visibility              OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility `json:"visibility"`
}

type EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility string

const (
	EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibilitySelected EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility = "selected"
	EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibilityAll      EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility = "all"
)

type EnterpriseAdminDeleteScimGroupFromEnterprise struct{}

type EnterpriseAdminDeleteSelfHostedRunnerFromEnterprise struct{}

type EnterpriseAdminDeleteSelfHostedRunnerGroupFromEnterprise struct{}

type EnterpriseAdminDeleteUserFromEnterprise struct{}

type EnterpriseAdminDisableSelectedOrganizationGithubActionsEnterprise struct{}

type EnterpriseAdminEnableSelectedOrganizationGithubActionsEnterprise struct{}

type EnterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterprise struct {
	Organizations []OrganizationSimple `json:"organizations"`
	TotalCount    float64              `json:"total_count"`
}

type EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprise struct {
	Organizations []OrganizationSimple `json:"organizations"`
	TotalCount    float64              `json:"total_count"`
}

type EnterpriseAdminListSelfHostedRunnerGroupsForEnterprise struct {
	RunnerGroups []RunnerGroupsEnterprise `json:"runner_groups"`
	TotalCount   float64                  `json:"total_count"`
}

type EnterpriseAdminListSelfHostedRunnersForEnterprise struct {
	Runners    []Runner   `json:"runners"`
	TotalCount OptFloat64 `json:"total_count"`
}

type EnterpriseAdminListSelfHostedRunnersInGroupForEnterprise struct {
	Runners    []Runner `json:"runners"`
	TotalCount float64  `json:"total_count"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseGroupApplicationJSONReq struct {
	DisplayName string                                                                          `json:"displayName"`
	Members     []EnterpriseAdminProvisionAndInviteEnterpriseGroupApplicationJSONReqMembersItem `json:"members"`
	Schemas     []string                                                                        `json:"schemas"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseGroupApplicationJSONReqMembersItem struct {
	Value string `json:"value"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseUserApplicationJSONReq struct {
	Emails   []EnterpriseAdminProvisionAndInviteEnterpriseUserApplicationJSONReqEmailsItem `json:"emails"`
	Groups   []EnterpriseAdminProvisionAndInviteEnterpriseUserApplicationJSONReqGroupsItem `json:"groups"`
	Name     EnterpriseAdminProvisionAndInviteEnterpriseUserApplicationJSONReqName         `json:"name"`
	Schemas  []string                                                                      `json:"schemas"`
	UserName string                                                                        `json:"userName"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseUserApplicationJSONReqEmailsItem struct {
	Primary bool   `json:"primary"`
	Type    string `json:"type"`
	Value   string `json:"value"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseUserApplicationJSONReqGroupsItem struct {
	Value OptString `json:"value"`
}

type EnterpriseAdminProvisionAndInviteEnterpriseUserApplicationJSONReqName struct {
	FamilyName string `json:"familyName"`
	GivenName  string `json:"givenName"`
}

type EnterpriseAdminRemoveOrgAccessToSelfHostedRunnerGroupInEnterprise struct{}

type EnterpriseAdminRemoveSelfHostedRunnerFromGroupForEnterprise struct{}

type EnterpriseAdminSetAllowedActionsEnterprise struct{}

type EnterpriseAdminSetGithubActionsPermissionsEnterprise struct{}

type EnterpriseAdminSetGithubActionsPermissionsEnterpriseApplicationJSONReq struct {
	AllowedActions       OptAllowedActions    `json:"allowed_actions"`
	EnabledOrganizations EnabledOrganizations `json:"enabled_organizations"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseGroupApplicationJSONReq struct {
	DisplayName string                                                                                    `json:"displayName"`
	Members     []EnterpriseAdminSetInformationForProvisionedEnterpriseGroupApplicationJSONReqMembersItem `json:"members"`
	Schemas     []string                                                                                  `json:"schemas"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseGroupApplicationJSONReqMembersItem struct {
	Value string `json:"value"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseUserApplicationJSONReq struct {
	Emails   []EnterpriseAdminSetInformationForProvisionedEnterpriseUserApplicationJSONReqEmailsItem `json:"emails"`
	Groups   []EnterpriseAdminSetInformationForProvisionedEnterpriseUserApplicationJSONReqGroupsItem `json:"groups"`
	Name     EnterpriseAdminSetInformationForProvisionedEnterpriseUserApplicationJSONReqName         `json:"name"`
	Schemas  []string                                                                                `json:"schemas"`
	UserName string                                                                                  `json:"userName"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseUserApplicationJSONReqEmailsItem struct {
	Primary bool   `json:"primary"`
	Type    string `json:"type"`
	Value   string `json:"value"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseUserApplicationJSONReqGroupsItem struct {
	Value OptString `json:"value"`
}

type EnterpriseAdminSetInformationForProvisionedEnterpriseUserApplicationJSONReqName struct {
	FamilyName string `json:"familyName"`
	GivenName  string `json:"givenName"`
}

type EnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterprise struct{}

type EnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterpriseApplicationJSONReq struct {
	SelectedOrganizationIds []int `json:"selected_organization_ids"`
}

type EnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterprise struct{}

type EnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterpriseApplicationJSONReq struct {
	SelectedOrganizationIds []int `json:"selected_organization_ids"`
}

type EnterpriseAdminSetSelfHostedRunnersInGroupForEnterprise struct{}

type EnterpriseAdminSetSelfHostedRunnersInGroupForEnterpriseApplicationJSONReq struct {
	Runners []int `json:"runners"`
}

type EnterpriseAdminUpdateAttributeForEnterpriseUserApplicationJSONReq struct {
	Operations []EnterpriseAdminUpdateAttributeForEnterpriseUserApplicationJSONReqOperationsItem `json:"Operations"`
	Schemas    []string                                                                          `json:"schemas"`
}

type EnterpriseAdminUpdateAttributeForEnterpriseUserApplicationJSONReqOperationsItem struct{}

type EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReq struct {
	Name       OptString                                                                              `json:"name"`
	Visibility OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility `json:"visibility"`
}

type EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility string

const (
	EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibilitySelected EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility = "selected"
	EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibilityAll      EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility = "all"
)

type EnvironmentApprovalsEnvironmentsItem struct {
	CreatedAt OptTime   `json:"created_at"`
	HTMLURL   OptString `json:"html_url"`
	ID        OptInt    `json:"id"`
	Name      OptString `json:"name"`
	NodeID    OptString `json:"node_id"`
	URL       OptString `json:"url"`
	UpdatedAt OptTime   `json:"updated_at"`
}

type EnvironmentApprovalsState string

const (
	EnvironmentApprovalsStateApproved EnvironmentApprovalsState = "approved"
	EnvironmentApprovalsStateRejected EnvironmentApprovalsState = "rejected"
)

type FeedLinks struct {
	CurrentUser              OptLinkWithType `json:"current_user"`
	CurrentUserActor         OptLinkWithType `json:"current_user_actor"`
	CurrentUserOrganization  OptLinkWithType `json:"current_user_organization"`
	CurrentUserOrganizations []LinkWithType  `json:"current_user_organizations"`
	CurrentUserPublic        OptLinkWithType `json:"current_user_public"`
	SecurityAdvisories       OptLinkWithType `json:"security_advisories"`
	Timeline                 LinkWithType    `json:"timeline"`
	User                     LinkWithType    `json:"user"`
}

type FileCommitCommit struct {
	Author       OptFileCommitCommitAuthor       `json:"author"`
	Committer    OptFileCommitCommitCommitter    `json:"committer"`
	HTMLURL      OptString                       `json:"html_url"`
	Message      OptString                       `json:"message"`
	NodeID       OptString                       `json:"node_id"`
	Parents      []FileCommitCommitParentsItem   `json:"parents"`
	Sha          OptString                       `json:"sha"`
	Tree         OptFileCommitCommitTree         `json:"tree"`
	URL          OptString                       `json:"url"`
	Verification OptFileCommitCommitVerification `json:"verification"`
}

type FileCommitCommitAuthor struct {
	Date  OptString `json:"date"`
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type FileCommitCommitCommitter struct {
	Date  OptString `json:"date"`
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type FileCommitCommitParentsItem struct {
	HTMLURL OptString `json:"html_url"`
	Sha     OptString `json:"sha"`
	URL     OptString `json:"url"`
}

type FileCommitCommitTree struct {
	Sha OptString `json:"sha"`
	URL OptString `json:"url"`
}

type FileCommitCommitVerification struct {
	Payload   OptNilString `json:"payload"`
	Reason    OptString    `json:"reason"`
	Signature OptNilString `json:"signature"`
	Verified  OptBool      `json:"verified"`
}

type FileCommitContent struct {
	DownloadURL OptString                 `json:"download_url"`
	GitURL      OptString                 `json:"git_url"`
	HTMLURL     OptString                 `json:"html_url"`
	Links       OptFileCommitContentLinks `json:"_links"`
	Name        OptString                 `json:"name"`
	Path        OptString                 `json:"path"`
	Sha         OptString                 `json:"sha"`
	Size        OptInt                    `json:"size"`
	Type        OptString                 `json:"type"`
	URL         OptString                 `json:"url"`
}

type FileCommitContentLinks struct {
	Git  OptString `json:"git"`
	HTML OptString `json:"html"`
	Self OptString `json:"self"`
}

type ForbiddenGist struct {
	Block            OptForbiddenGistBlock `json:"block"`
	DocumentationURL OptString             `json:"documentation_url"`
	Message          OptString             `json:"message"`
}

func (*ForbiddenGist) gistsGetCommentRes() {}

type ForbiddenGistBlock struct {
	CreatedAt OptString    `json:"created_at"`
	HTMLURL   OptNilString `json:"html_url"`
	Reason    OptString    `json:"reason"`
}

type Found struct{}

func (*Found) reposGetReleaseAssetRes() {}

type FullRepositoryPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

type FullRepositorySecurityAndAnalysis struct {
	AdvancedSecurity OptFullRepositorySecurityAndAnalysisAdvancedSecurity `json:"advanced_security"`
	SecretScanning   OptFullRepositorySecurityAndAnalysisSecretScanning   `json:"secret_scanning"`
}

type FullRepositorySecurityAndAnalysisAdvancedSecurity struct {
	Status OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus `json:"status"`
}

type FullRepositorySecurityAndAnalysisAdvancedSecurityStatus string

const (
	FullRepositorySecurityAndAnalysisAdvancedSecurityStatusEnabled  FullRepositorySecurityAndAnalysisAdvancedSecurityStatus = "enabled"
	FullRepositorySecurityAndAnalysisAdvancedSecurityStatusDisabled FullRepositorySecurityAndAnalysisAdvancedSecurityStatus = "disabled"
)

type FullRepositorySecurityAndAnalysisSecretScanning struct {
	Status OptFullRepositorySecurityAndAnalysisSecretScanningStatus `json:"status"`
}

type FullRepositorySecurityAndAnalysisSecretScanningStatus string

const (
	FullRepositorySecurityAndAnalysisSecretScanningStatusEnabled  FullRepositorySecurityAndAnalysisSecretScanningStatus = "enabled"
	FullRepositorySecurityAndAnalysisSecretScanningStatusDisabled FullRepositorySecurityAndAnalysisSecretScanningStatus = "disabled"
)

type GistCommitChangeStatus struct {
	Additions OptInt `json:"additions"`
	Deletions OptInt `json:"deletions"`
	Total     OptInt `json:"total"`
}

type GistsCheckIsStarredNoContent struct{}

func (*GistsCheckIsStarredNoContent) gistsCheckIsStarredRes() {}

type GistsCheckIsStarredNotFound struct{}

func (*GistsCheckIsStarredNotFound) gistsCheckIsStarredRes() {}

type GistsCreateCommentApplicationJSONForbidden BasicError

func (*GistsCreateCommentApplicationJSONForbidden) gistsCreateCommentRes() {}

type GistsCreateCommentApplicationJSONNotFound BasicError

func (*GistsCreateCommentApplicationJSONNotFound) gistsCreateCommentRes() {}

type GistsCreateCommentApplicationJSONReq struct {
	Body string `json:"body"`
}

type GistsDeleteApplicationJSONForbidden BasicError

func (*GistsDeleteApplicationJSONForbidden) gistsDeleteRes() {}

type GistsDeleteApplicationJSONNotFound BasicError

func (*GistsDeleteApplicationJSONNotFound) gistsDeleteRes() {}

type GistsDeleteCommentApplicationJSONForbidden BasicError

func (*GistsDeleteCommentApplicationJSONForbidden) gistsDeleteCommentRes() {}

type GistsDeleteCommentApplicationJSONNotFound BasicError

func (*GistsDeleteCommentApplicationJSONNotFound) gistsDeleteCommentRes() {}

type GistsDeleteCommentNoContent struct{}

func (*GistsDeleteCommentNoContent) gistsDeleteCommentRes() {}

type GistsDeleteNoContent struct{}

func (*GistsDeleteNoContent) gistsDeleteRes() {}

type GistsListCommentsApplicationJSONForbidden BasicError

func (*GistsListCommentsApplicationJSONForbidden) gistsListCommentsRes() {}

type GistsListCommentsApplicationJSONNotFound BasicError

func (*GistsListCommentsApplicationJSONNotFound) gistsListCommentsRes() {}

type GistsListCommentsOK []GistComment

func (*GistsListCommentsOK) gistsListCommentsRes() {}

type GistsListCommitsApplicationJSONForbidden BasicError

func (*GistsListCommitsApplicationJSONForbidden) gistsListCommitsRes() {}

type GistsListCommitsApplicationJSONNotFound BasicError

func (*GistsListCommitsApplicationJSONNotFound) gistsListCommitsRes() {}

type GistsListCommitsOK []GistCommit

func (*GistsListCommitsOK) gistsListCommitsRes() {}

type GistsListForUserOK []BaseGist

type GistsListOK []BaseGist

func (*GistsListOK) gistsListRes() {}

type GistsListPublicOK []BaseGist

type GistsListStarredApplicationJSONForbidden BasicError

func (*GistsListStarredApplicationJSONForbidden) gistsListStarredRes() {}

type GistsListStarredApplicationJSONUnauthorized BasicError

func (*GistsListStarredApplicationJSONUnauthorized) gistsListStarredRes() {}

type GistsListStarredOK []BaseGist

func (*GistsListStarredOK) gistsListStarredRes() {}

type GistsStarApplicationJSONForbidden BasicError

func (*GistsStarApplicationJSONForbidden) gistsStarRes() {}

type GistsStarApplicationJSONNotFound BasicError

func (*GistsStarApplicationJSONNotFound) gistsStarRes() {}

type GistsStarNoContent struct{}

func (*GistsStarNoContent) gistsStarRes() {}

type GistsUnstarApplicationJSONForbidden BasicError

func (*GistsUnstarApplicationJSONForbidden) gistsUnstarRes() {}

type GistsUnstarApplicationJSONNotFound BasicError

func (*GistsUnstarApplicationJSONNotFound) gistsUnstarRes() {}

type GistsUnstarNoContent struct{}

func (*GistsUnstarNoContent) gistsUnstarRes() {}

type GistsUpdateCommentApplicationJSONReq struct {
	Body string `json:"body"`
}

type GitCommitAuthor struct {
	Date  time.Time `json:"date"`
	Email string    `json:"email"`
	Name  string    `json:"name"`
}

type GitCommitCommitter struct {
	Date  time.Time `json:"date"`
	Email string    `json:"email"`
	Name  string    `json:"name"`
}

type GitCommitParentsItem struct {
	HTMLURL url.URL `json:"html_url"`
	Sha     string  `json:"sha"`
	URL     url.URL `json:"url"`
}

type GitCommitTree struct {
	Sha string  `json:"sha"`
	URL url.URL `json:"url"`
}

type GitCommitVerification struct {
	Payload   NilString `json:"payload"`
	Reason    string    `json:"reason"`
	Signature NilString `json:"signature"`
	Verified  bool      `json:"verified"`
}

type GitCreateBlobApplicationJSONReq struct {
	Content  string    `json:"content"`
	Encoding OptString `json:"encoding"`
}

func (*GitCreateBlobApplicationJSONReq) gitCreateBlobReq() {}

type GitCreateCommitApplicationJSONReq struct {
	Author    OptGitCreateCommitApplicationJSONReqAuthor    `json:"author"`
	Committer OptGitCreateCommitApplicationJSONReqCommitter `json:"committer"`
	Message   string                                        `json:"message"`
	Parents   []string                                      `json:"parents"`
	Signature OptString                                     `json:"signature"`
	Tree      string                                        `json:"tree"`
}

func (*GitCreateCommitApplicationJSONReq) gitCreateCommitReq() {}

type GitCreateCommitApplicationJSONReqAuthor struct {
	Date  OptTime `json:"date"`
	Email string  `json:"email"`
	Name  string  `json:"name"`
}

type GitCreateCommitApplicationJSONReqCommitter struct {
	Date  OptTime   `json:"date"`
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type GitCreateRefApplicationJSONReq struct {
	Key OptString `json:"key"`
	Ref string    `json:"ref"`
	Sha string    `json:"sha"`
}

func (*GitCreateRefApplicationJSONReq) gitCreateRefReq() {}

type GitCreateTagApplicationJSONReq struct {
	Message string                                  `json:"message"`
	Object  string                                  `json:"object"`
	Tag     string                                  `json:"tag"`
	Tagger  OptGitCreateTagApplicationJSONReqTagger `json:"tagger"`
	Type    GitCreateTagApplicationJSONReqType      `json:"type"`
}

func (*GitCreateTagApplicationJSONReq) gitCreateTagReq() {}

type GitCreateTagApplicationJSONReqTagger struct {
	Date  OptTime `json:"date"`
	Email string  `json:"email"`
	Name  string  `json:"name"`
}

type GitCreateTagApplicationJSONReqType string

const (
	GitCreateTagApplicationJSONReqTypeCommit GitCreateTagApplicationJSONReqType = "commit"
	GitCreateTagApplicationJSONReqTypeTree   GitCreateTagApplicationJSONReqType = "tree"
	GitCreateTagApplicationJSONReqTypeBlob   GitCreateTagApplicationJSONReqType = "blob"
)

type GitCreateTreeApplicationJSONReq struct {
	BaseTree OptString                                 `json:"base_tree"`
	Tree     []GitCreateTreeApplicationJSONReqTreeItem `json:"tree"`
}

func (*GitCreateTreeApplicationJSONReq) gitCreateTreeReq() {}

type GitCreateTreeApplicationJSONReqTreeItem struct {
	Content OptString                                      `json:"content"`
	Mode    OptGitCreateTreeApplicationJSONReqTreeItemMode `json:"mode"`
	Path    OptString                                      `json:"path"`
	Sha     OptNilString                                   `json:"sha"`
	Type    OptGitCreateTreeApplicationJSONReqTreeItemType `json:"type"`
}

type GitCreateTreeApplicationJSONReqTreeItemMode string

const (
	GitCreateTreeApplicationJSONReqTreeItemMode100644 GitCreateTreeApplicationJSONReqTreeItemMode = "100644"
	GitCreateTreeApplicationJSONReqTreeItemMode100755 GitCreateTreeApplicationJSONReqTreeItemMode = "100755"
	GitCreateTreeApplicationJSONReqTreeItemMode040000 GitCreateTreeApplicationJSONReqTreeItemMode = "040000"
	GitCreateTreeApplicationJSONReqTreeItemMode160000 GitCreateTreeApplicationJSONReqTreeItemMode = "160000"
	GitCreateTreeApplicationJSONReqTreeItemMode120000 GitCreateTreeApplicationJSONReqTreeItemMode = "120000"
)

type GitCreateTreeApplicationJSONReqTreeItemType string

const (
	GitCreateTreeApplicationJSONReqTreeItemTypeBlob   GitCreateTreeApplicationJSONReqTreeItemType = "blob"
	GitCreateTreeApplicationJSONReqTreeItemTypeTree   GitCreateTreeApplicationJSONReqTreeItemType = "tree"
	GitCreateTreeApplicationJSONReqTreeItemTypeCommit GitCreateTreeApplicationJSONReqTreeItemType = "commit"
)

type GitDeleteRefNoContent struct{}

type GitRefObject struct {
	Sha  string  `json:"sha"`
	Type string  `json:"type"`
	URL  url.URL `json:"url"`
}

type GitTagObject struct {
	Sha  string  `json:"sha"`
	Type string  `json:"type"`
	URL  url.URL `json:"url"`
}

type GitTagTagger struct {
	Date  string `json:"date"`
	Email string `json:"email"`
	Name  string `json:"name"`
}

type GitTreeTreeItem struct {
	Mode OptString `json:"mode"`
	Path OptString `json:"path"`
	Sha  OptString `json:"sha"`
	Size OptInt    `json:"size"`
	Type OptString `json:"type"`
	URL  OptString `json:"url"`
}

type GitUpdateRefApplicationJSONReq struct {
	Force OptBool `json:"force"`
	Sha   string  `json:"sha"`
}

func (*GitUpdateRefApplicationJSONReq) gitUpdateRefReq() {}

type GitignoreGetAllTemplatesOK []string

func (*GitignoreGetAllTemplatesOK) gitignoreGetAllTemplatesRes() {}

type GpgKeyEmailsItem struct {
	Email    OptString `json:"email"`
	Verified OptBool   `json:"verified"`
}

type GpgKeySubkeysItem struct {
	CanCertify        OptBool      `json:"can_certify"`
	CanEncryptComms   OptBool      `json:"can_encrypt_comms"`
	CanEncryptStorage OptBool      `json:"can_encrypt_storage"`
	CanSign           OptBool      `json:"can_sign"`
	CreatedAt         OptString    `json:"created_at"`
	Emails            []string     `json:"emails"`
	ExpiresAt         OptNilString `json:"expires_at"`
	ID                OptInt       `json:"id"`
	KeyID             OptString    `json:"key_id"`
	PrimaryKeyID      OptInt       `json:"primary_key_id"`
	PublicKey         OptString    `json:"public_key"`
	RawKey            OptNilString `json:"raw_key"`
	Subkeys           []string     `json:"subkeys"`
}

type GroupMappingGroupsItem struct {
	GroupDescription string       `json:"group_description"`
	GroupID          string       `json:"group_id"`
	GroupName        string       `json:"group_name"`
	Status           OptString    `json:"status"`
	SyncedAt         OptNilString `json:"synced_at"`
}

type HookDeliveryRequest struct {
	Headers *HookDeliveryRequestHeaders `json:"headers"`
	Payload *HookDeliveryRequestPayload `json:"payload"`
}

type HookDeliveryRequestHeaders struct{}

type HookDeliveryRequestPayload struct{}

type HookDeliveryResponse struct {
	Headers *HookDeliveryResponseHeaders `json:"headers"`
	Payload NilString                    `json:"payload"`
}

type HookDeliveryResponseHeaders struct{}

type ImportProjectChoicesItem struct {
	HumanName   OptString `json:"human_name"`
	TfvcProject OptString `json:"tfvc_project"`
	Vcs         OptString `json:"vcs"`
}

type ImportStatus string

const (
	ImportStatusAuth                   ImportStatus = "auth"
	ImportStatusError                  ImportStatus = "error"
	ImportStatusNone                   ImportStatus = "none"
	ImportStatusDetecting              ImportStatus = "detecting"
	ImportStatusChoose                 ImportStatus = "choose"
	ImportStatusAuthFailed             ImportStatus = "auth_failed"
	ImportStatusImporting              ImportStatus = "importing"
	ImportStatusMapping                ImportStatus = "mapping"
	ImportStatusWaitingToPush          ImportStatus = "waiting_to_push"
	ImportStatusPushing                ImportStatus = "pushing"
	ImportStatusComplete               ImportStatus = "complete"
	ImportStatusSetup                  ImportStatus = "setup"
	ImportStatusUnknown                ImportStatus = "unknown"
	ImportStatusDetectionFoundMultiple ImportStatus = "detection_found_multiple"
	ImportStatusDetectionFoundNothing  ImportStatus = "detection_found_nothing"
	ImportStatusDetectionNeedsAuth     ImportStatus = "detection_needs_auth"
)

type InstallationTokenRepositorySelection string

const (
	InstallationTokenRepositorySelectionAll      InstallationTokenRepositorySelection = "all"
	InstallationTokenRepositorySelectionSelected InstallationTokenRepositorySelection = "selected"
)

type IntegrationPermissions struct {
	Checks      OptString `json:"checks"`
	Contents    OptString `json:"contents"`
	Deployments OptString `json:"deployments"`
	Issues      OptString `json:"issues"`
	Metadata    OptString `json:"metadata"`
}

type InteractionsRemoveRestrictionsForAuthenticatedUser struct{}

type InteractionsRemoveRestrictionsForOrg struct{}

type InteractionsRemoveRestrictionsForRepoConflict struct{}

func (*InteractionsRemoveRestrictionsForRepoConflict) interactionsRemoveRestrictionsForRepoRes() {}

type InteractionsRemoveRestrictionsForRepoNoContent struct{}

func (*InteractionsRemoveRestrictionsForRepoNoContent) interactionsRemoveRestrictionsForRepoRes() {}

type InteractionsSetRestrictionsForRepoConflict struct{}

func (*InteractionsSetRestrictionsForRepoConflict) interactionsSetRestrictionsForRepoRes() {}

type IssuesAddAssigneesApplicationJSONReq struct {
	Assignees []string `json:"assignees"`
}

func (*IssuesAddAssigneesApplicationJSONReq) issuesAddAssigneesReq() {}

type IssuesCheckUserCanBeAssignedNoContent struct{}

func (*IssuesCheckUserCanBeAssignedNoContent) issuesCheckUserCanBeAssignedRes() {}

type IssuesCreateCommentApplicationJSONReq struct {
	Body string `json:"body"`
}

func (*IssuesCreateCommentApplicationJSONReq) issuesCreateCommentReq() {}

type IssuesCreateLabelApplicationJSONReq struct {
	Color       OptString `json:"color"`
	Description OptString `json:"description"`
	Name        string    `json:"name"`
}

func (*IssuesCreateLabelApplicationJSONReq) issuesCreateLabelReq() {}

type IssuesCreateMilestoneApplicationJSONReq struct {
	Description OptString                                       `json:"description"`
	DueOn       OptTime                                         `json:"due_on"`
	State       OptIssuesCreateMilestoneApplicationJSONReqState `json:"state"`
	Title       string                                          `json:"title"`
}

func (*IssuesCreateMilestoneApplicationJSONReq) issuesCreateMilestoneReq() {}

type IssuesCreateMilestoneApplicationJSONReqState string

const (
	IssuesCreateMilestoneApplicationJSONReqStateOpen   IssuesCreateMilestoneApplicationJSONReqState = "open"
	IssuesCreateMilestoneApplicationJSONReqStateClosed IssuesCreateMilestoneApplicationJSONReqState = "closed"
)

type IssuesDeleteComment struct{}

type IssuesDeleteLabel struct{}

type IssuesDeleteMilestoneNoContent struct{}

func (*IssuesDeleteMilestoneNoContent) issuesDeleteMilestoneRes() {}

type IssuesListAssigneesOK []SimpleUser

func (*IssuesListAssigneesOK) issuesListAssigneesRes() {}

type IssuesListCommentsApplicationJSONGone BasicError

func (*IssuesListCommentsApplicationJSONGone) issuesListCommentsRes() {}

type IssuesListCommentsApplicationJSONNotFound BasicError

func (*IssuesListCommentsApplicationJSONNotFound) issuesListCommentsRes() {}

type IssuesListCommentsOK []IssueComment

func (*IssuesListCommentsOK) issuesListCommentsRes() {}

type IssuesListLabelsForRepoOK []Label

func (*IssuesListLabelsForRepoOK) issuesListLabelsForRepoRes() {}

type IssuesListLabelsOnIssueOK []Label

func (*IssuesListLabelsOnIssueOK) issuesListLabelsOnIssueRes() {}

type IssuesLockApplicationJSONReq struct {
	LockReason OptIssuesLockApplicationJSONReqLockReason `json:"lock_reason"`
}

func (*IssuesLockApplicationJSONReq) issuesLockReq() {}

type IssuesLockApplicationJSONReqLockReason string

const (
	IssuesLockApplicationJSONReqLockReasonOffMinusTopic IssuesLockApplicationJSONReqLockReason = "off-topic"
	IssuesLockApplicationJSONReqLockReasonTooHeated     IssuesLockApplicationJSONReqLockReason = "too heated"
	IssuesLockApplicationJSONReqLockReasonResolved      IssuesLockApplicationJSONReqLockReason = "resolved"
	IssuesLockApplicationJSONReqLockReasonSpam          IssuesLockApplicationJSONReqLockReason = "spam"
)

type IssuesLockNoContent struct{}

type IssuesRemoveAllLabelsNoContent struct{}

func (*IssuesRemoveAllLabelsNoContent) issuesRemoveAllLabelsRes() {}

type IssuesRemoveAssigneesApplicationJSONReq struct {
	Assignees []string `json:"assignees"`
}

func (*IssuesRemoveAssigneesApplicationJSONReq) issuesRemoveAssigneesReq() {}

type IssuesRemoveLabelApplicationJSONGone BasicError

func (*IssuesRemoveLabelApplicationJSONGone) issuesRemoveLabelRes() {}

type IssuesRemoveLabelApplicationJSONNotFound BasicError

func (*IssuesRemoveLabelApplicationJSONNotFound) issuesRemoveLabelRes() {}

type IssuesRemoveLabelOK []Label

func (*IssuesRemoveLabelOK) issuesRemoveLabelRes() {}

type IssuesUnlockApplicationJSONForbidden BasicError

func (*IssuesUnlockApplicationJSONForbidden) issuesUnlockRes() {}

type IssuesUnlockApplicationJSONNotFound BasicError

func (*IssuesUnlockApplicationJSONNotFound) issuesUnlockRes() {}

type IssuesUnlockNoContent struct{}

func (*IssuesUnlockNoContent) issuesUnlockRes() {}

type IssuesUpdateCommentApplicationJSONReq struct {
	Body string `json:"body"`
}

func (*IssuesUpdateCommentApplicationJSONReq) issuesUpdateCommentReq() {}

type IssuesUpdateLabelApplicationJSONReq struct {
	Color       OptString `json:"color"`
	Description OptString `json:"description"`
	NewName     OptString `json:"new_name"`
}

type IssuesUpdateMilestoneApplicationJSONReq struct {
	Description OptString                                       `json:"description"`
	DueOn       OptTime                                         `json:"due_on"`
	State       OptIssuesUpdateMilestoneApplicationJSONReqState `json:"state"`
	Title       OptString                                       `json:"title"`
}

type IssuesUpdateMilestoneApplicationJSONReqState string

const (
	IssuesUpdateMilestoneApplicationJSONReqStateOpen   IssuesUpdateMilestoneApplicationJSONReqState = "open"
	IssuesUpdateMilestoneApplicationJSONReqStateClosed IssuesUpdateMilestoneApplicationJSONReqState = "closed"
)

type JobStatus string

const (
	JobStatusQueued     JobStatus = "queued"
	JobStatusInProgress JobStatus = "in_progress"
	JobStatusCompleted  JobStatus = "completed"
)

type JobStepsItem struct {
	CompletedAt OptNilTime         `json:"completed_at"`
	Conclusion  NilString          `json:"conclusion"`
	Name        string             `json:"name"`
	Number      int                `json:"number"`
	StartedAt   OptNilTime         `json:"started_at"`
	Status      JobStepsItemStatus `json:"status"`
}

type JobStepsItemStatus string

const (
	JobStepsItemStatusQueued     JobStepsItemStatus = "queued"
	JobStepsItemStatusInProgress JobStepsItemStatus = "in_progress"
	JobStepsItemStatusCompleted  JobStepsItemStatus = "completed"
)

type LicenseContentLinks struct {
	Git  NilURL  `json:"git"`
	HTML NilURL  `json:"html"`
	Self url.URL `json:"self"`
}

type LicensesGetAllCommonlyUsedOK []LicenseSimple

func (*LicensesGetAllCommonlyUsedOK) licensesGetAllCommonlyUsedRes() {}

type LicensesGetApplicationJSONForbidden BasicError

func (*LicensesGetApplicationJSONForbidden) licensesGetRes() {}

type LicensesGetApplicationJSONNotFound BasicError

func (*LicensesGetApplicationJSONNotFound) licensesGetRes() {}

type MarkdownRenderApplicationJSONReq struct {
	Context OptString                               `json:"context"`
	Mode    OptMarkdownRenderApplicationJSONReqMode `json:"mode"`
	Text    string                                  `json:"text"`
}

func (*MarkdownRenderApplicationJSONReq) markdownRenderReq() {}

type MarkdownRenderApplicationJSONReqMode string

const (
	MarkdownRenderApplicationJSONReqModeMarkdown MarkdownRenderApplicationJSONReqMode = "markdown"
	MarkdownRenderApplicationJSONReqModeGfm      MarkdownRenderApplicationJSONReqMode = "gfm"
)

type MarketplacePurchaseMarketplacePendingChange struct {
	EffectiveDate OptString                 `json:"effective_date"`
	ID            OptInt                    `json:"id"`
	IsInstalled   OptBool                   `json:"is_installed"`
	Plan          OptMarketplaceListingPlan `json:"plan"`
	UnitCount     OptNilInt                 `json:"unit_count"`
}

type MarketplacePurchaseMarketplacePurchase struct {
	BillingCycle    OptString                 `json:"billing_cycle"`
	FreeTrialEndsOn OptNilString              `json:"free_trial_ends_on"`
	IsInstalled     OptBool                   `json:"is_installed"`
	NextBillingDate OptNilString              `json:"next_billing_date"`
	OnFreeTrial     OptBool                   `json:"on_free_trial"`
	Plan            OptMarketplaceListingPlan `json:"plan"`
	UnitCount       OptNilInt                 `json:"unit_count"`
	UpdatedAt       OptString                 `json:"updated_at"`
}

type MergedUpstreamMergeType string

const (
	MergedUpstreamMergeTypeMerge            MergedUpstreamMergeType = "merge"
	MergedUpstreamMergeTypeFastMinusForward MergedUpstreamMergeType = "fast-forward"
	MergedUpstreamMergeTypeNone             MergedUpstreamMergeType = "none"
)

type MetaRoot struct {
	AuthorizationsURL                string    `json:"authorizations_url"`
	CodeSearchURL                    string    `json:"code_search_url"`
	CommitSearchURL                  string    `json:"commit_search_url"`
	CurrentUserAuthorizationsHTMLURL string    `json:"current_user_authorizations_html_url"`
	CurrentUserRepositoriesURL       string    `json:"current_user_repositories_url"`
	CurrentUserURL                   string    `json:"current_user_url"`
	EmailsURL                        string    `json:"emails_url"`
	EmojisURL                        string    `json:"emojis_url"`
	EventsURL                        string    `json:"events_url"`
	FeedsURL                         string    `json:"feeds_url"`
	FollowersURL                     string    `json:"followers_url"`
	FollowingURL                     string    `json:"following_url"`
	GistsURL                         string    `json:"gists_url"`
	HubURL                           string    `json:"hub_url"`
	IssueSearchURL                   string    `json:"issue_search_url"`
	IssuesURL                        string    `json:"issues_url"`
	KeysURL                          string    `json:"keys_url"`
	LabelSearchURL                   string    `json:"label_search_url"`
	NotificationsURL                 string    `json:"notifications_url"`
	OrganizationRepositoriesURL      string    `json:"organization_repositories_url"`
	OrganizationTeamsURL             string    `json:"organization_teams_url"`
	OrganizationURL                  string    `json:"organization_url"`
	PublicGistsURL                   string    `json:"public_gists_url"`
	RateLimitURL                     string    `json:"rate_limit_url"`
	RepositorySearchURL              string    `json:"repository_search_url"`
	RepositoryURL                    string    `json:"repository_url"`
	StarredGistsURL                  string    `json:"starred_gists_url"`
	StarredURL                       string    `json:"starred_url"`
	TopicSearchURL                   OptString `json:"topic_search_url"`
	UserOrganizationsURL             string    `json:"user_organizations_url"`
	UserRepositoriesURL              string    `json:"user_repositories_url"`
	UserSearchURL                    string    `json:"user_search_url"`
	UserURL                          string    `json:"user_url"`
}

type MigrationsCancelImport struct{}

type MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONForbidden) migrationsDeleteArchiveForAuthenticatedUserRes() {
}

type MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONNotFound BasicError

func (*MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONNotFound) migrationsDeleteArchiveForAuthenticatedUserRes() {
}

type MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsDeleteArchiveForAuthenticatedUserApplicationJSONUnauthorized) migrationsDeleteArchiveForAuthenticatedUserRes() {
}

type MigrationsDeleteArchiveForAuthenticatedUserNoContent struct{}

func (*MigrationsDeleteArchiveForAuthenticatedUserNoContent) migrationsDeleteArchiveForAuthenticatedUserRes() {
}

type MigrationsDeleteArchiveForOrgNoContent struct{}

func (*MigrationsDeleteArchiveForOrgNoContent) migrationsDeleteArchiveForOrgRes() {}

type MigrationsDownloadArchiveForOrgFound struct{}

func (*MigrationsDownloadArchiveForOrgFound) migrationsDownloadArchiveForOrgRes() {}

type MigrationsGetArchiveForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsGetArchiveForAuthenticatedUserApplicationJSONForbidden) migrationsGetArchiveForAuthenticatedUserRes() {
}

type MigrationsGetArchiveForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsGetArchiveForAuthenticatedUserApplicationJSONUnauthorized) migrationsGetArchiveForAuthenticatedUserRes() {
}

type MigrationsGetArchiveForAuthenticatedUserFound struct{}

func (*MigrationsGetArchiveForAuthenticatedUserFound) migrationsGetArchiveForAuthenticatedUserRes() {}

type MigrationsGetCommitAuthorsOK []PorterAuthor

func (*MigrationsGetCommitAuthorsOK) migrationsGetCommitAuthorsRes() {}

type MigrationsGetStatusForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsGetStatusForAuthenticatedUserApplicationJSONForbidden) migrationsGetStatusForAuthenticatedUserRes() {
}

type MigrationsGetStatusForAuthenticatedUserApplicationJSONNotFound BasicError

func (*MigrationsGetStatusForAuthenticatedUserApplicationJSONNotFound) migrationsGetStatusForAuthenticatedUserRes() {
}

type MigrationsGetStatusForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsGetStatusForAuthenticatedUserApplicationJSONUnauthorized) migrationsGetStatusForAuthenticatedUserRes() {
}

type MigrationsGetStatusForOrgExcludeItem string

const (
	MigrationsGetStatusForOrgExcludeItemRepositories MigrationsGetStatusForOrgExcludeItem = "repositories"
)

type MigrationsListForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsListForAuthenticatedUserApplicationJSONForbidden) migrationsListForAuthenticatedUserRes() {
}

type MigrationsListForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsListForAuthenticatedUserApplicationJSONUnauthorized) migrationsListForAuthenticatedUserRes() {
}

type MigrationsListForAuthenticatedUserOK []Migration

func (*MigrationsListForAuthenticatedUserOK) migrationsListForAuthenticatedUserRes() {}

type MigrationsListForOrgExcludeItem string

const (
	MigrationsListForOrgExcludeItemRepositories MigrationsListForOrgExcludeItem = "repositories"
)

type MigrationsListReposForOrgOK []MinimalRepository

func (*MigrationsListReposForOrgOK) migrationsListReposForOrgRes() {}

type MigrationsListReposForUserOK []MinimalRepository

func (*MigrationsListReposForUserOK) migrationsListReposForUserRes() {}

type MigrationsMapCommitAuthorApplicationJSONReq struct {
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

func (*MigrationsMapCommitAuthorApplicationJSONReq) migrationsMapCommitAuthorReq() {}

type MigrationsSetLfsPreferenceApplicationJSONReq struct {
	UseLfs MigrationsSetLfsPreferenceApplicationJSONReqUseLfs `json:"use_lfs"`
}

func (*MigrationsSetLfsPreferenceApplicationJSONReq) migrationsSetLfsPreferenceReq() {}

type MigrationsSetLfsPreferenceApplicationJSONReqUseLfs string

const (
	MigrationsSetLfsPreferenceApplicationJSONReqUseLfsOptIn  MigrationsSetLfsPreferenceApplicationJSONReqUseLfs = "opt_in"
	MigrationsSetLfsPreferenceApplicationJSONReqUseLfsOptOut MigrationsSetLfsPreferenceApplicationJSONReqUseLfs = "opt_out"
)

type MigrationsStartForAuthenticatedUserApplicationJSONReq struct {
	Exclude              []MigrationsStartForAuthenticatedUserApplicationJSONReqExcludeItem `json:"exclude"`
	ExcludeAttachments   OptBool                                                            `json:"exclude_attachments"`
	ExcludeOwnerProjects OptBool                                                            `json:"exclude_owner_projects"`
	ExcludeReleases      OptBool                                                            `json:"exclude_releases"`
	LockRepositories     OptBool                                                            `json:"lock_repositories"`
	Repositories         []string                                                           `json:"repositories"`
}

func (*MigrationsStartForAuthenticatedUserApplicationJSONReq) migrationsStartForAuthenticatedUserReq() {
}

type MigrationsStartForAuthenticatedUserApplicationJSONReqExcludeItem string

const (
	MigrationsStartForAuthenticatedUserApplicationJSONReqExcludeItemRepositories MigrationsStartForAuthenticatedUserApplicationJSONReqExcludeItem = "repositories"
)

type MigrationsStartForOrgApplicationJSONReq struct {
	Exclude              []MigrationsStartForOrgApplicationJSONReqExcludeItem `json:"exclude"`
	ExcludeAttachments   OptBool                                              `json:"exclude_attachments"`
	ExcludeOwnerProjects OptBool                                              `json:"exclude_owner_projects"`
	ExcludeReleases      OptBool                                              `json:"exclude_releases"`
	LockRepositories     OptBool                                              `json:"lock_repositories"`
	Repositories         []string                                             `json:"repositories"`
}

func (*MigrationsStartForOrgApplicationJSONReq) migrationsStartForOrgReq() {}

type MigrationsStartForOrgApplicationJSONReqExcludeItem string

const (
	MigrationsStartForOrgApplicationJSONReqExcludeItemRepositories MigrationsStartForOrgApplicationJSONReqExcludeItem = "repositories"
)

type MigrationsStartImportApplicationJSONReq struct {
	TfvcProject OptString                                     `json:"tfvc_project"`
	Vcs         OptMigrationsStartImportApplicationJSONReqVcs `json:"vcs"`
	VcsPassword OptString                                     `json:"vcs_password"`
	VcsURL      string                                        `json:"vcs_url"`
	VcsUsername OptString                                     `json:"vcs_username"`
}

func (*MigrationsStartImportApplicationJSONReq) migrationsStartImportReq() {}

type MigrationsStartImportApplicationJSONReqVcs string

const (
	MigrationsStartImportApplicationJSONReqVcsSubversion MigrationsStartImportApplicationJSONReqVcs = "subversion"
	MigrationsStartImportApplicationJSONReqVcsGit        MigrationsStartImportApplicationJSONReqVcs = "git"
	MigrationsStartImportApplicationJSONReqVcsMercurial  MigrationsStartImportApplicationJSONReqVcs = "mercurial"
	MigrationsStartImportApplicationJSONReqVcsTfvc       MigrationsStartImportApplicationJSONReqVcs = "tfvc"
)

type MigrationsUnlockRepoForAuthenticatedUserApplicationJSONForbidden BasicError

func (*MigrationsUnlockRepoForAuthenticatedUserApplicationJSONForbidden) migrationsUnlockRepoForAuthenticatedUserRes() {
}

type MigrationsUnlockRepoForAuthenticatedUserApplicationJSONNotFound BasicError

func (*MigrationsUnlockRepoForAuthenticatedUserApplicationJSONNotFound) migrationsUnlockRepoForAuthenticatedUserRes() {
}

type MigrationsUnlockRepoForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*MigrationsUnlockRepoForAuthenticatedUserApplicationJSONUnauthorized) migrationsUnlockRepoForAuthenticatedUserRes() {
}

type MigrationsUnlockRepoForAuthenticatedUserNoContent struct{}

func (*MigrationsUnlockRepoForAuthenticatedUserNoContent) migrationsUnlockRepoForAuthenticatedUserRes() {
}

type MigrationsUnlockRepoForOrgNoContent struct{}

func (*MigrationsUnlockRepoForOrgNoContent) migrationsUnlockRepoForOrgRes() {}

type MigrationsUpdateImportApplicationJSONReq struct {
	TfvcProject OptString `json:"tfvc_project"`
	Vcs         OptString `json:"vcs"`
	VcsPassword OptString `json:"vcs_password"`
	VcsUsername OptString `json:"vcs_username"`
}

type MilestoneState string

const (
	MilestoneStateOpen   MilestoneState = "open"
	MilestoneStateClosed MilestoneState = "closed"
)

type MinimalRepositoryLicense struct {
	Key    OptString `json:"key"`
	Name   OptString `json:"name"`
	NodeID OptString `json:"node_id"`
	SpdxID OptString `json:"spdx_id"`
	URL    OptString `json:"url"`
}

type MinimalRepositoryPermissions struct {
	Admin    OptBool `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     OptBool `json:"pull"`
	Push     OptBool `json:"push"`
	Triage   OptBool `json:"triage"`
}

// NewNilBool returns new NilBool with value set to v.
func NewNilBool(v bool) NilBool {
	return NilBool{
		Value: v,
	}
}

// NilBool is nullable bool.
type NilBool struct {
	Value bool
	Null  bool
}

// SetTo sets value to v.
func (o *NilBool) SetTo(v bool) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilBool) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilCheckRunCheckSuite returns new NilCheckRunCheckSuite with value set to v.
func NewNilCheckRunCheckSuite(v CheckRunCheckSuite) NilCheckRunCheckSuite {
	return NilCheckRunCheckSuite{
		Value: v,
	}
}

// NilCheckRunCheckSuite is nullable CheckRunCheckSuite.
type NilCheckRunCheckSuite struct {
	Value CheckRunCheckSuite
	Null  bool
}

// SetTo sets value to v.
func (o *NilCheckRunCheckSuite) SetTo(v CheckRunCheckSuite) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilCheckRunCheckSuite) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilCheckRunCheckSuite) Get() (v CheckRunCheckSuite, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilCheckRunConclusion returns new NilCheckRunConclusion with value set to v.
func NewNilCheckRunConclusion(v CheckRunConclusion) NilCheckRunConclusion {
	return NilCheckRunConclusion{
		Value: v,
	}
}

// NilCheckRunConclusion is nullable CheckRunConclusion.
type NilCheckRunConclusion struct {
	Value CheckRunConclusion
	Null  bool
}

// SetTo sets value to v.
func (o *NilCheckRunConclusion) SetTo(v CheckRunConclusion) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilCheckRunConclusion) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilCheckRunConclusion) Get() (v CheckRunConclusion, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilCheckSuiteConclusion returns new NilCheckSuiteConclusion with value set to v.
func NewNilCheckSuiteConclusion(v CheckSuiteConclusion) NilCheckSuiteConclusion {
	return NilCheckSuiteConclusion{
		Value: v,
	}
}

// NilCheckSuiteConclusion is nullable CheckSuiteConclusion.
type NilCheckSuiteConclusion struct {
	Value CheckSuiteConclusion
	Null  bool
}

// SetTo sets value to v.
func (o *NilCheckSuiteConclusion) SetTo(v CheckSuiteConclusion) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilCheckSuiteConclusion) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilCheckSuiteConclusion) Get() (v CheckSuiteConclusion, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilCheckSuiteStatus returns new NilCheckSuiteStatus with value set to v.
func NewNilCheckSuiteStatus(v CheckSuiteStatus) NilCheckSuiteStatus {
	return NilCheckSuiteStatus{
		Value: v,
	}
}

// NilCheckSuiteStatus is nullable CheckSuiteStatus.
type NilCheckSuiteStatus struct {
	Value CheckSuiteStatus
	Null  bool
}

// SetTo sets value to v.
func (o *NilCheckSuiteStatus) SetTo(v CheckSuiteStatus) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilCheckSuiteStatus) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilCheckSuiteStatus) Get() (v CheckSuiteStatus, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilFileCommitContent returns new NilFileCommitContent with value set to v.
func NewNilFileCommitContent(v FileCommitContent) NilFileCommitContent {
	return NilFileCommitContent{
		Value: v,
	}
}

// NilFileCommitContent is nullable FileCommitContent.
type NilFileCommitContent struct {
	Value FileCommitContent
	Null  bool
}

// SetTo sets value to v.
func (o *NilFileCommitContent) SetTo(v FileCommitContent) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilFileCommitContent) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilFileCommitContent) Get() (v FileCommitContent, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilInt returns new NilInt with value set to v.
func NewNilInt(v int) NilInt {
	return NilInt{
		Value: v,
	}
}

// NilInt is nullable int.
type NilInt struct {
	Value int
	Null  bool
}

// SetTo sets value to v.
func (o *NilInt) SetTo(v int) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilInt) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilNullableSimpleCommitAuthor returns new NilNullableSimpleCommitAuthor with value set to v.
func NewNilNullableSimpleCommitAuthor(v NullableSimpleCommitAuthor) NilNullableSimpleCommitAuthor {
	return NilNullableSimpleCommitAuthor{
		Value: v,
	}
}

// NilNullableSimpleCommitAuthor is nullable NullableSimpleCommitAuthor.
type NilNullableSimpleCommitAuthor struct {
	Value NullableSimpleCommitAuthor
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableSimpleCommitAuthor) SetTo(v NullableSimpleCommitAuthor) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableSimpleCommitAuthor) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableSimpleCommitAuthor) Get() (v NullableSimpleCommitAuthor, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilNullableSimpleCommitCommitter returns new NilNullableSimpleCommitCommitter with value set to v.
func NewNilNullableSimpleCommitCommitter(v NullableSimpleCommitCommitter) NilNullableSimpleCommitCommitter {
	return NilNullableSimpleCommitCommitter{
		Value: v,
	}
}

// NilNullableSimpleCommitCommitter is nullable NullableSimpleCommitCommitter.
type NilNullableSimpleCommitCommitter struct {
	Value NullableSimpleCommitCommitter
	Null  bool
}

// SetTo sets value to v.
func (o *NilNullableSimpleCommitCommitter) SetTo(v NullableSimpleCommitCommitter) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilNullableSimpleCommitCommitter) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilNullableSimpleCommitCommitter) Get() (v NullableSimpleCommitCommitter, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilPageStatus returns new NilPageStatus with value set to v.
func NewNilPageStatus(v PageStatus) NilPageStatus {
	return NilPageStatus{
		Value: v,
	}
}

// NilPageStatus is nullable PageStatus.
type NilPageStatus struct {
	Value PageStatus
	Null  bool
}

// SetTo sets value to v.
func (o *NilPageStatus) SetTo(v PageStatus) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilPageStatus) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilPageStatus) Get() (v PageStatus, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews returns new NilReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews with value set to v.
func NewNilReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews(v ReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews) NilReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews {
	return NilReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews{
		Value: v,
	}
}

// NilReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews is nullable ReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews.
type NilReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews struct {
	Value ReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews
	Null  bool
}

// SetTo sets value to v.
func (o *NilReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews) SetTo(v ReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews) IsNull() bool {
	return o.Null
}

// Get returns value and boolean that denotes whether value was set.
func (o NilReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews) Get() (v ReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks returns new NilReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks with value set to v.
func NewNilReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks(v ReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks) NilReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks {
	return NilReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks{
		Value: v,
	}
}

// NilReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks is nullable ReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks.
type NilReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks struct {
	Value ReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks
	Null  bool
}

// SetTo sets value to v.
func (o *NilReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks) SetTo(v ReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks) IsNull() bool {
	return o.Null
}

// Get returns value and boolean that denotes whether value was set.
func (o NilReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks) Get() (v ReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilReposUpdateBranchProtectionApplicationJSONReqRestrictions returns new NilReposUpdateBranchProtectionApplicationJSONReqRestrictions with value set to v.
func NewNilReposUpdateBranchProtectionApplicationJSONReqRestrictions(v ReposUpdateBranchProtectionApplicationJSONReqRestrictions) NilReposUpdateBranchProtectionApplicationJSONReqRestrictions {
	return NilReposUpdateBranchProtectionApplicationJSONReqRestrictions{
		Value: v,
	}
}

// NilReposUpdateBranchProtectionApplicationJSONReqRestrictions is nullable ReposUpdateBranchProtectionApplicationJSONReqRestrictions.
type NilReposUpdateBranchProtectionApplicationJSONReqRestrictions struct {
	Value ReposUpdateBranchProtectionApplicationJSONReqRestrictions
	Null  bool
}

// SetTo sets value to v.
func (o *NilReposUpdateBranchProtectionApplicationJSONReqRestrictions) SetTo(v ReposUpdateBranchProtectionApplicationJSONReqRestrictions) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilReposUpdateBranchProtectionApplicationJSONReqRestrictions) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilReposUpdateBranchProtectionApplicationJSONReqRestrictions) Get() (v ReposUpdateBranchProtectionApplicationJSONReqRestrictions, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilSimpleCommitAuthor returns new NilSimpleCommitAuthor with value set to v.
func NewNilSimpleCommitAuthor(v SimpleCommitAuthor) NilSimpleCommitAuthor {
	return NilSimpleCommitAuthor{
		Value: v,
	}
}

// NilSimpleCommitAuthor is nullable SimpleCommitAuthor.
type NilSimpleCommitAuthor struct {
	Value SimpleCommitAuthor
	Null  bool
}

// SetTo sets value to v.
func (o *NilSimpleCommitAuthor) SetTo(v SimpleCommitAuthor) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilSimpleCommitAuthor) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilSimpleCommitAuthor) Get() (v SimpleCommitAuthor, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilSimpleCommitCommitter returns new NilSimpleCommitCommitter with value set to v.
func NewNilSimpleCommitCommitter(v SimpleCommitCommitter) NilSimpleCommitCommitter {
	return NilSimpleCommitCommitter{
		Value: v,
	}
}

// NilSimpleCommitCommitter is nullable SimpleCommitCommitter.
type NilSimpleCommitCommitter struct {
	Value SimpleCommitCommitter
	Null  bool
}

// SetTo sets value to v.
func (o *NilSimpleCommitCommitter) SetTo(v SimpleCommitCommitter) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilSimpleCommitCommitter) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilSimpleCommitCommitter) Get() (v SimpleCommitCommitter, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilTime returns new NilTime with value set to v.
func NewNilTime(v time.Time) NilTime {
	return NilTime{
		Value: v,
	}
}

// NilTime is nullable time.Time.
type NilTime struct {
	Value time.Time
	Null  bool
}

// SetTo sets value to v.
func (o *NilTime) SetTo(v time.Time) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilTime) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// NewNilURL returns new NilURL with value set to v.
func NewNilURL(v url.URL) NilURL {
	return NilURL{
		Value: v,
	}
}

// NilURL is nullable url.URL.
type NilURL struct {
	Value url.URL
	Null  bool
}

// SetTo sets value to v.
func (o *NilURL) SetTo(v url.URL) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilURL) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilURL) Get() (v url.URL, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

type NoContent struct{}

func (*NoContent) reposGetCodeFrequencyStatsRes()  {}
func (*NoContent) reposGetCommitActivityStatsRes() {}
func (*NoContent) reposGetContributorsStatsRes()   {}
func (*NoContent) reposGetPunchCardStatsRes()      {}

type NotModified struct{}

func (*NotModified) activityCheckRepoIsStarredByAuthenticatedUserRes()     {}
func (*NotModified) activityDeleteThreadSubscriptionRes()                  {}
func (*NotModified) activityGetThreadRes()                                 {}
func (*NotModified) activityGetThreadSubscriptionForAuthenticatedUserRes() {}
func (*NotModified) activityListWatchedReposForAuthenticatedUserRes()      {}
func (*NotModified) activityMarkNotificationsAsReadRes()                   {}
func (*NotModified) activityMarkThreadAsReadRes()                          {}
func (*NotModified) activitySetThreadSubscriptionRes()                     {}
func (*NotModified) activityStarRepoForAuthenticatedUserRes()              {}
func (*NotModified) activityUnstarRepoForAuthenticatedUserRes()            {}
func (*NotModified) appsAddRepoToInstallationRes()                         {}
func (*NotModified) appsListInstallationReposForAuthenticatedUserRes()     {}
func (*NotModified) appsListReposAccessibleToInstallationRes()             {}
func (*NotModified) appsListSubscriptionsForAuthenticatedUserRes()         {}
func (*NotModified) appsListSubscriptionsForAuthenticatedUserStubbedRes()  {}
func (*NotModified) appsRemoveRepoFromInstallationRes()                    {}
func (*NotModified) codesOfConductGetAllCodesOfConductRes()                {}
func (*NotModified) codesOfConductGetConductCodeRes()                      {}
func (*NotModified) emojisGetRes()                                         {}
func (*NotModified) gistsCheckIsStarredRes()                               {}
func (*NotModified) gistsCreateCommentRes()                                {}
func (*NotModified) gistsDeleteCommentRes()                                {}
func (*NotModified) gistsDeleteRes()                                       {}
func (*NotModified) gistsGetCommentRes()                                   {}
func (*NotModified) gistsListCommentsRes()                                 {}
func (*NotModified) gistsListCommitsRes()                                  {}
func (*NotModified) gistsListRes()                                         {}
func (*NotModified) gistsListStarredRes()                                  {}
func (*NotModified) gistsStarRes()                                         {}
func (*NotModified) gistsUnstarRes()                                       {}
func (*NotModified) gitignoreGetAllTemplatesRes()                          {}
func (*NotModified) gitignoreGetTemplateRes()                              {}
func (*NotModified) licensesGetAllCommonlyUsedRes()                        {}
func (*NotModified) licensesGetRes()                                       {}
func (*NotModified) metaGetRes()                                           {}
func (*NotModified) migrationsDeleteArchiveForAuthenticatedUserRes()       {}
func (*NotModified) migrationsGetArchiveForAuthenticatedUserRes()          {}
func (*NotModified) migrationsGetStatusForAuthenticatedUserRes()           {}
func (*NotModified) migrationsListForAuthenticatedUserRes()                {}
func (*NotModified) migrationsUnlockRepoForAuthenticatedUserRes()          {}
func (*NotModified) oAuthAuthorizationsDeleteAuthorizationRes()            {}
func (*NotModified) oAuthAuthorizationsDeleteGrantRes()                    {}
func (*NotModified) oAuthAuthorizationsGetAuthorizationRes()               {}
func (*NotModified) oAuthAuthorizationsGetGrantRes()                       {}
func (*NotModified) oAuthAuthorizationsListAuthorizationsRes()             {}
func (*NotModified) oAuthAuthorizationsListGrantsRes()                     {}
func (*NotModified) orgsListForAuthenticatedUserRes()                      {}
func (*NotModified) orgsListRes()                                          {}
func (*NotModified) projectsCreateColumnRes()                              {}
func (*NotModified) projectsCreateForAuthenticatedUserRes()                {}
func (*NotModified) projectsDeleteCardRes()                                {}
func (*NotModified) projectsDeleteColumnRes()                              {}
func (*NotModified) projectsDeleteRes()                                    {}
func (*NotModified) projectsGetCardRes()                                   {}
func (*NotModified) projectsGetColumnRes()                                 {}
func (*NotModified) projectsGetRes()                                       {}
func (*NotModified) projectsListColumnsRes()                               {}
func (*NotModified) projectsMoveColumnRes()                                {}
func (*NotModified) projectsUpdateCardRes()                                {}
func (*NotModified) projectsUpdateColumnRes()                              {}
func (*NotModified) projectsUpdateRes()                                    {}
func (*NotModified) rateLimitGetRes()                                      {}
func (*NotModified) reactionsDeleteLegacyRes()                             {}
func (*NotModified) reposAcceptInvitationRes()                             {}
func (*NotModified) reposDeclineInvitationRes()                            {}
func (*NotModified) reposListInvitationsForAuthenticatedUserRes()          {}
func (*NotModified) scimDeleteUserFromOrgRes()                             {}
func (*NotModified) teamsListForAuthenticatedUserRes()                     {}
func (*NotModified) usersCheckBlockedRes()                                 {}
func (*NotModified) usersCheckPersonIsFollowedByAuthenticatedRes()         {}
func (*NotModified) usersDeletePublicSSHKeyForAuthenticatedRes()           {}
func (*NotModified) usersFollowRes()                                       {}
func (*NotModified) usersGetGpgKeyForAuthenticatedRes()                    {}
func (*NotModified) usersGetPublicSSHKeyForAuthenticatedRes()              {}
func (*NotModified) usersListBlockedByAuthenticatedRes()                   {}
func (*NotModified) usersListEmailsForAuthenticatedRes()                   {}
func (*NotModified) usersListFollowedByAuthenticatedRes()                  {}
func (*NotModified) usersListFollowersForAuthenticatedUserRes()            {}
func (*NotModified) usersListGpgKeysForAuthenticatedRes()                  {}
func (*NotModified) usersListPublicEmailsForAuthenticatedRes()             {}
func (*NotModified) usersListPublicSSHKeysForAuthenticatedRes()            {}
func (*NotModified) usersListRes()                                         {}
func (*NotModified) usersUnblockRes()                                      {}
func (*NotModified) usersUnfollowRes()                                     {}

type NullableIntegrationPermissions struct {
	Checks      OptString `json:"checks"`
	Contents    OptString `json:"contents"`
	Deployments OptString `json:"deployments"`
	Issues      OptString `json:"issues"`
	Metadata    OptString `json:"metadata"`
}

type NullableRepositoryPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

type NullableRepositoryTemplateRepository struct {
	AllowAutoMerge      OptBool                                            `json:"allow_auto_merge"`
	AllowMergeCommit    OptBool                                            `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                                            `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                                            `json:"allow_squash_merge"`
	ArchiveURL          OptString                                          `json:"archive_url"`
	Archived            OptBool                                            `json:"archived"`
	AssigneesURL        OptString                                          `json:"assignees_url"`
	BlobsURL            OptString                                          `json:"blobs_url"`
	BranchesURL         OptString                                          `json:"branches_url"`
	CloneURL            OptString                                          `json:"clone_url"`
	CollaboratorsURL    OptString                                          `json:"collaborators_url"`
	CommentsURL         OptString                                          `json:"comments_url"`
	CommitsURL          OptString                                          `json:"commits_url"`
	CompareURL          OptString                                          `json:"compare_url"`
	ContentsURL         OptString                                          `json:"contents_url"`
	ContributorsURL     OptString                                          `json:"contributors_url"`
	CreatedAt           OptString                                          `json:"created_at"`
	DefaultBranch       OptString                                          `json:"default_branch"`
	DeleteBranchOnMerge OptBool                                            `json:"delete_branch_on_merge"`
	DeploymentsURL      OptString                                          `json:"deployments_url"`
	Description         OptString                                          `json:"description"`
	Disabled            OptBool                                            `json:"disabled"`
	DownloadsURL        OptString                                          `json:"downloads_url"`
	EventsURL           OptString                                          `json:"events_url"`
	Fork                OptBool                                            `json:"fork"`
	ForksCount          OptInt                                             `json:"forks_count"`
	ForksURL            OptString                                          `json:"forks_url"`
	FullName            OptString                                          `json:"full_name"`
	GitCommitsURL       OptString                                          `json:"git_commits_url"`
	GitRefsURL          OptString                                          `json:"git_refs_url"`
	GitTagsURL          OptString                                          `json:"git_tags_url"`
	GitURL              OptString                                          `json:"git_url"`
	HTMLURL             OptString                                          `json:"html_url"`
	HasDownloads        OptBool                                            `json:"has_downloads"`
	HasIssues           OptBool                                            `json:"has_issues"`
	HasPages            OptBool                                            `json:"has_pages"`
	HasProjects         OptBool                                            `json:"has_projects"`
	HasWiki             OptBool                                            `json:"has_wiki"`
	Homepage            OptString                                          `json:"homepage"`
	HooksURL            OptString                                          `json:"hooks_url"`
	ID                  OptInt                                             `json:"id"`
	IsTemplate          OptBool                                            `json:"is_template"`
	IssueCommentURL     OptString                                          `json:"issue_comment_url"`
	IssueEventsURL      OptString                                          `json:"issue_events_url"`
	IssuesURL           OptString                                          `json:"issues_url"`
	KeysURL             OptString                                          `json:"keys_url"`
	LabelsURL           OptString                                          `json:"labels_url"`
	Language            OptString                                          `json:"language"`
	LanguagesURL        OptString                                          `json:"languages_url"`
	MergesURL           OptString                                          `json:"merges_url"`
	MilestonesURL       OptString                                          `json:"milestones_url"`
	MirrorURL           OptString                                          `json:"mirror_url"`
	Name                OptString                                          `json:"name"`
	NetworkCount        OptInt                                             `json:"network_count"`
	NodeID              OptString                                          `json:"node_id"`
	NotificationsURL    OptString                                          `json:"notifications_url"`
	OpenIssuesCount     OptInt                                             `json:"open_issues_count"`
	Owner               OptNullableRepositoryTemplateRepositoryOwner       `json:"owner"`
	Permissions         OptNullableRepositoryTemplateRepositoryPermissions `json:"permissions"`
	Private             OptBool                                            `json:"private"`
	PullsURL            OptString                                          `json:"pulls_url"`
	PushedAt            OptString                                          `json:"pushed_at"`
	ReleasesURL         OptString                                          `json:"releases_url"`
	SSHURL              OptString                                          `json:"ssh_url"`
	Size                OptInt                                             `json:"size"`
	StargazersCount     OptInt                                             `json:"stargazers_count"`
	StargazersURL       OptString                                          `json:"stargazers_url"`
	StatusesURL         OptString                                          `json:"statuses_url"`
	SubscribersCount    OptInt                                             `json:"subscribers_count"`
	SubscribersURL      OptString                                          `json:"subscribers_url"`
	SubscriptionURL     OptString                                          `json:"subscription_url"`
	SvnURL              OptString                                          `json:"svn_url"`
	TagsURL             OptString                                          `json:"tags_url"`
	TeamsURL            OptString                                          `json:"teams_url"`
	TempCloneToken      OptString                                          `json:"temp_clone_token"`
	Topics              []string                                           `json:"topics"`
	TreesURL            OptString                                          `json:"trees_url"`
	URL                 OptString                                          `json:"url"`
	UpdatedAt           OptString                                          `json:"updated_at"`
	Visibility          OptString                                          `json:"visibility"`
	WatchersCount       OptInt                                             `json:"watchers_count"`
}

type NullableRepositoryTemplateRepositoryOwner struct {
	AvatarURL         OptString `json:"avatar_url"`
	EventsURL         OptString `json:"events_url"`
	FollowersURL      OptString `json:"followers_url"`
	FollowingURL      OptString `json:"following_url"`
	GistsURL          OptString `json:"gists_url"`
	GravatarID        OptString `json:"gravatar_id"`
	HTMLURL           OptString `json:"html_url"`
	ID                OptInt    `json:"id"`
	Login             OptString `json:"login"`
	NodeID            OptString `json:"node_id"`
	OrganizationsURL  OptString `json:"organizations_url"`
	ReceivedEventsURL OptString `json:"received_events_url"`
	ReposURL          OptString `json:"repos_url"`
	SiteAdmin         OptBool   `json:"site_admin"`
	StarredURL        OptString `json:"starred_url"`
	SubscriptionsURL  OptString `json:"subscriptions_url"`
	Type              OptString `json:"type"`
	URL               OptString `json:"url"`
}

type NullableRepositoryTemplateRepositoryPermissions struct {
	Admin    OptBool `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     OptBool `json:"pull"`
	Push     OptBool `json:"push"`
	Triage   OptBool `json:"triage"`
}

type NullableScopedInstallationRepositorySelection string

const (
	NullableScopedInstallationRepositorySelectionAll      NullableScopedInstallationRepositorySelection = "all"
	NullableScopedInstallationRepositorySelectionSelected NullableScopedInstallationRepositorySelection = "selected"
)

type NullableSimpleCommitAuthor struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

type NullableSimpleCommitCommitter struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

type OAuthAuthorizationsDeleteAuthorizationApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsDeleteAuthorizationApplicationJSONForbidden) oAuthAuthorizationsDeleteAuthorizationRes() {
}

type OAuthAuthorizationsDeleteAuthorizationApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsDeleteAuthorizationApplicationJSONUnauthorized) oAuthAuthorizationsDeleteAuthorizationRes() {
}

type OAuthAuthorizationsDeleteAuthorizationNoContent struct{}

func (*OAuthAuthorizationsDeleteAuthorizationNoContent) oAuthAuthorizationsDeleteAuthorizationRes() {}

type OAuthAuthorizationsDeleteGrantApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsDeleteGrantApplicationJSONForbidden) oAuthAuthorizationsDeleteGrantRes() {}

type OAuthAuthorizationsDeleteGrantApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsDeleteGrantApplicationJSONUnauthorized) oAuthAuthorizationsDeleteGrantRes() {
}

type OAuthAuthorizationsDeleteGrantNoContent struct{}

func (*OAuthAuthorizationsDeleteGrantNoContent) oAuthAuthorizationsDeleteGrantRes() {}

type OAuthAuthorizationsGetAuthorizationApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsGetAuthorizationApplicationJSONForbidden) oAuthAuthorizationsGetAuthorizationRes() {
}

type OAuthAuthorizationsGetAuthorizationApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsGetAuthorizationApplicationJSONUnauthorized) oAuthAuthorizationsGetAuthorizationRes() {
}

type OAuthAuthorizationsGetGrantApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsGetGrantApplicationJSONForbidden) oAuthAuthorizationsGetGrantRes() {}

type OAuthAuthorizationsGetGrantApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsGetGrantApplicationJSONUnauthorized) oAuthAuthorizationsGetGrantRes() {}

type OAuthAuthorizationsListAuthorizationsApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsListAuthorizationsApplicationJSONForbidden) oAuthAuthorizationsListAuthorizationsRes() {
}

type OAuthAuthorizationsListAuthorizationsApplicationJSONNotFound BasicError

func (*OAuthAuthorizationsListAuthorizationsApplicationJSONNotFound) oAuthAuthorizationsListAuthorizationsRes() {
}

type OAuthAuthorizationsListAuthorizationsApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsListAuthorizationsApplicationJSONUnauthorized) oAuthAuthorizationsListAuthorizationsRes() {
}

type OAuthAuthorizationsListAuthorizationsOK []Authorization

func (*OAuthAuthorizationsListAuthorizationsOK) oAuthAuthorizationsListAuthorizationsRes() {}

type OAuthAuthorizationsListGrantsApplicationJSONForbidden BasicError

func (*OAuthAuthorizationsListGrantsApplicationJSONForbidden) oAuthAuthorizationsListGrantsRes() {}

type OAuthAuthorizationsListGrantsApplicationJSONNotFound BasicError

func (*OAuthAuthorizationsListGrantsApplicationJSONNotFound) oAuthAuthorizationsListGrantsRes() {}

type OAuthAuthorizationsListGrantsApplicationJSONUnauthorized BasicError

func (*OAuthAuthorizationsListGrantsApplicationJSONUnauthorized) oAuthAuthorizationsListGrantsRes() {}

type OAuthAuthorizationsListGrantsOK []ApplicationGrant

func (*OAuthAuthorizationsListGrantsOK) oAuthAuthorizationsListGrantsRes() {}

// NewOptAPIOverviewSSHKeyFingerprints returns new OptAPIOverviewSSHKeyFingerprints with value set to v.
func NewOptAPIOverviewSSHKeyFingerprints(v APIOverviewSSHKeyFingerprints) OptAPIOverviewSSHKeyFingerprints {
	return OptAPIOverviewSSHKeyFingerprints{
		Value: v,
		Set:   true,
	}
}

// OptAPIOverviewSSHKeyFingerprints is optional APIOverviewSSHKeyFingerprints.
type OptAPIOverviewSSHKeyFingerprints struct {
	Value APIOverviewSSHKeyFingerprints
	Set   bool
}

// IsSet returns true if OptAPIOverviewSSHKeyFingerprints was set.
func (o OptAPIOverviewSSHKeyFingerprints) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAPIOverviewSSHKeyFingerprints) Reset() {
	var v APIOverviewSSHKeyFingerprints
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAPIOverviewSSHKeyFingerprints) SetTo(v APIOverviewSSHKeyFingerprints) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAPIOverviewSSHKeyFingerprints) Get() (v APIOverviewSSHKeyFingerprints, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility returns new OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility with value set to v.
func NewOptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility(v ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility) OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility {
	return OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility{
		Value: v,
		Set:   true,
	}
}

// OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility is optional ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility.
type OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility struct {
	Value ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility
	Set   bool
}

// IsSet returns true if OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility was set.
func (o OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility) Reset() {
	var v ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility) SetTo(v ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility) Get() (v ActionsCreateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility returns new OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility with value set to v.
func NewOptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility(v ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility) OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility {
	return OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility{
		Value: v,
		Set:   true,
	}
}

// OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility is optional ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility.
type OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility struct {
	Value ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility
	Set   bool
}

// IsSet returns true if OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility was set.
func (o OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility) Reset() {
	var v ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility) SetTo(v ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility) Get() (v ActionsUpdateSelfHostedRunnerGroupForOrgApplicationJSONReqVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAllowedActions returns new OptAllowedActions with value set to v.
func NewOptAllowedActions(v AllowedActions) OptAllowedActions {
	return OptAllowedActions{
		Value: v,
		Set:   true,
	}
}

// OptAllowedActions is optional AllowedActions.
type OptAllowedActions struct {
	Value AllowedActions
	Set   bool
}

// IsSet returns true if OptAllowedActions was set.
func (o OptAllowedActions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAllowedActions) Reset() {
	var v AllowedActions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAllowedActions) SetTo(v AllowedActions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAllowedActions) Get() (v AllowedActions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissions returns new OptAppPermissions with value set to v.
func NewOptAppPermissions(v AppPermissions) OptAppPermissions {
	return OptAppPermissions{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissions is optional AppPermissions.
type OptAppPermissions struct {
	Value AppPermissions
	Set   bool
}

// IsSet returns true if OptAppPermissions was set.
func (o OptAppPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissions) Reset() {
	var v AppPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissions) SetTo(v AppPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissions) Get() (v AppPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsActions returns new OptAppPermissionsActions with value set to v.
func NewOptAppPermissionsActions(v AppPermissionsActions) OptAppPermissionsActions {
	return OptAppPermissionsActions{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsActions is optional AppPermissionsActions.
type OptAppPermissionsActions struct {
	Value AppPermissionsActions
	Set   bool
}

// IsSet returns true if OptAppPermissionsActions was set.
func (o OptAppPermissionsActions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsActions) Reset() {
	var v AppPermissionsActions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsActions) SetTo(v AppPermissionsActions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsActions) Get() (v AppPermissionsActions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsAdministration returns new OptAppPermissionsAdministration with value set to v.
func NewOptAppPermissionsAdministration(v AppPermissionsAdministration) OptAppPermissionsAdministration {
	return OptAppPermissionsAdministration{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsAdministration is optional AppPermissionsAdministration.
type OptAppPermissionsAdministration struct {
	Value AppPermissionsAdministration
	Set   bool
}

// IsSet returns true if OptAppPermissionsAdministration was set.
func (o OptAppPermissionsAdministration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsAdministration) Reset() {
	var v AppPermissionsAdministration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsAdministration) SetTo(v AppPermissionsAdministration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsAdministration) Get() (v AppPermissionsAdministration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsChecks returns new OptAppPermissionsChecks with value set to v.
func NewOptAppPermissionsChecks(v AppPermissionsChecks) OptAppPermissionsChecks {
	return OptAppPermissionsChecks{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsChecks is optional AppPermissionsChecks.
type OptAppPermissionsChecks struct {
	Value AppPermissionsChecks
	Set   bool
}

// IsSet returns true if OptAppPermissionsChecks was set.
func (o OptAppPermissionsChecks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsChecks) Reset() {
	var v AppPermissionsChecks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsChecks) SetTo(v AppPermissionsChecks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsChecks) Get() (v AppPermissionsChecks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsContentReferences returns new OptAppPermissionsContentReferences with value set to v.
func NewOptAppPermissionsContentReferences(v AppPermissionsContentReferences) OptAppPermissionsContentReferences {
	return OptAppPermissionsContentReferences{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsContentReferences is optional AppPermissionsContentReferences.
type OptAppPermissionsContentReferences struct {
	Value AppPermissionsContentReferences
	Set   bool
}

// IsSet returns true if OptAppPermissionsContentReferences was set.
func (o OptAppPermissionsContentReferences) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsContentReferences) Reset() {
	var v AppPermissionsContentReferences
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsContentReferences) SetTo(v AppPermissionsContentReferences) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsContentReferences) Get() (v AppPermissionsContentReferences, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsContents returns new OptAppPermissionsContents with value set to v.
func NewOptAppPermissionsContents(v AppPermissionsContents) OptAppPermissionsContents {
	return OptAppPermissionsContents{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsContents is optional AppPermissionsContents.
type OptAppPermissionsContents struct {
	Value AppPermissionsContents
	Set   bool
}

// IsSet returns true if OptAppPermissionsContents was set.
func (o OptAppPermissionsContents) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsContents) Reset() {
	var v AppPermissionsContents
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsContents) SetTo(v AppPermissionsContents) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsContents) Get() (v AppPermissionsContents, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsDeployments returns new OptAppPermissionsDeployments with value set to v.
func NewOptAppPermissionsDeployments(v AppPermissionsDeployments) OptAppPermissionsDeployments {
	return OptAppPermissionsDeployments{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsDeployments is optional AppPermissionsDeployments.
type OptAppPermissionsDeployments struct {
	Value AppPermissionsDeployments
	Set   bool
}

// IsSet returns true if OptAppPermissionsDeployments was set.
func (o OptAppPermissionsDeployments) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsDeployments) Reset() {
	var v AppPermissionsDeployments
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsDeployments) SetTo(v AppPermissionsDeployments) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsDeployments) Get() (v AppPermissionsDeployments, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsEnvironments returns new OptAppPermissionsEnvironments with value set to v.
func NewOptAppPermissionsEnvironments(v AppPermissionsEnvironments) OptAppPermissionsEnvironments {
	return OptAppPermissionsEnvironments{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsEnvironments is optional AppPermissionsEnvironments.
type OptAppPermissionsEnvironments struct {
	Value AppPermissionsEnvironments
	Set   bool
}

// IsSet returns true if OptAppPermissionsEnvironments was set.
func (o OptAppPermissionsEnvironments) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsEnvironments) Reset() {
	var v AppPermissionsEnvironments
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsEnvironments) SetTo(v AppPermissionsEnvironments) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsEnvironments) Get() (v AppPermissionsEnvironments, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsIssues returns new OptAppPermissionsIssues with value set to v.
func NewOptAppPermissionsIssues(v AppPermissionsIssues) OptAppPermissionsIssues {
	return OptAppPermissionsIssues{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsIssues is optional AppPermissionsIssues.
type OptAppPermissionsIssues struct {
	Value AppPermissionsIssues
	Set   bool
}

// IsSet returns true if OptAppPermissionsIssues was set.
func (o OptAppPermissionsIssues) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsIssues) Reset() {
	var v AppPermissionsIssues
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsIssues) SetTo(v AppPermissionsIssues) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsIssues) Get() (v AppPermissionsIssues, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsMembers returns new OptAppPermissionsMembers with value set to v.
func NewOptAppPermissionsMembers(v AppPermissionsMembers) OptAppPermissionsMembers {
	return OptAppPermissionsMembers{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsMembers is optional AppPermissionsMembers.
type OptAppPermissionsMembers struct {
	Value AppPermissionsMembers
	Set   bool
}

// IsSet returns true if OptAppPermissionsMembers was set.
func (o OptAppPermissionsMembers) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsMembers) Reset() {
	var v AppPermissionsMembers
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsMembers) SetTo(v AppPermissionsMembers) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsMembers) Get() (v AppPermissionsMembers, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsMetadata returns new OptAppPermissionsMetadata with value set to v.
func NewOptAppPermissionsMetadata(v AppPermissionsMetadata) OptAppPermissionsMetadata {
	return OptAppPermissionsMetadata{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsMetadata is optional AppPermissionsMetadata.
type OptAppPermissionsMetadata struct {
	Value AppPermissionsMetadata
	Set   bool
}

// IsSet returns true if OptAppPermissionsMetadata was set.
func (o OptAppPermissionsMetadata) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsMetadata) Reset() {
	var v AppPermissionsMetadata
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsMetadata) SetTo(v AppPermissionsMetadata) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsMetadata) Get() (v AppPermissionsMetadata, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationAdministration returns new OptAppPermissionsOrganizationAdministration with value set to v.
func NewOptAppPermissionsOrganizationAdministration(v AppPermissionsOrganizationAdministration) OptAppPermissionsOrganizationAdministration {
	return OptAppPermissionsOrganizationAdministration{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationAdministration is optional AppPermissionsOrganizationAdministration.
type OptAppPermissionsOrganizationAdministration struct {
	Value AppPermissionsOrganizationAdministration
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationAdministration was set.
func (o OptAppPermissionsOrganizationAdministration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationAdministration) Reset() {
	var v AppPermissionsOrganizationAdministration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationAdministration) SetTo(v AppPermissionsOrganizationAdministration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationAdministration) Get() (v AppPermissionsOrganizationAdministration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationHooks returns new OptAppPermissionsOrganizationHooks with value set to v.
func NewOptAppPermissionsOrganizationHooks(v AppPermissionsOrganizationHooks) OptAppPermissionsOrganizationHooks {
	return OptAppPermissionsOrganizationHooks{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationHooks is optional AppPermissionsOrganizationHooks.
type OptAppPermissionsOrganizationHooks struct {
	Value AppPermissionsOrganizationHooks
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationHooks was set.
func (o OptAppPermissionsOrganizationHooks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationHooks) Reset() {
	var v AppPermissionsOrganizationHooks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationHooks) SetTo(v AppPermissionsOrganizationHooks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationHooks) Get() (v AppPermissionsOrganizationHooks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationPackages returns new OptAppPermissionsOrganizationPackages with value set to v.
func NewOptAppPermissionsOrganizationPackages(v AppPermissionsOrganizationPackages) OptAppPermissionsOrganizationPackages {
	return OptAppPermissionsOrganizationPackages{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationPackages is optional AppPermissionsOrganizationPackages.
type OptAppPermissionsOrganizationPackages struct {
	Value AppPermissionsOrganizationPackages
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationPackages was set.
func (o OptAppPermissionsOrganizationPackages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationPackages) Reset() {
	var v AppPermissionsOrganizationPackages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationPackages) SetTo(v AppPermissionsOrganizationPackages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationPackages) Get() (v AppPermissionsOrganizationPackages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationPlan returns new OptAppPermissionsOrganizationPlan with value set to v.
func NewOptAppPermissionsOrganizationPlan(v AppPermissionsOrganizationPlan) OptAppPermissionsOrganizationPlan {
	return OptAppPermissionsOrganizationPlan{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationPlan is optional AppPermissionsOrganizationPlan.
type OptAppPermissionsOrganizationPlan struct {
	Value AppPermissionsOrganizationPlan
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationPlan was set.
func (o OptAppPermissionsOrganizationPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationPlan) Reset() {
	var v AppPermissionsOrganizationPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationPlan) SetTo(v AppPermissionsOrganizationPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationPlan) Get() (v AppPermissionsOrganizationPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationProjects returns new OptAppPermissionsOrganizationProjects with value set to v.
func NewOptAppPermissionsOrganizationProjects(v AppPermissionsOrganizationProjects) OptAppPermissionsOrganizationProjects {
	return OptAppPermissionsOrganizationProjects{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationProjects is optional AppPermissionsOrganizationProjects.
type OptAppPermissionsOrganizationProjects struct {
	Value AppPermissionsOrganizationProjects
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationProjects was set.
func (o OptAppPermissionsOrganizationProjects) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationProjects) Reset() {
	var v AppPermissionsOrganizationProjects
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationProjects) SetTo(v AppPermissionsOrganizationProjects) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationProjects) Get() (v AppPermissionsOrganizationProjects, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationSecrets returns new OptAppPermissionsOrganizationSecrets with value set to v.
func NewOptAppPermissionsOrganizationSecrets(v AppPermissionsOrganizationSecrets) OptAppPermissionsOrganizationSecrets {
	return OptAppPermissionsOrganizationSecrets{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationSecrets is optional AppPermissionsOrganizationSecrets.
type OptAppPermissionsOrganizationSecrets struct {
	Value AppPermissionsOrganizationSecrets
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationSecrets was set.
func (o OptAppPermissionsOrganizationSecrets) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationSecrets) Reset() {
	var v AppPermissionsOrganizationSecrets
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationSecrets) SetTo(v AppPermissionsOrganizationSecrets) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationSecrets) Get() (v AppPermissionsOrganizationSecrets, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationSelfHostedRunners returns new OptAppPermissionsOrganizationSelfHostedRunners with value set to v.
func NewOptAppPermissionsOrganizationSelfHostedRunners(v AppPermissionsOrganizationSelfHostedRunners) OptAppPermissionsOrganizationSelfHostedRunners {
	return OptAppPermissionsOrganizationSelfHostedRunners{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationSelfHostedRunners is optional AppPermissionsOrganizationSelfHostedRunners.
type OptAppPermissionsOrganizationSelfHostedRunners struct {
	Value AppPermissionsOrganizationSelfHostedRunners
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationSelfHostedRunners was set.
func (o OptAppPermissionsOrganizationSelfHostedRunners) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationSelfHostedRunners) Reset() {
	var v AppPermissionsOrganizationSelfHostedRunners
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationSelfHostedRunners) SetTo(v AppPermissionsOrganizationSelfHostedRunners) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationSelfHostedRunners) Get() (v AppPermissionsOrganizationSelfHostedRunners, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsOrganizationUserBlocking returns new OptAppPermissionsOrganizationUserBlocking with value set to v.
func NewOptAppPermissionsOrganizationUserBlocking(v AppPermissionsOrganizationUserBlocking) OptAppPermissionsOrganizationUserBlocking {
	return OptAppPermissionsOrganizationUserBlocking{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsOrganizationUserBlocking is optional AppPermissionsOrganizationUserBlocking.
type OptAppPermissionsOrganizationUserBlocking struct {
	Value AppPermissionsOrganizationUserBlocking
	Set   bool
}

// IsSet returns true if OptAppPermissionsOrganizationUserBlocking was set.
func (o OptAppPermissionsOrganizationUserBlocking) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsOrganizationUserBlocking) Reset() {
	var v AppPermissionsOrganizationUserBlocking
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsOrganizationUserBlocking) SetTo(v AppPermissionsOrganizationUserBlocking) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsOrganizationUserBlocking) Get() (v AppPermissionsOrganizationUserBlocking, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsPackages returns new OptAppPermissionsPackages with value set to v.
func NewOptAppPermissionsPackages(v AppPermissionsPackages) OptAppPermissionsPackages {
	return OptAppPermissionsPackages{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsPackages is optional AppPermissionsPackages.
type OptAppPermissionsPackages struct {
	Value AppPermissionsPackages
	Set   bool
}

// IsSet returns true if OptAppPermissionsPackages was set.
func (o OptAppPermissionsPackages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsPackages) Reset() {
	var v AppPermissionsPackages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsPackages) SetTo(v AppPermissionsPackages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsPackages) Get() (v AppPermissionsPackages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsPages returns new OptAppPermissionsPages with value set to v.
func NewOptAppPermissionsPages(v AppPermissionsPages) OptAppPermissionsPages {
	return OptAppPermissionsPages{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsPages is optional AppPermissionsPages.
type OptAppPermissionsPages struct {
	Value AppPermissionsPages
	Set   bool
}

// IsSet returns true if OptAppPermissionsPages was set.
func (o OptAppPermissionsPages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsPages) Reset() {
	var v AppPermissionsPages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsPages) SetTo(v AppPermissionsPages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsPages) Get() (v AppPermissionsPages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsPullRequests returns new OptAppPermissionsPullRequests with value set to v.
func NewOptAppPermissionsPullRequests(v AppPermissionsPullRequests) OptAppPermissionsPullRequests {
	return OptAppPermissionsPullRequests{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsPullRequests is optional AppPermissionsPullRequests.
type OptAppPermissionsPullRequests struct {
	Value AppPermissionsPullRequests
	Set   bool
}

// IsSet returns true if OptAppPermissionsPullRequests was set.
func (o OptAppPermissionsPullRequests) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsPullRequests) Reset() {
	var v AppPermissionsPullRequests
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsPullRequests) SetTo(v AppPermissionsPullRequests) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsPullRequests) Get() (v AppPermissionsPullRequests, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsRepositoryHooks returns new OptAppPermissionsRepositoryHooks with value set to v.
func NewOptAppPermissionsRepositoryHooks(v AppPermissionsRepositoryHooks) OptAppPermissionsRepositoryHooks {
	return OptAppPermissionsRepositoryHooks{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsRepositoryHooks is optional AppPermissionsRepositoryHooks.
type OptAppPermissionsRepositoryHooks struct {
	Value AppPermissionsRepositoryHooks
	Set   bool
}

// IsSet returns true if OptAppPermissionsRepositoryHooks was set.
func (o OptAppPermissionsRepositoryHooks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsRepositoryHooks) Reset() {
	var v AppPermissionsRepositoryHooks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsRepositoryHooks) SetTo(v AppPermissionsRepositoryHooks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsRepositoryHooks) Get() (v AppPermissionsRepositoryHooks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsRepositoryProjects returns new OptAppPermissionsRepositoryProjects with value set to v.
func NewOptAppPermissionsRepositoryProjects(v AppPermissionsRepositoryProjects) OptAppPermissionsRepositoryProjects {
	return OptAppPermissionsRepositoryProjects{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsRepositoryProjects is optional AppPermissionsRepositoryProjects.
type OptAppPermissionsRepositoryProjects struct {
	Value AppPermissionsRepositoryProjects
	Set   bool
}

// IsSet returns true if OptAppPermissionsRepositoryProjects was set.
func (o OptAppPermissionsRepositoryProjects) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsRepositoryProjects) Reset() {
	var v AppPermissionsRepositoryProjects
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsRepositoryProjects) SetTo(v AppPermissionsRepositoryProjects) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsRepositoryProjects) Get() (v AppPermissionsRepositoryProjects, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsSecretScanningAlerts returns new OptAppPermissionsSecretScanningAlerts with value set to v.
func NewOptAppPermissionsSecretScanningAlerts(v AppPermissionsSecretScanningAlerts) OptAppPermissionsSecretScanningAlerts {
	return OptAppPermissionsSecretScanningAlerts{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsSecretScanningAlerts is optional AppPermissionsSecretScanningAlerts.
type OptAppPermissionsSecretScanningAlerts struct {
	Value AppPermissionsSecretScanningAlerts
	Set   bool
}

// IsSet returns true if OptAppPermissionsSecretScanningAlerts was set.
func (o OptAppPermissionsSecretScanningAlerts) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsSecretScanningAlerts) Reset() {
	var v AppPermissionsSecretScanningAlerts
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsSecretScanningAlerts) SetTo(v AppPermissionsSecretScanningAlerts) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsSecretScanningAlerts) Get() (v AppPermissionsSecretScanningAlerts, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsSecrets returns new OptAppPermissionsSecrets with value set to v.
func NewOptAppPermissionsSecrets(v AppPermissionsSecrets) OptAppPermissionsSecrets {
	return OptAppPermissionsSecrets{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsSecrets is optional AppPermissionsSecrets.
type OptAppPermissionsSecrets struct {
	Value AppPermissionsSecrets
	Set   bool
}

// IsSet returns true if OptAppPermissionsSecrets was set.
func (o OptAppPermissionsSecrets) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsSecrets) Reset() {
	var v AppPermissionsSecrets
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsSecrets) SetTo(v AppPermissionsSecrets) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsSecrets) Get() (v AppPermissionsSecrets, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsSecurityEvents returns new OptAppPermissionsSecurityEvents with value set to v.
func NewOptAppPermissionsSecurityEvents(v AppPermissionsSecurityEvents) OptAppPermissionsSecurityEvents {
	return OptAppPermissionsSecurityEvents{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsSecurityEvents is optional AppPermissionsSecurityEvents.
type OptAppPermissionsSecurityEvents struct {
	Value AppPermissionsSecurityEvents
	Set   bool
}

// IsSet returns true if OptAppPermissionsSecurityEvents was set.
func (o OptAppPermissionsSecurityEvents) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsSecurityEvents) Reset() {
	var v AppPermissionsSecurityEvents
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsSecurityEvents) SetTo(v AppPermissionsSecurityEvents) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsSecurityEvents) Get() (v AppPermissionsSecurityEvents, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsSingleFile returns new OptAppPermissionsSingleFile with value set to v.
func NewOptAppPermissionsSingleFile(v AppPermissionsSingleFile) OptAppPermissionsSingleFile {
	return OptAppPermissionsSingleFile{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsSingleFile is optional AppPermissionsSingleFile.
type OptAppPermissionsSingleFile struct {
	Value AppPermissionsSingleFile
	Set   bool
}

// IsSet returns true if OptAppPermissionsSingleFile was set.
func (o OptAppPermissionsSingleFile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsSingleFile) Reset() {
	var v AppPermissionsSingleFile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsSingleFile) SetTo(v AppPermissionsSingleFile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsSingleFile) Get() (v AppPermissionsSingleFile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsStatuses returns new OptAppPermissionsStatuses with value set to v.
func NewOptAppPermissionsStatuses(v AppPermissionsStatuses) OptAppPermissionsStatuses {
	return OptAppPermissionsStatuses{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsStatuses is optional AppPermissionsStatuses.
type OptAppPermissionsStatuses struct {
	Value AppPermissionsStatuses
	Set   bool
}

// IsSet returns true if OptAppPermissionsStatuses was set.
func (o OptAppPermissionsStatuses) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsStatuses) Reset() {
	var v AppPermissionsStatuses
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsStatuses) SetTo(v AppPermissionsStatuses) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsStatuses) Get() (v AppPermissionsStatuses, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsTeamDiscussions returns new OptAppPermissionsTeamDiscussions with value set to v.
func NewOptAppPermissionsTeamDiscussions(v AppPermissionsTeamDiscussions) OptAppPermissionsTeamDiscussions {
	return OptAppPermissionsTeamDiscussions{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsTeamDiscussions is optional AppPermissionsTeamDiscussions.
type OptAppPermissionsTeamDiscussions struct {
	Value AppPermissionsTeamDiscussions
	Set   bool
}

// IsSet returns true if OptAppPermissionsTeamDiscussions was set.
func (o OptAppPermissionsTeamDiscussions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsTeamDiscussions) Reset() {
	var v AppPermissionsTeamDiscussions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsTeamDiscussions) SetTo(v AppPermissionsTeamDiscussions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsTeamDiscussions) Get() (v AppPermissionsTeamDiscussions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsVulnerabilityAlerts returns new OptAppPermissionsVulnerabilityAlerts with value set to v.
func NewOptAppPermissionsVulnerabilityAlerts(v AppPermissionsVulnerabilityAlerts) OptAppPermissionsVulnerabilityAlerts {
	return OptAppPermissionsVulnerabilityAlerts{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsVulnerabilityAlerts is optional AppPermissionsVulnerabilityAlerts.
type OptAppPermissionsVulnerabilityAlerts struct {
	Value AppPermissionsVulnerabilityAlerts
	Set   bool
}

// IsSet returns true if OptAppPermissionsVulnerabilityAlerts was set.
func (o OptAppPermissionsVulnerabilityAlerts) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsVulnerabilityAlerts) Reset() {
	var v AppPermissionsVulnerabilityAlerts
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsVulnerabilityAlerts) SetTo(v AppPermissionsVulnerabilityAlerts) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsVulnerabilityAlerts) Get() (v AppPermissionsVulnerabilityAlerts, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAppPermissionsWorkflows returns new OptAppPermissionsWorkflows with value set to v.
func NewOptAppPermissionsWorkflows(v AppPermissionsWorkflows) OptAppPermissionsWorkflows {
	return OptAppPermissionsWorkflows{
		Value: v,
		Set:   true,
	}
}

// OptAppPermissionsWorkflows is optional AppPermissionsWorkflows.
type OptAppPermissionsWorkflows struct {
	Value AppPermissionsWorkflows
	Set   bool
}

// IsSet returns true if OptAppPermissionsWorkflows was set.
func (o OptAppPermissionsWorkflows) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppPermissionsWorkflows) Reset() {
	var v AppPermissionsWorkflows
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppPermissionsWorkflows) SetTo(v AppPermissionsWorkflows) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppPermissionsWorkflows) Get() (v AppPermissionsWorkflows, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAuthenticationTokenRepositorySelection returns new OptAuthenticationTokenRepositorySelection with value set to v.
func NewOptAuthenticationTokenRepositorySelection(v AuthenticationTokenRepositorySelection) OptAuthenticationTokenRepositorySelection {
	return OptAuthenticationTokenRepositorySelection{
		Value: v,
		Set:   true,
	}
}

// OptAuthenticationTokenRepositorySelection is optional AuthenticationTokenRepositorySelection.
type OptAuthenticationTokenRepositorySelection struct {
	Value AuthenticationTokenRepositorySelection
	Set   bool
}

// IsSet returns true if OptAuthenticationTokenRepositorySelection was set.
func (o OptAuthenticationTokenRepositorySelection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAuthenticationTokenRepositorySelection) Reset() {
	var v AuthenticationTokenRepositorySelection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAuthenticationTokenRepositorySelection) SetTo(v AuthenticationTokenRepositorySelection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAuthenticationTokenRepositorySelection) Get() (v AuthenticationTokenRepositorySelection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchProtection returns new OptBranchProtection with value set to v.
func NewOptBranchProtection(v BranchProtection) OptBranchProtection {
	return OptBranchProtection{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtection is optional BranchProtection.
type OptBranchProtection struct {
	Value BranchProtection
	Set   bool
}

// IsSet returns true if OptBranchProtection was set.
func (o OptBranchProtection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtection) Reset() {
	var v BranchProtection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtection) SetTo(v BranchProtection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtection) Get() (v BranchProtection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchProtectionAllowDeletions returns new OptBranchProtectionAllowDeletions with value set to v.
func NewOptBranchProtectionAllowDeletions(v BranchProtectionAllowDeletions) OptBranchProtectionAllowDeletions {
	return OptBranchProtectionAllowDeletions{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionAllowDeletions is optional BranchProtectionAllowDeletions.
type OptBranchProtectionAllowDeletions struct {
	Value BranchProtectionAllowDeletions
	Set   bool
}

// IsSet returns true if OptBranchProtectionAllowDeletions was set.
func (o OptBranchProtectionAllowDeletions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionAllowDeletions) Reset() {
	var v BranchProtectionAllowDeletions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionAllowDeletions) SetTo(v BranchProtectionAllowDeletions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionAllowDeletions) Get() (v BranchProtectionAllowDeletions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchProtectionAllowForcePushes returns new OptBranchProtectionAllowForcePushes with value set to v.
func NewOptBranchProtectionAllowForcePushes(v BranchProtectionAllowForcePushes) OptBranchProtectionAllowForcePushes {
	return OptBranchProtectionAllowForcePushes{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionAllowForcePushes is optional BranchProtectionAllowForcePushes.
type OptBranchProtectionAllowForcePushes struct {
	Value BranchProtectionAllowForcePushes
	Set   bool
}

// IsSet returns true if OptBranchProtectionAllowForcePushes was set.
func (o OptBranchProtectionAllowForcePushes) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionAllowForcePushes) Reset() {
	var v BranchProtectionAllowForcePushes
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionAllowForcePushes) SetTo(v BranchProtectionAllowForcePushes) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionAllowForcePushes) Get() (v BranchProtectionAllowForcePushes, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchProtectionRequiredConversationResolution returns new OptBranchProtectionRequiredConversationResolution with value set to v.
func NewOptBranchProtectionRequiredConversationResolution(v BranchProtectionRequiredConversationResolution) OptBranchProtectionRequiredConversationResolution {
	return OptBranchProtectionRequiredConversationResolution{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionRequiredConversationResolution is optional BranchProtectionRequiredConversationResolution.
type OptBranchProtectionRequiredConversationResolution struct {
	Value BranchProtectionRequiredConversationResolution
	Set   bool
}

// IsSet returns true if OptBranchProtectionRequiredConversationResolution was set.
func (o OptBranchProtectionRequiredConversationResolution) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionRequiredConversationResolution) Reset() {
	var v BranchProtectionRequiredConversationResolution
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionRequiredConversationResolution) SetTo(v BranchProtectionRequiredConversationResolution) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionRequiredConversationResolution) Get() (v BranchProtectionRequiredConversationResolution, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchProtectionRequiredLinearHistory returns new OptBranchProtectionRequiredLinearHistory with value set to v.
func NewOptBranchProtectionRequiredLinearHistory(v BranchProtectionRequiredLinearHistory) OptBranchProtectionRequiredLinearHistory {
	return OptBranchProtectionRequiredLinearHistory{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionRequiredLinearHistory is optional BranchProtectionRequiredLinearHistory.
type OptBranchProtectionRequiredLinearHistory struct {
	Value BranchProtectionRequiredLinearHistory
	Set   bool
}

// IsSet returns true if OptBranchProtectionRequiredLinearHistory was set.
func (o OptBranchProtectionRequiredLinearHistory) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionRequiredLinearHistory) Reset() {
	var v BranchProtectionRequiredLinearHistory
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionRequiredLinearHistory) SetTo(v BranchProtectionRequiredLinearHistory) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionRequiredLinearHistory) Get() (v BranchProtectionRequiredLinearHistory, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchProtectionRequiredSignatures returns new OptBranchProtectionRequiredSignatures with value set to v.
func NewOptBranchProtectionRequiredSignatures(v BranchProtectionRequiredSignatures) OptBranchProtectionRequiredSignatures {
	return OptBranchProtectionRequiredSignatures{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionRequiredSignatures is optional BranchProtectionRequiredSignatures.
type OptBranchProtectionRequiredSignatures struct {
	Value BranchProtectionRequiredSignatures
	Set   bool
}

// IsSet returns true if OptBranchProtectionRequiredSignatures was set.
func (o OptBranchProtectionRequiredSignatures) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionRequiredSignatures) Reset() {
	var v BranchProtectionRequiredSignatures
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionRequiredSignatures) SetTo(v BranchProtectionRequiredSignatures) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionRequiredSignatures) Get() (v BranchProtectionRequiredSignatures, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchProtectionRequiredStatusChecks returns new OptBranchProtectionRequiredStatusChecks with value set to v.
func NewOptBranchProtectionRequiredStatusChecks(v BranchProtectionRequiredStatusChecks) OptBranchProtectionRequiredStatusChecks {
	return OptBranchProtectionRequiredStatusChecks{
		Value: v,
		Set:   true,
	}
}

// OptBranchProtectionRequiredStatusChecks is optional BranchProtectionRequiredStatusChecks.
type OptBranchProtectionRequiredStatusChecks struct {
	Value BranchProtectionRequiredStatusChecks
	Set   bool
}

// IsSet returns true if OptBranchProtectionRequiredStatusChecks was set.
func (o OptBranchProtectionRequiredStatusChecks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchProtectionRequiredStatusChecks) Reset() {
	var v BranchProtectionRequiredStatusChecks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchProtectionRequiredStatusChecks) SetTo(v BranchProtectionRequiredStatusChecks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchProtectionRequiredStatusChecks) Get() (v BranchProtectionRequiredStatusChecks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchRestrictionPolicy returns new OptBranchRestrictionPolicy with value set to v.
func NewOptBranchRestrictionPolicy(v BranchRestrictionPolicy) OptBranchRestrictionPolicy {
	return OptBranchRestrictionPolicy{
		Value: v,
		Set:   true,
	}
}

// OptBranchRestrictionPolicy is optional BranchRestrictionPolicy.
type OptBranchRestrictionPolicy struct {
	Value BranchRestrictionPolicy
	Set   bool
}

// IsSet returns true if OptBranchRestrictionPolicy was set.
func (o OptBranchRestrictionPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchRestrictionPolicy) Reset() {
	var v BranchRestrictionPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchRestrictionPolicy) SetTo(v BranchRestrictionPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchRestrictionPolicy) Get() (v BranchRestrictionPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchRestrictionPolicyAppsItemOwner returns new OptBranchRestrictionPolicyAppsItemOwner with value set to v.
func NewOptBranchRestrictionPolicyAppsItemOwner(v BranchRestrictionPolicyAppsItemOwner) OptBranchRestrictionPolicyAppsItemOwner {
	return OptBranchRestrictionPolicyAppsItemOwner{
		Value: v,
		Set:   true,
	}
}

// OptBranchRestrictionPolicyAppsItemOwner is optional BranchRestrictionPolicyAppsItemOwner.
type OptBranchRestrictionPolicyAppsItemOwner struct {
	Value BranchRestrictionPolicyAppsItemOwner
	Set   bool
}

// IsSet returns true if OptBranchRestrictionPolicyAppsItemOwner was set.
func (o OptBranchRestrictionPolicyAppsItemOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchRestrictionPolicyAppsItemOwner) Reset() {
	var v BranchRestrictionPolicyAppsItemOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchRestrictionPolicyAppsItemOwner) SetTo(v BranchRestrictionPolicyAppsItemOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchRestrictionPolicyAppsItemOwner) Get() (v BranchRestrictionPolicyAppsItemOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBranchRestrictionPolicyAppsItemPermissions returns new OptBranchRestrictionPolicyAppsItemPermissions with value set to v.
func NewOptBranchRestrictionPolicyAppsItemPermissions(v BranchRestrictionPolicyAppsItemPermissions) OptBranchRestrictionPolicyAppsItemPermissions {
	return OptBranchRestrictionPolicyAppsItemPermissions{
		Value: v,
		Set:   true,
	}
}

// OptBranchRestrictionPolicyAppsItemPermissions is optional BranchRestrictionPolicyAppsItemPermissions.
type OptBranchRestrictionPolicyAppsItemPermissions struct {
	Value BranchRestrictionPolicyAppsItemPermissions
	Set   bool
}

// IsSet returns true if OptBranchRestrictionPolicyAppsItemPermissions was set.
func (o OptBranchRestrictionPolicyAppsItemPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBranchRestrictionPolicyAppsItemPermissions) Reset() {
	var v BranchRestrictionPolicyAppsItemPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBranchRestrictionPolicyAppsItemPermissions) SetTo(v BranchRestrictionPolicyAppsItemPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBranchRestrictionPolicyAppsItemPermissions) Get() (v BranchRestrictionPolicyAppsItemPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeOfConduct returns new OptCodeOfConduct with value set to v.
func NewOptCodeOfConduct(v CodeOfConduct) OptCodeOfConduct {
	return OptCodeOfConduct{
		Value: v,
		Set:   true,
	}
}

// OptCodeOfConduct is optional CodeOfConduct.
type OptCodeOfConduct struct {
	Value CodeOfConduct
	Set   bool
}

// IsSet returns true if OptCodeOfConduct was set.
func (o OptCodeOfConduct) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeOfConduct) Reset() {
	var v CodeOfConduct
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeOfConduct) SetTo(v CodeOfConduct) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeOfConduct) Get() (v CodeOfConduct, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeOfConductSimple returns new OptCodeOfConductSimple with value set to v.
func NewOptCodeOfConductSimple(v CodeOfConductSimple) OptCodeOfConductSimple {
	return OptCodeOfConductSimple{
		Value: v,
		Set:   true,
	}
}

// OptCodeOfConductSimple is optional CodeOfConductSimple.
type OptCodeOfConductSimple struct {
	Value CodeOfConductSimple
	Set   bool
}

// IsSet returns true if OptCodeOfConductSimple was set.
func (o OptCodeOfConductSimple) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeOfConductSimple) Reset() {
	var v CodeOfConductSimple
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeOfConductSimple) SetTo(v CodeOfConductSimple) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeOfConductSimple) Get() (v CodeOfConductSimple, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningAlertDismissedReason returns new OptCodeScanningAlertDismissedReason with value set to v.
func NewOptCodeScanningAlertDismissedReason(v CodeScanningAlertDismissedReason) OptCodeScanningAlertDismissedReason {
	return OptCodeScanningAlertDismissedReason{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAlertDismissedReason is optional CodeScanningAlertDismissedReason.
type OptCodeScanningAlertDismissedReason struct {
	Value CodeScanningAlertDismissedReason
	Set   bool
}

// IsSet returns true if OptCodeScanningAlertDismissedReason was set.
func (o OptCodeScanningAlertDismissedReason) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAlertDismissedReason) Reset() {
	var v CodeScanningAlertDismissedReason
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAlertDismissedReason) SetTo(v CodeScanningAlertDismissedReason) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAlertDismissedReason) Get() (v CodeScanningAlertDismissedReason, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningAlertInstanceMessage returns new OptCodeScanningAlertInstanceMessage with value set to v.
func NewOptCodeScanningAlertInstanceMessage(v CodeScanningAlertInstanceMessage) OptCodeScanningAlertInstanceMessage {
	return OptCodeScanningAlertInstanceMessage{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAlertInstanceMessage is optional CodeScanningAlertInstanceMessage.
type OptCodeScanningAlertInstanceMessage struct {
	Value CodeScanningAlertInstanceMessage
	Set   bool
}

// IsSet returns true if OptCodeScanningAlertInstanceMessage was set.
func (o OptCodeScanningAlertInstanceMessage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAlertInstanceMessage) Reset() {
	var v CodeScanningAlertInstanceMessage
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAlertInstanceMessage) SetTo(v CodeScanningAlertInstanceMessage) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAlertInstanceMessage) Get() (v CodeScanningAlertInstanceMessage, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningAlertLocation returns new OptCodeScanningAlertLocation with value set to v.
func NewOptCodeScanningAlertLocation(v CodeScanningAlertLocation) OptCodeScanningAlertLocation {
	return OptCodeScanningAlertLocation{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAlertLocation is optional CodeScanningAlertLocation.
type OptCodeScanningAlertLocation struct {
	Value CodeScanningAlertLocation
	Set   bool
}

// IsSet returns true if OptCodeScanningAlertLocation was set.
func (o OptCodeScanningAlertLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAlertLocation) Reset() {
	var v CodeScanningAlertLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAlertLocation) SetTo(v CodeScanningAlertLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAlertLocation) Get() (v CodeScanningAlertLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningAlertState returns new OptCodeScanningAlertState with value set to v.
func NewOptCodeScanningAlertState(v CodeScanningAlertState) OptCodeScanningAlertState {
	return OptCodeScanningAlertState{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningAlertState is optional CodeScanningAlertState.
type OptCodeScanningAlertState struct {
	Value CodeScanningAlertState
	Set   bool
}

// IsSet returns true if OptCodeScanningAlertState was set.
func (o OptCodeScanningAlertState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningAlertState) Reset() {
	var v CodeScanningAlertState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningAlertState) SetTo(v CodeScanningAlertState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningAlertState) Get() (v CodeScanningAlertState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCodeScanningSarifsStatusProcessingStatus returns new OptCodeScanningSarifsStatusProcessingStatus with value set to v.
func NewOptCodeScanningSarifsStatusProcessingStatus(v CodeScanningSarifsStatusProcessingStatus) OptCodeScanningSarifsStatusProcessingStatus {
	return OptCodeScanningSarifsStatusProcessingStatus{
		Value: v,
		Set:   true,
	}
}

// OptCodeScanningSarifsStatusProcessingStatus is optional CodeScanningSarifsStatusProcessingStatus.
type OptCodeScanningSarifsStatusProcessingStatus struct {
	Value CodeScanningSarifsStatusProcessingStatus
	Set   bool
}

// IsSet returns true if OptCodeScanningSarifsStatusProcessingStatus was set.
func (o OptCodeScanningSarifsStatusProcessingStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCodeScanningSarifsStatusProcessingStatus) Reset() {
	var v CodeScanningSarifsStatusProcessingStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCodeScanningSarifsStatusProcessingStatus) SetTo(v CodeScanningSarifsStatusProcessingStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCodeScanningSarifsStatusProcessingStatus) Get() (v CodeScanningSarifsStatusProcessingStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCommitStats returns new OptCommitStats with value set to v.
func NewOptCommitStats(v CommitStats) OptCommitStats {
	return OptCommitStats{
		Value: v,
		Set:   true,
	}
}

// OptCommitStats is optional CommitStats.
type OptCommitStats struct {
	Value CommitStats
	Set   bool
}

// IsSet returns true if OptCommitStats was set.
func (o OptCommitStats) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCommitStats) Reset() {
	var v CommitStats
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCommitStats) SetTo(v CommitStats) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCommitStats) Get() (v CommitStats, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptDeploymentSimple returns new OptDeploymentSimple with value set to v.
func NewOptDeploymentSimple(v DeploymentSimple) OptDeploymentSimple {
	return OptDeploymentSimple{
		Value: v,
		Set:   true,
	}
}

// OptDeploymentSimple is optional DeploymentSimple.
type OptDeploymentSimple struct {
	Value DeploymentSimple
	Set   bool
}

// IsSet returns true if OptDeploymentSimple was set.
func (o OptDeploymentSimple) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDeploymentSimple) Reset() {
	var v DeploymentSimple
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDeploymentSimple) SetTo(v DeploymentSimple) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDeploymentSimple) Get() (v DeploymentSimple, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility returns new OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility with value set to v.
func NewOptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility(v EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility) OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility {
	return OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility{
		Value: v,
		Set:   true,
	}
}

// OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility is optional EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility.
type OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility struct {
	Value EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility
	Set   bool
}

// IsSet returns true if OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility was set.
func (o OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility) Reset() {
	var v EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility) SetTo(v EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility) Get() (v EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility returns new OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility with value set to v.
func NewOptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility(v EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility) OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility {
	return OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility{
		Value: v,
		Set:   true,
	}
}

// OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility is optional EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility.
type OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility struct {
	Value EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility
	Set   bool
}

// IsSet returns true if OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility was set.
func (o OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility) Reset() {
	var v EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility) SetTo(v EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility) Get() (v EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseApplicationJSONReqVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFileCommitCommitAuthor returns new OptFileCommitCommitAuthor with value set to v.
func NewOptFileCommitCommitAuthor(v FileCommitCommitAuthor) OptFileCommitCommitAuthor {
	return OptFileCommitCommitAuthor{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitCommitAuthor is optional FileCommitCommitAuthor.
type OptFileCommitCommitAuthor struct {
	Value FileCommitCommitAuthor
	Set   bool
}

// IsSet returns true if OptFileCommitCommitAuthor was set.
func (o OptFileCommitCommitAuthor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitCommitAuthor) Reset() {
	var v FileCommitCommitAuthor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitCommitAuthor) SetTo(v FileCommitCommitAuthor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitCommitAuthor) Get() (v FileCommitCommitAuthor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFileCommitCommitCommitter returns new OptFileCommitCommitCommitter with value set to v.
func NewOptFileCommitCommitCommitter(v FileCommitCommitCommitter) OptFileCommitCommitCommitter {
	return OptFileCommitCommitCommitter{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitCommitCommitter is optional FileCommitCommitCommitter.
type OptFileCommitCommitCommitter struct {
	Value FileCommitCommitCommitter
	Set   bool
}

// IsSet returns true if OptFileCommitCommitCommitter was set.
func (o OptFileCommitCommitCommitter) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitCommitCommitter) Reset() {
	var v FileCommitCommitCommitter
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitCommitCommitter) SetTo(v FileCommitCommitCommitter) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitCommitCommitter) Get() (v FileCommitCommitCommitter, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFileCommitCommitTree returns new OptFileCommitCommitTree with value set to v.
func NewOptFileCommitCommitTree(v FileCommitCommitTree) OptFileCommitCommitTree {
	return OptFileCommitCommitTree{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitCommitTree is optional FileCommitCommitTree.
type OptFileCommitCommitTree struct {
	Value FileCommitCommitTree
	Set   bool
}

// IsSet returns true if OptFileCommitCommitTree was set.
func (o OptFileCommitCommitTree) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitCommitTree) Reset() {
	var v FileCommitCommitTree
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitCommitTree) SetTo(v FileCommitCommitTree) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitCommitTree) Get() (v FileCommitCommitTree, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFileCommitCommitVerification returns new OptFileCommitCommitVerification with value set to v.
func NewOptFileCommitCommitVerification(v FileCommitCommitVerification) OptFileCommitCommitVerification {
	return OptFileCommitCommitVerification{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitCommitVerification is optional FileCommitCommitVerification.
type OptFileCommitCommitVerification struct {
	Value FileCommitCommitVerification
	Set   bool
}

// IsSet returns true if OptFileCommitCommitVerification was set.
func (o OptFileCommitCommitVerification) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitCommitVerification) Reset() {
	var v FileCommitCommitVerification
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitCommitVerification) SetTo(v FileCommitCommitVerification) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitCommitVerification) Get() (v FileCommitCommitVerification, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFileCommitContentLinks returns new OptFileCommitContentLinks with value set to v.
func NewOptFileCommitContentLinks(v FileCommitContentLinks) OptFileCommitContentLinks {
	return OptFileCommitContentLinks{
		Value: v,
		Set:   true,
	}
}

// OptFileCommitContentLinks is optional FileCommitContentLinks.
type OptFileCommitContentLinks struct {
	Value FileCommitContentLinks
	Set   bool
}

// IsSet returns true if OptFileCommitContentLinks was set.
func (o OptFileCommitContentLinks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFileCommitContentLinks) Reset() {
	var v FileCommitContentLinks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFileCommitContentLinks) SetTo(v FileCommitContentLinks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFileCommitContentLinks) Get() (v FileCommitContentLinks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptForbiddenGistBlock returns new OptForbiddenGistBlock with value set to v.
func NewOptForbiddenGistBlock(v ForbiddenGistBlock) OptForbiddenGistBlock {
	return OptForbiddenGistBlock{
		Value: v,
		Set:   true,
	}
}

// OptForbiddenGistBlock is optional ForbiddenGistBlock.
type OptForbiddenGistBlock struct {
	Value ForbiddenGistBlock
	Set   bool
}

// IsSet returns true if OptForbiddenGistBlock was set.
func (o OptForbiddenGistBlock) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptForbiddenGistBlock) Reset() {
	var v ForbiddenGistBlock
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptForbiddenGistBlock) SetTo(v ForbiddenGistBlock) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptForbiddenGistBlock) Get() (v ForbiddenGistBlock, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFullRepositoryPermissions returns new OptFullRepositoryPermissions with value set to v.
func NewOptFullRepositoryPermissions(v FullRepositoryPermissions) OptFullRepositoryPermissions {
	return OptFullRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositoryPermissions is optional FullRepositoryPermissions.
type OptFullRepositoryPermissions struct {
	Value FullRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptFullRepositoryPermissions was set.
func (o OptFullRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositoryPermissions) Reset() {
	var v FullRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositoryPermissions) SetTo(v FullRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositoryPermissions) Get() (v FullRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFullRepositorySecurityAndAnalysisAdvancedSecurity returns new OptFullRepositorySecurityAndAnalysisAdvancedSecurity with value set to v.
func NewOptFullRepositorySecurityAndAnalysisAdvancedSecurity(v FullRepositorySecurityAndAnalysisAdvancedSecurity) OptFullRepositorySecurityAndAnalysisAdvancedSecurity {
	return OptFullRepositorySecurityAndAnalysisAdvancedSecurity{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositorySecurityAndAnalysisAdvancedSecurity is optional FullRepositorySecurityAndAnalysisAdvancedSecurity.
type OptFullRepositorySecurityAndAnalysisAdvancedSecurity struct {
	Value FullRepositorySecurityAndAnalysisAdvancedSecurity
	Set   bool
}

// IsSet returns true if OptFullRepositorySecurityAndAnalysisAdvancedSecurity was set.
func (o OptFullRepositorySecurityAndAnalysisAdvancedSecurity) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositorySecurityAndAnalysisAdvancedSecurity) Reset() {
	var v FullRepositorySecurityAndAnalysisAdvancedSecurity
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositorySecurityAndAnalysisAdvancedSecurity) SetTo(v FullRepositorySecurityAndAnalysisAdvancedSecurity) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositorySecurityAndAnalysisAdvancedSecurity) Get() (v FullRepositorySecurityAndAnalysisAdvancedSecurity, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus returns new OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus with value set to v.
func NewOptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus(v FullRepositorySecurityAndAnalysisAdvancedSecurityStatus) OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus {
	return OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus is optional FullRepositorySecurityAndAnalysisAdvancedSecurityStatus.
type OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus struct {
	Value FullRepositorySecurityAndAnalysisAdvancedSecurityStatus
	Set   bool
}

// IsSet returns true if OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus was set.
func (o OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus) Reset() {
	var v FullRepositorySecurityAndAnalysisAdvancedSecurityStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus) SetTo(v FullRepositorySecurityAndAnalysisAdvancedSecurityStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositorySecurityAndAnalysisAdvancedSecurityStatus) Get() (v FullRepositorySecurityAndAnalysisAdvancedSecurityStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFullRepositorySecurityAndAnalysisSecretScanning returns new OptFullRepositorySecurityAndAnalysisSecretScanning with value set to v.
func NewOptFullRepositorySecurityAndAnalysisSecretScanning(v FullRepositorySecurityAndAnalysisSecretScanning) OptFullRepositorySecurityAndAnalysisSecretScanning {
	return OptFullRepositorySecurityAndAnalysisSecretScanning{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositorySecurityAndAnalysisSecretScanning is optional FullRepositorySecurityAndAnalysisSecretScanning.
type OptFullRepositorySecurityAndAnalysisSecretScanning struct {
	Value FullRepositorySecurityAndAnalysisSecretScanning
	Set   bool
}

// IsSet returns true if OptFullRepositorySecurityAndAnalysisSecretScanning was set.
func (o OptFullRepositorySecurityAndAnalysisSecretScanning) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositorySecurityAndAnalysisSecretScanning) Reset() {
	var v FullRepositorySecurityAndAnalysisSecretScanning
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositorySecurityAndAnalysisSecretScanning) SetTo(v FullRepositorySecurityAndAnalysisSecretScanning) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositorySecurityAndAnalysisSecretScanning) Get() (v FullRepositorySecurityAndAnalysisSecretScanning, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFullRepositorySecurityAndAnalysisSecretScanningStatus returns new OptFullRepositorySecurityAndAnalysisSecretScanningStatus with value set to v.
func NewOptFullRepositorySecurityAndAnalysisSecretScanningStatus(v FullRepositorySecurityAndAnalysisSecretScanningStatus) OptFullRepositorySecurityAndAnalysisSecretScanningStatus {
	return OptFullRepositorySecurityAndAnalysisSecretScanningStatus{
		Value: v,
		Set:   true,
	}
}

// OptFullRepositorySecurityAndAnalysisSecretScanningStatus is optional FullRepositorySecurityAndAnalysisSecretScanningStatus.
type OptFullRepositorySecurityAndAnalysisSecretScanningStatus struct {
	Value FullRepositorySecurityAndAnalysisSecretScanningStatus
	Set   bool
}

// IsSet returns true if OptFullRepositorySecurityAndAnalysisSecretScanningStatus was set.
func (o OptFullRepositorySecurityAndAnalysisSecretScanningStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFullRepositorySecurityAndAnalysisSecretScanningStatus) Reset() {
	var v FullRepositorySecurityAndAnalysisSecretScanningStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFullRepositorySecurityAndAnalysisSecretScanningStatus) SetTo(v FullRepositorySecurityAndAnalysisSecretScanningStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFullRepositorySecurityAndAnalysisSecretScanningStatus) Get() (v FullRepositorySecurityAndAnalysisSecretScanningStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGitCreateCommitApplicationJSONReqAuthor returns new OptGitCreateCommitApplicationJSONReqAuthor with value set to v.
func NewOptGitCreateCommitApplicationJSONReqAuthor(v GitCreateCommitApplicationJSONReqAuthor) OptGitCreateCommitApplicationJSONReqAuthor {
	return OptGitCreateCommitApplicationJSONReqAuthor{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateCommitApplicationJSONReqAuthor is optional GitCreateCommitApplicationJSONReqAuthor.
type OptGitCreateCommitApplicationJSONReqAuthor struct {
	Value GitCreateCommitApplicationJSONReqAuthor
	Set   bool
}

// IsSet returns true if OptGitCreateCommitApplicationJSONReqAuthor was set.
func (o OptGitCreateCommitApplicationJSONReqAuthor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateCommitApplicationJSONReqAuthor) Reset() {
	var v GitCreateCommitApplicationJSONReqAuthor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateCommitApplicationJSONReqAuthor) SetTo(v GitCreateCommitApplicationJSONReqAuthor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateCommitApplicationJSONReqAuthor) Get() (v GitCreateCommitApplicationJSONReqAuthor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGitCreateCommitApplicationJSONReqCommitter returns new OptGitCreateCommitApplicationJSONReqCommitter with value set to v.
func NewOptGitCreateCommitApplicationJSONReqCommitter(v GitCreateCommitApplicationJSONReqCommitter) OptGitCreateCommitApplicationJSONReqCommitter {
	return OptGitCreateCommitApplicationJSONReqCommitter{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateCommitApplicationJSONReqCommitter is optional GitCreateCommitApplicationJSONReqCommitter.
type OptGitCreateCommitApplicationJSONReqCommitter struct {
	Value GitCreateCommitApplicationJSONReqCommitter
	Set   bool
}

// IsSet returns true if OptGitCreateCommitApplicationJSONReqCommitter was set.
func (o OptGitCreateCommitApplicationJSONReqCommitter) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateCommitApplicationJSONReqCommitter) Reset() {
	var v GitCreateCommitApplicationJSONReqCommitter
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateCommitApplicationJSONReqCommitter) SetTo(v GitCreateCommitApplicationJSONReqCommitter) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateCommitApplicationJSONReqCommitter) Get() (v GitCreateCommitApplicationJSONReqCommitter, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGitCreateTagApplicationJSONReqTagger returns new OptGitCreateTagApplicationJSONReqTagger with value set to v.
func NewOptGitCreateTagApplicationJSONReqTagger(v GitCreateTagApplicationJSONReqTagger) OptGitCreateTagApplicationJSONReqTagger {
	return OptGitCreateTagApplicationJSONReqTagger{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateTagApplicationJSONReqTagger is optional GitCreateTagApplicationJSONReqTagger.
type OptGitCreateTagApplicationJSONReqTagger struct {
	Value GitCreateTagApplicationJSONReqTagger
	Set   bool
}

// IsSet returns true if OptGitCreateTagApplicationJSONReqTagger was set.
func (o OptGitCreateTagApplicationJSONReqTagger) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateTagApplicationJSONReqTagger) Reset() {
	var v GitCreateTagApplicationJSONReqTagger
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateTagApplicationJSONReqTagger) SetTo(v GitCreateTagApplicationJSONReqTagger) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateTagApplicationJSONReqTagger) Get() (v GitCreateTagApplicationJSONReqTagger, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGitCreateTreeApplicationJSONReqTreeItemMode returns new OptGitCreateTreeApplicationJSONReqTreeItemMode with value set to v.
func NewOptGitCreateTreeApplicationJSONReqTreeItemMode(v GitCreateTreeApplicationJSONReqTreeItemMode) OptGitCreateTreeApplicationJSONReqTreeItemMode {
	return OptGitCreateTreeApplicationJSONReqTreeItemMode{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateTreeApplicationJSONReqTreeItemMode is optional GitCreateTreeApplicationJSONReqTreeItemMode.
type OptGitCreateTreeApplicationJSONReqTreeItemMode struct {
	Value GitCreateTreeApplicationJSONReqTreeItemMode
	Set   bool
}

// IsSet returns true if OptGitCreateTreeApplicationJSONReqTreeItemMode was set.
func (o OptGitCreateTreeApplicationJSONReqTreeItemMode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateTreeApplicationJSONReqTreeItemMode) Reset() {
	var v GitCreateTreeApplicationJSONReqTreeItemMode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateTreeApplicationJSONReqTreeItemMode) SetTo(v GitCreateTreeApplicationJSONReqTreeItemMode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateTreeApplicationJSONReqTreeItemMode) Get() (v GitCreateTreeApplicationJSONReqTreeItemMode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGitCreateTreeApplicationJSONReqTreeItemType returns new OptGitCreateTreeApplicationJSONReqTreeItemType with value set to v.
func NewOptGitCreateTreeApplicationJSONReqTreeItemType(v GitCreateTreeApplicationJSONReqTreeItemType) OptGitCreateTreeApplicationJSONReqTreeItemType {
	return OptGitCreateTreeApplicationJSONReqTreeItemType{
		Value: v,
		Set:   true,
	}
}

// OptGitCreateTreeApplicationJSONReqTreeItemType is optional GitCreateTreeApplicationJSONReqTreeItemType.
type OptGitCreateTreeApplicationJSONReqTreeItemType struct {
	Value GitCreateTreeApplicationJSONReqTreeItemType
	Set   bool
}

// IsSet returns true if OptGitCreateTreeApplicationJSONReqTreeItemType was set.
func (o OptGitCreateTreeApplicationJSONReqTreeItemType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGitCreateTreeApplicationJSONReqTreeItemType) Reset() {
	var v GitCreateTreeApplicationJSONReqTreeItemType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGitCreateTreeApplicationJSONReqTreeItemType) SetTo(v GitCreateTreeApplicationJSONReqTreeItemType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGitCreateTreeApplicationJSONReqTreeItemType) Get() (v GitCreateTreeApplicationJSONReqTreeItemType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInstallationTokenRepositorySelection returns new OptInstallationTokenRepositorySelection with value set to v.
func NewOptInstallationTokenRepositorySelection(v InstallationTokenRepositorySelection) OptInstallationTokenRepositorySelection {
	return OptInstallationTokenRepositorySelection{
		Value: v,
		Set:   true,
	}
}

// OptInstallationTokenRepositorySelection is optional InstallationTokenRepositorySelection.
type OptInstallationTokenRepositorySelection struct {
	Value InstallationTokenRepositorySelection
	Set   bool
}

// IsSet returns true if OptInstallationTokenRepositorySelection was set.
func (o OptInstallationTokenRepositorySelection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInstallationTokenRepositorySelection) Reset() {
	var v InstallationTokenRepositorySelection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInstallationTokenRepositorySelection) SetTo(v InstallationTokenRepositorySelection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInstallationTokenRepositorySelection) Get() (v InstallationTokenRepositorySelection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInteractionExpiry returns new OptInteractionExpiry with value set to v.
func NewOptInteractionExpiry(v InteractionExpiry) OptInteractionExpiry {
	return OptInteractionExpiry{
		Value: v,
		Set:   true,
	}
}

// OptInteractionExpiry is optional InteractionExpiry.
type OptInteractionExpiry struct {
	Value InteractionExpiry
	Set   bool
}

// IsSet returns true if OptInteractionExpiry was set.
func (o OptInteractionExpiry) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInteractionExpiry) Reset() {
	var v InteractionExpiry
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInteractionExpiry) SetTo(v InteractionExpiry) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInteractionExpiry) Get() (v InteractionExpiry, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssuesCreateMilestoneApplicationJSONReqState returns new OptIssuesCreateMilestoneApplicationJSONReqState with value set to v.
func NewOptIssuesCreateMilestoneApplicationJSONReqState(v IssuesCreateMilestoneApplicationJSONReqState) OptIssuesCreateMilestoneApplicationJSONReqState {
	return OptIssuesCreateMilestoneApplicationJSONReqState{
		Value: v,
		Set:   true,
	}
}

// OptIssuesCreateMilestoneApplicationJSONReqState is optional IssuesCreateMilestoneApplicationJSONReqState.
type OptIssuesCreateMilestoneApplicationJSONReqState struct {
	Value IssuesCreateMilestoneApplicationJSONReqState
	Set   bool
}

// IsSet returns true if OptIssuesCreateMilestoneApplicationJSONReqState was set.
func (o OptIssuesCreateMilestoneApplicationJSONReqState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssuesCreateMilestoneApplicationJSONReqState) Reset() {
	var v IssuesCreateMilestoneApplicationJSONReqState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssuesCreateMilestoneApplicationJSONReqState) SetTo(v IssuesCreateMilestoneApplicationJSONReqState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssuesCreateMilestoneApplicationJSONReqState) Get() (v IssuesCreateMilestoneApplicationJSONReqState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssuesLockApplicationJSONReqLockReason returns new OptIssuesLockApplicationJSONReqLockReason with value set to v.
func NewOptIssuesLockApplicationJSONReqLockReason(v IssuesLockApplicationJSONReqLockReason) OptIssuesLockApplicationJSONReqLockReason {
	return OptIssuesLockApplicationJSONReqLockReason{
		Value: v,
		Set:   true,
	}
}

// OptIssuesLockApplicationJSONReqLockReason is optional IssuesLockApplicationJSONReqLockReason.
type OptIssuesLockApplicationJSONReqLockReason struct {
	Value IssuesLockApplicationJSONReqLockReason
	Set   bool
}

// IsSet returns true if OptIssuesLockApplicationJSONReqLockReason was set.
func (o OptIssuesLockApplicationJSONReqLockReason) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssuesLockApplicationJSONReqLockReason) Reset() {
	var v IssuesLockApplicationJSONReqLockReason
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssuesLockApplicationJSONReqLockReason) SetTo(v IssuesLockApplicationJSONReqLockReason) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssuesLockApplicationJSONReqLockReason) Get() (v IssuesLockApplicationJSONReqLockReason, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptIssuesUpdateMilestoneApplicationJSONReqState returns new OptIssuesUpdateMilestoneApplicationJSONReqState with value set to v.
func NewOptIssuesUpdateMilestoneApplicationJSONReqState(v IssuesUpdateMilestoneApplicationJSONReqState) OptIssuesUpdateMilestoneApplicationJSONReqState {
	return OptIssuesUpdateMilestoneApplicationJSONReqState{
		Value: v,
		Set:   true,
	}
}

// OptIssuesUpdateMilestoneApplicationJSONReqState is optional IssuesUpdateMilestoneApplicationJSONReqState.
type OptIssuesUpdateMilestoneApplicationJSONReqState struct {
	Value IssuesUpdateMilestoneApplicationJSONReqState
	Set   bool
}

// IsSet returns true if OptIssuesUpdateMilestoneApplicationJSONReqState was set.
func (o OptIssuesUpdateMilestoneApplicationJSONReqState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptIssuesUpdateMilestoneApplicationJSONReqState) Reset() {
	var v IssuesUpdateMilestoneApplicationJSONReqState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptIssuesUpdateMilestoneApplicationJSONReqState) SetTo(v IssuesUpdateMilestoneApplicationJSONReqState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptIssuesUpdateMilestoneApplicationJSONReqState) Get() (v IssuesUpdateMilestoneApplicationJSONReqState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptLinkWithType returns new OptLinkWithType with value set to v.
func NewOptLinkWithType(v LinkWithType) OptLinkWithType {
	return OptLinkWithType{
		Value: v,
		Set:   true,
	}
}

// OptLinkWithType is optional LinkWithType.
type OptLinkWithType struct {
	Value LinkWithType
	Set   bool
}

// IsSet returns true if OptLinkWithType was set.
func (o OptLinkWithType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLinkWithType) Reset() {
	var v LinkWithType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLinkWithType) SetTo(v LinkWithType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLinkWithType) Get() (v LinkWithType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMarkdownRenderApplicationJSONReqMode returns new OptMarkdownRenderApplicationJSONReqMode with value set to v.
func NewOptMarkdownRenderApplicationJSONReqMode(v MarkdownRenderApplicationJSONReqMode) OptMarkdownRenderApplicationJSONReqMode {
	return OptMarkdownRenderApplicationJSONReqMode{
		Value: v,
		Set:   true,
	}
}

// OptMarkdownRenderApplicationJSONReqMode is optional MarkdownRenderApplicationJSONReqMode.
type OptMarkdownRenderApplicationJSONReqMode struct {
	Value MarkdownRenderApplicationJSONReqMode
	Set   bool
}

// IsSet returns true if OptMarkdownRenderApplicationJSONReqMode was set.
func (o OptMarkdownRenderApplicationJSONReqMode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMarkdownRenderApplicationJSONReqMode) Reset() {
	var v MarkdownRenderApplicationJSONReqMode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMarkdownRenderApplicationJSONReqMode) SetTo(v MarkdownRenderApplicationJSONReqMode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMarkdownRenderApplicationJSONReqMode) Get() (v MarkdownRenderApplicationJSONReqMode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMarketplaceListingPlan returns new OptMarketplaceListingPlan with value set to v.
func NewOptMarketplaceListingPlan(v MarketplaceListingPlan) OptMarketplaceListingPlan {
	return OptMarketplaceListingPlan{
		Value: v,
		Set:   true,
	}
}

// OptMarketplaceListingPlan is optional MarketplaceListingPlan.
type OptMarketplaceListingPlan struct {
	Value MarketplaceListingPlan
	Set   bool
}

// IsSet returns true if OptMarketplaceListingPlan was set.
func (o OptMarketplaceListingPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMarketplaceListingPlan) Reset() {
	var v MarketplaceListingPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMarketplaceListingPlan) SetTo(v MarketplaceListingPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMarketplaceListingPlan) Get() (v MarketplaceListingPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMergedUpstreamMergeType returns new OptMergedUpstreamMergeType with value set to v.
func NewOptMergedUpstreamMergeType(v MergedUpstreamMergeType) OptMergedUpstreamMergeType {
	return OptMergedUpstreamMergeType{
		Value: v,
		Set:   true,
	}
}

// OptMergedUpstreamMergeType is optional MergedUpstreamMergeType.
type OptMergedUpstreamMergeType struct {
	Value MergedUpstreamMergeType
	Set   bool
}

// IsSet returns true if OptMergedUpstreamMergeType was set.
func (o OptMergedUpstreamMergeType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMergedUpstreamMergeType) Reset() {
	var v MergedUpstreamMergeType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMergedUpstreamMergeType) SetTo(v MergedUpstreamMergeType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMergedUpstreamMergeType) Get() (v MergedUpstreamMergeType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMigrationsStartImportApplicationJSONReqVcs returns new OptMigrationsStartImportApplicationJSONReqVcs with value set to v.
func NewOptMigrationsStartImportApplicationJSONReqVcs(v MigrationsStartImportApplicationJSONReqVcs) OptMigrationsStartImportApplicationJSONReqVcs {
	return OptMigrationsStartImportApplicationJSONReqVcs{
		Value: v,
		Set:   true,
	}
}

// OptMigrationsStartImportApplicationJSONReqVcs is optional MigrationsStartImportApplicationJSONReqVcs.
type OptMigrationsStartImportApplicationJSONReqVcs struct {
	Value MigrationsStartImportApplicationJSONReqVcs
	Set   bool
}

// IsSet returns true if OptMigrationsStartImportApplicationJSONReqVcs was set.
func (o OptMigrationsStartImportApplicationJSONReqVcs) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMigrationsStartImportApplicationJSONReqVcs) Reset() {
	var v MigrationsStartImportApplicationJSONReqVcs
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMigrationsStartImportApplicationJSONReqVcs) SetTo(v MigrationsStartImportApplicationJSONReqVcs) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMigrationsStartImportApplicationJSONReqVcs) Get() (v MigrationsStartImportApplicationJSONReqVcs, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMinimalRepositoryPermissions returns new OptMinimalRepositoryPermissions with value set to v.
func NewOptMinimalRepositoryPermissions(v MinimalRepositoryPermissions) OptMinimalRepositoryPermissions {
	return OptMinimalRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptMinimalRepositoryPermissions is optional MinimalRepositoryPermissions.
type OptMinimalRepositoryPermissions struct {
	Value MinimalRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptMinimalRepositoryPermissions was set.
func (o OptMinimalRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMinimalRepositoryPermissions) Reset() {
	var v MinimalRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMinimalRepositoryPermissions) SetTo(v MinimalRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMinimalRepositoryPermissions) Get() (v MinimalRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilBool returns new OptNilBool with value set to v.
func NewOptNilBool(v bool) OptNilBool {
	return OptNilBool{
		Value: v,
		Set:   true,
	}
}

// OptNilBool is optional nullable bool.
type OptNilBool struct {
	Value bool
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBool was set.
func (o OptNilBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBool) SetTo(v bool) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilBool) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilFullRepositorySecurityAndAnalysis returns new OptNilFullRepositorySecurityAndAnalysis with value set to v.
func NewOptNilFullRepositorySecurityAndAnalysis(v FullRepositorySecurityAndAnalysis) OptNilFullRepositorySecurityAndAnalysis {
	return OptNilFullRepositorySecurityAndAnalysis{
		Value: v,
		Set:   true,
	}
}

// OptNilFullRepositorySecurityAndAnalysis is optional nullable FullRepositorySecurityAndAnalysis.
type OptNilFullRepositorySecurityAndAnalysis struct {
	Value FullRepositorySecurityAndAnalysis
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilFullRepositorySecurityAndAnalysis was set.
func (o OptNilFullRepositorySecurityAndAnalysis) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilFullRepositorySecurityAndAnalysis) Reset() {
	var v FullRepositorySecurityAndAnalysis
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilFullRepositorySecurityAndAnalysis) SetTo(v FullRepositorySecurityAndAnalysis) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilFullRepositorySecurityAndAnalysis) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilFullRepositorySecurityAndAnalysis) Get() (v FullRepositorySecurityAndAnalysis, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilInt returns new OptNilInt with value set to v.
func NewOptNilInt(v int) OptNilInt {
	return OptNilInt{
		Value: v,
		Set:   true,
	}
}

// OptNilInt is optional nullable int.
type OptNilInt struct {
	Value int
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt was set.
func (o OptNilInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt) SetTo(v int) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilInt) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilMarketplacePurchaseMarketplacePendingChange returns new OptNilMarketplacePurchaseMarketplacePendingChange with value set to v.
func NewOptNilMarketplacePurchaseMarketplacePendingChange(v MarketplacePurchaseMarketplacePendingChange) OptNilMarketplacePurchaseMarketplacePendingChange {
	return OptNilMarketplacePurchaseMarketplacePendingChange{
		Value: v,
		Set:   true,
	}
}

// OptNilMarketplacePurchaseMarketplacePendingChange is optional nullable MarketplacePurchaseMarketplacePendingChange.
type OptNilMarketplacePurchaseMarketplacePendingChange struct {
	Value MarketplacePurchaseMarketplacePendingChange
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilMarketplacePurchaseMarketplacePendingChange was set.
func (o OptNilMarketplacePurchaseMarketplacePendingChange) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilMarketplacePurchaseMarketplacePendingChange) Reset() {
	var v MarketplacePurchaseMarketplacePendingChange
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilMarketplacePurchaseMarketplacePendingChange) SetTo(v MarketplacePurchaseMarketplacePendingChange) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilMarketplacePurchaseMarketplacePendingChange) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilMarketplacePurchaseMarketplacePendingChange) Get() (v MarketplacePurchaseMarketplacePendingChange, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilMinimalRepositoryLicense returns new OptNilMinimalRepositoryLicense with value set to v.
func NewOptNilMinimalRepositoryLicense(v MinimalRepositoryLicense) OptNilMinimalRepositoryLicense {
	return OptNilMinimalRepositoryLicense{
		Value: v,
		Set:   true,
	}
}

// OptNilMinimalRepositoryLicense is optional nullable MinimalRepositoryLicense.
type OptNilMinimalRepositoryLicense struct {
	Value MinimalRepositoryLicense
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilMinimalRepositoryLicense was set.
func (o OptNilMinimalRepositoryLicense) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilMinimalRepositoryLicense) Reset() {
	var v MinimalRepositoryLicense
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilMinimalRepositoryLicense) SetTo(v MinimalRepositoryLicense) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilMinimalRepositoryLicense) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilMinimalRepositoryLicense) Get() (v MinimalRepositoryLicense, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilNullableRepositoryTemplateRepository returns new OptNilNullableRepositoryTemplateRepository with value set to v.
func NewOptNilNullableRepositoryTemplateRepository(v NullableRepositoryTemplateRepository) OptNilNullableRepositoryTemplateRepository {
	return OptNilNullableRepositoryTemplateRepository{
		Value: v,
		Set:   true,
	}
}

// OptNilNullableRepositoryTemplateRepository is optional nullable NullableRepositoryTemplateRepository.
type OptNilNullableRepositoryTemplateRepository struct {
	Value NullableRepositoryTemplateRepository
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilNullableRepositoryTemplateRepository was set.
func (o OptNilNullableRepositoryTemplateRepository) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilNullableRepositoryTemplateRepository) Reset() {
	var v NullableRepositoryTemplateRepository
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilNullableRepositoryTemplateRepository) SetTo(v NullableRepositoryTemplateRepository) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilNullableRepositoryTemplateRepository) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilNullableRepositoryTemplateRepository) Get() (v NullableRepositoryTemplateRepository, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilPageProtectedDomainState returns new OptNilPageProtectedDomainState with value set to v.
func NewOptNilPageProtectedDomainState(v PageProtectedDomainState) OptNilPageProtectedDomainState {
	return OptNilPageProtectedDomainState{
		Value: v,
		Set:   true,
	}
}

// OptNilPageProtectedDomainState is optional nullable PageProtectedDomainState.
type OptNilPageProtectedDomainState struct {
	Value PageProtectedDomainState
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPageProtectedDomainState was set.
func (o OptNilPageProtectedDomainState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPageProtectedDomainState) Reset() {
	var v PageProtectedDomainState
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPageProtectedDomainState) SetTo(v PageProtectedDomainState) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPageProtectedDomainState) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPageProtectedDomainState) Get() (v PageProtectedDomainState, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilPagesHealthCheckAltDomain returns new OptNilPagesHealthCheckAltDomain with value set to v.
func NewOptNilPagesHealthCheckAltDomain(v PagesHealthCheckAltDomain) OptNilPagesHealthCheckAltDomain {
	return OptNilPagesHealthCheckAltDomain{
		Value: v,
		Set:   true,
	}
}

// OptNilPagesHealthCheckAltDomain is optional nullable PagesHealthCheckAltDomain.
type OptNilPagesHealthCheckAltDomain struct {
	Value PagesHealthCheckAltDomain
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPagesHealthCheckAltDomain was set.
func (o OptNilPagesHealthCheckAltDomain) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPagesHealthCheckAltDomain) Reset() {
	var v PagesHealthCheckAltDomain
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPagesHealthCheckAltDomain) SetTo(v PagesHealthCheckAltDomain) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPagesHealthCheckAltDomain) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPagesHealthCheckAltDomain) Get() (v PagesHealthCheckAltDomain, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilPullRequestReviewCommentStartSide returns new OptNilPullRequestReviewCommentStartSide with value set to v.
func NewOptNilPullRequestReviewCommentStartSide(v PullRequestReviewCommentStartSide) OptNilPullRequestReviewCommentStartSide {
	return OptNilPullRequestReviewCommentStartSide{
		Value: v,
		Set:   true,
	}
}

// OptNilPullRequestReviewCommentStartSide is optional nullable PullRequestReviewCommentStartSide.
type OptNilPullRequestReviewCommentStartSide struct {
	Value PullRequestReviewCommentStartSide
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilPullRequestReviewCommentStartSide was set.
func (o OptNilPullRequestReviewCommentStartSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilPullRequestReviewCommentStartSide) Reset() {
	var v PullRequestReviewCommentStartSide
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilPullRequestReviewCommentStartSide) SetTo(v PullRequestReviewCommentStartSide) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilPullRequestReviewCommentStartSide) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilPullRequestReviewCommentStartSide) Get() (v PullRequestReviewCommentStartSide, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilReposUpdateApplicationJSONReqSecurityAndAnalysis returns new OptNilReposUpdateApplicationJSONReqSecurityAndAnalysis with value set to v.
func NewOptNilReposUpdateApplicationJSONReqSecurityAndAnalysis(v ReposUpdateApplicationJSONReqSecurityAndAnalysis) OptNilReposUpdateApplicationJSONReqSecurityAndAnalysis {
	return OptNilReposUpdateApplicationJSONReqSecurityAndAnalysis{
		Value: v,
		Set:   true,
	}
}

// OptNilReposUpdateApplicationJSONReqSecurityAndAnalysis is optional nullable ReposUpdateApplicationJSONReqSecurityAndAnalysis.
type OptNilReposUpdateApplicationJSONReqSecurityAndAnalysis struct {
	Value ReposUpdateApplicationJSONReqSecurityAndAnalysis
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilReposUpdateApplicationJSONReqSecurityAndAnalysis was set.
func (o OptNilReposUpdateApplicationJSONReqSecurityAndAnalysis) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilReposUpdateApplicationJSONReqSecurityAndAnalysis) Reset() {
	var v ReposUpdateApplicationJSONReqSecurityAndAnalysis
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilReposUpdateApplicationJSONReqSecurityAndAnalysis) SetTo(v ReposUpdateApplicationJSONReqSecurityAndAnalysis) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilReposUpdateApplicationJSONReqSecurityAndAnalysis) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilReposUpdateApplicationJSONReqSecurityAndAnalysis) Get() (v ReposUpdateApplicationJSONReqSecurityAndAnalysis, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilRepositoryTemplateRepository returns new OptNilRepositoryTemplateRepository with value set to v.
func NewOptNilRepositoryTemplateRepository(v RepositoryTemplateRepository) OptNilRepositoryTemplateRepository {
	return OptNilRepositoryTemplateRepository{
		Value: v,
		Set:   true,
	}
}

// OptNilRepositoryTemplateRepository is optional nullable RepositoryTemplateRepository.
type OptNilRepositoryTemplateRepository struct {
	Value RepositoryTemplateRepository
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilRepositoryTemplateRepository was set.
func (o OptNilRepositoryTemplateRepository) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilRepositoryTemplateRepository) Reset() {
	var v RepositoryTemplateRepository
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilRepositoryTemplateRepository) SetTo(v RepositoryTemplateRepository) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilRepositoryTemplateRepository) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilRepositoryTemplateRepository) Get() (v RepositoryTemplateRepository, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilReviewCommentStartSide returns new OptNilReviewCommentStartSide with value set to v.
func NewOptNilReviewCommentStartSide(v ReviewCommentStartSide) OptNilReviewCommentStartSide {
	return OptNilReviewCommentStartSide{
		Value: v,
		Set:   true,
	}
}

// OptNilReviewCommentStartSide is optional nullable ReviewCommentStartSide.
type OptNilReviewCommentStartSide struct {
	Value ReviewCommentStartSide
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilReviewCommentStartSide was set.
func (o OptNilReviewCommentStartSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilReviewCommentStartSide) Reset() {
	var v ReviewCommentStartSide
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilReviewCommentStartSide) SetTo(v ReviewCommentStartSide) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilReviewCommentStartSide) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilReviewCommentStartSide) Get() (v ReviewCommentStartSide, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilTime returns new OptNilTime with value set to v.
func NewOptNilTime(v time.Time) OptNilTime {
	return OptNilTime{
		Value: v,
		Set:   true,
	}
}

// OptNilTime is optional nullable time.Time.
type OptNilTime struct {
	Value time.Time
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTime was set.
func (o OptNilTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTime) SetTo(v time.Time) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilTime) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTime) Get() (v time.Time, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNilURL returns new OptNilURL with value set to v.
func NewOptNilURL(v url.URL) OptNilURL {
	return OptNilURL{
		Value: v,
		Set:   true,
	}
}

// OptNilURL is optional nullable url.URL.
type OptNilURL struct {
	Value url.URL
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilURL was set.
func (o OptNilURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilURL) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilURL) SetTo(v url.URL) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilURL) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o OptNilURL) Get() (v url.URL, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNullableIntegration returns new OptNullableIntegration with value set to v.
func NewOptNullableIntegration(v NullableIntegration) OptNullableIntegration {
	return OptNullableIntegration{
		Value: v,
		Set:   true,
	}
}

// OptNullableIntegration is optional NullableIntegration.
type OptNullableIntegration struct {
	Value NullableIntegration
	Set   bool
}

// IsSet returns true if OptNullableIntegration was set.
func (o OptNullableIntegration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableIntegration) Reset() {
	var v NullableIntegration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableIntegration) SetTo(v NullableIntegration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableIntegration) Get() (v NullableIntegration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNullableRepository returns new OptNullableRepository with value set to v.
func NewOptNullableRepository(v NullableRepository) OptNullableRepository {
	return OptNullableRepository{
		Value: v,
		Set:   true,
	}
}

// OptNullableRepository is optional NullableRepository.
type OptNullableRepository struct {
	Value NullableRepository
	Set   bool
}

// IsSet returns true if OptNullableRepository was set.
func (o OptNullableRepository) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableRepository) Reset() {
	var v NullableRepository
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableRepository) SetTo(v NullableRepository) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableRepository) Get() (v NullableRepository, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNullableRepositoryPermissions returns new OptNullableRepositoryPermissions with value set to v.
func NewOptNullableRepositoryPermissions(v NullableRepositoryPermissions) OptNullableRepositoryPermissions {
	return OptNullableRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptNullableRepositoryPermissions is optional NullableRepositoryPermissions.
type OptNullableRepositoryPermissions struct {
	Value NullableRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptNullableRepositoryPermissions was set.
func (o OptNullableRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableRepositoryPermissions) Reset() {
	var v NullableRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableRepositoryPermissions) SetTo(v NullableRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableRepositoryPermissions) Get() (v NullableRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNullableRepositoryTemplateRepositoryOwner returns new OptNullableRepositoryTemplateRepositoryOwner with value set to v.
func NewOptNullableRepositoryTemplateRepositoryOwner(v NullableRepositoryTemplateRepositoryOwner) OptNullableRepositoryTemplateRepositoryOwner {
	return OptNullableRepositoryTemplateRepositoryOwner{
		Value: v,
		Set:   true,
	}
}

// OptNullableRepositoryTemplateRepositoryOwner is optional NullableRepositoryTemplateRepositoryOwner.
type OptNullableRepositoryTemplateRepositoryOwner struct {
	Value NullableRepositoryTemplateRepositoryOwner
	Set   bool
}

// IsSet returns true if OptNullableRepositoryTemplateRepositoryOwner was set.
func (o OptNullableRepositoryTemplateRepositoryOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableRepositoryTemplateRepositoryOwner) Reset() {
	var v NullableRepositoryTemplateRepositoryOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableRepositoryTemplateRepositoryOwner) SetTo(v NullableRepositoryTemplateRepositoryOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableRepositoryTemplateRepositoryOwner) Get() (v NullableRepositoryTemplateRepositoryOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNullableRepositoryTemplateRepositoryPermissions returns new OptNullableRepositoryTemplateRepositoryPermissions with value set to v.
func NewOptNullableRepositoryTemplateRepositoryPermissions(v NullableRepositoryTemplateRepositoryPermissions) OptNullableRepositoryTemplateRepositoryPermissions {
	return OptNullableRepositoryTemplateRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptNullableRepositoryTemplateRepositoryPermissions is optional NullableRepositoryTemplateRepositoryPermissions.
type OptNullableRepositoryTemplateRepositoryPermissions struct {
	Value NullableRepositoryTemplateRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptNullableRepositoryTemplateRepositoryPermissions was set.
func (o OptNullableRepositoryTemplateRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableRepositoryTemplateRepositoryPermissions) Reset() {
	var v NullableRepositoryTemplateRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableRepositoryTemplateRepositoryPermissions) SetTo(v NullableRepositoryTemplateRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableRepositoryTemplateRepositoryPermissions) Get() (v NullableRepositoryTemplateRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNullableScopedInstallation returns new OptNullableScopedInstallation with value set to v.
func NewOptNullableScopedInstallation(v NullableScopedInstallation) OptNullableScopedInstallation {
	return OptNullableScopedInstallation{
		Value: v,
		Set:   true,
	}
}

// OptNullableScopedInstallation is optional NullableScopedInstallation.
type OptNullableScopedInstallation struct {
	Value NullableScopedInstallation
	Set   bool
}

// IsSet returns true if OptNullableScopedInstallation was set.
func (o OptNullableScopedInstallation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableScopedInstallation) Reset() {
	var v NullableScopedInstallation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableScopedInstallation) SetTo(v NullableScopedInstallation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableScopedInstallation) Get() (v NullableScopedInstallation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNullableSimpleUser returns new OptNullableSimpleUser with value set to v.
func NewOptNullableSimpleUser(v NullableSimpleUser) OptNullableSimpleUser {
	return OptNullableSimpleUser{
		Value: v,
		Set:   true,
	}
}

// OptNullableSimpleUser is optional NullableSimpleUser.
type OptNullableSimpleUser struct {
	Value NullableSimpleUser
	Set   bool
}

// IsSet returns true if OptNullableSimpleUser was set.
func (o OptNullableSimpleUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableSimpleUser) Reset() {
	var v NullableSimpleUser
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableSimpleUser) SetTo(v NullableSimpleUser) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableSimpleUser) Get() (v NullableSimpleUser, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptNullableTeamSimple returns new OptNullableTeamSimple with value set to v.
func NewOptNullableTeamSimple(v NullableTeamSimple) OptNullableTeamSimple {
	return OptNullableTeamSimple{
		Value: v,
		Set:   true,
	}
}

// OptNullableTeamSimple is optional NullableTeamSimple.
type OptNullableTeamSimple struct {
	Value NullableTeamSimple
	Set   bool
}

// IsSet returns true if OptNullableTeamSimple was set.
func (o OptNullableTeamSimple) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNullableTeamSimple) Reset() {
	var v NullableTeamSimple
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptNullableTeamSimple) SetTo(v NullableTeamSimple) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNullableTeamSimple) Get() (v NullableTeamSimple, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrgMembershipPermissions returns new OptOrgMembershipPermissions with value set to v.
func NewOptOrgMembershipPermissions(v OrgMembershipPermissions) OptOrgMembershipPermissions {
	return OptOrgMembershipPermissions{
		Value: v,
		Set:   true,
	}
}

// OptOrgMembershipPermissions is optional OrgMembershipPermissions.
type OptOrgMembershipPermissions struct {
	Value OrgMembershipPermissions
	Set   bool
}

// IsSet returns true if OptOrgMembershipPermissions was set.
func (o OptOrgMembershipPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrgMembershipPermissions) Reset() {
	var v OrgMembershipPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgMembershipPermissions) SetTo(v OrgMembershipPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgMembershipPermissions) Get() (v OrgMembershipPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrganizationFullPlan returns new OptOrganizationFullPlan with value set to v.
func NewOptOrganizationFullPlan(v OrganizationFullPlan) OptOrganizationFullPlan {
	return OptOrganizationFullPlan{
		Value: v,
		Set:   true,
	}
}

// OptOrganizationFullPlan is optional OrganizationFullPlan.
type OptOrganizationFullPlan struct {
	Value OrganizationFullPlan
	Set   bool
}

// IsSet returns true if OptOrganizationFullPlan was set.
func (o OptOrganizationFullPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrganizationFullPlan) Reset() {
	var v OrganizationFullPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrganizationFullPlan) SetTo(v OrganizationFullPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrganizationFullPlan) Get() (v OrganizationFullPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrgsCreateInvitationApplicationJSONReqRole returns new OptOrgsCreateInvitationApplicationJSONReqRole with value set to v.
func NewOptOrgsCreateInvitationApplicationJSONReqRole(v OrgsCreateInvitationApplicationJSONReqRole) OptOrgsCreateInvitationApplicationJSONReqRole {
	return OptOrgsCreateInvitationApplicationJSONReqRole{
		Value: v,
		Set:   true,
	}
}

// OptOrgsCreateInvitationApplicationJSONReqRole is optional OrgsCreateInvitationApplicationJSONReqRole.
type OptOrgsCreateInvitationApplicationJSONReqRole struct {
	Value OrgsCreateInvitationApplicationJSONReqRole
	Set   bool
}

// IsSet returns true if OptOrgsCreateInvitationApplicationJSONReqRole was set.
func (o OptOrgsCreateInvitationApplicationJSONReqRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrgsCreateInvitationApplicationJSONReqRole) Reset() {
	var v OrgsCreateInvitationApplicationJSONReqRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgsCreateInvitationApplicationJSONReqRole) SetTo(v OrgsCreateInvitationApplicationJSONReqRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgsCreateInvitationApplicationJSONReqRole) Get() (v OrgsCreateInvitationApplicationJSONReqRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrgsSetMembershipForUserApplicationJSONReqRole returns new OptOrgsSetMembershipForUserApplicationJSONReqRole with value set to v.
func NewOptOrgsSetMembershipForUserApplicationJSONReqRole(v OrgsSetMembershipForUserApplicationJSONReqRole) OptOrgsSetMembershipForUserApplicationJSONReqRole {
	return OptOrgsSetMembershipForUserApplicationJSONReqRole{
		Value: v,
		Set:   true,
	}
}

// OptOrgsSetMembershipForUserApplicationJSONReqRole is optional OrgsSetMembershipForUserApplicationJSONReqRole.
type OptOrgsSetMembershipForUserApplicationJSONReqRole struct {
	Value OrgsSetMembershipForUserApplicationJSONReqRole
	Set   bool
}

// IsSet returns true if OptOrgsSetMembershipForUserApplicationJSONReqRole was set.
func (o OptOrgsSetMembershipForUserApplicationJSONReqRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrgsSetMembershipForUserApplicationJSONReqRole) Reset() {
	var v OrgsSetMembershipForUserApplicationJSONReqRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgsSetMembershipForUserApplicationJSONReqRole) SetTo(v OrgsSetMembershipForUserApplicationJSONReqRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgsSetMembershipForUserApplicationJSONReqRole) Get() (v OrgsSetMembershipForUserApplicationJSONReqRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrgsUpdateApplicationJSONReqDefaultRepositoryPermission returns new OptOrgsUpdateApplicationJSONReqDefaultRepositoryPermission with value set to v.
func NewOptOrgsUpdateApplicationJSONReqDefaultRepositoryPermission(v OrgsUpdateApplicationJSONReqDefaultRepositoryPermission) OptOrgsUpdateApplicationJSONReqDefaultRepositoryPermission {
	return OptOrgsUpdateApplicationJSONReqDefaultRepositoryPermission{
		Value: v,
		Set:   true,
	}
}

// OptOrgsUpdateApplicationJSONReqDefaultRepositoryPermission is optional OrgsUpdateApplicationJSONReqDefaultRepositoryPermission.
type OptOrgsUpdateApplicationJSONReqDefaultRepositoryPermission struct {
	Value OrgsUpdateApplicationJSONReqDefaultRepositoryPermission
	Set   bool
}

// IsSet returns true if OptOrgsUpdateApplicationJSONReqDefaultRepositoryPermission was set.
func (o OptOrgsUpdateApplicationJSONReqDefaultRepositoryPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrgsUpdateApplicationJSONReqDefaultRepositoryPermission) Reset() {
	var v OrgsUpdateApplicationJSONReqDefaultRepositoryPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgsUpdateApplicationJSONReqDefaultRepositoryPermission) SetTo(v OrgsUpdateApplicationJSONReqDefaultRepositoryPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgsUpdateApplicationJSONReqDefaultRepositoryPermission) Get() (v OrgsUpdateApplicationJSONReqDefaultRepositoryPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType returns new OptOrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType with value set to v.
func NewOptOrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType(v OrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType) OptOrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType {
	return OptOrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType{
		Value: v,
		Set:   true,
	}
}

// OptOrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType is optional OrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType.
type OptOrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType struct {
	Value OrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType
	Set   bool
}

// IsSet returns true if OptOrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType was set.
func (o OptOrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptOrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType) Reset() {
	var v OrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType) SetTo(v OrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType) Get() (v OrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPagesHTTPSCertificate returns new OptPagesHTTPSCertificate with value set to v.
func NewOptPagesHTTPSCertificate(v PagesHTTPSCertificate) OptPagesHTTPSCertificate {
	return OptPagesHTTPSCertificate{
		Value: v,
		Set:   true,
	}
}

// OptPagesHTTPSCertificate is optional PagesHTTPSCertificate.
type OptPagesHTTPSCertificate struct {
	Value PagesHTTPSCertificate
	Set   bool
}

// IsSet returns true if OptPagesHTTPSCertificate was set.
func (o OptPagesHTTPSCertificate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPagesHTTPSCertificate) Reset() {
	var v PagesHTTPSCertificate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPagesHTTPSCertificate) SetTo(v PagesHTTPSCertificate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPagesHTTPSCertificate) Get() (v PagesHTTPSCertificate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPagesHealthCheckDomain returns new OptPagesHealthCheckDomain with value set to v.
func NewOptPagesHealthCheckDomain(v PagesHealthCheckDomain) OptPagesHealthCheckDomain {
	return OptPagesHealthCheckDomain{
		Value: v,
		Set:   true,
	}
}

// OptPagesHealthCheckDomain is optional PagesHealthCheckDomain.
type OptPagesHealthCheckDomain struct {
	Value PagesHealthCheckDomain
	Set   bool
}

// IsSet returns true if OptPagesHealthCheckDomain was set.
func (o OptPagesHealthCheckDomain) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPagesHealthCheckDomain) Reset() {
	var v PagesHealthCheckDomain
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPagesHealthCheckDomain) SetTo(v PagesHealthCheckDomain) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPagesHealthCheckDomain) Get() (v PagesHealthCheckDomain, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPagesSourceHash returns new OptPagesSourceHash with value set to v.
func NewOptPagesSourceHash(v PagesSourceHash) OptPagesSourceHash {
	return OptPagesSourceHash{
		Value: v,
		Set:   true,
	}
}

// OptPagesSourceHash is optional PagesSourceHash.
type OptPagesSourceHash struct {
	Value PagesSourceHash
	Set   bool
}

// IsSet returns true if OptPagesSourceHash was set.
func (o OptPagesSourceHash) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPagesSourceHash) Reset() {
	var v PagesSourceHash
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPagesSourceHash) SetTo(v PagesSourceHash) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPagesSourceHash) Get() (v PagesSourceHash, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPrivateUserPlan returns new OptPrivateUserPlan with value set to v.
func NewOptPrivateUserPlan(v PrivateUserPlan) OptPrivateUserPlan {
	return OptPrivateUserPlan{
		Value: v,
		Set:   true,
	}
}

// OptPrivateUserPlan is optional PrivateUserPlan.
type OptPrivateUserPlan struct {
	Value PrivateUserPlan
	Set   bool
}

// IsSet returns true if OptPrivateUserPlan was set.
func (o OptPrivateUserPlan) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPrivateUserPlan) Reset() {
	var v PrivateUserPlan
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPrivateUserPlan) SetTo(v PrivateUserPlan) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPrivateUserPlan) Get() (v PrivateUserPlan, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProjectOrganizationPermission returns new OptProjectOrganizationPermission with value set to v.
func NewOptProjectOrganizationPermission(v ProjectOrganizationPermission) OptProjectOrganizationPermission {
	return OptProjectOrganizationPermission{
		Value: v,
		Set:   true,
	}
}

// OptProjectOrganizationPermission is optional ProjectOrganizationPermission.
type OptProjectOrganizationPermission struct {
	Value ProjectOrganizationPermission
	Set   bool
}

// IsSet returns true if OptProjectOrganizationPermission was set.
func (o OptProjectOrganizationPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProjectOrganizationPermission) Reset() {
	var v ProjectOrganizationPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProjectOrganizationPermission) SetTo(v ProjectOrganizationPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProjectOrganizationPermission) Get() (v ProjectOrganizationPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProjectsAddCollaboratorApplicationJSONReqPermission returns new OptProjectsAddCollaboratorApplicationJSONReqPermission with value set to v.
func NewOptProjectsAddCollaboratorApplicationJSONReqPermission(v ProjectsAddCollaboratorApplicationJSONReqPermission) OptProjectsAddCollaboratorApplicationJSONReqPermission {
	return OptProjectsAddCollaboratorApplicationJSONReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptProjectsAddCollaboratorApplicationJSONReqPermission is optional ProjectsAddCollaboratorApplicationJSONReqPermission.
type OptProjectsAddCollaboratorApplicationJSONReqPermission struct {
	Value ProjectsAddCollaboratorApplicationJSONReqPermission
	Set   bool
}

// IsSet returns true if OptProjectsAddCollaboratorApplicationJSONReqPermission was set.
func (o OptProjectsAddCollaboratorApplicationJSONReqPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProjectsAddCollaboratorApplicationJSONReqPermission) Reset() {
	var v ProjectsAddCollaboratorApplicationJSONReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProjectsAddCollaboratorApplicationJSONReqPermission) SetTo(v ProjectsAddCollaboratorApplicationJSONReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProjectsAddCollaboratorApplicationJSONReqPermission) Get() (v ProjectsAddCollaboratorApplicationJSONReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProjectsUpdateApplicationJSONReqOrganizationPermission returns new OptProjectsUpdateApplicationJSONReqOrganizationPermission with value set to v.
func NewOptProjectsUpdateApplicationJSONReqOrganizationPermission(v ProjectsUpdateApplicationJSONReqOrganizationPermission) OptProjectsUpdateApplicationJSONReqOrganizationPermission {
	return OptProjectsUpdateApplicationJSONReqOrganizationPermission{
		Value: v,
		Set:   true,
	}
}

// OptProjectsUpdateApplicationJSONReqOrganizationPermission is optional ProjectsUpdateApplicationJSONReqOrganizationPermission.
type OptProjectsUpdateApplicationJSONReqOrganizationPermission struct {
	Value ProjectsUpdateApplicationJSONReqOrganizationPermission
	Set   bool
}

// IsSet returns true if OptProjectsUpdateApplicationJSONReqOrganizationPermission was set.
func (o OptProjectsUpdateApplicationJSONReqOrganizationPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProjectsUpdateApplicationJSONReqOrganizationPermission) Reset() {
	var v ProjectsUpdateApplicationJSONReqOrganizationPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProjectsUpdateApplicationJSONReqOrganizationPermission) SetTo(v ProjectsUpdateApplicationJSONReqOrganizationPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProjectsUpdateApplicationJSONReqOrganizationPermission) Get() (v ProjectsUpdateApplicationJSONReqOrganizationPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchAdminEnforced returns new OptProtectedBranchAdminEnforced with value set to v.
func NewOptProtectedBranchAdminEnforced(v ProtectedBranchAdminEnforced) OptProtectedBranchAdminEnforced {
	return OptProtectedBranchAdminEnforced{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchAdminEnforced is optional ProtectedBranchAdminEnforced.
type OptProtectedBranchAdminEnforced struct {
	Value ProtectedBranchAdminEnforced
	Set   bool
}

// IsSet returns true if OptProtectedBranchAdminEnforced was set.
func (o OptProtectedBranchAdminEnforced) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchAdminEnforced) Reset() {
	var v ProtectedBranchAdminEnforced
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchAdminEnforced) SetTo(v ProtectedBranchAdminEnforced) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchAdminEnforced) Get() (v ProtectedBranchAdminEnforced, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchAllowDeletions returns new OptProtectedBranchAllowDeletions with value set to v.
func NewOptProtectedBranchAllowDeletions(v ProtectedBranchAllowDeletions) OptProtectedBranchAllowDeletions {
	return OptProtectedBranchAllowDeletions{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchAllowDeletions is optional ProtectedBranchAllowDeletions.
type OptProtectedBranchAllowDeletions struct {
	Value ProtectedBranchAllowDeletions
	Set   bool
}

// IsSet returns true if OptProtectedBranchAllowDeletions was set.
func (o OptProtectedBranchAllowDeletions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchAllowDeletions) Reset() {
	var v ProtectedBranchAllowDeletions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchAllowDeletions) SetTo(v ProtectedBranchAllowDeletions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchAllowDeletions) Get() (v ProtectedBranchAllowDeletions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchAllowForcePushes returns new OptProtectedBranchAllowForcePushes with value set to v.
func NewOptProtectedBranchAllowForcePushes(v ProtectedBranchAllowForcePushes) OptProtectedBranchAllowForcePushes {
	return OptProtectedBranchAllowForcePushes{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchAllowForcePushes is optional ProtectedBranchAllowForcePushes.
type OptProtectedBranchAllowForcePushes struct {
	Value ProtectedBranchAllowForcePushes
	Set   bool
}

// IsSet returns true if OptProtectedBranchAllowForcePushes was set.
func (o OptProtectedBranchAllowForcePushes) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchAllowForcePushes) Reset() {
	var v ProtectedBranchAllowForcePushes
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchAllowForcePushes) SetTo(v ProtectedBranchAllowForcePushes) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchAllowForcePushes) Get() (v ProtectedBranchAllowForcePushes, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchEnforceAdmins returns new OptProtectedBranchEnforceAdmins with value set to v.
func NewOptProtectedBranchEnforceAdmins(v ProtectedBranchEnforceAdmins) OptProtectedBranchEnforceAdmins {
	return OptProtectedBranchEnforceAdmins{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchEnforceAdmins is optional ProtectedBranchEnforceAdmins.
type OptProtectedBranchEnforceAdmins struct {
	Value ProtectedBranchEnforceAdmins
	Set   bool
}

// IsSet returns true if OptProtectedBranchEnforceAdmins was set.
func (o OptProtectedBranchEnforceAdmins) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchEnforceAdmins) Reset() {
	var v ProtectedBranchEnforceAdmins
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchEnforceAdmins) SetTo(v ProtectedBranchEnforceAdmins) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchEnforceAdmins) Get() (v ProtectedBranchEnforceAdmins, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchPullRequestReview returns new OptProtectedBranchPullRequestReview with value set to v.
func NewOptProtectedBranchPullRequestReview(v ProtectedBranchPullRequestReview) OptProtectedBranchPullRequestReview {
	return OptProtectedBranchPullRequestReview{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchPullRequestReview is optional ProtectedBranchPullRequestReview.
type OptProtectedBranchPullRequestReview struct {
	Value ProtectedBranchPullRequestReview
	Set   bool
}

// IsSet returns true if OptProtectedBranchPullRequestReview was set.
func (o OptProtectedBranchPullRequestReview) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchPullRequestReview) Reset() {
	var v ProtectedBranchPullRequestReview
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchPullRequestReview) SetTo(v ProtectedBranchPullRequestReview) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchPullRequestReview) Get() (v ProtectedBranchPullRequestReview, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchPullRequestReviewDismissalRestrictions returns new OptProtectedBranchPullRequestReviewDismissalRestrictions with value set to v.
func NewOptProtectedBranchPullRequestReviewDismissalRestrictions(v ProtectedBranchPullRequestReviewDismissalRestrictions) OptProtectedBranchPullRequestReviewDismissalRestrictions {
	return OptProtectedBranchPullRequestReviewDismissalRestrictions{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchPullRequestReviewDismissalRestrictions is optional ProtectedBranchPullRequestReviewDismissalRestrictions.
type OptProtectedBranchPullRequestReviewDismissalRestrictions struct {
	Value ProtectedBranchPullRequestReviewDismissalRestrictions
	Set   bool
}

// IsSet returns true if OptProtectedBranchPullRequestReviewDismissalRestrictions was set.
func (o OptProtectedBranchPullRequestReviewDismissalRestrictions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchPullRequestReviewDismissalRestrictions) Reset() {
	var v ProtectedBranchPullRequestReviewDismissalRestrictions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchPullRequestReviewDismissalRestrictions) SetTo(v ProtectedBranchPullRequestReviewDismissalRestrictions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchPullRequestReviewDismissalRestrictions) Get() (v ProtectedBranchPullRequestReviewDismissalRestrictions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchRequiredConversationResolution returns new OptProtectedBranchRequiredConversationResolution with value set to v.
func NewOptProtectedBranchRequiredConversationResolution(v ProtectedBranchRequiredConversationResolution) OptProtectedBranchRequiredConversationResolution {
	return OptProtectedBranchRequiredConversationResolution{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredConversationResolution is optional ProtectedBranchRequiredConversationResolution.
type OptProtectedBranchRequiredConversationResolution struct {
	Value ProtectedBranchRequiredConversationResolution
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredConversationResolution was set.
func (o OptProtectedBranchRequiredConversationResolution) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredConversationResolution) Reset() {
	var v ProtectedBranchRequiredConversationResolution
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredConversationResolution) SetTo(v ProtectedBranchRequiredConversationResolution) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredConversationResolution) Get() (v ProtectedBranchRequiredConversationResolution, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchRequiredLinearHistory returns new OptProtectedBranchRequiredLinearHistory with value set to v.
func NewOptProtectedBranchRequiredLinearHistory(v ProtectedBranchRequiredLinearHistory) OptProtectedBranchRequiredLinearHistory {
	return OptProtectedBranchRequiredLinearHistory{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredLinearHistory is optional ProtectedBranchRequiredLinearHistory.
type OptProtectedBranchRequiredLinearHistory struct {
	Value ProtectedBranchRequiredLinearHistory
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredLinearHistory was set.
func (o OptProtectedBranchRequiredLinearHistory) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredLinearHistory) Reset() {
	var v ProtectedBranchRequiredLinearHistory
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredLinearHistory) SetTo(v ProtectedBranchRequiredLinearHistory) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredLinearHistory) Get() (v ProtectedBranchRequiredLinearHistory, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchRequiredPullRequestReviews returns new OptProtectedBranchRequiredPullRequestReviews with value set to v.
func NewOptProtectedBranchRequiredPullRequestReviews(v ProtectedBranchRequiredPullRequestReviews) OptProtectedBranchRequiredPullRequestReviews {
	return OptProtectedBranchRequiredPullRequestReviews{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredPullRequestReviews is optional ProtectedBranchRequiredPullRequestReviews.
type OptProtectedBranchRequiredPullRequestReviews struct {
	Value ProtectedBranchRequiredPullRequestReviews
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredPullRequestReviews was set.
func (o OptProtectedBranchRequiredPullRequestReviews) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredPullRequestReviews) Reset() {
	var v ProtectedBranchRequiredPullRequestReviews
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredPullRequestReviews) SetTo(v ProtectedBranchRequiredPullRequestReviews) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredPullRequestReviews) Get() (v ProtectedBranchRequiredPullRequestReviews, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions returns new OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions with value set to v.
func NewOptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions(v ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions {
	return OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions is optional ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions.
type OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions struct {
	Value ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions was set.
func (o OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) Reset() {
	var v ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) SetTo(v ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions) Get() (v ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProtectedBranchRequiredSignatures returns new OptProtectedBranchRequiredSignatures with value set to v.
func NewOptProtectedBranchRequiredSignatures(v ProtectedBranchRequiredSignatures) OptProtectedBranchRequiredSignatures {
	return OptProtectedBranchRequiredSignatures{
		Value: v,
		Set:   true,
	}
}

// OptProtectedBranchRequiredSignatures is optional ProtectedBranchRequiredSignatures.
type OptProtectedBranchRequiredSignatures struct {
	Value ProtectedBranchRequiredSignatures
	Set   bool
}

// IsSet returns true if OptProtectedBranchRequiredSignatures was set.
func (o OptProtectedBranchRequiredSignatures) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProtectedBranchRequiredSignatures) Reset() {
	var v ProtectedBranchRequiredSignatures
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProtectedBranchRequiredSignatures) SetTo(v ProtectedBranchRequiredSignatures) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProtectedBranchRequiredSignatures) Get() (v ProtectedBranchRequiredSignatures, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPullRequestReviewCommentSide returns new OptPullRequestReviewCommentSide with value set to v.
func NewOptPullRequestReviewCommentSide(v PullRequestReviewCommentSide) OptPullRequestReviewCommentSide {
	return OptPullRequestReviewCommentSide{
		Value: v,
		Set:   true,
	}
}

// OptPullRequestReviewCommentSide is optional PullRequestReviewCommentSide.
type OptPullRequestReviewCommentSide struct {
	Value PullRequestReviewCommentSide
	Set   bool
}

// IsSet returns true if OptPullRequestReviewCommentSide was set.
func (o OptPullRequestReviewCommentSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullRequestReviewCommentSide) Reset() {
	var v PullRequestReviewCommentSide
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullRequestReviewCommentSide) SetTo(v PullRequestReviewCommentSide) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullRequestReviewCommentSide) Get() (v PullRequestReviewCommentSide, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPullsCreateReviewApplicationJSONReqEvent returns new OptPullsCreateReviewApplicationJSONReqEvent with value set to v.
func NewOptPullsCreateReviewApplicationJSONReqEvent(v PullsCreateReviewApplicationJSONReqEvent) OptPullsCreateReviewApplicationJSONReqEvent {
	return OptPullsCreateReviewApplicationJSONReqEvent{
		Value: v,
		Set:   true,
	}
}

// OptPullsCreateReviewApplicationJSONReqEvent is optional PullsCreateReviewApplicationJSONReqEvent.
type OptPullsCreateReviewApplicationJSONReqEvent struct {
	Value PullsCreateReviewApplicationJSONReqEvent
	Set   bool
}

// IsSet returns true if OptPullsCreateReviewApplicationJSONReqEvent was set.
func (o OptPullsCreateReviewApplicationJSONReqEvent) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsCreateReviewApplicationJSONReqEvent) Reset() {
	var v PullsCreateReviewApplicationJSONReqEvent
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsCreateReviewApplicationJSONReqEvent) SetTo(v PullsCreateReviewApplicationJSONReqEvent) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsCreateReviewApplicationJSONReqEvent) Get() (v PullsCreateReviewApplicationJSONReqEvent, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPullsCreateReviewCommentApplicationJSONReqSide returns new OptPullsCreateReviewCommentApplicationJSONReqSide with value set to v.
func NewOptPullsCreateReviewCommentApplicationJSONReqSide(v PullsCreateReviewCommentApplicationJSONReqSide) OptPullsCreateReviewCommentApplicationJSONReqSide {
	return OptPullsCreateReviewCommentApplicationJSONReqSide{
		Value: v,
		Set:   true,
	}
}

// OptPullsCreateReviewCommentApplicationJSONReqSide is optional PullsCreateReviewCommentApplicationJSONReqSide.
type OptPullsCreateReviewCommentApplicationJSONReqSide struct {
	Value PullsCreateReviewCommentApplicationJSONReqSide
	Set   bool
}

// IsSet returns true if OptPullsCreateReviewCommentApplicationJSONReqSide was set.
func (o OptPullsCreateReviewCommentApplicationJSONReqSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsCreateReviewCommentApplicationJSONReqSide) Reset() {
	var v PullsCreateReviewCommentApplicationJSONReqSide
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsCreateReviewCommentApplicationJSONReqSide) SetTo(v PullsCreateReviewCommentApplicationJSONReqSide) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsCreateReviewCommentApplicationJSONReqSide) Get() (v PullsCreateReviewCommentApplicationJSONReqSide, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPullsCreateReviewCommentApplicationJSONReqStartSide returns new OptPullsCreateReviewCommentApplicationJSONReqStartSide with value set to v.
func NewOptPullsCreateReviewCommentApplicationJSONReqStartSide(v PullsCreateReviewCommentApplicationJSONReqStartSide) OptPullsCreateReviewCommentApplicationJSONReqStartSide {
	return OptPullsCreateReviewCommentApplicationJSONReqStartSide{
		Value: v,
		Set:   true,
	}
}

// OptPullsCreateReviewCommentApplicationJSONReqStartSide is optional PullsCreateReviewCommentApplicationJSONReqStartSide.
type OptPullsCreateReviewCommentApplicationJSONReqStartSide struct {
	Value PullsCreateReviewCommentApplicationJSONReqStartSide
	Set   bool
}

// IsSet returns true if OptPullsCreateReviewCommentApplicationJSONReqStartSide was set.
func (o OptPullsCreateReviewCommentApplicationJSONReqStartSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsCreateReviewCommentApplicationJSONReqStartSide) Reset() {
	var v PullsCreateReviewCommentApplicationJSONReqStartSide
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsCreateReviewCommentApplicationJSONReqStartSide) SetTo(v PullsCreateReviewCommentApplicationJSONReqStartSide) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsCreateReviewCommentApplicationJSONReqStartSide) Get() (v PullsCreateReviewCommentApplicationJSONReqStartSide, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPullsMergeApplicationJSONReqMergeMethod returns new OptPullsMergeApplicationJSONReqMergeMethod with value set to v.
func NewOptPullsMergeApplicationJSONReqMergeMethod(v PullsMergeApplicationJSONReqMergeMethod) OptPullsMergeApplicationJSONReqMergeMethod {
	return OptPullsMergeApplicationJSONReqMergeMethod{
		Value: v,
		Set:   true,
	}
}

// OptPullsMergeApplicationJSONReqMergeMethod is optional PullsMergeApplicationJSONReqMergeMethod.
type OptPullsMergeApplicationJSONReqMergeMethod struct {
	Value PullsMergeApplicationJSONReqMergeMethod
	Set   bool
}

// IsSet returns true if OptPullsMergeApplicationJSONReqMergeMethod was set.
func (o OptPullsMergeApplicationJSONReqMergeMethod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsMergeApplicationJSONReqMergeMethod) Reset() {
	var v PullsMergeApplicationJSONReqMergeMethod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsMergeApplicationJSONReqMergeMethod) SetTo(v PullsMergeApplicationJSONReqMergeMethod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsMergeApplicationJSONReqMergeMethod) Get() (v PullsMergeApplicationJSONReqMergeMethod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPullsUpdateApplicationJSONReqState returns new OptPullsUpdateApplicationJSONReqState with value set to v.
func NewOptPullsUpdateApplicationJSONReqState(v PullsUpdateApplicationJSONReqState) OptPullsUpdateApplicationJSONReqState {
	return OptPullsUpdateApplicationJSONReqState{
		Value: v,
		Set:   true,
	}
}

// OptPullsUpdateApplicationJSONReqState is optional PullsUpdateApplicationJSONReqState.
type OptPullsUpdateApplicationJSONReqState struct {
	Value PullsUpdateApplicationJSONReqState
	Set   bool
}

// IsSet returns true if OptPullsUpdateApplicationJSONReqState was set.
func (o OptPullsUpdateApplicationJSONReqState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPullsUpdateApplicationJSONReqState) Reset() {
	var v PullsUpdateApplicationJSONReqState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPullsUpdateApplicationJSONReqState) SetTo(v PullsUpdateApplicationJSONReqState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPullsUpdateApplicationJSONReqState) Get() (v PullsUpdateApplicationJSONReqState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptRateLimit returns new OptRateLimit with value set to v.
func NewOptRateLimit(v RateLimit) OptRateLimit {
	return OptRateLimit{
		Value: v,
		Set:   true,
	}
}

// OptRateLimit is optional RateLimit.
type OptRateLimit struct {
	Value RateLimit
	Set   bool
}

// IsSet returns true if OptRateLimit was set.
func (o OptRateLimit) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRateLimit) Reset() {
	var v RateLimit
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRateLimit) SetTo(v RateLimit) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRateLimit) Get() (v RateLimit, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReactionRollup returns new OptReactionRollup with value set to v.
func NewOptReactionRollup(v ReactionRollup) OptReactionRollup {
	return OptReactionRollup{
		Value: v,
		Set:   true,
	}
}

// OptReactionRollup is optional ReactionRollup.
type OptReactionRollup struct {
	Value ReactionRollup
	Set   bool
}

// IsSet returns true if OptReactionRollup was set.
func (o OptReactionRollup) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReactionRollup) Reset() {
	var v ReactionRollup
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReactionRollup) SetTo(v ReactionRollup) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReactionRollup) Get() (v ReactionRollup, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposAddCollaboratorApplicationJSONReqPermission returns new OptReposAddCollaboratorApplicationJSONReqPermission with value set to v.
func NewOptReposAddCollaboratorApplicationJSONReqPermission(v ReposAddCollaboratorApplicationJSONReqPermission) OptReposAddCollaboratorApplicationJSONReqPermission {
	return OptReposAddCollaboratorApplicationJSONReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptReposAddCollaboratorApplicationJSONReqPermission is optional ReposAddCollaboratorApplicationJSONReqPermission.
type OptReposAddCollaboratorApplicationJSONReqPermission struct {
	Value ReposAddCollaboratorApplicationJSONReqPermission
	Set   bool
}

// IsSet returns true if OptReposAddCollaboratorApplicationJSONReqPermission was set.
func (o OptReposAddCollaboratorApplicationJSONReqPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposAddCollaboratorApplicationJSONReqPermission) Reset() {
	var v ReposAddCollaboratorApplicationJSONReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposAddCollaboratorApplicationJSONReqPermission) SetTo(v ReposAddCollaboratorApplicationJSONReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposAddCollaboratorApplicationJSONReqPermission) Get() (v ReposAddCollaboratorApplicationJSONReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposCreateDeploymentStatusApplicationJSONReqEnvironment returns new OptReposCreateDeploymentStatusApplicationJSONReqEnvironment with value set to v.
func NewOptReposCreateDeploymentStatusApplicationJSONReqEnvironment(v ReposCreateDeploymentStatusApplicationJSONReqEnvironment) OptReposCreateDeploymentStatusApplicationJSONReqEnvironment {
	return OptReposCreateDeploymentStatusApplicationJSONReqEnvironment{
		Value: v,
		Set:   true,
	}
}

// OptReposCreateDeploymentStatusApplicationJSONReqEnvironment is optional ReposCreateDeploymentStatusApplicationJSONReqEnvironment.
type OptReposCreateDeploymentStatusApplicationJSONReqEnvironment struct {
	Value ReposCreateDeploymentStatusApplicationJSONReqEnvironment
	Set   bool
}

// IsSet returns true if OptReposCreateDeploymentStatusApplicationJSONReqEnvironment was set.
func (o OptReposCreateDeploymentStatusApplicationJSONReqEnvironment) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreateDeploymentStatusApplicationJSONReqEnvironment) Reset() {
	var v ReposCreateDeploymentStatusApplicationJSONReqEnvironment
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreateDeploymentStatusApplicationJSONReqEnvironment) SetTo(v ReposCreateDeploymentStatusApplicationJSONReqEnvironment) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreateDeploymentStatusApplicationJSONReqEnvironment) Get() (v ReposCreateDeploymentStatusApplicationJSONReqEnvironment, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposCreateInOrgApplicationJSONReqVisibility returns new OptReposCreateInOrgApplicationJSONReqVisibility with value set to v.
func NewOptReposCreateInOrgApplicationJSONReqVisibility(v ReposCreateInOrgApplicationJSONReqVisibility) OptReposCreateInOrgApplicationJSONReqVisibility {
	return OptReposCreateInOrgApplicationJSONReqVisibility{
		Value: v,
		Set:   true,
	}
}

// OptReposCreateInOrgApplicationJSONReqVisibility is optional ReposCreateInOrgApplicationJSONReqVisibility.
type OptReposCreateInOrgApplicationJSONReqVisibility struct {
	Value ReposCreateInOrgApplicationJSONReqVisibility
	Set   bool
}

// IsSet returns true if OptReposCreateInOrgApplicationJSONReqVisibility was set.
func (o OptReposCreateInOrgApplicationJSONReqVisibility) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreateInOrgApplicationJSONReqVisibility) Reset() {
	var v ReposCreateInOrgApplicationJSONReqVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreateInOrgApplicationJSONReqVisibility) SetTo(v ReposCreateInOrgApplicationJSONReqVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreateInOrgApplicationJSONReqVisibility) Get() (v ReposCreateInOrgApplicationJSONReqVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposCreateOrUpdateFileContentsApplicationJSONReqAuthor returns new OptReposCreateOrUpdateFileContentsApplicationJSONReqAuthor with value set to v.
func NewOptReposCreateOrUpdateFileContentsApplicationJSONReqAuthor(v ReposCreateOrUpdateFileContentsApplicationJSONReqAuthor) OptReposCreateOrUpdateFileContentsApplicationJSONReqAuthor {
	return OptReposCreateOrUpdateFileContentsApplicationJSONReqAuthor{
		Value: v,
		Set:   true,
	}
}

// OptReposCreateOrUpdateFileContentsApplicationJSONReqAuthor is optional ReposCreateOrUpdateFileContentsApplicationJSONReqAuthor.
type OptReposCreateOrUpdateFileContentsApplicationJSONReqAuthor struct {
	Value ReposCreateOrUpdateFileContentsApplicationJSONReqAuthor
	Set   bool
}

// IsSet returns true if OptReposCreateOrUpdateFileContentsApplicationJSONReqAuthor was set.
func (o OptReposCreateOrUpdateFileContentsApplicationJSONReqAuthor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreateOrUpdateFileContentsApplicationJSONReqAuthor) Reset() {
	var v ReposCreateOrUpdateFileContentsApplicationJSONReqAuthor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreateOrUpdateFileContentsApplicationJSONReqAuthor) SetTo(v ReposCreateOrUpdateFileContentsApplicationJSONReqAuthor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreateOrUpdateFileContentsApplicationJSONReqAuthor) Get() (v ReposCreateOrUpdateFileContentsApplicationJSONReqAuthor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposCreateOrUpdateFileContentsApplicationJSONReqCommitter returns new OptReposCreateOrUpdateFileContentsApplicationJSONReqCommitter with value set to v.
func NewOptReposCreateOrUpdateFileContentsApplicationJSONReqCommitter(v ReposCreateOrUpdateFileContentsApplicationJSONReqCommitter) OptReposCreateOrUpdateFileContentsApplicationJSONReqCommitter {
	return OptReposCreateOrUpdateFileContentsApplicationJSONReqCommitter{
		Value: v,
		Set:   true,
	}
}

// OptReposCreateOrUpdateFileContentsApplicationJSONReqCommitter is optional ReposCreateOrUpdateFileContentsApplicationJSONReqCommitter.
type OptReposCreateOrUpdateFileContentsApplicationJSONReqCommitter struct {
	Value ReposCreateOrUpdateFileContentsApplicationJSONReqCommitter
	Set   bool
}

// IsSet returns true if OptReposCreateOrUpdateFileContentsApplicationJSONReqCommitter was set.
func (o OptReposCreateOrUpdateFileContentsApplicationJSONReqCommitter) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreateOrUpdateFileContentsApplicationJSONReqCommitter) Reset() {
	var v ReposCreateOrUpdateFileContentsApplicationJSONReqCommitter
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreateOrUpdateFileContentsApplicationJSONReqCommitter) SetTo(v ReposCreateOrUpdateFileContentsApplicationJSONReqCommitter) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreateOrUpdateFileContentsApplicationJSONReqCommitter) Get() (v ReposCreateOrUpdateFileContentsApplicationJSONReqCommitter, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposCreatePagesSiteApplicationJSONReqSourcePath returns new OptReposCreatePagesSiteApplicationJSONReqSourcePath with value set to v.
func NewOptReposCreatePagesSiteApplicationJSONReqSourcePath(v ReposCreatePagesSiteApplicationJSONReqSourcePath) OptReposCreatePagesSiteApplicationJSONReqSourcePath {
	return OptReposCreatePagesSiteApplicationJSONReqSourcePath{
		Value: v,
		Set:   true,
	}
}

// OptReposCreatePagesSiteApplicationJSONReqSourcePath is optional ReposCreatePagesSiteApplicationJSONReqSourcePath.
type OptReposCreatePagesSiteApplicationJSONReqSourcePath struct {
	Value ReposCreatePagesSiteApplicationJSONReqSourcePath
	Set   bool
}

// IsSet returns true if OptReposCreatePagesSiteApplicationJSONReqSourcePath was set.
func (o OptReposCreatePagesSiteApplicationJSONReqSourcePath) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposCreatePagesSiteApplicationJSONReqSourcePath) Reset() {
	var v ReposCreatePagesSiteApplicationJSONReqSourcePath
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposCreatePagesSiteApplicationJSONReqSourcePath) SetTo(v ReposCreatePagesSiteApplicationJSONReqSourcePath) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposCreatePagesSiteApplicationJSONReqSourcePath) Get() (v ReposCreatePagesSiteApplicationJSONReqSourcePath, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposDeleteFileApplicationJSONReqAuthor returns new OptReposDeleteFileApplicationJSONReqAuthor with value set to v.
func NewOptReposDeleteFileApplicationJSONReqAuthor(v ReposDeleteFileApplicationJSONReqAuthor) OptReposDeleteFileApplicationJSONReqAuthor {
	return OptReposDeleteFileApplicationJSONReqAuthor{
		Value: v,
		Set:   true,
	}
}

// OptReposDeleteFileApplicationJSONReqAuthor is optional ReposDeleteFileApplicationJSONReqAuthor.
type OptReposDeleteFileApplicationJSONReqAuthor struct {
	Value ReposDeleteFileApplicationJSONReqAuthor
	Set   bool
}

// IsSet returns true if OptReposDeleteFileApplicationJSONReqAuthor was set.
func (o OptReposDeleteFileApplicationJSONReqAuthor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposDeleteFileApplicationJSONReqAuthor) Reset() {
	var v ReposDeleteFileApplicationJSONReqAuthor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposDeleteFileApplicationJSONReqAuthor) SetTo(v ReposDeleteFileApplicationJSONReqAuthor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposDeleteFileApplicationJSONReqAuthor) Get() (v ReposDeleteFileApplicationJSONReqAuthor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposDeleteFileApplicationJSONReqCommitter returns new OptReposDeleteFileApplicationJSONReqCommitter with value set to v.
func NewOptReposDeleteFileApplicationJSONReqCommitter(v ReposDeleteFileApplicationJSONReqCommitter) OptReposDeleteFileApplicationJSONReqCommitter {
	return OptReposDeleteFileApplicationJSONReqCommitter{
		Value: v,
		Set:   true,
	}
}

// OptReposDeleteFileApplicationJSONReqCommitter is optional ReposDeleteFileApplicationJSONReqCommitter.
type OptReposDeleteFileApplicationJSONReqCommitter struct {
	Value ReposDeleteFileApplicationJSONReqCommitter
	Set   bool
}

// IsSet returns true if OptReposDeleteFileApplicationJSONReqCommitter was set.
func (o OptReposDeleteFileApplicationJSONReqCommitter) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposDeleteFileApplicationJSONReqCommitter) Reset() {
	var v ReposDeleteFileApplicationJSONReqCommitter
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposDeleteFileApplicationJSONReqCommitter) SetTo(v ReposDeleteFileApplicationJSONReqCommitter) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposDeleteFileApplicationJSONReqCommitter) Get() (v ReposDeleteFileApplicationJSONReqCommitter, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity returns new OptReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity with value set to v.
func NewOptReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity(v ReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity) OptReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity {
	return OptReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity is optional ReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity.
type OptReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity struct {
	Value ReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity
	Set   bool
}

// IsSet returns true if OptReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity was set.
func (o OptReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity) Reset() {
	var v ReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity) SetTo(v ReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity) Get() (v ReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning returns new OptReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning with value set to v.
func NewOptReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning(v ReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning) OptReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning {
	return OptReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning is optional ReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning.
type OptReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning struct {
	Value ReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning
	Set   bool
}

// IsSet returns true if OptReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning was set.
func (o OptReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning) Reset() {
	var v ReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning) SetTo(v ReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning) Get() (v ReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposUpdateApplicationJSONReqVisibility returns new OptReposUpdateApplicationJSONReqVisibility with value set to v.
func NewOptReposUpdateApplicationJSONReqVisibility(v ReposUpdateApplicationJSONReqVisibility) OptReposUpdateApplicationJSONReqVisibility {
	return OptReposUpdateApplicationJSONReqVisibility{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateApplicationJSONReqVisibility is optional ReposUpdateApplicationJSONReqVisibility.
type OptReposUpdateApplicationJSONReqVisibility struct {
	Value ReposUpdateApplicationJSONReqVisibility
	Set   bool
}

// IsSet returns true if OptReposUpdateApplicationJSONReqVisibility was set.
func (o OptReposUpdateApplicationJSONReqVisibility) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposUpdateApplicationJSONReqVisibility) Reset() {
	var v ReposUpdateApplicationJSONReqVisibility
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateApplicationJSONReqVisibility) SetTo(v ReposUpdateApplicationJSONReqVisibility) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateApplicationJSONReqVisibility) Get() (v ReposUpdateApplicationJSONReqVisibility, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions returns new OptReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions with value set to v.
func NewOptReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions(v ReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions) OptReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions {
	return OptReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions is optional ReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions.
type OptReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions struct {
	Value ReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions
	Set   bool
}

// IsSet returns true if OptReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions was set.
func (o OptReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions) Reset() {
	var v ReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions) SetTo(v ReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions) Get() (v ReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposUpdateInvitationApplicationJSONReqPermissions returns new OptReposUpdateInvitationApplicationJSONReqPermissions with value set to v.
func NewOptReposUpdateInvitationApplicationJSONReqPermissions(v ReposUpdateInvitationApplicationJSONReqPermissions) OptReposUpdateInvitationApplicationJSONReqPermissions {
	return OptReposUpdateInvitationApplicationJSONReqPermissions{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdateInvitationApplicationJSONReqPermissions is optional ReposUpdateInvitationApplicationJSONReqPermissions.
type OptReposUpdateInvitationApplicationJSONReqPermissions struct {
	Value ReposUpdateInvitationApplicationJSONReqPermissions
	Set   bool
}

// IsSet returns true if OptReposUpdateInvitationApplicationJSONReqPermissions was set.
func (o OptReposUpdateInvitationApplicationJSONReqPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReposUpdateInvitationApplicationJSONReqPermissions) Reset() {
	var v ReposUpdateInvitationApplicationJSONReqPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdateInvitationApplicationJSONReqPermissions) SetTo(v ReposUpdateInvitationApplicationJSONReqPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdateInvitationApplicationJSONReqPermissions) Get() (v ReposUpdateInvitationApplicationJSONReqPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions returns new OptReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions with value set to v.
func NewOptReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions(v ReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions) OptReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions {
	return OptReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions{
		Value: v,
		Set:   true,
	}
}

// OptReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions is optional ReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions.
type OptReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions struct {
	Value ReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions
	Set   bool
}

// IsSet returns true if OptReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions was set.
func (o OptReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions) Reset() {
	var v ReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions) SetTo(v ReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions) Get() (v ReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptRepository returns new OptRepository with value set to v.
func NewOptRepository(v Repository) OptRepository {
	return OptRepository{
		Value: v,
		Set:   true,
	}
}

// OptRepository is optional Repository.
type OptRepository struct {
	Value Repository
	Set   bool
}

// IsSet returns true if OptRepository was set.
func (o OptRepository) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRepository) Reset() {
	var v Repository
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRepository) SetTo(v Repository) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRepository) Get() (v Repository, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptRepositoryPermissions returns new OptRepositoryPermissions with value set to v.
func NewOptRepositoryPermissions(v RepositoryPermissions) OptRepositoryPermissions {
	return OptRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptRepositoryPermissions is optional RepositoryPermissions.
type OptRepositoryPermissions struct {
	Value RepositoryPermissions
	Set   bool
}

// IsSet returns true if OptRepositoryPermissions was set.
func (o OptRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRepositoryPermissions) Reset() {
	var v RepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRepositoryPermissions) SetTo(v RepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRepositoryPermissions) Get() (v RepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptRepositoryTemplateRepositoryOwner returns new OptRepositoryTemplateRepositoryOwner with value set to v.
func NewOptRepositoryTemplateRepositoryOwner(v RepositoryTemplateRepositoryOwner) OptRepositoryTemplateRepositoryOwner {
	return OptRepositoryTemplateRepositoryOwner{
		Value: v,
		Set:   true,
	}
}

// OptRepositoryTemplateRepositoryOwner is optional RepositoryTemplateRepositoryOwner.
type OptRepositoryTemplateRepositoryOwner struct {
	Value RepositoryTemplateRepositoryOwner
	Set   bool
}

// IsSet returns true if OptRepositoryTemplateRepositoryOwner was set.
func (o OptRepositoryTemplateRepositoryOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRepositoryTemplateRepositoryOwner) Reset() {
	var v RepositoryTemplateRepositoryOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRepositoryTemplateRepositoryOwner) SetTo(v RepositoryTemplateRepositoryOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRepositoryTemplateRepositoryOwner) Get() (v RepositoryTemplateRepositoryOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptRepositoryTemplateRepositoryPermissions returns new OptRepositoryTemplateRepositoryPermissions with value set to v.
func NewOptRepositoryTemplateRepositoryPermissions(v RepositoryTemplateRepositoryPermissions) OptRepositoryTemplateRepositoryPermissions {
	return OptRepositoryTemplateRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptRepositoryTemplateRepositoryPermissions is optional RepositoryTemplateRepositoryPermissions.
type OptRepositoryTemplateRepositoryPermissions struct {
	Value RepositoryTemplateRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptRepositoryTemplateRepositoryPermissions was set.
func (o OptRepositoryTemplateRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRepositoryTemplateRepositoryPermissions) Reset() {
	var v RepositoryTemplateRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRepositoryTemplateRepositoryPermissions) SetTo(v RepositoryTemplateRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRepositoryTemplateRepositoryPermissions) Get() (v RepositoryTemplateRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptReviewCommentSide returns new OptReviewCommentSide with value set to v.
func NewOptReviewCommentSide(v ReviewCommentSide) OptReviewCommentSide {
	return OptReviewCommentSide{
		Value: v,
		Set:   true,
	}
}

// OptReviewCommentSide is optional ReviewCommentSide.
type OptReviewCommentSide struct {
	Value ReviewCommentSide
	Set   bool
}

// IsSet returns true if OptReviewCommentSide was set.
func (o OptReviewCommentSide) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptReviewCommentSide) Reset() {
	var v ReviewCommentSide
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptReviewCommentSide) SetTo(v ReviewCommentSide) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptReviewCommentSide) Get() (v ReviewCommentSide, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptRunnerLabelsItemType returns new OptRunnerLabelsItemType with value set to v.
func NewOptRunnerLabelsItemType(v RunnerLabelsItemType) OptRunnerLabelsItemType {
	return OptRunnerLabelsItemType{
		Value: v,
		Set:   true,
	}
}

// OptRunnerLabelsItemType is optional RunnerLabelsItemType.
type OptRunnerLabelsItemType struct {
	Value RunnerLabelsItemType
	Set   bool
}

// IsSet returns true if OptRunnerLabelsItemType was set.
func (o OptRunnerLabelsItemType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRunnerLabelsItemType) Reset() {
	var v RunnerLabelsItemType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRunnerLabelsItemType) SetTo(v RunnerLabelsItemType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRunnerLabelsItemType) Get() (v RunnerLabelsItemType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptScimEnterpriseGroupMeta returns new OptScimEnterpriseGroupMeta with value set to v.
func NewOptScimEnterpriseGroupMeta(v ScimEnterpriseGroupMeta) OptScimEnterpriseGroupMeta {
	return OptScimEnterpriseGroupMeta{
		Value: v,
		Set:   true,
	}
}

// OptScimEnterpriseGroupMeta is optional ScimEnterpriseGroupMeta.
type OptScimEnterpriseGroupMeta struct {
	Value ScimEnterpriseGroupMeta
	Set   bool
}

// IsSet returns true if OptScimEnterpriseGroupMeta was set.
func (o OptScimEnterpriseGroupMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimEnterpriseGroupMeta) Reset() {
	var v ScimEnterpriseGroupMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimEnterpriseGroupMeta) SetTo(v ScimEnterpriseGroupMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimEnterpriseGroupMeta) Get() (v ScimEnterpriseGroupMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptScimEnterpriseUserMeta returns new OptScimEnterpriseUserMeta with value set to v.
func NewOptScimEnterpriseUserMeta(v ScimEnterpriseUserMeta) OptScimEnterpriseUserMeta {
	return OptScimEnterpriseUserMeta{
		Value: v,
		Set:   true,
	}
}

// OptScimEnterpriseUserMeta is optional ScimEnterpriseUserMeta.
type OptScimEnterpriseUserMeta struct {
	Value ScimEnterpriseUserMeta
	Set   bool
}

// IsSet returns true if OptScimEnterpriseUserMeta was set.
func (o OptScimEnterpriseUserMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimEnterpriseUserMeta) Reset() {
	var v ScimEnterpriseUserMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimEnterpriseUserMeta) SetTo(v ScimEnterpriseUserMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimEnterpriseUserMeta) Get() (v ScimEnterpriseUserMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptScimEnterpriseUserName returns new OptScimEnterpriseUserName with value set to v.
func NewOptScimEnterpriseUserName(v ScimEnterpriseUserName) OptScimEnterpriseUserName {
	return OptScimEnterpriseUserName{
		Value: v,
		Set:   true,
	}
}

// OptScimEnterpriseUserName is optional ScimEnterpriseUserName.
type OptScimEnterpriseUserName struct {
	Value ScimEnterpriseUserName
	Set   bool
}

// IsSet returns true if OptScimEnterpriseUserName was set.
func (o OptScimEnterpriseUserName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimEnterpriseUserName) Reset() {
	var v ScimEnterpriseUserName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimEnterpriseUserName) SetTo(v ScimEnterpriseUserName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimEnterpriseUserName) Get() (v ScimEnterpriseUserName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptScimGroupListEnterpriseResourcesItemMeta returns new OptScimGroupListEnterpriseResourcesItemMeta with value set to v.
func NewOptScimGroupListEnterpriseResourcesItemMeta(v ScimGroupListEnterpriseResourcesItemMeta) OptScimGroupListEnterpriseResourcesItemMeta {
	return OptScimGroupListEnterpriseResourcesItemMeta{
		Value: v,
		Set:   true,
	}
}

// OptScimGroupListEnterpriseResourcesItemMeta is optional ScimGroupListEnterpriseResourcesItemMeta.
type OptScimGroupListEnterpriseResourcesItemMeta struct {
	Value ScimGroupListEnterpriseResourcesItemMeta
	Set   bool
}

// IsSet returns true if OptScimGroupListEnterpriseResourcesItemMeta was set.
func (o OptScimGroupListEnterpriseResourcesItemMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimGroupListEnterpriseResourcesItemMeta) Reset() {
	var v ScimGroupListEnterpriseResourcesItemMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimGroupListEnterpriseResourcesItemMeta) SetTo(v ScimGroupListEnterpriseResourcesItemMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimGroupListEnterpriseResourcesItemMeta) Get() (v ScimGroupListEnterpriseResourcesItemMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptScimUserListEnterpriseResourcesItemMeta returns new OptScimUserListEnterpriseResourcesItemMeta with value set to v.
func NewOptScimUserListEnterpriseResourcesItemMeta(v ScimUserListEnterpriseResourcesItemMeta) OptScimUserListEnterpriseResourcesItemMeta {
	return OptScimUserListEnterpriseResourcesItemMeta{
		Value: v,
		Set:   true,
	}
}

// OptScimUserListEnterpriseResourcesItemMeta is optional ScimUserListEnterpriseResourcesItemMeta.
type OptScimUserListEnterpriseResourcesItemMeta struct {
	Value ScimUserListEnterpriseResourcesItemMeta
	Set   bool
}

// IsSet returns true if OptScimUserListEnterpriseResourcesItemMeta was set.
func (o OptScimUserListEnterpriseResourcesItemMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimUserListEnterpriseResourcesItemMeta) Reset() {
	var v ScimUserListEnterpriseResourcesItemMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimUserListEnterpriseResourcesItemMeta) SetTo(v ScimUserListEnterpriseResourcesItemMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimUserListEnterpriseResourcesItemMeta) Get() (v ScimUserListEnterpriseResourcesItemMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptScimUserListEnterpriseResourcesItemName returns new OptScimUserListEnterpriseResourcesItemName with value set to v.
func NewOptScimUserListEnterpriseResourcesItemName(v ScimUserListEnterpriseResourcesItemName) OptScimUserListEnterpriseResourcesItemName {
	return OptScimUserListEnterpriseResourcesItemName{
		Value: v,
		Set:   true,
	}
}

// OptScimUserListEnterpriseResourcesItemName is optional ScimUserListEnterpriseResourcesItemName.
type OptScimUserListEnterpriseResourcesItemName struct {
	Value ScimUserListEnterpriseResourcesItemName
	Set   bool
}

// IsSet returns true if OptScimUserListEnterpriseResourcesItemName was set.
func (o OptScimUserListEnterpriseResourcesItemName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptScimUserListEnterpriseResourcesItemName) Reset() {
	var v ScimUserListEnterpriseResourcesItemName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptScimUserListEnterpriseResourcesItemName) SetTo(v ScimUserListEnterpriseResourcesItemName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptScimUserListEnterpriseResourcesItemName) Get() (v ScimUserListEnterpriseResourcesItemName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptSecretScanningAlertResolution returns new OptSecretScanningAlertResolution with value set to v.
func NewOptSecretScanningAlertResolution(v SecretScanningAlertResolution) OptSecretScanningAlertResolution {
	return OptSecretScanningAlertResolution{
		Value: v,
		Set:   true,
	}
}

// OptSecretScanningAlertResolution is optional SecretScanningAlertResolution.
type OptSecretScanningAlertResolution struct {
	Value SecretScanningAlertResolution
	Set   bool
}

// IsSet returns true if OptSecretScanningAlertResolution was set.
func (o OptSecretScanningAlertResolution) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSecretScanningAlertResolution) Reset() {
	var v SecretScanningAlertResolution
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSecretScanningAlertResolution) SetTo(v SecretScanningAlertResolution) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSecretScanningAlertResolution) Get() (v SecretScanningAlertResolution, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptSecretScanningAlertState returns new OptSecretScanningAlertState with value set to v.
func NewOptSecretScanningAlertState(v SecretScanningAlertState) OptSecretScanningAlertState {
	return OptSecretScanningAlertState{
		Value: v,
		Set:   true,
	}
}

// OptSecretScanningAlertState is optional SecretScanningAlertState.
type OptSecretScanningAlertState struct {
	Value SecretScanningAlertState
	Set   bool
}

// IsSet returns true if OptSecretScanningAlertState was set.
func (o OptSecretScanningAlertState) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSecretScanningAlertState) Reset() {
	var v SecretScanningAlertState
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSecretScanningAlertState) SetTo(v SecretScanningAlertState) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSecretScanningAlertState) Get() (v SecretScanningAlertState, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptSimpleUser returns new OptSimpleUser with value set to v.
func NewOptSimpleUser(v SimpleUser) OptSimpleUser {
	return OptSimpleUser{
		Value: v,
		Set:   true,
	}
}

// OptSimpleUser is optional SimpleUser.
type OptSimpleUser struct {
	Value SimpleUser
	Set   bool
}

// IsSet returns true if OptSimpleUser was set.
func (o OptSimpleUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSimpleUser) Reset() {
	var v SimpleUser
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSimpleUser) SetTo(v SimpleUser) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSimpleUser) Get() (v SimpleUser, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptStatusCheckPolicy returns new OptStatusCheckPolicy with value set to v.
func NewOptStatusCheckPolicy(v StatusCheckPolicy) OptStatusCheckPolicy {
	return OptStatusCheckPolicy{
		Value: v,
		Set:   true,
	}
}

// OptStatusCheckPolicy is optional StatusCheckPolicy.
type OptStatusCheckPolicy struct {
	Value StatusCheckPolicy
	Set   bool
}

// IsSet returns true if OptStatusCheckPolicy was set.
func (o OptStatusCheckPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptStatusCheckPolicy) Reset() {
	var v StatusCheckPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptStatusCheckPolicy) SetTo(v StatusCheckPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptStatusCheckPolicy) Get() (v StatusCheckPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamFullPrivacy returns new OptTeamFullPrivacy with value set to v.
func NewOptTeamFullPrivacy(v TeamFullPrivacy) OptTeamFullPrivacy {
	return OptTeamFullPrivacy{
		Value: v,
		Set:   true,
	}
}

// OptTeamFullPrivacy is optional TeamFullPrivacy.
type OptTeamFullPrivacy struct {
	Value TeamFullPrivacy
	Set   bool
}

// IsSet returns true if OptTeamFullPrivacy was set.
func (o OptTeamFullPrivacy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamFullPrivacy) Reset() {
	var v TeamFullPrivacy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamFullPrivacy) SetTo(v TeamFullPrivacy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamFullPrivacy) Get() (v TeamFullPrivacy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamPermissions returns new OptTeamPermissions with value set to v.
func NewOptTeamPermissions(v TeamPermissions) OptTeamPermissions {
	return OptTeamPermissions{
		Value: v,
		Set:   true,
	}
}

// OptTeamPermissions is optional TeamPermissions.
type OptTeamPermissions struct {
	Value TeamPermissions
	Set   bool
}

// IsSet returns true if OptTeamPermissions was set.
func (o OptTeamPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamPermissions) Reset() {
	var v TeamPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamPermissions) SetTo(v TeamPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamPermissions) Get() (v TeamPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamRepositoryPermissions returns new OptTeamRepositoryPermissions with value set to v.
func NewOptTeamRepositoryPermissions(v TeamRepositoryPermissions) OptTeamRepositoryPermissions {
	return OptTeamRepositoryPermissions{
		Value: v,
		Set:   true,
	}
}

// OptTeamRepositoryPermissions is optional TeamRepositoryPermissions.
type OptTeamRepositoryPermissions struct {
	Value TeamRepositoryPermissions
	Set   bool
}

// IsSet returns true if OptTeamRepositoryPermissions was set.
func (o OptTeamRepositoryPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamRepositoryPermissions) Reset() {
	var v TeamRepositoryPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamRepositoryPermissions) SetTo(v TeamRepositoryPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamRepositoryPermissions) Get() (v TeamRepositoryPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole returns new OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole with value set to v.
func NewOptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole(v TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole) OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole {
	return OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole is optional TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole.
type OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole struct {
	Value TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole was set.
func (o OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole) Reset() {
	var v TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole) SetTo(v TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole) Get() (v TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole returns new OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole with value set to v.
func NewOptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole(v TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole) OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole {
	return OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole is optional TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole.
type OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole struct {
	Value TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole was set.
func (o OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole) Reset() {
	var v TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole) SetTo(v TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole) Get() (v TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission returns new OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission with value set to v.
func NewOptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission(v TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission) OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission {
	return OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission is optional TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission.
type OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission struct {
	Value TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission was set.
func (o OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission) Reset() {
	var v TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission) SetTo(v TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission) Get() (v TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission returns new OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission with value set to v.
func NewOptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission(v TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission) OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission {
	return OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission is optional TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission.
type OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission struct {
	Value TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission was set.
func (o OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission) Reset() {
	var v TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission) SetTo(v TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission) Get() (v TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission returns new OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission with value set to v.
func NewOptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission(v TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission) OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission {
	return OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission is optional TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission.
type OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission struct {
	Value TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission was set.
func (o OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission) Reset() {
	var v TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission) SetTo(v TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission) Get() (v TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission returns new OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission with value set to v.
func NewOptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission(v TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission) OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission {
	return OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission is optional TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission.
type OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission struct {
	Value TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission
	Set   bool
}

// IsSet returns true if OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission was set.
func (o OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission) Reset() {
	var v TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission) SetTo(v TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission) Get() (v TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsCreateApplicationJSONReqPermission returns new OptTeamsCreateApplicationJSONReqPermission with value set to v.
func NewOptTeamsCreateApplicationJSONReqPermission(v TeamsCreateApplicationJSONReqPermission) OptTeamsCreateApplicationJSONReqPermission {
	return OptTeamsCreateApplicationJSONReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsCreateApplicationJSONReqPermission is optional TeamsCreateApplicationJSONReqPermission.
type OptTeamsCreateApplicationJSONReqPermission struct {
	Value TeamsCreateApplicationJSONReqPermission
	Set   bool
}

// IsSet returns true if OptTeamsCreateApplicationJSONReqPermission was set.
func (o OptTeamsCreateApplicationJSONReqPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsCreateApplicationJSONReqPermission) Reset() {
	var v TeamsCreateApplicationJSONReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsCreateApplicationJSONReqPermission) SetTo(v TeamsCreateApplicationJSONReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsCreateApplicationJSONReqPermission) Get() (v TeamsCreateApplicationJSONReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsCreateApplicationJSONReqPrivacy returns new OptTeamsCreateApplicationJSONReqPrivacy with value set to v.
func NewOptTeamsCreateApplicationJSONReqPrivacy(v TeamsCreateApplicationJSONReqPrivacy) OptTeamsCreateApplicationJSONReqPrivacy {
	return OptTeamsCreateApplicationJSONReqPrivacy{
		Value: v,
		Set:   true,
	}
}

// OptTeamsCreateApplicationJSONReqPrivacy is optional TeamsCreateApplicationJSONReqPrivacy.
type OptTeamsCreateApplicationJSONReqPrivacy struct {
	Value TeamsCreateApplicationJSONReqPrivacy
	Set   bool
}

// IsSet returns true if OptTeamsCreateApplicationJSONReqPrivacy was set.
func (o OptTeamsCreateApplicationJSONReqPrivacy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsCreateApplicationJSONReqPrivacy) Reset() {
	var v TeamsCreateApplicationJSONReqPrivacy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsCreateApplicationJSONReqPrivacy) SetTo(v TeamsCreateApplicationJSONReqPrivacy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsCreateApplicationJSONReqPrivacy) Get() (v TeamsCreateApplicationJSONReqPrivacy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsUpdateInOrgApplicationJSONReqPermission returns new OptTeamsUpdateInOrgApplicationJSONReqPermission with value set to v.
func NewOptTeamsUpdateInOrgApplicationJSONReqPermission(v TeamsUpdateInOrgApplicationJSONReqPermission) OptTeamsUpdateInOrgApplicationJSONReqPermission {
	return OptTeamsUpdateInOrgApplicationJSONReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsUpdateInOrgApplicationJSONReqPermission is optional TeamsUpdateInOrgApplicationJSONReqPermission.
type OptTeamsUpdateInOrgApplicationJSONReqPermission struct {
	Value TeamsUpdateInOrgApplicationJSONReqPermission
	Set   bool
}

// IsSet returns true if OptTeamsUpdateInOrgApplicationJSONReqPermission was set.
func (o OptTeamsUpdateInOrgApplicationJSONReqPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsUpdateInOrgApplicationJSONReqPermission) Reset() {
	var v TeamsUpdateInOrgApplicationJSONReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsUpdateInOrgApplicationJSONReqPermission) SetTo(v TeamsUpdateInOrgApplicationJSONReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsUpdateInOrgApplicationJSONReqPermission) Get() (v TeamsUpdateInOrgApplicationJSONReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsUpdateInOrgApplicationJSONReqPrivacy returns new OptTeamsUpdateInOrgApplicationJSONReqPrivacy with value set to v.
func NewOptTeamsUpdateInOrgApplicationJSONReqPrivacy(v TeamsUpdateInOrgApplicationJSONReqPrivacy) OptTeamsUpdateInOrgApplicationJSONReqPrivacy {
	return OptTeamsUpdateInOrgApplicationJSONReqPrivacy{
		Value: v,
		Set:   true,
	}
}

// OptTeamsUpdateInOrgApplicationJSONReqPrivacy is optional TeamsUpdateInOrgApplicationJSONReqPrivacy.
type OptTeamsUpdateInOrgApplicationJSONReqPrivacy struct {
	Value TeamsUpdateInOrgApplicationJSONReqPrivacy
	Set   bool
}

// IsSet returns true if OptTeamsUpdateInOrgApplicationJSONReqPrivacy was set.
func (o OptTeamsUpdateInOrgApplicationJSONReqPrivacy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsUpdateInOrgApplicationJSONReqPrivacy) Reset() {
	var v TeamsUpdateInOrgApplicationJSONReqPrivacy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsUpdateInOrgApplicationJSONReqPrivacy) SetTo(v TeamsUpdateInOrgApplicationJSONReqPrivacy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsUpdateInOrgApplicationJSONReqPrivacy) Get() (v TeamsUpdateInOrgApplicationJSONReqPrivacy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsUpdateLegacyApplicationJSONReqPermission returns new OptTeamsUpdateLegacyApplicationJSONReqPermission with value set to v.
func NewOptTeamsUpdateLegacyApplicationJSONReqPermission(v TeamsUpdateLegacyApplicationJSONReqPermission) OptTeamsUpdateLegacyApplicationJSONReqPermission {
	return OptTeamsUpdateLegacyApplicationJSONReqPermission{
		Value: v,
		Set:   true,
	}
}

// OptTeamsUpdateLegacyApplicationJSONReqPermission is optional TeamsUpdateLegacyApplicationJSONReqPermission.
type OptTeamsUpdateLegacyApplicationJSONReqPermission struct {
	Value TeamsUpdateLegacyApplicationJSONReqPermission
	Set   bool
}

// IsSet returns true if OptTeamsUpdateLegacyApplicationJSONReqPermission was set.
func (o OptTeamsUpdateLegacyApplicationJSONReqPermission) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsUpdateLegacyApplicationJSONReqPermission) Reset() {
	var v TeamsUpdateLegacyApplicationJSONReqPermission
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsUpdateLegacyApplicationJSONReqPermission) SetTo(v TeamsUpdateLegacyApplicationJSONReqPermission) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsUpdateLegacyApplicationJSONReqPermission) Get() (v TeamsUpdateLegacyApplicationJSONReqPermission, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTeamsUpdateLegacyApplicationJSONReqPrivacy returns new OptTeamsUpdateLegacyApplicationJSONReqPrivacy with value set to v.
func NewOptTeamsUpdateLegacyApplicationJSONReqPrivacy(v TeamsUpdateLegacyApplicationJSONReqPrivacy) OptTeamsUpdateLegacyApplicationJSONReqPrivacy {
	return OptTeamsUpdateLegacyApplicationJSONReqPrivacy{
		Value: v,
		Set:   true,
	}
}

// OptTeamsUpdateLegacyApplicationJSONReqPrivacy is optional TeamsUpdateLegacyApplicationJSONReqPrivacy.
type OptTeamsUpdateLegacyApplicationJSONReqPrivacy struct {
	Value TeamsUpdateLegacyApplicationJSONReqPrivacy
	Set   bool
}

// IsSet returns true if OptTeamsUpdateLegacyApplicationJSONReqPrivacy was set.
func (o OptTeamsUpdateLegacyApplicationJSONReqPrivacy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTeamsUpdateLegacyApplicationJSONReqPrivacy) Reset() {
	var v TeamsUpdateLegacyApplicationJSONReqPrivacy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTeamsUpdateLegacyApplicationJSONReqPrivacy) SetTo(v TeamsUpdateLegacyApplicationJSONReqPrivacy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTeamsUpdateLegacyApplicationJSONReqPrivacy) Get() (v TeamsUpdateLegacyApplicationJSONReqPrivacy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptTime returns new OptTime with value set to v.
func NewOptTime(v time.Time) OptTime {
	return OptTime{
		Value: v,
		Set:   true,
	}
}

// OptTime is optional time.Time.
type OptTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptTime was set.
func (o OptTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptURL returns new OptURL with value set to v.
func NewOptURL(v url.URL) OptURL {
	return OptURL{
		Value: v,
		Set:   true,
	}
}

// OptURL is optional url.URL.
type OptURL struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURL was set.
func (o OptURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURL) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURL) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURL) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVerification returns new OptVerification with value set to v.
func NewOptVerification(v Verification) OptVerification {
	return OptVerification{
		Value: v,
		Set:   true,
	}
}

// OptVerification is optional Verification.
type OptVerification struct {
	Value Verification
	Set   bool
}

// IsSet returns true if OptVerification was set.
func (o OptVerification) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVerification) Reset() {
	var v Verification
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVerification) SetTo(v Verification) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVerification) Get() (v Verification, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptWorkflowRunUsageBillableMACOS returns new OptWorkflowRunUsageBillableMACOS with value set to v.
func NewOptWorkflowRunUsageBillableMACOS(v WorkflowRunUsageBillableMACOS) OptWorkflowRunUsageBillableMACOS {
	return OptWorkflowRunUsageBillableMACOS{
		Value: v,
		Set:   true,
	}
}

// OptWorkflowRunUsageBillableMACOS is optional WorkflowRunUsageBillableMACOS.
type OptWorkflowRunUsageBillableMACOS struct {
	Value WorkflowRunUsageBillableMACOS
	Set   bool
}

// IsSet returns true if OptWorkflowRunUsageBillableMACOS was set.
func (o OptWorkflowRunUsageBillableMACOS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWorkflowRunUsageBillableMACOS) Reset() {
	var v WorkflowRunUsageBillableMACOS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWorkflowRunUsageBillableMACOS) SetTo(v WorkflowRunUsageBillableMACOS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWorkflowRunUsageBillableMACOS) Get() (v WorkflowRunUsageBillableMACOS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptWorkflowRunUsageBillableUBUNTU returns new OptWorkflowRunUsageBillableUBUNTU with value set to v.
func NewOptWorkflowRunUsageBillableUBUNTU(v WorkflowRunUsageBillableUBUNTU) OptWorkflowRunUsageBillableUBUNTU {
	return OptWorkflowRunUsageBillableUBUNTU{
		Value: v,
		Set:   true,
	}
}

// OptWorkflowRunUsageBillableUBUNTU is optional WorkflowRunUsageBillableUBUNTU.
type OptWorkflowRunUsageBillableUBUNTU struct {
	Value WorkflowRunUsageBillableUBUNTU
	Set   bool
}

// IsSet returns true if OptWorkflowRunUsageBillableUBUNTU was set.
func (o OptWorkflowRunUsageBillableUBUNTU) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWorkflowRunUsageBillableUBUNTU) Reset() {
	var v WorkflowRunUsageBillableUBUNTU
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWorkflowRunUsageBillableUBUNTU) SetTo(v WorkflowRunUsageBillableUBUNTU) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWorkflowRunUsageBillableUBUNTU) Get() (v WorkflowRunUsageBillableUBUNTU, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptWorkflowRunUsageBillableWINDOWS returns new OptWorkflowRunUsageBillableWINDOWS with value set to v.
func NewOptWorkflowRunUsageBillableWINDOWS(v WorkflowRunUsageBillableWINDOWS) OptWorkflowRunUsageBillableWINDOWS {
	return OptWorkflowRunUsageBillableWINDOWS{
		Value: v,
		Set:   true,
	}
}

// OptWorkflowRunUsageBillableWINDOWS is optional WorkflowRunUsageBillableWINDOWS.
type OptWorkflowRunUsageBillableWINDOWS struct {
	Value WorkflowRunUsageBillableWINDOWS
	Set   bool
}

// IsSet returns true if OptWorkflowRunUsageBillableWINDOWS was set.
func (o OptWorkflowRunUsageBillableWINDOWS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptWorkflowRunUsageBillableWINDOWS) Reset() {
	var v WorkflowRunUsageBillableWINDOWS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptWorkflowRunUsageBillableWINDOWS) SetTo(v WorkflowRunUsageBillableWINDOWS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptWorkflowRunUsageBillableWINDOWS) Get() (v WorkflowRunUsageBillableWINDOWS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

type OrgHookConfig struct {
	ContentType OptString `json:"content_type"`
	InsecureSsl OptString `json:"insecure_ssl"`
	Secret      OptString `json:"secret"`
	URL         OptString `json:"url"`
}

type OrgMembershipPermissions struct {
	CanCreateRepository bool `json:"can_create_repository"`
}

type OrgMembershipRole string

const (
	OrgMembershipRoleAdmin          OrgMembershipRole = "admin"
	OrgMembershipRoleMember         OrgMembershipRole = "member"
	OrgMembershipRoleBillingManager OrgMembershipRole = "billing_manager"
)

type OrgMembershipState string

const (
	OrgMembershipStateActive  OrgMembershipState = "active"
	OrgMembershipStatePending OrgMembershipState = "pending"
)

type OrganizationActionsSecretVisibility string

const (
	OrganizationActionsSecretVisibilityAll      OrganizationActionsSecretVisibility = "all"
	OrganizationActionsSecretVisibilityPrivate  OrganizationActionsSecretVisibility = "private"
	OrganizationActionsSecretVisibilitySelected OrganizationActionsSecretVisibility = "selected"
)

type OrganizationFullPlan struct {
	FilledSeats  OptInt `json:"filled_seats"`
	Name         string `json:"name"`
	PrivateRepos int    `json:"private_repos"`
	Seats        OptInt `json:"seats"`
	Space        int    `json:"space"`
}

type OrgsBlockUserNoContent struct{}

type OrgsCancelInvitationNoContent struct{}

type OrgsCheckBlockedUserNoContent struct{}

func (*OrgsCheckBlockedUserNoContent) orgsCheckBlockedUserRes() {}

type OrgsCheckMembershipForUserFound struct{}

func (*OrgsCheckMembershipForUserFound) orgsCheckMembershipForUserRes() {}

type OrgsCheckMembershipForUserNoContent struct{}

func (*OrgsCheckMembershipForUserNoContent) orgsCheckMembershipForUserRes() {}

type OrgsCheckMembershipForUserNotFound struct{}

func (*OrgsCheckMembershipForUserNotFound) orgsCheckMembershipForUserRes() {}

type OrgsCheckPublicMembershipForUserNoContent struct{}

func (*OrgsCheckPublicMembershipForUserNoContent) orgsCheckPublicMembershipForUserRes() {}

type OrgsCheckPublicMembershipForUserNotFound struct{}

func (*OrgsCheckPublicMembershipForUserNotFound) orgsCheckPublicMembershipForUserRes() {}

type OrgsConvertMemberToOutsideCollaboratorAccepted struct{}

func (*OrgsConvertMemberToOutsideCollaboratorAccepted) orgsConvertMemberToOutsideCollaboratorRes() {}

type OrgsConvertMemberToOutsideCollaboratorForbidden struct{}

func (*OrgsConvertMemberToOutsideCollaboratorForbidden) orgsConvertMemberToOutsideCollaboratorRes() {}

type OrgsConvertMemberToOutsideCollaboratorNoContent struct{}

func (*OrgsConvertMemberToOutsideCollaboratorNoContent) orgsConvertMemberToOutsideCollaboratorRes() {}

type OrgsCreateInvitationApplicationJSONReq struct {
	Email     OptString                                     `json:"email"`
	InviteeID OptInt                                        `json:"invitee_id"`
	Role      OptOrgsCreateInvitationApplicationJSONReqRole `json:"role"`
	TeamIds   []int                                         `json:"team_ids"`
}

func (*OrgsCreateInvitationApplicationJSONReq) orgsCreateInvitationReq() {}

type OrgsCreateInvitationApplicationJSONReqRole string

const (
	OrgsCreateInvitationApplicationJSONReqRoleAdmin          OrgsCreateInvitationApplicationJSONReqRole = "admin"
	OrgsCreateInvitationApplicationJSONReqRoleDirectMember   OrgsCreateInvitationApplicationJSONReqRole = "direct_member"
	OrgsCreateInvitationApplicationJSONReqRoleBillingManager OrgsCreateInvitationApplicationJSONReqRole = "billing_manager"
)

type OrgsDeleteWebhookNoContent struct{}

func (*OrgsDeleteWebhookNoContent) orgsDeleteWebhookRes() {}

type OrgsGetMembershipForAuthenticatedUserApplicationJSONForbidden BasicError

func (*OrgsGetMembershipForAuthenticatedUserApplicationJSONForbidden) orgsGetMembershipForAuthenticatedUserRes() {
}

type OrgsGetMembershipForAuthenticatedUserApplicationJSONNotFound BasicError

func (*OrgsGetMembershipForAuthenticatedUserApplicationJSONNotFound) orgsGetMembershipForAuthenticatedUserRes() {
}

type OrgsGetMembershipForUserApplicationJSONForbidden BasicError

func (*OrgsGetMembershipForUserApplicationJSONForbidden) orgsGetMembershipForUserRes() {}

type OrgsGetMembershipForUserApplicationJSONNotFound BasicError

func (*OrgsGetMembershipForUserApplicationJSONNotFound) orgsGetMembershipForUserRes() {}

type OrgsListBlockedUsersOK []SimpleUser

func (*OrgsListBlockedUsersOK) orgsListBlockedUsersRes() {}

type OrgsListFailedInvitationsOK []OrganizationInvitation

func (*OrgsListFailedInvitationsOK) orgsListFailedInvitationsRes() {}

type OrgsListForAuthenticatedUserApplicationJSONForbidden BasicError

func (*OrgsListForAuthenticatedUserApplicationJSONForbidden) orgsListForAuthenticatedUserRes() {}

type OrgsListForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*OrgsListForAuthenticatedUserApplicationJSONUnauthorized) orgsListForAuthenticatedUserRes() {}

type OrgsListForAuthenticatedUserOK []OrganizationSimple

func (*OrgsListForAuthenticatedUserOK) orgsListForAuthenticatedUserRes() {}

type OrgsListInvitationTeamsOK []Team

func (*OrgsListInvitationTeamsOK) orgsListInvitationTeamsRes() {}

type OrgsListOK []OrganizationSimple

func (*OrgsListOK) orgsListRes() {}

type OrgsListPendingInvitationsOK []OrganizationInvitation

func (*OrgsListPendingInvitationsOK) orgsListPendingInvitationsRes() {}

type OrgsListWebhookDeliveriesOK []HookDeliveryItem

type OrgsListWebhooksOK []OrgHook

func (*OrgsListWebhooksOK) orgsListWebhooksRes() {}

type OrgsPingWebhookNoContent struct{}

func (*OrgsPingWebhookNoContent) orgsPingWebhookRes() {}

type OrgsRemoveMemberNoContent struct{}

func (*OrgsRemoveMemberNoContent) orgsRemoveMemberRes() {}

type OrgsRemoveMembershipForUserApplicationJSONForbidden BasicError

func (*OrgsRemoveMembershipForUserApplicationJSONForbidden) orgsRemoveMembershipForUserRes() {}

type OrgsRemoveMembershipForUserApplicationJSONNotFound BasicError

func (*OrgsRemoveMembershipForUserApplicationJSONNotFound) orgsRemoveMembershipForUserRes() {}

type OrgsRemoveMembershipForUserNoContent struct{}

func (*OrgsRemoveMembershipForUserNoContent) orgsRemoveMembershipForUserRes() {}

type OrgsRemoveOutsideCollaboratorNoContent struct{}

func (*OrgsRemoveOutsideCollaboratorNoContent) orgsRemoveOutsideCollaboratorRes() {}

type OrgsRemoveOutsideCollaboratorUnprocessableEntity struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*OrgsRemoveOutsideCollaboratorUnprocessableEntity) orgsRemoveOutsideCollaboratorRes() {}

type OrgsRemovePublicMembershipForAuthenticatedUser struct{}

type OrgsRemoveSamlSSOAuthorizationNoContent struct{}

func (*OrgsRemoveSamlSSOAuthorizationNoContent) orgsRemoveSamlSSOAuthorizationRes() {}

type OrgsSetMembershipForUserApplicationJSONReq struct {
	Role OptOrgsSetMembershipForUserApplicationJSONReqRole `json:"role"`
}

func (*OrgsSetMembershipForUserApplicationJSONReq) orgsSetMembershipForUserReq() {}

type OrgsSetMembershipForUserApplicationJSONReqRole string

const (
	OrgsSetMembershipForUserApplicationJSONReqRoleAdmin  OrgsSetMembershipForUserApplicationJSONReqRole = "admin"
	OrgsSetMembershipForUserApplicationJSONReqRoleMember OrgsSetMembershipForUserApplicationJSONReqRole = "member"
)

type OrgsSetPublicMembershipForAuthenticatedUserNoContent struct{}

func (*OrgsSetPublicMembershipForAuthenticatedUserNoContent) orgsSetPublicMembershipForAuthenticatedUserRes() {
}

type OrgsUnblockUser struct{}

type OrgsUpdateApplicationJSONReq struct {
	BillingEmail                         OptString                                                           `json:"billing_email"`
	Blog                                 OptString                                                           `json:"blog"`
	Company                              OptString                                                           `json:"company"`
	DefaultRepositoryPermission          OptOrgsUpdateApplicationJSONReqDefaultRepositoryPermission          `json:"default_repository_permission"`
	Description                          OptString                                                           `json:"description"`
	Email                                OptString                                                           `json:"email"`
	HasOrganizationProjects              OptBool                                                             `json:"has_organization_projects"`
	HasRepositoryProjects                OptBool                                                             `json:"has_repository_projects"`
	Location                             OptString                                                           `json:"location"`
	MembersAllowedRepositoryCreationType OptOrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType `json:"members_allowed_repository_creation_type"`
	MembersCanCreateInternalRepositories OptBool                                                             `json:"members_can_create_internal_repositories"`
	MembersCanCreatePages                OptBool                                                             `json:"members_can_create_pages"`
	MembersCanCreatePrivatePages         OptBool                                                             `json:"members_can_create_private_pages"`
	MembersCanCreatePrivateRepositories  OptBool                                                             `json:"members_can_create_private_repositories"`
	MembersCanCreatePublicPages          OptBool                                                             `json:"members_can_create_public_pages"`
	MembersCanCreatePublicRepositories   OptBool                                                             `json:"members_can_create_public_repositories"`
	MembersCanCreateRepositories         OptBool                                                             `json:"members_can_create_repositories"`
	Name                                 OptString                                                           `json:"name"`
	TwitterUsername                      OptString                                                           `json:"twitter_username"`
}

func (*OrgsUpdateApplicationJSONReq) orgsUpdateReq() {}

type OrgsUpdateApplicationJSONReqDefaultRepositoryPermission string

const (
	OrgsUpdateApplicationJSONReqDefaultRepositoryPermissionRead  OrgsUpdateApplicationJSONReqDefaultRepositoryPermission = "read"
	OrgsUpdateApplicationJSONReqDefaultRepositoryPermissionWrite OrgsUpdateApplicationJSONReqDefaultRepositoryPermission = "write"
	OrgsUpdateApplicationJSONReqDefaultRepositoryPermissionAdmin OrgsUpdateApplicationJSONReqDefaultRepositoryPermission = "admin"
	OrgsUpdateApplicationJSONReqDefaultRepositoryPermissionNone  OrgsUpdateApplicationJSONReqDefaultRepositoryPermission = "none"
)

type OrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType string

const (
	OrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationTypeAll     OrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType = "all"
	OrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationTypePrivate OrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType = "private"
	OrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationTypeNone    OrgsUpdateApplicationJSONReqMembersAllowedRepositoryCreationType = "none"
)

type OrgsUpdateMembershipForAuthenticatedUserApplicationJSONReq struct {
	State OrgsUpdateMembershipForAuthenticatedUserApplicationJSONReqState `json:"state"`
}

func (*OrgsUpdateMembershipForAuthenticatedUserApplicationJSONReq) orgsUpdateMembershipForAuthenticatedUserReq() {
}

type OrgsUpdateMembershipForAuthenticatedUserApplicationJSONReqState string

const (
	OrgsUpdateMembershipForAuthenticatedUserApplicationJSONReqStateActive OrgsUpdateMembershipForAuthenticatedUserApplicationJSONReqState = "active"
)

type PageBuildError struct {
	Message NilString `json:"message"`
}

type PageProtectedDomainState string

const (
	PageProtectedDomainStatePending    PageProtectedDomainState = "pending"
	PageProtectedDomainStateVerified   PageProtectedDomainState = "verified"
	PageProtectedDomainStateUnverified PageProtectedDomainState = "unverified"
)

type PageStatus string

const (
	PageStatusBuilt    PageStatus = "built"
	PageStatusBuilding PageStatus = "building"
	PageStatusErrored  PageStatus = "errored"
)

type PagesHTTPSCertificateState string

const (
	PagesHTTPSCertificateStateNew                  PagesHTTPSCertificateState = "new"
	PagesHTTPSCertificateStateAuthorizationCreated PagesHTTPSCertificateState = "authorization_created"
	PagesHTTPSCertificateStateAuthorizationPending PagesHTTPSCertificateState = "authorization_pending"
	PagesHTTPSCertificateStateAuthorized           PagesHTTPSCertificateState = "authorized"
	PagesHTTPSCertificateStateAuthorizationRevoked PagesHTTPSCertificateState = "authorization_revoked"
	PagesHTTPSCertificateStateIssued               PagesHTTPSCertificateState = "issued"
	PagesHTTPSCertificateStateUploaded             PagesHTTPSCertificateState = "uploaded"
	PagesHTTPSCertificateStateApproved             PagesHTTPSCertificateState = "approved"
	PagesHTTPSCertificateStateErrored              PagesHTTPSCertificateState = "errored"
	PagesHTTPSCertificateStateBadAuthz             PagesHTTPSCertificateState = "bad_authz"
	PagesHTTPSCertificateStateDestroyPending       PagesHTTPSCertificateState = "destroy_pending"
	PagesHTTPSCertificateStateDNSChanged           PagesHTTPSCertificateState = "dns_changed"
)

type PagesHealthCheckAltDomain struct {
	CaaError                      OptNilString `json:"caa_error"`
	DNSResolves                   OptBool      `json:"dns_resolves"`
	EnforcesHTTPS                 OptBool      `json:"enforces_https"`
	HTTPSError                    OptNilString `json:"https_error"`
	HasCnameRecord                OptNilBool   `json:"has_cname_record"`
	HasMxRecordsPresent           OptNilBool   `json:"has_mx_records_present"`
	Host                          OptString    `json:"host"`
	IsARecord                     OptNilBool   `json:"is_a_record"`
	IsApexDomain                  OptBool      `json:"is_apex_domain"`
	IsCloudflareIP                OptNilBool   `json:"is_cloudflare_ip"`
	IsCnameToFastly               OptNilBool   `json:"is_cname_to_fastly"`
	IsCnameToGithubUserDomain     OptNilBool   `json:"is_cname_to_github_user_domain"`
	IsCnameToPagesDotGithubDotCom OptNilBool   `json:"is_cname_to_pages_dot_github_dot_com"`
	IsFastlyIP                    OptNilBool   `json:"is_fastly_ip"`
	IsHTTPSEligible               OptNilBool   `json:"is_https_eligible"`
	IsNonGithubPagesIPPresent     OptNilBool   `json:"is_non_github_pages_ip_present"`
	IsOldIPAddress                OptNilBool   `json:"is_old_ip_address"`
	IsPagesDomain                 OptBool      `json:"is_pages_domain"`
	IsPointedToGithubPagesIP      OptNilBool   `json:"is_pointed_to_github_pages_ip"`
	IsProxied                     OptNilBool   `json:"is_proxied"`
	IsServedByPages               OptNilBool   `json:"is_served_by_pages"`
	IsValid                       OptBool      `json:"is_valid"`
	IsValidDomain                 OptBool      `json:"is_valid_domain"`
	Nameservers                   OptString    `json:"nameservers"`
	Reason                        OptNilString `json:"reason"`
	RespondsToHTTPS               OptBool      `json:"responds_to_https"`
	ShouldBeARecord               OptNilBool   `json:"should_be_a_record"`
	URI                           OptString    `json:"uri"`
}

type PagesHealthCheckDomain struct {
	CaaError                      OptNilString `json:"caa_error"`
	DNSResolves                   OptBool      `json:"dns_resolves"`
	EnforcesHTTPS                 OptBool      `json:"enforces_https"`
	HTTPSError                    OptNilString `json:"https_error"`
	HasCnameRecord                OptNilBool   `json:"has_cname_record"`
	HasMxRecordsPresent           OptNilBool   `json:"has_mx_records_present"`
	Host                          OptString    `json:"host"`
	IsARecord                     OptNilBool   `json:"is_a_record"`
	IsApexDomain                  OptBool      `json:"is_apex_domain"`
	IsCloudflareIP                OptNilBool   `json:"is_cloudflare_ip"`
	IsCnameToFastly               OptNilBool   `json:"is_cname_to_fastly"`
	IsCnameToGithubUserDomain     OptNilBool   `json:"is_cname_to_github_user_domain"`
	IsCnameToPagesDotGithubDotCom OptNilBool   `json:"is_cname_to_pages_dot_github_dot_com"`
	IsFastlyIP                    OptNilBool   `json:"is_fastly_ip"`
	IsHTTPSEligible               OptNilBool   `json:"is_https_eligible"`
	IsNonGithubPagesIPPresent     OptNilBool   `json:"is_non_github_pages_ip_present"`
	IsOldIPAddress                OptNilBool   `json:"is_old_ip_address"`
	IsPagesDomain                 OptBool      `json:"is_pages_domain"`
	IsPointedToGithubPagesIP      OptNilBool   `json:"is_pointed_to_github_pages_ip"`
	IsProxied                     OptNilBool   `json:"is_proxied"`
	IsServedByPages               OptNilBool   `json:"is_served_by_pages"`
	IsValid                       OptBool      `json:"is_valid"`
	IsValidDomain                 OptBool      `json:"is_valid_domain"`
	Nameservers                   OptString    `json:"nameservers"`
	Reason                        OptNilString `json:"reason"`
	RespondsToHTTPS               OptBool      `json:"responds_to_https"`
	ShouldBeARecord               OptNilBool   `json:"should_be_a_record"`
	URI                           OptString    `json:"uri"`
}

type PreviewHeaderMissing struct {
	DocumentationURL string `json:"documentation_url"`
	Message          string `json:"message"`
}

func (*PreviewHeaderMissing) appsGetBySlugRes()                      {}
func (*PreviewHeaderMissing) orgsListBlockedUsersRes()               {}
func (*PreviewHeaderMissing) projectsCreateForAuthenticatedUserRes() {}
func (*PreviewHeaderMissing) reactionsDeleteLegacyRes()              {}
func (*PreviewHeaderMissing) reposGetAllTopicsRes()                  {}
func (*PreviewHeaderMissing) reposGetBranchRes()                     {}
func (*PreviewHeaderMissing) reposGetDeploymentStatusRes()           {}
func (*PreviewHeaderMissing) reposGetReleaseAssetRes()               {}
func (*PreviewHeaderMissing) reposReplaceAllTopicsRes()              {}
func (*PreviewHeaderMissing) usersListBlockedByAuthenticatedRes()    {}

type PrivateUserPlan struct {
	Collaborators int    `json:"collaborators"`
	Name          string `json:"name"`
	PrivateRepos  int    `json:"private_repos"`
	Space         int    `json:"space"`
}

type ProjectOrganizationPermission string

const (
	ProjectOrganizationPermissionRead  ProjectOrganizationPermission = "read"
	ProjectOrganizationPermissionWrite ProjectOrganizationPermission = "write"
	ProjectOrganizationPermissionAdmin ProjectOrganizationPermission = "admin"
	ProjectOrganizationPermissionNone  ProjectOrganizationPermission = "none"
)

type ProjectsAddCollaboratorApplicationJSONReq struct {
	Permission OptProjectsAddCollaboratorApplicationJSONReqPermission `json:"permission"`
}

func (*ProjectsAddCollaboratorApplicationJSONReq) projectsAddCollaboratorReq() {}

type ProjectsAddCollaboratorApplicationJSONReqPermission string

const (
	ProjectsAddCollaboratorApplicationJSONReqPermissionRead  ProjectsAddCollaboratorApplicationJSONReqPermission = "read"
	ProjectsAddCollaboratorApplicationJSONReqPermissionWrite ProjectsAddCollaboratorApplicationJSONReqPermission = "write"
	ProjectsAddCollaboratorApplicationJSONReqPermissionAdmin ProjectsAddCollaboratorApplicationJSONReqPermission = "admin"
)

type ProjectsAddCollaboratorNoContent struct{}

type ProjectsCreateColumnApplicationJSONForbidden BasicError

func (*ProjectsCreateColumnApplicationJSONForbidden) projectsCreateColumnRes() {}

type ProjectsCreateColumnApplicationJSONReq struct {
	Name string `json:"name"`
}

type ProjectsCreateColumnApplicationJSONUnauthorized BasicError

func (*ProjectsCreateColumnApplicationJSONUnauthorized) projectsCreateColumnRes() {}

type ProjectsCreateForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ProjectsCreateForAuthenticatedUserApplicationJSONForbidden) projectsCreateForAuthenticatedUserRes() {
}

type ProjectsCreateForAuthenticatedUserApplicationJSONReq struct {
	Body OptNilString `json:"body"`
	Name string       `json:"name"`
}

type ProjectsCreateForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ProjectsCreateForAuthenticatedUserApplicationJSONUnauthorized) projectsCreateForAuthenticatedUserRes() {
}

type ProjectsCreateForOrgApplicationJSONForbidden BasicError

func (*ProjectsCreateForOrgApplicationJSONForbidden) projectsCreateForOrgRes() {}

type ProjectsCreateForOrgApplicationJSONGone BasicError

func (*ProjectsCreateForOrgApplicationJSONGone) projectsCreateForOrgRes() {}

type ProjectsCreateForOrgApplicationJSONNotFound BasicError

func (*ProjectsCreateForOrgApplicationJSONNotFound) projectsCreateForOrgRes() {}

type ProjectsCreateForOrgApplicationJSONReq struct {
	Body OptString `json:"body"`
	Name string    `json:"name"`
}

type ProjectsCreateForOrgApplicationJSONUnauthorized BasicError

func (*ProjectsCreateForOrgApplicationJSONUnauthorized) projectsCreateForOrgRes() {}

type ProjectsCreateForRepoApplicationJSONForbidden BasicError

func (*ProjectsCreateForRepoApplicationJSONForbidden) projectsCreateForRepoRes() {}

type ProjectsCreateForRepoApplicationJSONGone BasicError

func (*ProjectsCreateForRepoApplicationJSONGone) projectsCreateForRepoRes() {}

type ProjectsCreateForRepoApplicationJSONNotFound BasicError

func (*ProjectsCreateForRepoApplicationJSONNotFound) projectsCreateForRepoRes() {}

type ProjectsCreateForRepoApplicationJSONReq struct {
	Body OptString `json:"body"`
	Name string    `json:"name"`
}

type ProjectsCreateForRepoApplicationJSONUnauthorized BasicError

func (*ProjectsCreateForRepoApplicationJSONUnauthorized) projectsCreateForRepoRes() {}

type ProjectsDeleteApplicationJSONGone BasicError

func (*ProjectsDeleteApplicationJSONGone) projectsDeleteRes() {}

type ProjectsDeleteApplicationJSONNotFound BasicError

func (*ProjectsDeleteApplicationJSONNotFound) projectsDeleteRes() {}

type ProjectsDeleteApplicationJSONUnauthorized BasicError

func (*ProjectsDeleteApplicationJSONUnauthorized) projectsDeleteRes() {}

type ProjectsDeleteCardApplicationJSONNotFound BasicError

func (*ProjectsDeleteCardApplicationJSONNotFound) projectsDeleteCardRes() {}

type ProjectsDeleteCardApplicationJSONUnauthorized BasicError

func (*ProjectsDeleteCardApplicationJSONUnauthorized) projectsDeleteCardRes() {}

type ProjectsDeleteCardForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Errors           []string  `json:"errors"`
	Message          OptString `json:"message"`
}

func (*ProjectsDeleteCardForbidden) projectsDeleteCardRes() {}

type ProjectsDeleteCardNoContent struct{}

func (*ProjectsDeleteCardNoContent) projectsDeleteCardRes() {}

type ProjectsDeleteColumnApplicationJSONForbidden BasicError

func (*ProjectsDeleteColumnApplicationJSONForbidden) projectsDeleteColumnRes() {}

type ProjectsDeleteColumnApplicationJSONUnauthorized BasicError

func (*ProjectsDeleteColumnApplicationJSONUnauthorized) projectsDeleteColumnRes() {}

type ProjectsDeleteColumnNoContent struct{}

func (*ProjectsDeleteColumnNoContent) projectsDeleteColumnRes() {}

type ProjectsDeleteForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Errors           []string  `json:"errors"`
	Message          OptString `json:"message"`
}

func (*ProjectsDeleteForbidden) projectsDeleteRes() {}

type ProjectsDeleteNoContent struct{}

func (*ProjectsDeleteNoContent) projectsDeleteRes() {}

type ProjectsGetApplicationJSONForbidden BasicError

func (*ProjectsGetApplicationJSONForbidden) projectsGetRes() {}

type ProjectsGetApplicationJSONUnauthorized BasicError

func (*ProjectsGetApplicationJSONUnauthorized) projectsGetRes() {}

type ProjectsGetCardApplicationJSONForbidden BasicError

func (*ProjectsGetCardApplicationJSONForbidden) projectsGetCardRes() {}

type ProjectsGetCardApplicationJSONNotFound BasicError

func (*ProjectsGetCardApplicationJSONNotFound) projectsGetCardRes() {}

type ProjectsGetCardApplicationJSONUnauthorized BasicError

func (*ProjectsGetCardApplicationJSONUnauthorized) projectsGetCardRes() {}

type ProjectsGetColumnApplicationJSONForbidden BasicError

func (*ProjectsGetColumnApplicationJSONForbidden) projectsGetColumnRes() {}

type ProjectsGetColumnApplicationJSONNotFound BasicError

func (*ProjectsGetColumnApplicationJSONNotFound) projectsGetColumnRes() {}

type ProjectsGetColumnApplicationJSONUnauthorized BasicError

func (*ProjectsGetColumnApplicationJSONUnauthorized) projectsGetColumnRes() {}

type ProjectsListColumnsApplicationJSONForbidden BasicError

func (*ProjectsListColumnsApplicationJSONForbidden) projectsListColumnsRes() {}

type ProjectsListColumnsApplicationJSONUnauthorized BasicError

func (*ProjectsListColumnsApplicationJSONUnauthorized) projectsListColumnsRes() {}

type ProjectsListColumnsOK []ProjectColumn

func (*ProjectsListColumnsOK) projectsListColumnsRes() {}

type ProjectsMoveCardApplicationJSONReq struct {
	ColumnID OptInt `json:"column_id"`
	Position string `json:"position"`
}

func (*ProjectsMoveCardApplicationJSONReq) projectsMoveCardReq() {}

type ProjectsMoveCardCreated struct{}

type ProjectsMoveCardForbidden struct {
	DocumentationURL OptString                             `json:"documentation_url"`
	Errors           []ProjectsMoveCardForbiddenErrorsItem `json:"errors"`
	Message          OptString                             `json:"message"`
}

type ProjectsMoveCardForbiddenErrorsItem struct {
	Code     OptString `json:"code"`
	Field    OptString `json:"field"`
	Message  OptString `json:"message"`
	Resource OptString `json:"resource"`
}

type ProjectsMoveColumnApplicationJSONForbidden BasicError

func (*ProjectsMoveColumnApplicationJSONForbidden) projectsMoveColumnRes() {}

type ProjectsMoveColumnApplicationJSONReq struct {
	Position string `json:"position"`
}

type ProjectsMoveColumnApplicationJSONUnauthorized BasicError

func (*ProjectsMoveColumnApplicationJSONUnauthorized) projectsMoveColumnRes() {}

type ProjectsMoveColumnCreated struct{}

func (*ProjectsMoveColumnCreated) projectsMoveColumnRes() {}

type ProjectsRemoveCollaboratorNoContent struct{}

type ProjectsUpdateApplicationJSONGone BasicError

func (*ProjectsUpdateApplicationJSONGone) projectsUpdateRes() {}

type ProjectsUpdateApplicationJSONReq struct {
	Body                   OptNilString                                              `json:"body"`
	Name                   OptString                                                 `json:"name"`
	OrganizationPermission OptProjectsUpdateApplicationJSONReqOrganizationPermission `json:"organization_permission"`
	Private                OptBool                                                   `json:"private"`
	State                  OptString                                                 `json:"state"`
}

type ProjectsUpdateApplicationJSONReqOrganizationPermission string

const (
	ProjectsUpdateApplicationJSONReqOrganizationPermissionRead  ProjectsUpdateApplicationJSONReqOrganizationPermission = "read"
	ProjectsUpdateApplicationJSONReqOrganizationPermissionWrite ProjectsUpdateApplicationJSONReqOrganizationPermission = "write"
	ProjectsUpdateApplicationJSONReqOrganizationPermissionAdmin ProjectsUpdateApplicationJSONReqOrganizationPermission = "admin"
	ProjectsUpdateApplicationJSONReqOrganizationPermissionNone  ProjectsUpdateApplicationJSONReqOrganizationPermission = "none"
)

type ProjectsUpdateApplicationJSONUnauthorized BasicError

func (*ProjectsUpdateApplicationJSONUnauthorized) projectsUpdateRes() {}

type ProjectsUpdateCardApplicationJSONForbidden BasicError

func (*ProjectsUpdateCardApplicationJSONForbidden) projectsUpdateCardRes() {}

type ProjectsUpdateCardApplicationJSONNotFound BasicError

func (*ProjectsUpdateCardApplicationJSONNotFound) projectsUpdateCardRes() {}

type ProjectsUpdateCardApplicationJSONReq struct {
	Archived OptBool      `json:"archived"`
	Note     OptNilString `json:"note"`
}

type ProjectsUpdateCardApplicationJSONUnauthorized BasicError

func (*ProjectsUpdateCardApplicationJSONUnauthorized) projectsUpdateCardRes() {}

type ProjectsUpdateColumnApplicationJSONForbidden BasicError

func (*ProjectsUpdateColumnApplicationJSONForbidden) projectsUpdateColumnRes() {}

type ProjectsUpdateColumnApplicationJSONReq struct {
	Name string `json:"name"`
}

type ProjectsUpdateColumnApplicationJSONUnauthorized BasicError

func (*ProjectsUpdateColumnApplicationJSONUnauthorized) projectsUpdateColumnRes() {}

type ProjectsUpdateForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Errors           []string  `json:"errors"`
	Message          OptString `json:"message"`
}

func (*ProjectsUpdateForbidden) projectsUpdateRes() {}

type ProjectsUpdateNotFound struct{}

func (*ProjectsUpdateNotFound) projectsUpdateRes() {}

type ProtectedBranchAllowDeletions struct {
	Enabled bool `json:"enabled"`
}

type ProtectedBranchAllowForcePushes struct {
	Enabled bool `json:"enabled"`
}

type ProtectedBranchEnforceAdmins struct {
	Enabled bool    `json:"enabled"`
	URL     url.URL `json:"url"`
}

type ProtectedBranchPullRequestReviewDismissalRestrictions struct {
	Teams    []Team       `json:"teams"`
	TeamsURL OptString    `json:"teams_url"`
	URL      OptString    `json:"url"`
	Users    []SimpleUser `json:"users"`
	UsersURL OptString    `json:"users_url"`
}

type ProtectedBranchRequiredConversationResolution struct {
	Enabled OptBool `json:"enabled"`
}

type ProtectedBranchRequiredLinearHistory struct {
	Enabled bool `json:"enabled"`
}

type ProtectedBranchRequiredPullRequestReviews struct {
	DismissStaleReviews          OptBool                                                           `json:"dismiss_stale_reviews"`
	DismissalRestrictions        OptProtectedBranchRequiredPullRequestReviewsDismissalRestrictions `json:"dismissal_restrictions"`
	RequireCodeOwnerReviews      OptBool                                                           `json:"require_code_owner_reviews"`
	RequiredApprovingReviewCount OptInt                                                            `json:"required_approving_review_count"`
	URL                          url.URL                                                           `json:"url"`
}

type ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions struct {
	Teams    []Team       `json:"teams"`
	TeamsURL url.URL      `json:"teams_url"`
	URL      url.URL      `json:"url"`
	Users    []SimpleUser `json:"users"`
	UsersURL url.URL      `json:"users_url"`
}

type ProtectedBranchRequiredSignatures struct {
	Enabled bool    `json:"enabled"`
	URL     url.URL `json:"url"`
}

type PullRequestMinimalBase struct {
	Ref  string                     `json:"ref"`
	Repo PullRequestMinimalBaseRepo `json:"repo"`
	Sha  string                     `json:"sha"`
}

type PullRequestMinimalBaseRepo struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
	URL  string `json:"url"`
}

type PullRequestMinimalHead struct {
	Ref  string                     `json:"ref"`
	Repo PullRequestMinimalHeadRepo `json:"repo"`
	Sha  string                     `json:"sha"`
}

type PullRequestMinimalHeadRepo struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
	URL  string `json:"url"`
}

type PullRequestReviewCommentLinks struct {
	HTML        PullRequestReviewCommentLinksHTML        `json:"html"`
	PullRequest PullRequestReviewCommentLinksPullRequest `json:"pull_request"`
	Self        PullRequestReviewCommentLinksSelf        `json:"self"`
}

type PullRequestReviewCommentLinksHTML struct {
	Href url.URL `json:"href"`
}

type PullRequestReviewCommentLinksPullRequest struct {
	Href url.URL `json:"href"`
}

type PullRequestReviewCommentLinksSelf struct {
	Href url.URL `json:"href"`
}

type PullRequestReviewCommentSide string

const (
	PullRequestReviewCommentSideLEFT  PullRequestReviewCommentSide = "LEFT"
	PullRequestReviewCommentSideRIGHT PullRequestReviewCommentSide = "RIGHT"
)

type PullRequestReviewCommentStartSide string

const (
	PullRequestReviewCommentStartSideLEFT  PullRequestReviewCommentStartSide = "LEFT"
	PullRequestReviewCommentStartSideRIGHT PullRequestReviewCommentStartSide = "RIGHT"
)

type PullRequestReviewLinks struct {
	HTML        PullRequestReviewLinksHTML        `json:"html"`
	PullRequest PullRequestReviewLinksPullRequest `json:"pull_request"`
}

type PullRequestReviewLinksHTML struct {
	Href string `json:"href"`
}

type PullRequestReviewLinksPullRequest struct {
	Href string `json:"href"`
}

type PullsCheckIfMergedNoContent struct{}

func (*PullsCheckIfMergedNoContent) pullsCheckIfMergedRes() {}

type PullsCheckIfMergedNotFound struct{}

func (*PullsCheckIfMergedNotFound) pullsCheckIfMergedRes() {}

type PullsCreateApplicationJSONReq struct {
	Base                string    `json:"base"`
	Body                OptString `json:"body"`
	Draft               OptBool   `json:"draft"`
	Head                string    `json:"head"`
	Issue               OptInt    `json:"issue"`
	MaintainerCanModify OptBool   `json:"maintainer_can_modify"`
	Title               OptString `json:"title"`
}

func (*PullsCreateApplicationJSONReq) pullsCreateReq() {}

type PullsCreateReplyForReviewCommentApplicationJSONReq struct {
	Body string `json:"body"`
}

type PullsCreateReviewApplicationJSONReq struct {
	Body     OptString                                         `json:"body"`
	Comments []PullsCreateReviewApplicationJSONReqCommentsItem `json:"comments"`
	CommitID OptString                                         `json:"commit_id"`
	Event    OptPullsCreateReviewApplicationJSONReqEvent       `json:"event"`
}

type PullsCreateReviewApplicationJSONReqCommentsItem struct {
	Body      string    `json:"body"`
	Line      OptInt    `json:"line"`
	Path      string    `json:"path"`
	Position  OptInt    `json:"position"`
	Side      OptString `json:"side"`
	StartLine OptInt    `json:"start_line"`
	StartSide OptString `json:"start_side"`
}

type PullsCreateReviewApplicationJSONReqEvent string

const (
	PullsCreateReviewApplicationJSONReqEventAPPROVE        PullsCreateReviewApplicationJSONReqEvent = "APPROVE"
	PullsCreateReviewApplicationJSONReqEventREQUESTCHANGES PullsCreateReviewApplicationJSONReqEvent = "REQUEST_CHANGES"
	PullsCreateReviewApplicationJSONReqEventCOMMENT        PullsCreateReviewApplicationJSONReqEvent = "COMMENT"
)

type PullsCreateReviewCommentApplicationJSONReq struct {
	Body      string                                                 `json:"body"`
	CommitID  OptString                                              `json:"commit_id"`
	InReplyTo OptInt                                                 `json:"in_reply_to"`
	Line      OptInt                                                 `json:"line"`
	Path      OptString                                              `json:"path"`
	Position  OptInt                                                 `json:"position"`
	Side      OptPullsCreateReviewCommentApplicationJSONReqSide      `json:"side"`
	StartLine OptInt                                                 `json:"start_line"`
	StartSide OptPullsCreateReviewCommentApplicationJSONReqStartSide `json:"start_side"`
}

func (*PullsCreateReviewCommentApplicationJSONReq) pullsCreateReviewCommentReq() {}

type PullsCreateReviewCommentApplicationJSONReqSide string

const (
	PullsCreateReviewCommentApplicationJSONReqSideLEFT  PullsCreateReviewCommentApplicationJSONReqSide = "LEFT"
	PullsCreateReviewCommentApplicationJSONReqSideRIGHT PullsCreateReviewCommentApplicationJSONReqSide = "RIGHT"
)

type PullsCreateReviewCommentApplicationJSONReqStartSide string

const (
	PullsCreateReviewCommentApplicationJSONReqStartSideLEFT  PullsCreateReviewCommentApplicationJSONReqStartSide = "LEFT"
	PullsCreateReviewCommentApplicationJSONReqStartSideRIGHT PullsCreateReviewCommentApplicationJSONReqStartSide = "RIGHT"
	PullsCreateReviewCommentApplicationJSONReqStartSideSide  PullsCreateReviewCommentApplicationJSONReqStartSide = "side"
)

type PullsDeleteReviewCommentNoContent struct{}

func (*PullsDeleteReviewCommentNoContent) pullsDeleteReviewCommentRes() {}

type PullsDismissReviewApplicationJSONReq struct {
	Event   OptString `json:"event"`
	Message string    `json:"message"`
}

type PullsListCommentsForReviewOK []ReviewComment

func (*PullsListCommentsForReviewOK) pullsListCommentsForReviewRes() {}

type PullsListFilesOK []DiffEntry

type PullsMergeApplicationJSONReq struct {
	CommitMessage OptString                                  `json:"commit_message"`
	CommitTitle   OptString                                  `json:"commit_title"`
	MergeMethod   OptPullsMergeApplicationJSONReqMergeMethod `json:"merge_method"`
	Sha           OptString                                  `json:"sha"`
}

func (*PullsMergeApplicationJSONReq) pullsMergeReq() {}

type PullsMergeApplicationJSONReqMergeMethod string

const (
	PullsMergeApplicationJSONReqMergeMethodMerge  PullsMergeApplicationJSONReqMergeMethod = "merge"
	PullsMergeApplicationJSONReqMergeMethodSquash PullsMergeApplicationJSONReqMergeMethod = "squash"
	PullsMergeApplicationJSONReqMergeMethodRebase PullsMergeApplicationJSONReqMergeMethod = "rebase"
)

type PullsMergeConflict struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

type PullsMergeMethodNotAllowed struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

type PullsRemoveRequestedReviewersApplicationJSONReq struct {
	Reviewers     []string `json:"reviewers"`
	TeamReviewers []string `json:"team_reviewers"`
}

func (*PullsRemoveRequestedReviewersApplicationJSONReq) pullsRemoveRequestedReviewersReq() {}

type PullsSubmitReviewApplicationJSONForbidden BasicError

func (*PullsSubmitReviewApplicationJSONForbidden) pullsSubmitReviewRes() {}

type PullsSubmitReviewApplicationJSONNotFound BasicError

func (*PullsSubmitReviewApplicationJSONNotFound) pullsSubmitReviewRes() {}

type PullsSubmitReviewApplicationJSONReq struct {
	Body  OptString                                `json:"body"`
	Event PullsSubmitReviewApplicationJSONReqEvent `json:"event"`
}

type PullsSubmitReviewApplicationJSONReqEvent string

const (
	PullsSubmitReviewApplicationJSONReqEventAPPROVE        PullsSubmitReviewApplicationJSONReqEvent = "APPROVE"
	PullsSubmitReviewApplicationJSONReqEventREQUESTCHANGES PullsSubmitReviewApplicationJSONReqEvent = "REQUEST_CHANGES"
	PullsSubmitReviewApplicationJSONReqEventCOMMENT        PullsSubmitReviewApplicationJSONReqEvent = "COMMENT"
)

type PullsUpdateApplicationJSONReq struct {
	Base                OptString                             `json:"base"`
	Body                OptString                             `json:"body"`
	MaintainerCanModify OptBool                               `json:"maintainer_can_modify"`
	State               OptPullsUpdateApplicationJSONReqState `json:"state"`
	Title               OptString                             `json:"title"`
}

func (*PullsUpdateApplicationJSONReq) pullsUpdateReq() {}

type PullsUpdateApplicationJSONReqState string

const (
	PullsUpdateApplicationJSONReqStateOpen   PullsUpdateApplicationJSONReqState = "open"
	PullsUpdateApplicationJSONReqStateClosed PullsUpdateApplicationJSONReqState = "closed"
)

type PullsUpdateBranchAccepted struct {
	Message OptString `json:"message"`
	URL     OptString `json:"url"`
}

type PullsUpdateBranchApplicationJSONReq struct {
	ExpectedHeadSha OptString `json:"expected_head_sha"`
}

func (*PullsUpdateBranchApplicationJSONReq) pullsUpdateBranchReq() {}

type PullsUpdateReviewApplicationJSONReq struct {
	Body string `json:"body"`
}

type PullsUpdateReviewCommentApplicationJSONReq struct {
	Body string `json:"body"`
}

type RateLimitOverviewResources struct {
	ActionsRunnerRegistration OptRateLimit `json:"actions_runner_registration"`
	CodeScanningUpload        OptRateLimit `json:"code_scanning_upload"`
	Core                      RateLimit    `json:"core"`
	Graphql                   OptRateLimit `json:"graphql"`
	IntegrationManifest       OptRateLimit `json:"integration_manifest"`
	Search                    RateLimit    `json:"search"`
	SourceImport              OptRateLimit `json:"source_import"`
}

type ReactionContent string

const (
	ReactionContentPlus1    ReactionContent = "+1"
	ReactionContentMinus1   ReactionContent = "-1"
	ReactionContentLaugh    ReactionContent = "laugh"
	ReactionContentConfused ReactionContent = "confused"
	ReactionContentHeart    ReactionContent = "heart"
	ReactionContentHooray   ReactionContent = "hooray"
	ReactionContentRocket   ReactionContent = "rocket"
	ReactionContentEyes     ReactionContent = "eyes"
)

type ReactionsCreateForCommitCommentApplicationJSONReq struct {
	Content ReactionsCreateForCommitCommentApplicationJSONReqContent `json:"content"`
}

func (*ReactionsCreateForCommitCommentApplicationJSONReq) reactionsCreateForCommitCommentReq() {}

type ReactionsCreateForCommitCommentApplicationJSONReqContent string

const (
	ReactionsCreateForCommitCommentApplicationJSONReqContentPlus1    ReactionsCreateForCommitCommentApplicationJSONReqContent = "+1"
	ReactionsCreateForCommitCommentApplicationJSONReqContentMinus1   ReactionsCreateForCommitCommentApplicationJSONReqContent = "-1"
	ReactionsCreateForCommitCommentApplicationJSONReqContentLaugh    ReactionsCreateForCommitCommentApplicationJSONReqContent = "laugh"
	ReactionsCreateForCommitCommentApplicationJSONReqContentConfused ReactionsCreateForCommitCommentApplicationJSONReqContent = "confused"
	ReactionsCreateForCommitCommentApplicationJSONReqContentHeart    ReactionsCreateForCommitCommentApplicationJSONReqContent = "heart"
	ReactionsCreateForCommitCommentApplicationJSONReqContentHooray   ReactionsCreateForCommitCommentApplicationJSONReqContent = "hooray"
	ReactionsCreateForCommitCommentApplicationJSONReqContentRocket   ReactionsCreateForCommitCommentApplicationJSONReqContent = "rocket"
	ReactionsCreateForCommitCommentApplicationJSONReqContentEyes     ReactionsCreateForCommitCommentApplicationJSONReqContent = "eyes"
)

type ReactionsCreateForIssueApplicationJSONReq struct {
	Content ReactionsCreateForIssueApplicationJSONReqContent `json:"content"`
}

func (*ReactionsCreateForIssueApplicationJSONReq) reactionsCreateForIssueReq() {}

type ReactionsCreateForIssueApplicationJSONReqContent string

const (
	ReactionsCreateForIssueApplicationJSONReqContentPlus1    ReactionsCreateForIssueApplicationJSONReqContent = "+1"
	ReactionsCreateForIssueApplicationJSONReqContentMinus1   ReactionsCreateForIssueApplicationJSONReqContent = "-1"
	ReactionsCreateForIssueApplicationJSONReqContentLaugh    ReactionsCreateForIssueApplicationJSONReqContent = "laugh"
	ReactionsCreateForIssueApplicationJSONReqContentConfused ReactionsCreateForIssueApplicationJSONReqContent = "confused"
	ReactionsCreateForIssueApplicationJSONReqContentHeart    ReactionsCreateForIssueApplicationJSONReqContent = "heart"
	ReactionsCreateForIssueApplicationJSONReqContentHooray   ReactionsCreateForIssueApplicationJSONReqContent = "hooray"
	ReactionsCreateForIssueApplicationJSONReqContentRocket   ReactionsCreateForIssueApplicationJSONReqContent = "rocket"
	ReactionsCreateForIssueApplicationJSONReqContentEyes     ReactionsCreateForIssueApplicationJSONReqContent = "eyes"
)

type ReactionsCreateForIssueCommentApplicationJSONReq struct {
	Content ReactionsCreateForIssueCommentApplicationJSONReqContent `json:"content"`
}

func (*ReactionsCreateForIssueCommentApplicationJSONReq) reactionsCreateForIssueCommentReq() {}

type ReactionsCreateForIssueCommentApplicationJSONReqContent string

const (
	ReactionsCreateForIssueCommentApplicationJSONReqContentPlus1    ReactionsCreateForIssueCommentApplicationJSONReqContent = "+1"
	ReactionsCreateForIssueCommentApplicationJSONReqContentMinus1   ReactionsCreateForIssueCommentApplicationJSONReqContent = "-1"
	ReactionsCreateForIssueCommentApplicationJSONReqContentLaugh    ReactionsCreateForIssueCommentApplicationJSONReqContent = "laugh"
	ReactionsCreateForIssueCommentApplicationJSONReqContentConfused ReactionsCreateForIssueCommentApplicationJSONReqContent = "confused"
	ReactionsCreateForIssueCommentApplicationJSONReqContentHeart    ReactionsCreateForIssueCommentApplicationJSONReqContent = "heart"
	ReactionsCreateForIssueCommentApplicationJSONReqContentHooray   ReactionsCreateForIssueCommentApplicationJSONReqContent = "hooray"
	ReactionsCreateForIssueCommentApplicationJSONReqContentRocket   ReactionsCreateForIssueCommentApplicationJSONReqContent = "rocket"
	ReactionsCreateForIssueCommentApplicationJSONReqContentEyes     ReactionsCreateForIssueCommentApplicationJSONReqContent = "eyes"
)

type ReactionsCreateForPullRequestReviewCommentApplicationJSONReq struct {
	Content ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContent `json:"content"`
}

func (*ReactionsCreateForPullRequestReviewCommentApplicationJSONReq) reactionsCreateForPullRequestReviewCommentReq() {
}

type ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContent string

const (
	ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContentPlus1    ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContent = "+1"
	ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContentMinus1   ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContent = "-1"
	ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContentLaugh    ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContent = "laugh"
	ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContentConfused ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContent = "confused"
	ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContentHeart    ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContent = "heart"
	ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContentHooray   ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContent = "hooray"
	ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContentRocket   ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContent = "rocket"
	ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContentEyes     ReactionsCreateForPullRequestReviewCommentApplicationJSONReqContent = "eyes"
)

type ReactionsCreateForReleaseApplicationJSONReq struct {
	Content ReactionsCreateForReleaseApplicationJSONReqContent `json:"content"`
}

func (*ReactionsCreateForReleaseApplicationJSONReq) reactionsCreateForReleaseReq() {}

type ReactionsCreateForReleaseApplicationJSONReqContent string

const (
	ReactionsCreateForReleaseApplicationJSONReqContentPlus1  ReactionsCreateForReleaseApplicationJSONReqContent = "+1"
	ReactionsCreateForReleaseApplicationJSONReqContentLaugh  ReactionsCreateForReleaseApplicationJSONReqContent = "laugh"
	ReactionsCreateForReleaseApplicationJSONReqContentHeart  ReactionsCreateForReleaseApplicationJSONReqContent = "heart"
	ReactionsCreateForReleaseApplicationJSONReqContentHooray ReactionsCreateForReleaseApplicationJSONReqContent = "hooray"
	ReactionsCreateForReleaseApplicationJSONReqContentRocket ReactionsCreateForReleaseApplicationJSONReqContent = "rocket"
	ReactionsCreateForReleaseApplicationJSONReqContentEyes   ReactionsCreateForReleaseApplicationJSONReqContent = "eyes"
)

type ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONCreated Reaction

func (*ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONCreated) reactionsCreateForTeamDiscussionCommentInOrgRes() {
}

type ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONOK Reaction

func (*ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONOK) reactionsCreateForTeamDiscussionCommentInOrgRes() {
}

type ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReq struct {
	Content ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContent `json:"content"`
}

type ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContent string

const (
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContentPlus1    ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContent = "+1"
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContentMinus1   ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContent = "-1"
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContentLaugh    ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContent = "laugh"
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContentConfused ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContent = "confused"
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContentHeart    ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContent = "heart"
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContentHooray   ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContent = "hooray"
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContentRocket   ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContent = "rocket"
	ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContentEyes     ReactionsCreateForTeamDiscussionCommentInOrgApplicationJSONReqContent = "eyes"
)

type ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReq struct {
	Content ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContent `json:"content"`
}

type ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContent string

const (
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContentPlus1    ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContent = "+1"
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContentMinus1   ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContent = "-1"
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContentLaugh    ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContent = "laugh"
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContentConfused ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContent = "confused"
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContentHeart    ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContent = "heart"
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContentHooray   ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContent = "hooray"
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContentRocket   ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContent = "rocket"
	ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContentEyes     ReactionsCreateForTeamDiscussionCommentLegacyApplicationJSONReqContent = "eyes"
)

type ReactionsCreateForTeamDiscussionInOrgApplicationJSONCreated Reaction

func (*ReactionsCreateForTeamDiscussionInOrgApplicationJSONCreated) reactionsCreateForTeamDiscussionInOrgRes() {
}

type ReactionsCreateForTeamDiscussionInOrgApplicationJSONOK Reaction

func (*ReactionsCreateForTeamDiscussionInOrgApplicationJSONOK) reactionsCreateForTeamDiscussionInOrgRes() {
}

type ReactionsCreateForTeamDiscussionInOrgApplicationJSONReq struct {
	Content ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContent `json:"content"`
}

type ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContent string

const (
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContentPlus1    ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContent = "+1"
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContentMinus1   ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContent = "-1"
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContentLaugh    ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContent = "laugh"
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContentConfused ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContent = "confused"
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContentHeart    ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContent = "heart"
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContentHooray   ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContent = "hooray"
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContentRocket   ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContent = "rocket"
	ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContentEyes     ReactionsCreateForTeamDiscussionInOrgApplicationJSONReqContent = "eyes"
)

type ReactionsCreateForTeamDiscussionLegacyApplicationJSONReq struct {
	Content ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContent `json:"content"`
}

type ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContent string

const (
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContentPlus1    ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContent = "+1"
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContentMinus1   ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContent = "-1"
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContentLaugh    ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContent = "laugh"
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContentConfused ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContent = "confused"
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContentHeart    ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContent = "heart"
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContentHooray   ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContent = "hooray"
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContentRocket   ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContent = "rocket"
	ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContentEyes     ReactionsCreateForTeamDiscussionLegacyApplicationJSONReqContent = "eyes"
)

type ReactionsDeleteForCommitComment struct{}

type ReactionsDeleteForIssue struct{}

type ReactionsDeleteForIssueComment struct{}

type ReactionsDeleteForPullRequestComment struct{}

type ReactionsDeleteForTeamDiscussion struct{}

type ReactionsDeleteForTeamDiscussionComment struct{}

type ReactionsDeleteLegacyApplicationJSONForbidden BasicError

func (*ReactionsDeleteLegacyApplicationJSONForbidden) reactionsDeleteLegacyRes() {}

type ReactionsDeleteLegacyApplicationJSONGone BasicError

func (*ReactionsDeleteLegacyApplicationJSONGone) reactionsDeleteLegacyRes() {}

type ReactionsDeleteLegacyApplicationJSONUnauthorized BasicError

func (*ReactionsDeleteLegacyApplicationJSONUnauthorized) reactionsDeleteLegacyRes() {}

type ReactionsDeleteLegacyNoContent struct{}

func (*ReactionsDeleteLegacyNoContent) reactionsDeleteLegacyRes() {}

type ReleaseAssetState string

const (
	ReleaseAssetStateUploaded ReleaseAssetState = "uploaded"
	ReleaseAssetStateOpen     ReleaseAssetState = "open"
)

type ReposAcceptInvitationApplicationJSONConflict BasicError

func (*ReposAcceptInvitationApplicationJSONConflict) reposAcceptInvitationRes() {}

type ReposAcceptInvitationApplicationJSONForbidden BasicError

func (*ReposAcceptInvitationApplicationJSONForbidden) reposAcceptInvitationRes() {}

type ReposAcceptInvitationApplicationJSONNotFound BasicError

func (*ReposAcceptInvitationApplicationJSONNotFound) reposAcceptInvitationRes() {}

type ReposAcceptInvitationNoContent struct{}

func (*ReposAcceptInvitationNoContent) reposAcceptInvitationRes() {}

type ReposAddCollaboratorApplicationJSONReq struct {
	Permission  OptReposAddCollaboratorApplicationJSONReqPermission `json:"permission"`
	Permissions OptString                                           `json:"permissions"`
}

func (*ReposAddCollaboratorApplicationJSONReq) reposAddCollaboratorReq() {}

type ReposAddCollaboratorApplicationJSONReqPermission string

const (
	ReposAddCollaboratorApplicationJSONReqPermissionPull     ReposAddCollaboratorApplicationJSONReqPermission = "pull"
	ReposAddCollaboratorApplicationJSONReqPermissionPush     ReposAddCollaboratorApplicationJSONReqPermission = "push"
	ReposAddCollaboratorApplicationJSONReqPermissionAdmin    ReposAddCollaboratorApplicationJSONReqPermission = "admin"
	ReposAddCollaboratorApplicationJSONReqPermissionMaintain ReposAddCollaboratorApplicationJSONReqPermission = "maintain"
	ReposAddCollaboratorApplicationJSONReqPermissionTriage   ReposAddCollaboratorApplicationJSONReqPermission = "triage"
)

type ReposAddCollaboratorNoContent struct{}

type ReposCheckCollaboratorNoContent struct{}

func (*ReposCheckCollaboratorNoContent) reposCheckCollaboratorRes() {}

type ReposCheckCollaboratorNotFound struct{}

func (*ReposCheckCollaboratorNotFound) reposCheckCollaboratorRes() {}

type ReposCheckVulnerabilityAlertsNoContent struct{}

func (*ReposCheckVulnerabilityAlertsNoContent) reposCheckVulnerabilityAlertsRes() {}

type ReposCheckVulnerabilityAlertsNotFound struct{}

func (*ReposCheckVulnerabilityAlertsNotFound) reposCheckVulnerabilityAlertsRes() {}

type ReposCompareCommitsApplicationJSONInternalServerError BasicError

func (*ReposCompareCommitsApplicationJSONInternalServerError) reposCompareCommitsRes() {}

type ReposCompareCommitsApplicationJSONNotFound BasicError

func (*ReposCompareCommitsApplicationJSONNotFound) reposCompareCommitsRes() {}

type ReposCreateAutolinkApplicationJSONReq struct {
	KeyPrefix   string `json:"key_prefix"`
	URLTemplate string `json:"url_template"`
}

func (*ReposCreateAutolinkApplicationJSONReq) reposCreateAutolinkReq() {}

type ReposCreateCommitCommentApplicationJSONReq struct {
	Body     string    `json:"body"`
	Line     OptInt    `json:"line"`
	Path     OptString `json:"path"`
	Position OptInt    `json:"position"`
}

func (*ReposCreateCommitCommentApplicationJSONReq) reposCreateCommitCommentReq() {}

type ReposCreateCommitStatusApplicationJSONReq struct {
	Context     OptString                                      `json:"context"`
	Description OptString                                      `json:"description"`
	State       ReposCreateCommitStatusApplicationJSONReqState `json:"state"`
	TargetURL   OptString                                      `json:"target_url"`
}

type ReposCreateCommitStatusApplicationJSONReqState string

const (
	ReposCreateCommitStatusApplicationJSONReqStateError   ReposCreateCommitStatusApplicationJSONReqState = "error"
	ReposCreateCommitStatusApplicationJSONReqStateFailure ReposCreateCommitStatusApplicationJSONReqState = "failure"
	ReposCreateCommitStatusApplicationJSONReqStatePending ReposCreateCommitStatusApplicationJSONReqState = "pending"
	ReposCreateCommitStatusApplicationJSONReqStateSuccess ReposCreateCommitStatusApplicationJSONReqState = "success"
)

type ReposCreateDeployKeyApplicationJSONReq struct {
	Key      string    `json:"key"`
	ReadOnly OptBool   `json:"read_only"`
	Title    OptString `json:"title"`
}

func (*ReposCreateDeployKeyApplicationJSONReq) reposCreateDeployKeyReq() {}

type ReposCreateDeploymentStatusApplicationJSONReq struct {
	AutoInactive   OptBool                                                     `json:"auto_inactive"`
	Description    OptString                                                   `json:"description"`
	Environment    OptReposCreateDeploymentStatusApplicationJSONReqEnvironment `json:"environment"`
	EnvironmentURL OptString                                                   `json:"environment_url"`
	LogURL         OptString                                                   `json:"log_url"`
	State          ReposCreateDeploymentStatusApplicationJSONReqState          `json:"state"`
	TargetURL      OptString                                                   `json:"target_url"`
}

func (*ReposCreateDeploymentStatusApplicationJSONReq) reposCreateDeploymentStatusReq() {}

type ReposCreateDeploymentStatusApplicationJSONReqEnvironment string

const (
	ReposCreateDeploymentStatusApplicationJSONReqEnvironmentProduction ReposCreateDeploymentStatusApplicationJSONReqEnvironment = "production"
	ReposCreateDeploymentStatusApplicationJSONReqEnvironmentStaging    ReposCreateDeploymentStatusApplicationJSONReqEnvironment = "staging"
	ReposCreateDeploymentStatusApplicationJSONReqEnvironmentQa         ReposCreateDeploymentStatusApplicationJSONReqEnvironment = "qa"
)

type ReposCreateDeploymentStatusApplicationJSONReqState string

const (
	ReposCreateDeploymentStatusApplicationJSONReqStateError      ReposCreateDeploymentStatusApplicationJSONReqState = "error"
	ReposCreateDeploymentStatusApplicationJSONReqStateFailure    ReposCreateDeploymentStatusApplicationJSONReqState = "failure"
	ReposCreateDeploymentStatusApplicationJSONReqStateInactive   ReposCreateDeploymentStatusApplicationJSONReqState = "inactive"
	ReposCreateDeploymentStatusApplicationJSONReqStateInProgress ReposCreateDeploymentStatusApplicationJSONReqState = "in_progress"
	ReposCreateDeploymentStatusApplicationJSONReqStateQueued     ReposCreateDeploymentStatusApplicationJSONReqState = "queued"
	ReposCreateDeploymentStatusApplicationJSONReqStatePending    ReposCreateDeploymentStatusApplicationJSONReqState = "pending"
	ReposCreateDeploymentStatusApplicationJSONReqStateSuccess    ReposCreateDeploymentStatusApplicationJSONReqState = "success"
)

type ReposCreateDispatchEventApplicationJSONReq struct {
	ClientPayload *ReposCreateDispatchEventApplicationJSONReqClientPayload `json:"client_payload"`
	EventType     string                                                   `json:"event_type"`
}

func (*ReposCreateDispatchEventApplicationJSONReq) reposCreateDispatchEventReq() {}

type ReposCreateDispatchEventApplicationJSONReqClientPayload struct{}

type ReposCreateDispatchEventNoContent struct{}

type ReposCreateForAuthenticatedUserApplicationJSONReq struct {
	AllowAutoMerge      OptBool   `json:"allow_auto_merge"`
	AllowMergeCommit    OptBool   `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool   `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool   `json:"allow_squash_merge"`
	AutoInit            OptBool   `json:"auto_init"`
	DeleteBranchOnMerge OptBool   `json:"delete_branch_on_merge"`
	Description         OptString `json:"description"`
	GitignoreTemplate   OptString `json:"gitignore_template"`
	HasDownloads        OptBool   `json:"has_downloads"`
	HasIssues           OptBool   `json:"has_issues"`
	HasProjects         OptBool   `json:"has_projects"`
	HasWiki             OptBool   `json:"has_wiki"`
	Homepage            OptString `json:"homepage"`
	IsTemplate          OptBool   `json:"is_template"`
	LicenseTemplate     OptString `json:"license_template"`
	Name                string    `json:"name"`
	Private             OptBool   `json:"private"`
	TeamID              OptInt    `json:"team_id"`
}

func (*ReposCreateForAuthenticatedUserApplicationJSONReq) reposCreateForAuthenticatedUserReq() {}

type ReposCreateForkApplicationJSONReq struct {
	Organization OptString `json:"organization"`
}

func (*ReposCreateForkApplicationJSONReq) reposCreateForkReq() {}

type ReposCreateInOrgApplicationJSONReq struct {
	AllowAutoMerge      OptBool                                         `json:"allow_auto_merge"`
	AllowMergeCommit    OptBool                                         `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                                         `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                                         `json:"allow_squash_merge"`
	AutoInit            OptBool                                         `json:"auto_init"`
	DeleteBranchOnMerge OptBool                                         `json:"delete_branch_on_merge"`
	Description         OptString                                       `json:"description"`
	GitignoreTemplate   OptString                                       `json:"gitignore_template"`
	HasIssues           OptBool                                         `json:"has_issues"`
	HasProjects         OptBool                                         `json:"has_projects"`
	HasWiki             OptBool                                         `json:"has_wiki"`
	Homepage            OptString                                       `json:"homepage"`
	IsTemplate          OptBool                                         `json:"is_template"`
	LicenseTemplate     OptString                                       `json:"license_template"`
	Name                string                                          `json:"name"`
	Private             OptBool                                         `json:"private"`
	TeamID              OptInt                                          `json:"team_id"`
	Visibility          OptReposCreateInOrgApplicationJSONReqVisibility `json:"visibility"`
}

func (*ReposCreateInOrgApplicationJSONReq) reposCreateInOrgReq() {}

type ReposCreateInOrgApplicationJSONReqVisibility string

const (
	ReposCreateInOrgApplicationJSONReqVisibilityPublic     ReposCreateInOrgApplicationJSONReqVisibility = "public"
	ReposCreateInOrgApplicationJSONReqVisibilityPrivate    ReposCreateInOrgApplicationJSONReqVisibility = "private"
	ReposCreateInOrgApplicationJSONReqVisibilityVisibility ReposCreateInOrgApplicationJSONReqVisibility = "visibility"
	ReposCreateInOrgApplicationJSONReqVisibilityInternal   ReposCreateInOrgApplicationJSONReqVisibility = "internal"
)

type ReposCreateOrUpdateFileContentsApplicationJSONReq struct {
	Author    OptReposCreateOrUpdateFileContentsApplicationJSONReqAuthor    `json:"author"`
	Branch    OptString                                                     `json:"branch"`
	Committer OptReposCreateOrUpdateFileContentsApplicationJSONReqCommitter `json:"committer"`
	Content   string                                                        `json:"content"`
	Message   string                                                        `json:"message"`
	Sha       OptString                                                     `json:"sha"`
}

func (*ReposCreateOrUpdateFileContentsApplicationJSONReq) reposCreateOrUpdateFileContentsReq() {}

type ReposCreateOrUpdateFileContentsApplicationJSONReqAuthor struct {
	Date  OptString `json:"date"`
	Email string    `json:"email"`
	Name  string    `json:"name"`
}

type ReposCreateOrUpdateFileContentsApplicationJSONReqCommitter struct {
	Date  OptString `json:"date"`
	Email string    `json:"email"`
	Name  string    `json:"name"`
}

type ReposCreatePagesSiteApplicationJSONReq struct {
	Source ReposCreatePagesSiteApplicationJSONReqSource `json:"source"`
}

func (*ReposCreatePagesSiteApplicationJSONReq) reposCreatePagesSiteReq() {}

type ReposCreatePagesSiteApplicationJSONReqSource struct {
	Branch string                                              `json:"branch"`
	Path   OptReposCreatePagesSiteApplicationJSONReqSourcePath `json:"path"`
}

type ReposCreatePagesSiteApplicationJSONReqSourcePath string

const (
	ReposCreatePagesSiteApplicationJSONReqSourcePathSlash     ReposCreatePagesSiteApplicationJSONReqSourcePath = "/"
	ReposCreatePagesSiteApplicationJSONReqSourcePathSlashDocs ReposCreatePagesSiteApplicationJSONReqSourcePath = "/docs"
)

type ReposCreateReleaseApplicationJSONReq struct {
	Body                   OptString `json:"body"`
	DiscussionCategoryName OptString `json:"discussion_category_name"`
	Draft                  OptBool   `json:"draft"`
	Name                   OptString `json:"name"`
	Prerelease             OptBool   `json:"prerelease"`
	TagName                string    `json:"tag_name"`
	TargetCommitish        OptString `json:"target_commitish"`
}

func (*ReposCreateReleaseApplicationJSONReq) reposCreateReleaseReq() {}

type ReposCreateUsingTemplateApplicationJSONReq struct {
	Description        OptString `json:"description"`
	IncludeAllBranches OptBool   `json:"include_all_branches"`
	Name               string    `json:"name"`
	Owner              OptString `json:"owner"`
	Private            OptBool   `json:"private"`
}

type ReposDeclineInvitationApplicationJSONConflict BasicError

func (*ReposDeclineInvitationApplicationJSONConflict) reposDeclineInvitationRes() {}

type ReposDeclineInvitationApplicationJSONForbidden BasicError

func (*ReposDeclineInvitationApplicationJSONForbidden) reposDeclineInvitationRes() {}

type ReposDeclineInvitationApplicationJSONNotFound BasicError

func (*ReposDeclineInvitationApplicationJSONNotFound) reposDeclineInvitationRes() {}

type ReposDeclineInvitationNoContent struct{}

func (*ReposDeclineInvitationNoContent) reposDeclineInvitationRes() {}

type ReposDeleteAccessRestrictions struct{}

type ReposDeleteAdminBranchProtectionNoContent struct{}

func (*ReposDeleteAdminBranchProtectionNoContent) reposDeleteAdminBranchProtectionRes() {}

type ReposDeleteAnEnvironment struct{}

type ReposDeleteApplicationJSONNotFound BasicError

func (*ReposDeleteApplicationJSONNotFound) reposDeleteRes() {}

type ReposDeleteApplicationJSONTemporaryRedirect BasicError

func (*ReposDeleteApplicationJSONTemporaryRedirect) reposDeleteRes() {}

type ReposDeleteAutolinkNoContent struct{}

func (*ReposDeleteAutolinkNoContent) reposDeleteAutolinkRes() {}

type ReposDeleteBranchProtectionNoContent struct{}

func (*ReposDeleteBranchProtectionNoContent) reposDeleteBranchProtectionRes() {}

type ReposDeleteCommitCommentNoContent struct{}

func (*ReposDeleteCommitCommentNoContent) reposDeleteCommitCommentRes() {}

type ReposDeleteCommitSignatureProtectionNoContent struct{}

func (*ReposDeleteCommitSignatureProtectionNoContent) reposDeleteCommitSignatureProtectionRes() {}

type ReposDeleteDeployKey struct{}

type ReposDeleteDeploymentNoContent struct{}

func (*ReposDeleteDeploymentNoContent) reposDeleteDeploymentRes() {}

type ReposDeleteFileApplicationJSONReq struct {
	Author    OptReposDeleteFileApplicationJSONReqAuthor    `json:"author"`
	Branch    OptString                                     `json:"branch"`
	Committer OptReposDeleteFileApplicationJSONReqCommitter `json:"committer"`
	Message   string                                        `json:"message"`
	Sha       string                                        `json:"sha"`
}

func (*ReposDeleteFileApplicationJSONReq) reposDeleteFileReq() {}

type ReposDeleteFileApplicationJSONReqAuthor struct {
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type ReposDeleteFileApplicationJSONReqCommitter struct {
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

type ReposDeleteForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*ReposDeleteForbidden) reposDeleteRes() {}

type ReposDeleteInvitation struct{}

type ReposDeleteNoContent struct{}

func (*ReposDeleteNoContent) reposDeleteRes() {}

type ReposDeletePagesSiteNoContent struct{}

type ReposDeletePullRequestReviewProtectionNoContent struct{}

func (*ReposDeletePullRequestReviewProtectionNoContent) reposDeletePullRequestReviewProtectionRes() {}

type ReposDeleteRelease struct{}

type ReposDeleteReleaseAsset struct{}

type ReposDeleteWebhookNoContent struct{}

func (*ReposDeleteWebhookNoContent) reposDeleteWebhookRes() {}

type ReposDisableAutomatedSecurityFixes struct{}

type ReposDisableLfsForRepo struct{}

type ReposDisableVulnerabilityAlerts struct{}

type ReposDownloadTarballArchive struct{}

type ReposDownloadZipballArchive struct{}

type ReposEnableAutomatedSecurityFixes struct{}

type ReposEnableLfsForRepoForbidden struct{}

func (*ReposEnableLfsForRepoForbidden) reposEnableLfsForRepoRes() {}

type ReposEnableVulnerabilityAlerts struct{}

type ReposGetAllStatusCheckContextsOK []string

func (*ReposGetAllStatusCheckContextsOK) reposGetAllStatusCheckContextsRes() {}

type ReposGetApplicationJSONForbidden BasicError

func (*ReposGetApplicationJSONForbidden) reposGetRes() {}

type ReposGetApplicationJSONMovedPermanently BasicError

func (*ReposGetApplicationJSONMovedPermanently) reposGetRes() {}

type ReposGetApplicationJSONNotFound BasicError

func (*ReposGetApplicationJSONNotFound) reposGetRes() {}

type ReposGetAppsWithAccessToProtectedBranchOK []Integration

func (*ReposGetAppsWithAccessToProtectedBranchOK) reposGetAppsWithAccessToProtectedBranchRes() {}

type ReposGetBranchApplicationJSONMovedPermanently BasicError

func (*ReposGetBranchApplicationJSONMovedPermanently) reposGetBranchRes() {}

type ReposGetBranchApplicationJSONNotFound BasicError

func (*ReposGetBranchApplicationJSONNotFound) reposGetBranchRes() {}

type ReposGetCodeFrequencyStatsOK []CodeFrequencyStat

func (*ReposGetCodeFrequencyStatsOK) reposGetCodeFrequencyStatsRes() {}

type ReposGetCommitActivityStatsOK []CommitActivity

func (*ReposGetCommitActivityStatsOK) reposGetCommitActivityStatsRes() {}

type ReposGetContributorsStatsOK []ContributorActivity

func (*ReposGetContributorsStatsOK) reposGetContributorsStatsRes() {}

type ReposGetPagesHealthCheckBadRequest struct{}

func (*ReposGetPagesHealthCheckBadRequest) reposGetPagesHealthCheckRes() {}

type ReposGetPagesHealthCheckUnprocessableEntity struct{}

func (*ReposGetPagesHealthCheckUnprocessableEntity) reposGetPagesHealthCheckRes() {}

type ReposGetPunchCardStatsOK []CodeFrequencyStat

func (*ReposGetPunchCardStatsOK) reposGetPunchCardStatsRes() {}

type ReposGetTeamsWithAccessToProtectedBranchOK []Team

func (*ReposGetTeamsWithAccessToProtectedBranchOK) reposGetTeamsWithAccessToProtectedBranchRes() {}

type ReposGetTopPathsOK []ContentTraffic

func (*ReposGetTopPathsOK) reposGetTopPathsRes() {}

type ReposGetTopReferrersOK []ReferrerTraffic

func (*ReposGetTopReferrersOK) reposGetTopReferrersRes() {}

type ReposGetUsersWithAccessToProtectedBranchOK []SimpleUser

func (*ReposGetUsersWithAccessToProtectedBranchOK) reposGetUsersWithAccessToProtectedBranchRes() {}

type ReposListBranchesForHeadCommitOK []BranchShort

type ReposListBranchesOK []ShortBranch

func (*ReposListBranchesOK) reposListBranchesRes() {}

type ReposListCommitStatusesForRefOK []Status

func (*ReposListCommitStatusesForRefOK) reposListCommitStatusesForRefRes() {}

type ReposListCommitsApplicationJSONBadRequest BasicError

func (*ReposListCommitsApplicationJSONBadRequest) reposListCommitsRes() {}

type ReposListCommitsApplicationJSONConflict BasicError

func (*ReposListCommitsApplicationJSONConflict) reposListCommitsRes() {}

type ReposListCommitsApplicationJSONInternalServerError BasicError

func (*ReposListCommitsApplicationJSONInternalServerError) reposListCommitsRes() {}

type ReposListCommitsApplicationJSONNotFound BasicError

func (*ReposListCommitsApplicationJSONNotFound) reposListCommitsRes() {}

type ReposListCommitsOK []Commit

func (*ReposListCommitsOK) reposListCommitsRes() {}

type ReposListContributorsApplicationJSONForbidden BasicError

func (*ReposListContributorsApplicationJSONForbidden) reposListContributorsRes() {}

type ReposListContributorsApplicationJSONNotFound BasicError

func (*ReposListContributorsApplicationJSONNotFound) reposListContributorsRes() {}

type ReposListContributorsNoContent struct{}

func (*ReposListContributorsNoContent) reposListContributorsRes() {}

type ReposListContributorsOK []Contributor

func (*ReposListContributorsOK) reposListContributorsRes() {}

type ReposListDeploymentStatusesOK []DeploymentStatus

func (*ReposListDeploymentStatusesOK) reposListDeploymentStatusesRes() {}

type ReposListInvitationsForAuthenticatedUserApplicationJSONForbidden BasicError

func (*ReposListInvitationsForAuthenticatedUserApplicationJSONForbidden) reposListInvitationsForAuthenticatedUserRes() {
}

type ReposListInvitationsForAuthenticatedUserApplicationJSONNotFound BasicError

func (*ReposListInvitationsForAuthenticatedUserApplicationJSONNotFound) reposListInvitationsForAuthenticatedUserRes() {
}

type ReposListInvitationsForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*ReposListInvitationsForAuthenticatedUserApplicationJSONUnauthorized) reposListInvitationsForAuthenticatedUserRes() {
}

type ReposListInvitationsForAuthenticatedUserOK []RepositoryInvitation

func (*ReposListInvitationsForAuthenticatedUserOK) reposListInvitationsForAuthenticatedUserRes() {}

type ReposListPublicOK []MinimalRepository

type ReposListReleasesOK []Release

func (*ReposListReleasesOK) reposListReleasesRes() {}

type ReposListWebhookDeliveriesOK []HookDeliveryItem

type ReposMergeApplicationJSONReq struct {
	Base          string    `json:"base"`
	CommitMessage OptString `json:"commit_message"`
	Head          string    `json:"head"`
}

func (*ReposMergeApplicationJSONReq) reposMergeReq() {}

type ReposMergeConflict struct{}

type ReposMergeNoContent struct{}

type ReposMergeNotFound struct{}

type ReposMergeUpstreamApplicationJSONReq struct {
	Branch string `json:"branch"`
}

type ReposMergeUpstreamConflict struct{}

func (*ReposMergeUpstreamConflict) reposMergeUpstreamRes() {}

type ReposMergeUpstreamUnprocessableEntity struct{}

func (*ReposMergeUpstreamUnprocessableEntity) reposMergeUpstreamRes() {}

type ReposPingWebhookNoContent struct{}

func (*ReposPingWebhookNoContent) reposPingWebhookRes() {}

type ReposRemoveCollaborator struct{}

type ReposRemoveStatusCheckProtection struct{}

type ReposRenameBranchApplicationJSONReq struct {
	NewName string `json:"new_name"`
}

func (*ReposRenameBranchApplicationJSONReq) reposRenameBranchReq() {}

type ReposReplaceAllTopicsApplicationJSONReq struct {
	Names []string `json:"names"`
}

type ReposTestPushWebhookNoContent struct{}

func (*ReposTestPushWebhookNoContent) reposTestPushWebhookRes() {}

type ReposTransferApplicationJSONReq struct {
	NewOwner string `json:"new_owner"`
	TeamIds  []int  `json:"team_ids"`
}

type ReposUpdateApplicationJSONReq struct {
	AllowAutoMerge      OptBool                                                `json:"allow_auto_merge"`
	AllowForking        OptBool                                                `json:"allow_forking"`
	AllowMergeCommit    OptBool                                                `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                                                `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                                                `json:"allow_squash_merge"`
	Archived            OptBool                                                `json:"archived"`
	DefaultBranch       OptString                                              `json:"default_branch"`
	DeleteBranchOnMerge OptBool                                                `json:"delete_branch_on_merge"`
	Description         OptString                                              `json:"description"`
	HasIssues           OptBool                                                `json:"has_issues"`
	HasProjects         OptBool                                                `json:"has_projects"`
	HasWiki             OptBool                                                `json:"has_wiki"`
	Homepage            OptString                                              `json:"homepage"`
	IsTemplate          OptBool                                                `json:"is_template"`
	Name                OptString                                              `json:"name"`
	Private             OptBool                                                `json:"private"`
	SecurityAndAnalysis OptNilReposUpdateApplicationJSONReqSecurityAndAnalysis `json:"security_and_analysis"`
	Visibility          OptReposUpdateApplicationJSONReqVisibility             `json:"visibility"`
}

func (*ReposUpdateApplicationJSONReq) reposUpdateReq() {}

type ReposUpdateApplicationJSONReqSecurityAndAnalysis struct {
	AdvancedSecurity OptReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity `json:"advanced_security"`
	SecretScanning   OptReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning   `json:"secret_scanning"`
}

type ReposUpdateApplicationJSONReqSecurityAndAnalysisAdvancedSecurity struct {
	Status OptString `json:"status"`
}

type ReposUpdateApplicationJSONReqSecurityAndAnalysisSecretScanning struct {
	Status OptString `json:"status"`
}

type ReposUpdateApplicationJSONReqVisibility string

const (
	ReposUpdateApplicationJSONReqVisibilityPublic     ReposUpdateApplicationJSONReqVisibility = "public"
	ReposUpdateApplicationJSONReqVisibilityPrivate    ReposUpdateApplicationJSONReqVisibility = "private"
	ReposUpdateApplicationJSONReqVisibilityVisibility ReposUpdateApplicationJSONReqVisibility = "visibility"
	ReposUpdateApplicationJSONReqVisibilityInternal   ReposUpdateApplicationJSONReqVisibility = "internal"
)

type ReposUpdateBranchProtectionApplicationJSONForbidden BasicError

func (*ReposUpdateBranchProtectionApplicationJSONForbidden) reposUpdateBranchProtectionRes() {}

type ReposUpdateBranchProtectionApplicationJSONNotFound BasicError

func (*ReposUpdateBranchProtectionApplicationJSONNotFound) reposUpdateBranchProtectionRes() {}

type ReposUpdateBranchProtectionApplicationJSONReq struct {
	AllowDeletions                 OptBool                                                                    `json:"allow_deletions"`
	AllowForcePushes               OptNilBool                                                                 `json:"allow_force_pushes"`
	EnforceAdmins                  NilBool                                                                    `json:"enforce_admins"`
	RequiredConversationResolution OptBool                                                                    `json:"required_conversation_resolution"`
	RequiredLinearHistory          OptBool                                                                    `json:"required_linear_history"`
	RequiredPullRequestReviews     NilReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews `json:"required_pull_request_reviews"`
	RequiredStatusChecks           NilReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks       `json:"required_status_checks"`
	Restrictions                   NilReposUpdateBranchProtectionApplicationJSONReqRestrictions               `json:"restrictions"`
}

type ReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviews struct {
	DismissStaleReviews          OptBool                                                                                         `json:"dismiss_stale_reviews"`
	DismissalRestrictions        OptReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions `json:"dismissal_restrictions"`
	RequireCodeOwnerReviews      OptBool                                                                                         `json:"require_code_owner_reviews"`
	RequiredApprovingReviewCount OptInt                                                                                          `json:"required_approving_review_count"`
}

type ReposUpdateBranchProtectionApplicationJSONReqRequiredPullRequestReviewsDismissalRestrictions struct {
	Teams []string `json:"teams"`
	Users []string `json:"users"`
}

type ReposUpdateBranchProtectionApplicationJSONReqRequiredStatusChecks struct {
	Contexts []string `json:"contexts"`
	Strict   bool     `json:"strict"`
}

type ReposUpdateBranchProtectionApplicationJSONReqRestrictions struct {
	Apps  []string `json:"apps"`
	Teams []string `json:"teams"`
	Users []string `json:"users"`
}

type ReposUpdateCommitCommentApplicationJSONReq struct {
	Body string `json:"body"`
}

type ReposUpdateInvitationApplicationJSONReq struct {
	Permissions OptReposUpdateInvitationApplicationJSONReqPermissions `json:"permissions"`
}

type ReposUpdateInvitationApplicationJSONReqPermissions string

const (
	ReposUpdateInvitationApplicationJSONReqPermissionsRead     ReposUpdateInvitationApplicationJSONReqPermissions = "read"
	ReposUpdateInvitationApplicationJSONReqPermissionsWrite    ReposUpdateInvitationApplicationJSONReqPermissions = "write"
	ReposUpdateInvitationApplicationJSONReqPermissionsMaintain ReposUpdateInvitationApplicationJSONReqPermissions = "maintain"
	ReposUpdateInvitationApplicationJSONReqPermissionsTriage   ReposUpdateInvitationApplicationJSONReqPermissions = "triage"
	ReposUpdateInvitationApplicationJSONReqPermissionsAdmin    ReposUpdateInvitationApplicationJSONReqPermissions = "admin"
)

type ReposUpdatePullRequestReviewProtectionApplicationJSONReq struct {
	DismissStaleReviews          OptBool                                                                          `json:"dismiss_stale_reviews"`
	DismissalRestrictions        OptReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions `json:"dismissal_restrictions"`
	RequireCodeOwnerReviews      OptBool                                                                          `json:"require_code_owner_reviews"`
	RequiredApprovingReviewCount OptInt                                                                           `json:"required_approving_review_count"`
}

func (*ReposUpdatePullRequestReviewProtectionApplicationJSONReq) reposUpdatePullRequestReviewProtectionReq() {
}

type ReposUpdatePullRequestReviewProtectionApplicationJSONReqDismissalRestrictions struct {
	Teams []string `json:"teams"`
	Users []string `json:"users"`
}

type ReposUpdateReleaseApplicationJSONReq struct {
	Body                   OptString `json:"body"`
	DiscussionCategoryName OptString `json:"discussion_category_name"`
	Draft                  OptBool   `json:"draft"`
	Name                   OptString `json:"name"`
	Prerelease             OptBool   `json:"prerelease"`
	TagName                OptString `json:"tag_name"`
	TargetCommitish        OptString `json:"target_commitish"`
}

type ReposUpdateReleaseAssetApplicationJSONReq struct {
	Label OptString `json:"label"`
	Name  OptString `json:"name"`
	State OptString `json:"state"`
}

type ReposUpdateStatusCheckProtectionApplicationJSONReq struct {
	Contexts []string `json:"contexts"`
	Strict   OptBool  `json:"strict"`
}

func (*ReposUpdateStatusCheckProtectionApplicationJSONReq) reposUpdateStatusCheckProtectionReq() {}

type RepositoryInvitationPermissions string

const (
	RepositoryInvitationPermissionsRead     RepositoryInvitationPermissions = "read"
	RepositoryInvitationPermissionsWrite    RepositoryInvitationPermissions = "write"
	RepositoryInvitationPermissionsAdmin    RepositoryInvitationPermissions = "admin"
	RepositoryInvitationPermissionsTriage   RepositoryInvitationPermissions = "triage"
	RepositoryInvitationPermissionsMaintain RepositoryInvitationPermissions = "maintain"
)

type RepositoryPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

type RepositoryTemplateRepository struct {
	AllowAutoMerge      OptBool                                    `json:"allow_auto_merge"`
	AllowMergeCommit    OptBool                                    `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                                    `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                                    `json:"allow_squash_merge"`
	ArchiveURL          OptString                                  `json:"archive_url"`
	Archived            OptBool                                    `json:"archived"`
	AssigneesURL        OptString                                  `json:"assignees_url"`
	BlobsURL            OptString                                  `json:"blobs_url"`
	BranchesURL         OptString                                  `json:"branches_url"`
	CloneURL            OptString                                  `json:"clone_url"`
	CollaboratorsURL    OptString                                  `json:"collaborators_url"`
	CommentsURL         OptString                                  `json:"comments_url"`
	CommitsURL          OptString                                  `json:"commits_url"`
	CompareURL          OptString                                  `json:"compare_url"`
	ContentsURL         OptString                                  `json:"contents_url"`
	ContributorsURL     OptString                                  `json:"contributors_url"`
	CreatedAt           OptString                                  `json:"created_at"`
	DefaultBranch       OptString                                  `json:"default_branch"`
	DeleteBranchOnMerge OptBool                                    `json:"delete_branch_on_merge"`
	DeploymentsURL      OptString                                  `json:"deployments_url"`
	Description         OptString                                  `json:"description"`
	Disabled            OptBool                                    `json:"disabled"`
	DownloadsURL        OptString                                  `json:"downloads_url"`
	EventsURL           OptString                                  `json:"events_url"`
	Fork                OptBool                                    `json:"fork"`
	ForksCount          OptInt                                     `json:"forks_count"`
	ForksURL            OptString                                  `json:"forks_url"`
	FullName            OptString                                  `json:"full_name"`
	GitCommitsURL       OptString                                  `json:"git_commits_url"`
	GitRefsURL          OptString                                  `json:"git_refs_url"`
	GitTagsURL          OptString                                  `json:"git_tags_url"`
	GitURL              OptString                                  `json:"git_url"`
	HTMLURL             OptString                                  `json:"html_url"`
	HasDownloads        OptBool                                    `json:"has_downloads"`
	HasIssues           OptBool                                    `json:"has_issues"`
	HasPages            OptBool                                    `json:"has_pages"`
	HasProjects         OptBool                                    `json:"has_projects"`
	HasWiki             OptBool                                    `json:"has_wiki"`
	Homepage            OptString                                  `json:"homepage"`
	HooksURL            OptString                                  `json:"hooks_url"`
	ID                  OptInt                                     `json:"id"`
	IsTemplate          OptBool                                    `json:"is_template"`
	IssueCommentURL     OptString                                  `json:"issue_comment_url"`
	IssueEventsURL      OptString                                  `json:"issue_events_url"`
	IssuesURL           OptString                                  `json:"issues_url"`
	KeysURL             OptString                                  `json:"keys_url"`
	LabelsURL           OptString                                  `json:"labels_url"`
	Language            OptString                                  `json:"language"`
	LanguagesURL        OptString                                  `json:"languages_url"`
	MergesURL           OptString                                  `json:"merges_url"`
	MilestonesURL       OptString                                  `json:"milestones_url"`
	MirrorURL           OptString                                  `json:"mirror_url"`
	Name                OptString                                  `json:"name"`
	NetworkCount        OptInt                                     `json:"network_count"`
	NodeID              OptString                                  `json:"node_id"`
	NotificationsURL    OptString                                  `json:"notifications_url"`
	OpenIssuesCount     OptInt                                     `json:"open_issues_count"`
	Owner               OptRepositoryTemplateRepositoryOwner       `json:"owner"`
	Permissions         OptRepositoryTemplateRepositoryPermissions `json:"permissions"`
	Private             OptBool                                    `json:"private"`
	PullsURL            OptString                                  `json:"pulls_url"`
	PushedAt            OptString                                  `json:"pushed_at"`
	ReleasesURL         OptString                                  `json:"releases_url"`
	SSHURL              OptString                                  `json:"ssh_url"`
	Size                OptInt                                     `json:"size"`
	StargazersCount     OptInt                                     `json:"stargazers_count"`
	StargazersURL       OptString                                  `json:"stargazers_url"`
	StatusesURL         OptString                                  `json:"statuses_url"`
	SubscribersCount    OptInt                                     `json:"subscribers_count"`
	SubscribersURL      OptString                                  `json:"subscribers_url"`
	SubscriptionURL     OptString                                  `json:"subscription_url"`
	SvnURL              OptString                                  `json:"svn_url"`
	TagsURL             OptString                                  `json:"tags_url"`
	TeamsURL            OptString                                  `json:"teams_url"`
	TempCloneToken      OptString                                  `json:"temp_clone_token"`
	Topics              []string                                   `json:"topics"`
	TreesURL            OptString                                  `json:"trees_url"`
	URL                 OptString                                  `json:"url"`
	UpdatedAt           OptString                                  `json:"updated_at"`
	Visibility          OptString                                  `json:"visibility"`
	WatchersCount       OptInt                                     `json:"watchers_count"`
}

type RepositoryTemplateRepositoryOwner struct {
	AvatarURL         OptString `json:"avatar_url"`
	EventsURL         OptString `json:"events_url"`
	FollowersURL      OptString `json:"followers_url"`
	FollowingURL      OptString `json:"following_url"`
	GistsURL          OptString `json:"gists_url"`
	GravatarID        OptString `json:"gravatar_id"`
	HTMLURL           OptString `json:"html_url"`
	ID                OptInt    `json:"id"`
	Login             OptString `json:"login"`
	NodeID            OptString `json:"node_id"`
	OrganizationsURL  OptString `json:"organizations_url"`
	ReceivedEventsURL OptString `json:"received_events_url"`
	ReposURL          OptString `json:"repos_url"`
	SiteAdmin         OptBool   `json:"site_admin"`
	StarredURL        OptString `json:"starred_url"`
	SubscriptionsURL  OptString `json:"subscriptions_url"`
	Type              OptString `json:"type"`
	URL               OptString `json:"url"`
}

type RepositoryTemplateRepositoryPermissions struct {
	Admin    OptBool `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     OptBool `json:"pull"`
	Push     OptBool `json:"push"`
	Triage   OptBool `json:"triage"`
}

type ReviewCommentLinks struct {
	HTML        Link `json:"html"`
	PullRequest Link `json:"pull_request"`
	Self        Link `json:"self"`
}

type ReviewCommentSide string

const (
	ReviewCommentSideLEFT  ReviewCommentSide = "LEFT"
	ReviewCommentSideRIGHT ReviewCommentSide = "RIGHT"
)

type ReviewCommentStartSide string

const (
	ReviewCommentStartSideLEFT  ReviewCommentStartSide = "LEFT"
	ReviewCommentStartSideRIGHT ReviewCommentStartSide = "RIGHT"
)

type RunnerLabelsItem struct {
	ID   OptInt                  `json:"id"`
	Name OptString               `json:"name"`
	Type OptRunnerLabelsItemType `json:"type"`
}

type RunnerLabelsItemType string

const (
	RunnerLabelsItemTypeReadMinusOnly RunnerLabelsItemType = "read-only"
	RunnerLabelsItemTypeCustom        RunnerLabelsItemType = "custom"
)

type ScimDeleteUserFromOrgApplicationJSONForbidden ScimError

func (*ScimDeleteUserFromOrgApplicationJSONForbidden) scimDeleteUserFromOrgRes() {}

type ScimDeleteUserFromOrgApplicationJSONNotFound ScimError

func (*ScimDeleteUserFromOrgApplicationJSONNotFound) scimDeleteUserFromOrgRes() {}

type ScimDeleteUserFromOrgApplicationScimJSONForbidden ScimError

func (*ScimDeleteUserFromOrgApplicationScimJSONForbidden) scimDeleteUserFromOrgRes() {}

type ScimDeleteUserFromOrgApplicationScimJSONNotFound ScimError

func (*ScimDeleteUserFromOrgApplicationScimJSONNotFound) scimDeleteUserFromOrgRes() {}

type ScimDeleteUserFromOrgNoContent struct{}

func (*ScimDeleteUserFromOrgNoContent) scimDeleteUserFromOrgRes() {}

type ScimEnterpriseGroupMembersItem struct {
	Display OptString `json:"display"`
	Ref     OptString `json:"$ref"`
	Value   OptString `json:"value"`
}

type ScimEnterpriseGroupMeta struct {
	Created      OptString `json:"created"`
	LastModified OptString `json:"lastModified"`
	Location     OptString `json:"location"`
	ResourceType OptString `json:"resourceType"`
}

type ScimEnterpriseUserEmailsItem struct {
	Primary OptBool   `json:"primary"`
	Type    OptString `json:"type"`
	Value   OptString `json:"value"`
}

type ScimEnterpriseUserGroupsItem struct {
	Value OptString `json:"value"`
}

type ScimEnterpriseUserMeta struct {
	Created      OptString `json:"created"`
	LastModified OptString `json:"lastModified"`
	Location     OptString `json:"location"`
	ResourceType OptString `json:"resourceType"`
}

type ScimEnterpriseUserName struct {
	FamilyName OptString `json:"familyName"`
	GivenName  OptString `json:"givenName"`
}

type ScimGroupListEnterpriseResourcesItem struct {
	DisplayName OptString                                         `json:"displayName"`
	ExternalId  OptNilString                                      `json:"externalId"`
	ID          string                                            `json:"id"`
	Members     []ScimGroupListEnterpriseResourcesItemMembersItem `json:"members"`
	Meta        OptScimGroupListEnterpriseResourcesItemMeta       `json:"meta"`
	Schemas     []string                                          `json:"schemas"`
}

type ScimGroupListEnterpriseResourcesItemMembersItem struct {
	Display OptString `json:"display"`
	Ref     OptString `json:"$ref"`
	Value   OptString `json:"value"`
}

type ScimGroupListEnterpriseResourcesItemMeta struct {
	Created      OptString `json:"created"`
	LastModified OptString `json:"lastModified"`
	Location     OptString `json:"location"`
	ResourceType OptString `json:"resourceType"`
}

type ScimProvisionAndInviteUserApplicationJSONReq struct {
	Active      OptBool                                                  `json:"active"`
	DisplayName OptString                                                `json:"displayName"`
	Emails      []ScimProvisionAndInviteUserApplicationJSONReqEmailsItem `json:"emails"`
	ExternalId  OptString                                                `json:"externalId"`
	Groups      []string                                                 `json:"groups"`
	Name        ScimProvisionAndInviteUserApplicationJSONReqName         `json:"name"`
	Schemas     []string                                                 `json:"schemas"`
	UserName    string                                                   `json:"userName"`
}

func (*ScimProvisionAndInviteUserApplicationJSONReq) scimProvisionAndInviteUserReq() {}

type ScimProvisionAndInviteUserApplicationJSONReqEmailsItem struct {
	Primary OptBool   `json:"primary"`
	Type    OptString `json:"type"`
	Value   string    `json:"value"`
}

type ScimProvisionAndInviteUserApplicationJSONReqName struct {
	FamilyName string    `json:"familyName"`
	Formatted  OptString `json:"formatted"`
	GivenName  string    `json:"givenName"`
}

type ScimSetInformationForProvisionedUserApplicationJSONReq struct {
	Active      OptBool                                                            `json:"active"`
	DisplayName OptString                                                          `json:"displayName"`
	Emails      []ScimSetInformationForProvisionedUserApplicationJSONReqEmailsItem `json:"emails"`
	ExternalId  OptString                                                          `json:"externalId"`
	Groups      []string                                                           `json:"groups"`
	Name        ScimSetInformationForProvisionedUserApplicationJSONReqName         `json:"name"`
	Schemas     []string                                                           `json:"schemas"`
	UserName    string                                                             `json:"userName"`
}

func (*ScimSetInformationForProvisionedUserApplicationJSONReq) scimSetInformationForProvisionedUserReq() {
}

type ScimSetInformationForProvisionedUserApplicationJSONReqEmailsItem struct {
	Primary OptBool   `json:"primary"`
	Type    OptString `json:"type"`
	Value   string    `json:"value"`
}

type ScimSetInformationForProvisionedUserApplicationJSONReqName struct {
	FamilyName string    `json:"familyName"`
	Formatted  OptString `json:"formatted"`
	GivenName  string    `json:"givenName"`
}

type ScimUserListEnterpriseResourcesItem struct {
	Active     OptBool                                         `json:"active"`
	Emails     []ScimUserListEnterpriseResourcesItemEmailsItem `json:"emails"`
	ExternalId OptString                                       `json:"externalId"`
	Groups     []ScimUserListEnterpriseResourcesItemGroupsItem `json:"groups"`
	ID         string                                          `json:"id"`
	Meta       OptScimUserListEnterpriseResourcesItemMeta      `json:"meta"`
	Name       OptScimUserListEnterpriseResourcesItemName      `json:"name"`
	Schemas    []string                                        `json:"schemas"`
	UserName   OptString                                       `json:"userName"`
}

type ScimUserListEnterpriseResourcesItemEmailsItem struct {
	Primary OptBool   `json:"primary"`
	Type    OptString `json:"type"`
	Value   OptString `json:"value"`
}

type ScimUserListEnterpriseResourcesItemGroupsItem struct {
	Value OptString `json:"value"`
}

type ScimUserListEnterpriseResourcesItemMeta struct {
	Created      OptString `json:"created"`
	LastModified OptString `json:"lastModified"`
	Location     OptString `json:"location"`
	ResourceType OptString `json:"resourceType"`
}

type ScimUserListEnterpriseResourcesItemName struct {
	FamilyName OptString `json:"familyName"`
	GivenName  OptString `json:"givenName"`
}

type SecretScanningGetAlertNotFound struct{}

func (*SecretScanningGetAlertNotFound) secretScanningGetAlertRes() {}

type SecretScanningUpdateAlertApplicationJSONReq struct {
	Resolution OptSecretScanningAlertResolution `json:"resolution"`
	State      SecretScanningAlertState         `json:"state"`
}

type SecretScanningUpdateAlertNotFound struct{}

func (*SecretScanningUpdateAlertNotFound) secretScanningUpdateAlertRes() {}

type SecretScanningUpdateAlertUnprocessableEntity struct{}

func (*SecretScanningUpdateAlertUnprocessableEntity) secretScanningUpdateAlertRes() {}

type ServiceUnavailable struct {
	Code             OptString `json:"code"`
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*ServiceUnavailable) codeScanningDeleteAnalysisRes()     {}
func (*ServiceUnavailable) codeScanningGetSarifRes()           {}
func (*ServiceUnavailable) codeScanningListAlertInstancesRes() {}
func (*ServiceUnavailable) codeScanningListRecentAnalysesRes() {}
func (*ServiceUnavailable) codeScanningUploadSarifRes()        {}
func (*ServiceUnavailable) secretScanningGetAlertRes()         {}
func (*ServiceUnavailable) secretScanningUpdateAlertRes()      {}

type ShortBranchCommit struct {
	Sha string  `json:"sha"`
	URL url.URL `json:"url"`
}

type SimpleCommitAuthor struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

type SimpleCommitCommitter struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

type TagCommit struct {
	Sha string  `json:"sha"`
	URL url.URL `json:"url"`
}

type TeamFullPrivacy string

const (
	TeamFullPrivacyClosed TeamFullPrivacy = "closed"
	TeamFullPrivacySecret TeamFullPrivacy = "secret"
)

type TeamMembershipRole string

const (
	TeamMembershipRoleMember     TeamMembershipRole = "member"
	TeamMembershipRoleMaintainer TeamMembershipRole = "maintainer"
)

type TeamMembershipState string

const (
	TeamMembershipStateActive  TeamMembershipState = "active"
	TeamMembershipStatePending TeamMembershipState = "pending"
)

type TeamPermissions struct {
	Admin    bool `json:"admin"`
	Maintain bool `json:"maintain"`
	Pull     bool `json:"pull"`
	Push     bool `json:"push"`
	Triage   bool `json:"triage"`
}

type TeamProjectPermissions struct {
	Admin bool `json:"admin"`
	Read  bool `json:"read"`
	Write bool `json:"write"`
}

type TeamRepositoryPermissions struct {
	Admin    bool    `json:"admin"`
	Maintain OptBool `json:"maintain"`
	Pull     bool    `json:"pull"`
	Push     bool    `json:"push"`
	Triage   OptBool `json:"triage"`
}

type TeamsAddMemberLegacyNoContent struct{}

func (*TeamsAddMemberLegacyNoContent) teamsAddMemberLegacyRes() {}

type TeamsAddMemberLegacyNotFound struct{}

func (*TeamsAddMemberLegacyNotFound) teamsAddMemberLegacyRes() {}

type TeamsAddMemberLegacyUnprocessableEntity struct{}

func (*TeamsAddMemberLegacyUnprocessableEntity) teamsAddMemberLegacyRes() {}

type TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReq struct {
	Role OptTeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole `json:"role"`
}

type TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole string

const (
	TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRoleMember     TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole = "member"
	TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRoleMaintainer TeamsAddOrUpdateMembershipForUserInOrgApplicationJSONReqRole = "maintainer"
)

type TeamsAddOrUpdateMembershipForUserInOrgForbidden struct{}

func (*TeamsAddOrUpdateMembershipForUserInOrgForbidden) teamsAddOrUpdateMembershipForUserInOrgRes() {}

type TeamsAddOrUpdateMembershipForUserInOrgUnprocessableEntity struct{}

func (*TeamsAddOrUpdateMembershipForUserInOrgUnprocessableEntity) teamsAddOrUpdateMembershipForUserInOrgRes() {
}

type TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReq struct {
	Role OptTeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole `json:"role"`
}

type TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole string

const (
	TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRoleMember     TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole = "member"
	TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRoleMaintainer TeamsAddOrUpdateMembershipForUserLegacyApplicationJSONReqRole = "maintainer"
)

type TeamsAddOrUpdateMembershipForUserLegacyForbidden struct{}

func (*TeamsAddOrUpdateMembershipForUserLegacyForbidden) teamsAddOrUpdateMembershipForUserLegacyRes() {
}

type TeamsAddOrUpdateMembershipForUserLegacyUnprocessableEntity struct{}

func (*TeamsAddOrUpdateMembershipForUserLegacyUnprocessableEntity) teamsAddOrUpdateMembershipForUserLegacyRes() {
}

type TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReq struct {
	Permission OptTeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission `json:"permission"`
}

type TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission string

const (
	TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermissionRead  TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission = "read"
	TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermissionWrite TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission = "write"
	TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermissionAdmin TeamsAddOrUpdateProjectPermissionsInOrgApplicationJSONReqPermission = "admin"
)

type TeamsAddOrUpdateProjectPermissionsInOrgForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

func (*TeamsAddOrUpdateProjectPermissionsInOrgForbidden) teamsAddOrUpdateProjectPermissionsInOrgRes() {
}

type TeamsAddOrUpdateProjectPermissionsInOrgNoContent struct{}

func (*TeamsAddOrUpdateProjectPermissionsInOrgNoContent) teamsAddOrUpdateProjectPermissionsInOrgRes() {
}

type TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReq struct {
	Permission OptTeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission `json:"permission"`
}

func (*TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReq) teamsAddOrUpdateProjectPermissionsLegacyReq() {
}

type TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission string

const (
	TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermissionRead  TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission = "read"
	TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermissionWrite TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission = "write"
	TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermissionAdmin TeamsAddOrUpdateProjectPermissionsLegacyApplicationJSONReqPermission = "admin"
)

type TeamsAddOrUpdateProjectPermissionsLegacyForbidden struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
}

type TeamsAddOrUpdateProjectPermissionsLegacyNoContent struct{}

type TeamsAddOrUpdateRepoPermissionsInOrg struct{}

type TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReq struct {
	Permission OptTeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission `json:"permission"`
}

type TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission string

const (
	TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermissionPull     TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission = "pull"
	TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermissionPush     TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission = "push"
	TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermissionAdmin    TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission = "admin"
	TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermissionMaintain TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission = "maintain"
	TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermissionTriage   TeamsAddOrUpdateRepoPermissionsInOrgApplicationJSONReqPermission = "triage"
)

type TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReq struct {
	Permission OptTeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission `json:"permission"`
}

func (*TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReq) teamsAddOrUpdateRepoPermissionsLegacyReq() {
}

type TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission string

const (
	TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermissionPull  TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission = "pull"
	TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermissionPush  TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission = "push"
	TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermissionAdmin TeamsAddOrUpdateRepoPermissionsLegacyApplicationJSONReqPermission = "admin"
)

type TeamsAddOrUpdateRepoPermissionsLegacyNoContent struct{}

type TeamsCheckPermissionsForProjectInOrgNotFound struct{}

func (*TeamsCheckPermissionsForProjectInOrgNotFound) teamsCheckPermissionsForProjectInOrgRes() {}

type TeamsCheckPermissionsForProjectLegacyNotFound struct{}

func (*TeamsCheckPermissionsForProjectLegacyNotFound) teamsCheckPermissionsForProjectLegacyRes() {}

type TeamsCheckPermissionsForRepoInOrgNoContent struct{}

func (*TeamsCheckPermissionsForRepoInOrgNoContent) teamsCheckPermissionsForRepoInOrgRes() {}

type TeamsCheckPermissionsForRepoInOrgNotFound struct{}

func (*TeamsCheckPermissionsForRepoInOrgNotFound) teamsCheckPermissionsForRepoInOrgRes() {}

type TeamsCheckPermissionsForRepoLegacyNoContent struct{}

func (*TeamsCheckPermissionsForRepoLegacyNoContent) teamsCheckPermissionsForRepoLegacyRes() {}

type TeamsCheckPermissionsForRepoLegacyNotFound struct{}

func (*TeamsCheckPermissionsForRepoLegacyNotFound) teamsCheckPermissionsForRepoLegacyRes() {}

type TeamsCreateApplicationJSONReq struct {
	Description  OptString                                  `json:"description"`
	Maintainers  []string                                   `json:"maintainers"`
	Name         string                                     `json:"name"`
	ParentTeamID OptInt                                     `json:"parent_team_id"`
	Permission   OptTeamsCreateApplicationJSONReqPermission `json:"permission"`
	Privacy      OptTeamsCreateApplicationJSONReqPrivacy    `json:"privacy"`
	RepoNames    []string                                   `json:"repo_names"`
}

func (*TeamsCreateApplicationJSONReq) teamsCreateReq() {}

type TeamsCreateApplicationJSONReqPermission string

const (
	TeamsCreateApplicationJSONReqPermissionPull  TeamsCreateApplicationJSONReqPermission = "pull"
	TeamsCreateApplicationJSONReqPermissionPush  TeamsCreateApplicationJSONReqPermission = "push"
	TeamsCreateApplicationJSONReqPermissionAdmin TeamsCreateApplicationJSONReqPermission = "admin"
)

type TeamsCreateApplicationJSONReqPrivacy string

const (
	TeamsCreateApplicationJSONReqPrivacySecret TeamsCreateApplicationJSONReqPrivacy = "secret"
	TeamsCreateApplicationJSONReqPrivacyClosed TeamsCreateApplicationJSONReqPrivacy = "closed"
)

type TeamsCreateDiscussionCommentInOrgApplicationJSONReq struct {
	Body string `json:"body"`
}

type TeamsCreateDiscussionCommentLegacyApplicationJSONReq struct {
	Body string `json:"body"`
}

type TeamsCreateDiscussionInOrgApplicationJSONReq struct {
	Body    string  `json:"body"`
	Private OptBool `json:"private"`
	Title   string  `json:"title"`
}

type TeamsCreateDiscussionLegacyApplicationJSONReq struct {
	Body    string  `json:"body"`
	Private OptBool `json:"private"`
	Title   string  `json:"title"`
}

type TeamsCreateOrUpdateIdpGroupConnectionsInOrgApplicationJSONReq struct {
	Groups []TeamsCreateOrUpdateIdpGroupConnectionsInOrgApplicationJSONReqGroupsItem `json:"groups"`
}

type TeamsCreateOrUpdateIdpGroupConnectionsInOrgApplicationJSONReqGroupsItem struct {
	GroupDescription string `json:"group_description"`
	GroupID          string `json:"group_id"`
	GroupName        string `json:"group_name"`
}

type TeamsCreateOrUpdateIdpGroupConnectionsLegacyApplicationJSONReq struct {
	Groups   []TeamsCreateOrUpdateIdpGroupConnectionsLegacyApplicationJSONReqGroupsItem `json:"groups"`
	SyncedAt OptString                                                                  `json:"synced_at"`
}

func (*TeamsCreateOrUpdateIdpGroupConnectionsLegacyApplicationJSONReq) teamsCreateOrUpdateIdpGroupConnectionsLegacyReq() {
}

type TeamsCreateOrUpdateIdpGroupConnectionsLegacyApplicationJSONReqGroupsItem struct {
	Description      OptString `json:"description"`
	GroupDescription string    `json:"group_description"`
	GroupID          string    `json:"group_id"`
	GroupName        string    `json:"group_name"`
	ID               OptString `json:"id"`
	Name             OptString `json:"name"`
}

type TeamsDeleteDiscussionCommentInOrg struct{}

type TeamsDeleteDiscussionCommentLegacy struct{}

type TeamsDeleteDiscussionInOrg struct{}

type TeamsDeleteDiscussionLegacy struct{}

type TeamsDeleteInOrg struct{}

type TeamsDeleteLegacyNoContent struct{}

type TeamsGetMemberLegacyNoContent struct{}

func (*TeamsGetMemberLegacyNoContent) teamsGetMemberLegacyRes() {}

type TeamsGetMemberLegacyNotFound struct{}

func (*TeamsGetMemberLegacyNotFound) teamsGetMemberLegacyRes() {}

type TeamsGetMembershipForUserInOrgNotFound struct{}

func (*TeamsGetMembershipForUserInOrgNotFound) teamsGetMembershipForUserInOrgRes() {}

type TeamsListChildLegacyOK []Team

type TeamsListForAuthenticatedUserApplicationJSONForbidden BasicError

func (*TeamsListForAuthenticatedUserApplicationJSONForbidden) teamsListForAuthenticatedUserRes() {}

type TeamsListForAuthenticatedUserApplicationJSONNotFound BasicError

func (*TeamsListForAuthenticatedUserApplicationJSONNotFound) teamsListForAuthenticatedUserRes() {}

type TeamsListForAuthenticatedUserOK []TeamFull

func (*TeamsListForAuthenticatedUserOK) teamsListForAuthenticatedUserRes() {}

type TeamsListIdpGroupsForLegacyApplicationJSONForbidden BasicError

func (*TeamsListIdpGroupsForLegacyApplicationJSONForbidden) teamsListIdpGroupsForLegacyRes() {}

type TeamsListIdpGroupsForLegacyApplicationJSONNotFound BasicError

func (*TeamsListIdpGroupsForLegacyApplicationJSONNotFound) teamsListIdpGroupsForLegacyRes() {}

type TeamsListOK []Team

func (*TeamsListOK) teamsListRes() {}

type TeamsListProjectsLegacyOK []TeamProject

func (*TeamsListProjectsLegacyOK) teamsListProjectsLegacyRes() {}

type TeamsListReposLegacyOK []MinimalRepository

func (*TeamsListReposLegacyOK) teamsListReposLegacyRes() {}

type TeamsRemoveMemberLegacyNoContent struct{}

func (*TeamsRemoveMemberLegacyNoContent) teamsRemoveMemberLegacyRes() {}

type TeamsRemoveMemberLegacyNotFound struct{}

func (*TeamsRemoveMemberLegacyNotFound) teamsRemoveMemberLegacyRes() {}

type TeamsRemoveMembershipForUserInOrgForbidden struct{}

func (*TeamsRemoveMembershipForUserInOrgForbidden) teamsRemoveMembershipForUserInOrgRes() {}

type TeamsRemoveMembershipForUserInOrgNoContent struct{}

func (*TeamsRemoveMembershipForUserInOrgNoContent) teamsRemoveMembershipForUserInOrgRes() {}

type TeamsRemoveMembershipForUserLegacyForbidden struct{}

func (*TeamsRemoveMembershipForUserLegacyForbidden) teamsRemoveMembershipForUserLegacyRes() {}

type TeamsRemoveMembershipForUserLegacyNoContent struct{}

func (*TeamsRemoveMembershipForUserLegacyNoContent) teamsRemoveMembershipForUserLegacyRes() {}

type TeamsRemoveProjectInOrg struct{}

type TeamsRemoveProjectLegacyNoContent struct{}

type TeamsRemoveRepoInOrg struct{}

type TeamsRemoveRepoLegacy struct{}

type TeamsUpdateDiscussionCommentInOrgApplicationJSONReq struct {
	Body string `json:"body"`
}

type TeamsUpdateDiscussionCommentLegacyApplicationJSONReq struct {
	Body string `json:"body"`
}

type TeamsUpdateDiscussionInOrgApplicationJSONReq struct {
	Body  OptString `json:"body"`
	Title OptString `json:"title"`
}

type TeamsUpdateDiscussionLegacyApplicationJSONReq struct {
	Body  OptString `json:"body"`
	Title OptString `json:"title"`
}

type TeamsUpdateInOrgApplicationJSONReq struct {
	Description  OptString                                       `json:"description"`
	Name         OptString                                       `json:"name"`
	ParentTeamID OptNilInt                                       `json:"parent_team_id"`
	Permission   OptTeamsUpdateInOrgApplicationJSONReqPermission `json:"permission"`
	Privacy      OptTeamsUpdateInOrgApplicationJSONReqPrivacy    `json:"privacy"`
}

type TeamsUpdateInOrgApplicationJSONReqPermission string

const (
	TeamsUpdateInOrgApplicationJSONReqPermissionPull  TeamsUpdateInOrgApplicationJSONReqPermission = "pull"
	TeamsUpdateInOrgApplicationJSONReqPermissionPush  TeamsUpdateInOrgApplicationJSONReqPermission = "push"
	TeamsUpdateInOrgApplicationJSONReqPermissionAdmin TeamsUpdateInOrgApplicationJSONReqPermission = "admin"
)

type TeamsUpdateInOrgApplicationJSONReqPrivacy string

const (
	TeamsUpdateInOrgApplicationJSONReqPrivacySecret TeamsUpdateInOrgApplicationJSONReqPrivacy = "secret"
	TeamsUpdateInOrgApplicationJSONReqPrivacyClosed TeamsUpdateInOrgApplicationJSONReqPrivacy = "closed"
)

type TeamsUpdateLegacyApplicationJSONReq struct {
	Description  OptString                                        `json:"description"`
	Name         string                                           `json:"name"`
	ParentTeamID OptNilInt                                        `json:"parent_team_id"`
	Permission   OptTeamsUpdateLegacyApplicationJSONReqPermission `json:"permission"`
	Privacy      OptTeamsUpdateLegacyApplicationJSONReqPrivacy    `json:"privacy"`
}

func (*TeamsUpdateLegacyApplicationJSONReq) teamsUpdateLegacyReq() {}

type TeamsUpdateLegacyApplicationJSONReqPermission string

const (
	TeamsUpdateLegacyApplicationJSONReqPermissionPull  TeamsUpdateLegacyApplicationJSONReqPermission = "pull"
	TeamsUpdateLegacyApplicationJSONReqPermissionPush  TeamsUpdateLegacyApplicationJSONReqPermission = "push"
	TeamsUpdateLegacyApplicationJSONReqPermissionAdmin TeamsUpdateLegacyApplicationJSONReqPermission = "admin"
)

type TeamsUpdateLegacyApplicationJSONReqPrivacy string

const (
	TeamsUpdateLegacyApplicationJSONReqPrivacySecret TeamsUpdateLegacyApplicationJSONReqPrivacy = "secret"
	TeamsUpdateLegacyApplicationJSONReqPrivacyClosed TeamsUpdateLegacyApplicationJSONReqPrivacy = "closed"
)

type ThreadSubject struct {
	LatestCommentURL string `json:"latest_comment_url"`
	Title            string `json:"title"`
	Type             string `json:"type"`
	URL              string `json:"url"`
}

type UsersBlockNoContent struct{}

type UsersCheckBlockedApplicationJSONForbidden BasicError

func (*UsersCheckBlockedApplicationJSONForbidden) usersCheckBlockedRes() {}

type UsersCheckBlockedApplicationJSONNotFound BasicError

func (*UsersCheckBlockedApplicationJSONNotFound) usersCheckBlockedRes() {}

type UsersCheckBlockedApplicationJSONUnauthorized BasicError

func (*UsersCheckBlockedApplicationJSONUnauthorized) usersCheckBlockedRes() {}

type UsersCheckBlockedNoContent struct{}

func (*UsersCheckBlockedNoContent) usersCheckBlockedRes() {}

type UsersCheckFollowingForUserNoContent struct{}

func (*UsersCheckFollowingForUserNoContent) usersCheckFollowingForUserRes() {}

type UsersCheckFollowingForUserNotFound struct{}

func (*UsersCheckFollowingForUserNotFound) usersCheckFollowingForUserRes() {}

type UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONForbidden BasicError

func (*UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONForbidden) usersCheckPersonIsFollowedByAuthenticatedRes() {
}

type UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONNotFound BasicError

func (*UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONNotFound) usersCheckPersonIsFollowedByAuthenticatedRes() {
}

type UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersCheckPersonIsFollowedByAuthenticatedApplicationJSONUnauthorized) usersCheckPersonIsFollowedByAuthenticatedRes() {
}

type UsersCheckPersonIsFollowedByAuthenticatedNoContent struct{}

func (*UsersCheckPersonIsFollowedByAuthenticatedNoContent) usersCheckPersonIsFollowedByAuthenticatedRes() {
}

type UsersCreateGpgKeyForAuthenticatedApplicationJSONReq struct {
	ArmoredPublicKey string `json:"armored_public_key"`
}

func (*UsersCreateGpgKeyForAuthenticatedApplicationJSONReq) usersCreateGpgKeyForAuthenticatedReq() {}

type UsersCreatePublicSSHKeyForAuthenticatedApplicationJSONReq struct {
	Key   string    `json:"key"`
	Title OptString `json:"title"`
}

func (*UsersCreatePublicSSHKeyForAuthenticatedApplicationJSONReq) usersCreatePublicSSHKeyForAuthenticatedReq() {
}

type UsersDeleteGpgKeyForAuthenticatedNoContent struct{}

type UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONForbidden) usersDeletePublicSSHKeyForAuthenticatedRes() {
}

type UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONNotFound) usersDeletePublicSSHKeyForAuthenticatedRes() {
}

type UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersDeletePublicSSHKeyForAuthenticatedApplicationJSONUnauthorized) usersDeletePublicSSHKeyForAuthenticatedRes() {
}

type UsersDeletePublicSSHKeyForAuthenticatedNoContent struct{}

func (*UsersDeletePublicSSHKeyForAuthenticatedNoContent) usersDeletePublicSSHKeyForAuthenticatedRes() {
}

type UsersFollowApplicationJSONForbidden BasicError

func (*UsersFollowApplicationJSONForbidden) usersFollowRes() {}

type UsersFollowApplicationJSONNotFound BasicError

func (*UsersFollowApplicationJSONNotFound) usersFollowRes() {}

type UsersFollowApplicationJSONUnauthorized BasicError

func (*UsersFollowApplicationJSONUnauthorized) usersFollowRes() {}

type UsersFollowNoContent struct{}

func (*UsersFollowNoContent) usersFollowRes() {}

type UsersGetGpgKeyForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersGetGpgKeyForAuthenticatedApplicationJSONForbidden) usersGetGpgKeyForAuthenticatedRes() {}

type UsersGetGpgKeyForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersGetGpgKeyForAuthenticatedApplicationJSONNotFound) usersGetGpgKeyForAuthenticatedRes() {}

type UsersGetGpgKeyForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersGetGpgKeyForAuthenticatedApplicationJSONUnauthorized) usersGetGpgKeyForAuthenticatedRes() {
}

type UsersGetPublicSSHKeyForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersGetPublicSSHKeyForAuthenticatedApplicationJSONForbidden) usersGetPublicSSHKeyForAuthenticatedRes() {
}

type UsersGetPublicSSHKeyForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersGetPublicSSHKeyForAuthenticatedApplicationJSONNotFound) usersGetPublicSSHKeyForAuthenticatedRes() {
}

type UsersGetPublicSSHKeyForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersGetPublicSSHKeyForAuthenticatedApplicationJSONUnauthorized) usersGetPublicSSHKeyForAuthenticatedRes() {
}

type UsersListBlockedByAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListBlockedByAuthenticatedApplicationJSONForbidden) usersListBlockedByAuthenticatedRes() {
}

type UsersListBlockedByAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListBlockedByAuthenticatedApplicationJSONNotFound) usersListBlockedByAuthenticatedRes() {}

type UsersListBlockedByAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListBlockedByAuthenticatedApplicationJSONUnauthorized) usersListBlockedByAuthenticatedRes() {
}

type UsersListBlockedByAuthenticatedOK []SimpleUser

func (*UsersListBlockedByAuthenticatedOK) usersListBlockedByAuthenticatedRes() {}

type UsersListEmailsForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListEmailsForAuthenticatedApplicationJSONForbidden) usersListEmailsForAuthenticatedRes() {
}

type UsersListEmailsForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListEmailsForAuthenticatedApplicationJSONNotFound) usersListEmailsForAuthenticatedRes() {}

type UsersListEmailsForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListEmailsForAuthenticatedApplicationJSONUnauthorized) usersListEmailsForAuthenticatedRes() {
}

type UsersListEmailsForAuthenticatedOK []Email

func (*UsersListEmailsForAuthenticatedOK) usersListEmailsForAuthenticatedRes() {}

type UsersListFollowedByAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListFollowedByAuthenticatedApplicationJSONForbidden) usersListFollowedByAuthenticatedRes() {
}

type UsersListFollowedByAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListFollowedByAuthenticatedApplicationJSONUnauthorized) usersListFollowedByAuthenticatedRes() {
}

type UsersListFollowedByAuthenticatedOK []SimpleUser

func (*UsersListFollowedByAuthenticatedOK) usersListFollowedByAuthenticatedRes() {}

type UsersListFollowersForAuthenticatedUserApplicationJSONForbidden BasicError

func (*UsersListFollowersForAuthenticatedUserApplicationJSONForbidden) usersListFollowersForAuthenticatedUserRes() {
}

type UsersListFollowersForAuthenticatedUserApplicationJSONUnauthorized BasicError

func (*UsersListFollowersForAuthenticatedUserApplicationJSONUnauthorized) usersListFollowersForAuthenticatedUserRes() {
}

type UsersListFollowersForAuthenticatedUserOK []SimpleUser

func (*UsersListFollowersForAuthenticatedUserOK) usersListFollowersForAuthenticatedUserRes() {}

type UsersListGpgKeysForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListGpgKeysForAuthenticatedApplicationJSONForbidden) usersListGpgKeysForAuthenticatedRes() {
}

type UsersListGpgKeysForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListGpgKeysForAuthenticatedApplicationJSONNotFound) usersListGpgKeysForAuthenticatedRes() {
}

type UsersListGpgKeysForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListGpgKeysForAuthenticatedApplicationJSONUnauthorized) usersListGpgKeysForAuthenticatedRes() {
}

type UsersListGpgKeysForAuthenticatedOK []GpgKey

func (*UsersListGpgKeysForAuthenticatedOK) usersListGpgKeysForAuthenticatedRes() {}

type UsersListOK []SimpleUser

func (*UsersListOK) usersListRes() {}

type UsersListPublicEmailsForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListPublicEmailsForAuthenticatedApplicationJSONForbidden) usersListPublicEmailsForAuthenticatedRes() {
}

type UsersListPublicEmailsForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListPublicEmailsForAuthenticatedApplicationJSONNotFound) usersListPublicEmailsForAuthenticatedRes() {
}

type UsersListPublicEmailsForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListPublicEmailsForAuthenticatedApplicationJSONUnauthorized) usersListPublicEmailsForAuthenticatedRes() {
}

type UsersListPublicEmailsForAuthenticatedOK []Email

func (*UsersListPublicEmailsForAuthenticatedOK) usersListPublicEmailsForAuthenticatedRes() {}

type UsersListPublicSSHKeysForAuthenticatedApplicationJSONForbidden BasicError

func (*UsersListPublicSSHKeysForAuthenticatedApplicationJSONForbidden) usersListPublicSSHKeysForAuthenticatedRes() {
}

type UsersListPublicSSHKeysForAuthenticatedApplicationJSONNotFound BasicError

func (*UsersListPublicSSHKeysForAuthenticatedApplicationJSONNotFound) usersListPublicSSHKeysForAuthenticatedRes() {
}

type UsersListPublicSSHKeysForAuthenticatedApplicationJSONUnauthorized BasicError

func (*UsersListPublicSSHKeysForAuthenticatedApplicationJSONUnauthorized) usersListPublicSSHKeysForAuthenticatedRes() {
}

type UsersListPublicSSHKeysForAuthenticatedOK []Key

func (*UsersListPublicSSHKeysForAuthenticatedOK) usersListPublicSSHKeysForAuthenticatedRes() {}

type UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONReq struct {
	Visibility UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONReqVisibility `json:"visibility"`
}

func (*UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONReq) usersSetPrimaryEmailVisibilityForAuthenticatedReq() {
}

type UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONReqVisibility string

const (
	UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONReqVisibilityPublic  UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONReqVisibility = "public"
	UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONReqVisibilityPrivate UsersSetPrimaryEmailVisibilityForAuthenticatedApplicationJSONReqVisibility = "private"
)

type UsersSetPrimaryEmailVisibilityForAuthenticatedOK []Email

type UsersUnblockApplicationJSONForbidden BasicError

func (*UsersUnblockApplicationJSONForbidden) usersUnblockRes() {}

type UsersUnblockApplicationJSONNotFound BasicError

func (*UsersUnblockApplicationJSONNotFound) usersUnblockRes() {}

type UsersUnblockApplicationJSONUnauthorized BasicError

func (*UsersUnblockApplicationJSONUnauthorized) usersUnblockRes() {}

type UsersUnblockNoContent struct{}

func (*UsersUnblockNoContent) usersUnblockRes() {}

type UsersUnfollowApplicationJSONForbidden BasicError

func (*UsersUnfollowApplicationJSONForbidden) usersUnfollowRes() {}

type UsersUnfollowApplicationJSONNotFound BasicError

func (*UsersUnfollowApplicationJSONNotFound) usersUnfollowRes() {}

type UsersUnfollowApplicationJSONUnauthorized BasicError

func (*UsersUnfollowApplicationJSONUnauthorized) usersUnfollowRes() {}

type UsersUnfollowNoContent struct{}

func (*UsersUnfollowNoContent) usersUnfollowRes() {}

type UsersUpdateAuthenticatedApplicationJSONReq struct {
	Bio             OptString    `json:"bio"`
	Blog            OptString    `json:"blog"`
	Company         OptString    `json:"company"`
	Email           OptString    `json:"email"`
	Hireable        OptBool      `json:"hireable"`
	Location        OptString    `json:"location"`
	Name            OptString    `json:"name"`
	TwitterUsername OptNilString `json:"twitter_username"`
}

func (*UsersUpdateAuthenticatedApplicationJSONReq) usersUpdateAuthenticatedReq() {}

type WorkflowRunUsageBillable struct {
	MACOS   OptWorkflowRunUsageBillableMACOS   `json:"MACOS"`
	UBUNTU  OptWorkflowRunUsageBillableUBUNTU  `json:"UBUNTU"`
	WINDOWS OptWorkflowRunUsageBillableWINDOWS `json:"WINDOWS"`
}

type WorkflowRunUsageBillableMACOS struct {
	Jobs    int `json:"jobs"`
	TotalMs int `json:"total_ms"`
}

type WorkflowRunUsageBillableUBUNTU struct {
	Jobs    int `json:"jobs"`
	TotalMs int `json:"total_ms"`
}

type WorkflowRunUsageBillableWINDOWS struct {
	Jobs    int `json:"jobs"`
	TotalMs int `json:"total_ms"`
}

type WorkflowState string

const (
	WorkflowStateActive             WorkflowState = "active"
	WorkflowStateDeleted            WorkflowState = "deleted"
	WorkflowStateDisabledFork       WorkflowState = "disabled_fork"
	WorkflowStateDisabledInactivity WorkflowState = "disabled_inactivity"
	WorkflowStateDisabledManually   WorkflowState = "disabled_manually"
)

// ActionsBillingUsage describes #/components/schemas/actions-billing-usage.
type ActionsBillingUsage struct {
	IncludedMinutes      int                                     `json:"included_minutes"`
	MinutesUsedBreakdown ActionsBillingUsageMinutesUsedBreakdown `json:"minutes_used_breakdown"`
	TotalMinutesUsed     int                                     `json:"total_minutes_used"`
	TotalPaidMinutesUsed int                                     `json:"total_paid_minutes_used"`
}

type ActionsEnabled bool

// ActionsEnterprisePermissions describes #/components/schemas/actions-enterprise-permissions.
type ActionsEnterprisePermissions struct {
	AllowedActions           OptAllowedActions    `json:"allowed_actions"`
	EnabledOrganizations     EnabledOrganizations `json:"enabled_organizations"`
	SelectedActionsURL       *SelectedActionsURL  `json:"selected_actions_url"`
	SelectedOrganizationsURL OptString            `json:"selected_organizations_url"`
}

// ActionsOrganizationPermissions describes #/components/schemas/actions-organization-permissions.
type ActionsOrganizationPermissions struct {
	AllowedActions          OptAllowedActions   `json:"allowed_actions"`
	EnabledRepositories     EnabledRepositories `json:"enabled_repositories"`
	SelectedActionsURL      *SelectedActionsURL `json:"selected_actions_url"`
	SelectedRepositoriesURL OptString           `json:"selected_repositories_url"`
}

// ActionsPublicKey describes #/components/schemas/actions-public-key.
type ActionsPublicKey struct {
	CreatedAt OptString `json:"created_at"`
	ID        OptInt    `json:"id"`
	Key       string    `json:"key"`
	KeyID     string    `json:"key_id"`
	Title     OptString `json:"title"`
	URL       OptString `json:"url"`
}

// ActionsRepositoryPermissions describes #/components/schemas/actions-repository-permissions.
type ActionsRepositoryPermissions struct {
	AllowedActions     OptAllowedActions   `json:"allowed_actions"`
	Enabled            ActionsEnabled      `json:"enabled"`
	SelectedActionsURL *SelectedActionsURL `json:"selected_actions_url"`
}

// ActionsSecret describes #/components/schemas/actions-secret.
type ActionsSecret struct {
	CreatedAt time.Time `json:"created_at"`
	Name      string    `json:"name"`
	UpdatedAt time.Time `json:"updated_at"`
}

type AlertCreatedAt time.Time

type AlertHTMLURL url.URL

type AlertNumber int

type AlertURL url.URL

type AllowedActions string

const (
	AllowedActionsAll       AllowedActions = "all"
	AllowedActionsLocalOnly AllowedActions = "local_only"
	AllowedActionsSelected  AllowedActions = "selected"
)

// APIOverview describes #/components/schemas/api-overview.
type APIOverview struct {
	API                              []string                         `json:"api"`
	Actions                          []string                         `json:"actions"`
	Dependabot                       []string                         `json:"dependabot"`
	Git                              []string                         `json:"git"`
	Hooks                            []string                         `json:"hooks"`
	Importer                         []string                         `json:"importer"`
	Packages                         []string                         `json:"packages"`
	Pages                            []string                         `json:"pages"`
	SSHKeyFingerprints               OptAPIOverviewSSHKeyFingerprints `json:"ssh_key_fingerprints"`
	VerifiablePasswordAuthentication bool                             `json:"verifiable_password_authentication"`
	Web                              []string                         `json:"web"`
}

func (*APIOverview) metaGetRes() {}

// AppPermissions describes #/components/schemas/app-permissions.
type AppPermissions struct {
	Actions                       OptAppPermissionsActions                       `json:"actions"`
	Administration                OptAppPermissionsAdministration                `json:"administration"`
	Checks                        OptAppPermissionsChecks                        `json:"checks"`
	ContentReferences             OptAppPermissionsContentReferences             `json:"content_references"`
	Contents                      OptAppPermissionsContents                      `json:"contents"`
	Deployments                   OptAppPermissionsDeployments                   `json:"deployments"`
	Environments                  OptAppPermissionsEnvironments                  `json:"environments"`
	Issues                        OptAppPermissionsIssues                        `json:"issues"`
	Members                       OptAppPermissionsMembers                       `json:"members"`
	Metadata                      OptAppPermissionsMetadata                      `json:"metadata"`
	OrganizationAdministration    OptAppPermissionsOrganizationAdministration    `json:"organization_administration"`
	OrganizationHooks             OptAppPermissionsOrganizationHooks             `json:"organization_hooks"`
	OrganizationPackages          OptAppPermissionsOrganizationPackages          `json:"organization_packages"`
	OrganizationPlan              OptAppPermissionsOrganizationPlan              `json:"organization_plan"`
	OrganizationProjects          OptAppPermissionsOrganizationProjects          `json:"organization_projects"`
	OrganizationSecrets           OptAppPermissionsOrganizationSecrets           `json:"organization_secrets"`
	OrganizationSelfHostedRunners OptAppPermissionsOrganizationSelfHostedRunners `json:"organization_self_hosted_runners"`
	OrganizationUserBlocking      OptAppPermissionsOrganizationUserBlocking      `json:"organization_user_blocking"`
	Packages                      OptAppPermissionsPackages                      `json:"packages"`
	Pages                         OptAppPermissionsPages                         `json:"pages"`
	PullRequests                  OptAppPermissionsPullRequests                  `json:"pull_requests"`
	RepositoryHooks               OptAppPermissionsRepositoryHooks               `json:"repository_hooks"`
	RepositoryProjects            OptAppPermissionsRepositoryProjects            `json:"repository_projects"`
	SecretScanningAlerts          OptAppPermissionsSecretScanningAlerts          `json:"secret_scanning_alerts"`
	Secrets                       OptAppPermissionsSecrets                       `json:"secrets"`
	SecurityEvents                OptAppPermissionsSecurityEvents                `json:"security_events"`
	SingleFile                    OptAppPermissionsSingleFile                    `json:"single_file"`
	Statuses                      OptAppPermissionsStatuses                      `json:"statuses"`
	TeamDiscussions               OptAppPermissionsTeamDiscussions               `json:"team_discussions"`
	VulnerabilityAlerts           OptAppPermissionsVulnerabilityAlerts           `json:"vulnerability_alerts"`
	Workflows                     OptAppPermissionsWorkflows                     `json:"workflows"`
}

// ApplicationGrant describes #/components/schemas/application-grant.
type ApplicationGrant struct {
	App       ApplicationGrantApp   `json:"app"`
	CreatedAt time.Time             `json:"created_at"`
	ID        int                   `json:"id"`
	Scopes    []string              `json:"scopes"`
	URL       url.URL               `json:"url"`
	UpdatedAt time.Time             `json:"updated_at"`
	User      OptNullableSimpleUser `json:"user"`
}

func (*ApplicationGrant) oAuthAuthorizationsGetGrantRes() {}

// Artifact describes #/components/schemas/artifact.
type Artifact struct {
	ArchiveDownloadURL string  `json:"archive_download_url"`
	CreatedAt          NilTime `json:"created_at"`
	Expired            bool    `json:"expired"`
	ExpiresAt          NilTime `json:"expires_at"`
	ID                 int     `json:"id"`
	Name               string  `json:"name"`
	NodeID             string  `json:"node_id"`
	SizeInBytes        int     `json:"size_in_bytes"`
	URL                string  `json:"url"`
	UpdatedAt          NilTime `json:"updated_at"`
}

// AuthenticationToken describes #/components/schemas/authentication-token.
type AuthenticationToken struct {
	ExpiresAt           time.Time                                 `json:"expires_at"`
	Permissions         *AuthenticationTokenPermissions           `json:"permissions"`
	Repositories        []Repository                              `json:"repositories"`
	RepositorySelection OptAuthenticationTokenRepositorySelection `json:"repository_selection"`
	SingleFile          OptNilString                              `json:"single_file"`
	Token               string                                    `json:"token"`
}

type AuthorAssociation string

const (
	AuthorAssociationCOLLABORATOR         AuthorAssociation = "COLLABORATOR"
	AuthorAssociationCONTRIBUTOR          AuthorAssociation = "CONTRIBUTOR"
	AuthorAssociationFIRSTTIMER           AuthorAssociation = "FIRST_TIMER"
	AuthorAssociationFIRSTTIMECONTRIBUTOR AuthorAssociation = "FIRST_TIME_CONTRIBUTOR"
	AuthorAssociationMANNEQUIN            AuthorAssociation = "MANNEQUIN"
	AuthorAssociationMEMBER               AuthorAssociation = "MEMBER"
	AuthorAssociationNONE                 AuthorAssociation = "NONE"
	AuthorAssociationOWNER                AuthorAssociation = "OWNER"
)

// Authorization describes #/components/schemas/authorization.
type Authorization struct {
	App            AuthorizationApp              `json:"app"`
	CreatedAt      time.Time                     `json:"created_at"`
	ExpiresAt      NilTime                       `json:"expires_at"`
	Fingerprint    NilString                     `json:"fingerprint"`
	HashedToken    NilString                     `json:"hashed_token"`
	ID             int                           `json:"id"`
	Installation   OptNullableScopedInstallation `json:"installation"`
	Note           NilString                     `json:"note"`
	NoteURL        NilURL                        `json:"note_url"`
	Scopes         []string                      `json:"scopes"`
	Token          string                        `json:"token"`
	TokenLastEight NilString                     `json:"token_last_eight"`
	URL            url.URL                       `json:"url"`
	UpdatedAt      time.Time                     `json:"updated_at"`
	User           OptNullableSimpleUser         `json:"user"`
}

func (*Authorization) oAuthAuthorizationsGetAuthorizationRes() {}

// Autolink describes #/components/schemas/autolink.
type Autolink struct {
	ID          int    `json:"id"`
	KeyPrefix   string `json:"key_prefix"`
	URLTemplate string `json:"url_template"`
}

func (*Autolink) reposGetAutolinkRes() {}

// BaseGist describes #/components/schemas/base-gist.
type BaseGist struct {
	Comments    int                `json:"comments"`
	CommentsURL url.URL            `json:"comments_url"`
	CommitsURL  url.URL            `json:"commits_url"`
	CreatedAt   time.Time          `json:"created_at"`
	Description NilString          `json:"description"`
	Files       BaseGistFiles      `json:"files"`
	Forks       []string           `json:"forks"`
	ForksURL    url.URL            `json:"forks_url"`
	GitPullURL  url.URL            `json:"git_pull_url"`
	GitPushURL  url.URL            `json:"git_push_url"`
	HTMLURL     url.URL            `json:"html_url"`
	History     []string           `json:"history"`
	ID          string             `json:"id"`
	NodeID      string             `json:"node_id"`
	Owner       OptSimpleUser      `json:"owner"`
	Public      bool               `json:"public"`
	Truncated   OptBool            `json:"truncated"`
	URL         url.URL            `json:"url"`
	UpdatedAt   time.Time          `json:"updated_at"`
	User        NullableSimpleUser `json:"user"`
}

// BasicError describes #/components/schemas/basic-error.
type BasicError struct {
	DocumentationURL OptString `json:"documentation_url"`
	Message          OptString `json:"message"`
	Status           OptString `json:"status"`
	URL              OptString `json:"url"`
}

func (*BasicError) activityGetRepoSubscriptionRes()                      {}
func (*BasicError) activityMarkThreadAsReadRes()                         {}
func (*BasicError) appsDeleteInstallationRes()                           {}
func (*BasicError) appsGetSubscriptionPlanForAccountStubbedRes()         {}
func (*BasicError) appsListPlansStubbedRes()                             {}
func (*BasicError) appsListSubscriptionsForAuthenticatedUserStubbedRes() {}
func (*BasicError) appsSuspendInstallationRes()                          {}
func (*BasicError) appsUnsuspendInstallationRes()                        {}
func (*BasicError) codeScanningGetSarifRes()                             {}
func (*BasicError) codesOfConductGetConductCodeRes()                     {}
func (*BasicError) gistsCheckIsStarredRes()                              {}
func (*BasicError) gistsGetCommentRes()                                  {}
func (*BasicError) gistsListRes()                                        {}
func (*BasicError) gistsUpdateCommentRes()                               {}
func (*BasicError) gitGetCommitRes()                                     {}
func (*BasicError) gitGetRefRes()                                        {}
func (*BasicError) gitGetTagRes()                                        {}
func (*BasicError) issuesCheckUserCanBeAssignedRes()                     {}
func (*BasicError) issuesDeleteMilestoneRes()                            {}
func (*BasicError) issuesGetCommentRes()                                 {}
func (*BasicError) issuesGetLabelRes()                                   {}
func (*BasicError) issuesGetMilestoneRes()                               {}
func (*BasicError) issuesListAssigneesRes()                              {}
func (*BasicError) issuesListLabelsForRepoRes()                          {}
func (*BasicError) issuesListLabelsOnIssueRes()                          {}
func (*BasicError) issuesRemoveAllLabelsRes()                            {}
func (*BasicError) migrationsDeleteArchiveForOrgRes()                    {}
func (*BasicError) migrationsDownloadArchiveForOrgRes()                  {}
func (*BasicError) migrationsGetCommitAuthorsRes()                       {}
func (*BasicError) migrationsGetImportStatusRes()                        {}
func (*BasicError) migrationsListReposForOrgRes()                        {}
func (*BasicError) migrationsListReposForUserRes()                       {}
func (*BasicError) migrationsUnlockRepoForOrgRes()                       {}
func (*BasicError) orgsCheckBlockedUserRes()                             {}
func (*BasicError) orgsConvertMemberToOutsideCollaboratorRes()           {}
func (*BasicError) orgsDeleteWebhookRes()                                {}
func (*BasicError) orgsGetRes()                                          {}
func (*BasicError) orgsGetWebhookRes()                                   {}
func (*BasicError) orgsListFailedInvitationsRes()                        {}
func (*BasicError) orgsListInvitationTeamsRes()                          {}
func (*BasicError) orgsListPendingInvitationsRes()                       {}
func (*BasicError) orgsListWebhooksRes()                                 {}
func (*BasicError) orgsPingWebhookRes()                                  {}
func (*BasicError) orgsRemoveMemberRes()                                 {}
func (*BasicError) orgsRemoveSamlSSOAuthorizationRes()                   {}
func (*BasicError) orgsSetPublicMembershipForAuthenticatedUserRes()      {}
func (*BasicError) pullsCreateReplyForReviewCommentRes()                 {}
func (*BasicError) pullsCreateReviewRes()                                {}
func (*BasicError) pullsDeletePendingReviewRes()                         {}
func (*BasicError) pullsDeleteReviewCommentRes()                         {}
func (*BasicError) pullsDismissReviewRes()                               {}
func (*BasicError) pullsGetReviewCommentRes()                            {}
func (*BasicError) pullsGetReviewRes()                                   {}
func (*BasicError) pullsListCommentsForReviewRes()                       {}
func (*BasicError) rateLimitGetRes()                                     {}
func (*BasicError) reposCreateCommitSignatureProtectionRes()             {}
func (*BasicError) reposDeleteAdminBranchProtectionRes()                 {}
func (*BasicError) reposDeleteAutolinkRes()                              {}
func (*BasicError) reposDeleteBranchProtectionRes()                      {}
func (*BasicError) reposDeleteCommitCommentRes()                         {}
func (*BasicError) reposDeleteCommitSignatureProtectionRes()             {}
func (*BasicError) reposDeleteDeploymentRes()                            {}
func (*BasicError) reposDeletePullRequestReviewProtectionRes()           {}
func (*BasicError) reposDeleteWebhookRes()                               {}
func (*BasicError) reposGetAccessRestrictionsRes()                       {}
func (*BasicError) reposGetAllStatusCheckContextsRes()                   {}
func (*BasicError) reposGetAllTopicsRes()                                {}
func (*BasicError) reposGetAppsWithAccessToProtectedBranchRes()          {}
func (*BasicError) reposGetAutolinkRes()                                 {}
func (*BasicError) reposGetBranchProtectionRes()                         {}
func (*BasicError) reposGetCollaboratorPermissionLevelRes()              {}
func (*BasicError) reposGetCombinedStatusForRefRes()                     {}
func (*BasicError) reposGetCommitCommentRes()                            {}
func (*BasicError) reposGetCommitSignatureProtectionRes()                {}
func (*BasicError) reposGetDeployKeyRes()                                {}
func (*BasicError) reposGetDeploymentStatusRes()                         {}
func (*BasicError) reposGetPagesHealthCheckRes()                         {}
func (*BasicError) reposGetPagesRes()                                    {}
func (*BasicError) reposGetParticipationStatsRes()                       {}
func (*BasicError) reposGetReleaseAssetRes()                             {}
func (*BasicError) reposGetReleaseByTagRes()                             {}
func (*BasicError) reposGetReleaseRes()                                  {}
func (*BasicError) reposGetStatusChecksProtectionRes()                   {}
func (*BasicError) reposGetTeamsWithAccessToProtectedBranchRes()         {}
func (*BasicError) reposGetTopPathsRes()                                 {}
func (*BasicError) reposGetTopReferrersRes()                             {}
func (*BasicError) reposGetUsersWithAccessToProtectedBranchRes()         {}
func (*BasicError) reposListBranchesRes()                                {}
func (*BasicError) reposListCommitStatusesForRefRes()                    {}
func (*BasicError) reposListDeploymentStatusesRes()                      {}
func (*BasicError) reposListReleasesRes()                                {}
func (*BasicError) reposPingWebhookRes()                                 {}
func (*BasicError) reposReplaceAllTopicsRes()                            {}
func (*BasicError) reposTestPushWebhookRes()                             {}
func (*BasicError) reposUpdateCommitCommentRes()                         {}
func (*BasicError) reposUpdateReleaseRes()                               {}
func (*BasicError) teamsAddMemberLegacyRes()                             {}
func (*BasicError) teamsAddOrUpdateMembershipForUserLegacyRes()          {}
func (*BasicError) teamsGetByNameRes()                                   {}
func (*BasicError) teamsGetLegacyRes()                                   {}
func (*BasicError) teamsGetMembershipForUserLegacyRes()                  {}
func (*BasicError) teamsListProjectsLegacyRes()                          {}
func (*BasicError) teamsListReposLegacyRes()                             {}
func (*BasicError) teamsListRes()                                        {}

// Blob describes #/components/schemas/blob.
type Blob struct {
	Content            string    `json:"content"`
	Encoding           string    `json:"encoding"`
	HighlightedContent OptString `json:"highlighted_content"`
	NodeID             string    `json:"node_id"`
	Sha                string    `json:"sha"`
	Size               NilInt    `json:"size"`
	URL                url.URL   `json:"url"`
}

// BranchProtection describes #/components/schemas/branch-protection.
type BranchProtection struct {
	AllowDeletions                 OptBranchProtectionAllowDeletions                 `json:"allow_deletions"`
	AllowForcePushes               OptBranchProtectionAllowForcePushes               `json:"allow_force_pushes"`
	Enabled                        OptBool                                           `json:"enabled"`
	EnforceAdmins                  OptProtectedBranchAdminEnforced                   `json:"enforce_admins"`
	Name                           OptString                                         `json:"name"`
	ProtectionURL                  OptString                                         `json:"protection_url"`
	RequiredConversationResolution OptBranchProtectionRequiredConversationResolution `json:"required_conversation_resolution"`
	RequiredLinearHistory          OptBranchProtectionRequiredLinearHistory          `json:"required_linear_history"`
	RequiredPullRequestReviews     OptProtectedBranchPullRequestReview               `json:"required_pull_request_reviews"`
	RequiredSignatures             OptBranchProtectionRequiredSignatures             `json:"required_signatures"`
	RequiredStatusChecks           OptBranchProtectionRequiredStatusChecks           `json:"required_status_checks"`
	Restrictions                   OptBranchRestrictionPolicy                        `json:"restrictions"`
	URL                            OptString                                         `json:"url"`
}

func (*BranchProtection) reposGetBranchProtectionRes() {}

// BranchRestrictionPolicy describes #/components/schemas/branch-restriction-policy.
type BranchRestrictionPolicy struct {
	Apps     []BranchRestrictionPolicyAppsItem  `json:"apps"`
	AppsURL  url.URL                            `json:"apps_url"`
	Teams    []BranchRestrictionPolicyTeamsItem `json:"teams"`
	TeamsURL url.URL                            `json:"teams_url"`
	URL      url.URL                            `json:"url"`
	Users    []BranchRestrictionPolicyUsersItem `json:"users"`
	UsersURL url.URL                            `json:"users_url"`
}

func (*BranchRestrictionPolicy) reposGetAccessRestrictionsRes() {}

// BranchShort describes #/components/schemas/branch-short.
type BranchShort struct {
	Commit    BranchShortCommit `json:"commit"`
	Name      string            `json:"name"`
	Protected bool              `json:"protected"`
}

// BranchWithProtection describes #/components/schemas/branch-with-protection.
type BranchWithProtection struct {
	Commit                       Commit                    `json:"commit"`
	Links                        BranchWithProtectionLinks `json:"_links"`
	Name                         string                    `json:"name"`
	Pattern                      OptString                 `json:"pattern"`
	Protected                    bool                      `json:"protected"`
	Protection                   BranchProtection          `json:"protection"`
	ProtectionURL                url.URL                   `json:"protection_url"`
	RequiredApprovingReviewCount OptInt                    `json:"required_approving_review_count"`
}

func (*BranchWithProtection) reposGetBranchRes() {}

// CheckAnnotation describes #/components/schemas/check-annotation.
type CheckAnnotation struct {
	AnnotationLevel NilString `json:"annotation_level"`
	BlobHref        string    `json:"blob_href"`
	EndColumn       NilInt    `json:"end_column"`
	EndLine         int       `json:"end_line"`
	Message         NilString `json:"message"`
	Path            string    `json:"path"`
	RawDetails      NilString `json:"raw_details"`
	StartColumn     NilInt    `json:"start_column"`
	StartLine       int       `json:"start_line"`
	Title           NilString `json:"title"`
}

// CheckRun describes #/components/schemas/check-run.
type CheckRun struct {
	App          NullableIntegration   `json:"app"`
	CheckSuite   NilCheckRunCheckSuite `json:"check_suite"`
	CompletedAt  NilTime               `json:"completed_at"`
	Conclusion   NilCheckRunConclusion `json:"conclusion"`
	Deployment   OptDeploymentSimple   `json:"deployment"`
	DetailsURL   NilString             `json:"details_url"`
	ExternalID   NilString             `json:"external_id"`
	HTMLURL      NilString             `json:"html_url"`
	HeadSha      string                `json:"head_sha"`
	ID           int                   `json:"id"`
	Name         string                `json:"name"`
	NodeID       string                `json:"node_id"`
	Output       CheckRunOutput        `json:"output"`
	PullRequests string                `json:"pull_requests"`
	StartedAt    NilTime               `json:"started_at"`
	Status       CheckRunStatus        `json:"status"`
	URL          string                `json:"url"`
}

// CheckSuite describes #/components/schemas/check-suite.
type CheckSuite struct {
	After                NilString               `json:"after"`
	App                  NullableIntegration     `json:"app"`
	Before               NilString               `json:"before"`
	CheckRunsURL         string                  `json:"check_runs_url"`
	Conclusion           NilCheckSuiteConclusion `json:"conclusion"`
	CreatedAt            NilTime                 `json:"created_at"`
	HeadBranch           NilString               `json:"head_branch"`
	HeadCommit           SimpleCommit            `json:"head_commit"`
	HeadSha              string                  `json:"head_sha"`
	ID                   int                     `json:"id"`
	LatestCheckRunsCount int                     `json:"latest_check_runs_count"`
	NodeID               string                  `json:"node_id"`
	PullRequests         []PullRequestMinimal    `json:"pull_requests"`
	Repository           MinimalRepository       `json:"repository"`
	Status               NilCheckSuiteStatus     `json:"status"`
	URL                  NilString               `json:"url"`
	UpdatedAt            NilTime                 `json:"updated_at"`
}

// CheckSuitePreference describes #/components/schemas/check-suite-preference.
type CheckSuitePreference struct {
	Preferences CheckSuitePreferencePreferences `json:"preferences"`
	Repository  MinimalRepository               `json:"repository"`
}

type CodeFrequencyStat []int

// CodeOfConduct describes #/components/schemas/code-of-conduct.
type CodeOfConduct struct {
	Body    OptString `json:"body"`
	HTMLURL NilURL    `json:"html_url"`
	Key     string    `json:"key"`
	Name    string    `json:"name"`
	URL     url.URL   `json:"url"`
}

func (*CodeOfConduct) codesOfConductGetConductCodeRes() {}

// CodeOfConductSimple describes #/components/schemas/code-of-conduct-simple.
type CodeOfConductSimple struct {
	HTMLURL NilURL  `json:"html_url"`
	Key     string  `json:"key"`
	Name    string  `json:"name"`
	URL     url.URL `json:"url"`
}

type CodeScanningAlertClassification string

const (
	CodeScanningAlertClassificationSource    CodeScanningAlertClassification = "source"
	CodeScanningAlertClassificationGenerated CodeScanningAlertClassification = "generated"
	CodeScanningAlertClassificationTest      CodeScanningAlertClassification = "test"
	CodeScanningAlertClassificationLibrary   CodeScanningAlertClassification = "library"
)

type CodeScanningAlertDismissedReason string

const (
	CodeScanningAlertDismissedReasonFalsePositive CodeScanningAlertDismissedReason = "false positive"
	CodeScanningAlertDismissedReasonWonTFix       CodeScanningAlertDismissedReason = "won't fix"
	CodeScanningAlertDismissedReasonUsedInTests   CodeScanningAlertDismissedReason = "used in tests"
)

type CodeScanningAlertEnvironment string

// CodeScanningAlertInstance describes #/components/schemas/code-scanning-alert-instance.
type CodeScanningAlertInstance struct {
	AnalysisKey     *CodeScanningAnalysisAnalysisKey    `json:"analysis_key"`
	Category        *CodeScanningAnalysisCategory       `json:"category"`
	Classifications []CodeScanningAlertClassification   `json:"classifications"`
	CommitSha       OptString                           `json:"commit_sha"`
	Environment     *CodeScanningAlertEnvironment       `json:"environment"`
	HTMLURL         OptString                           `json:"html_url"`
	Location        OptCodeScanningAlertLocation        `json:"location"`
	Message         OptCodeScanningAlertInstanceMessage `json:"message"`
	Ref             *CodeScanningRef                    `json:"ref"`
	State           OptCodeScanningAlertState           `json:"state"`
}

// CodeScanningAlertLocation describes #/components/schemas/code-scanning-alert-location.
type CodeScanningAlertLocation struct {
	EndColumn   OptInt    `json:"end_column"`
	EndLine     OptInt    `json:"end_line"`
	Path        OptString `json:"path"`
	StartColumn OptInt    `json:"start_column"`
	StartLine   OptInt    `json:"start_line"`
}

type CodeScanningAlertSetState string

const (
	CodeScanningAlertSetStateOpen      CodeScanningAlertSetState = "open"
	CodeScanningAlertSetStateDismissed CodeScanningAlertSetState = "dismissed"
)

type CodeScanningAlertState string

const (
	CodeScanningAlertStateOpen      CodeScanningAlertState = "open"
	CodeScanningAlertStateClosed    CodeScanningAlertState = "closed"
	CodeScanningAlertStateDismissed CodeScanningAlertState = "dismissed"
	CodeScanningAlertStateFixed     CodeScanningAlertState = "fixed"
)

// CodeScanningAnalysis describes #/components/schemas/code-scanning-analysis.
type CodeScanningAnalysis struct {
	AnalysisKey  CodeScanningAnalysisAnalysisKey `json:"analysis_key"`
	Category     *CodeScanningAnalysisCategory   `json:"category"`
	CommitSha    CodeScanningAnalysisCommitSha   `json:"commit_sha"`
	CreatedAt    CodeScanningAnalysisCreatedAt   `json:"created_at"`
	Deletable    bool                            `json:"deletable"`
	Environment  CodeScanningAnalysisEnvironment `json:"environment"`
	Error        string                          `json:"error"`
	ID           int                             `json:"id"`
	Ref          CodeScanningRef                 `json:"ref"`
	ResultsCount int                             `json:"results_count"`
	RulesCount   int                             `json:"rules_count"`
	SarifID      CodeScanningAnalysisSarifID     `json:"sarif_id"`
	Tool         CodeScanningAnalysisTool        `json:"tool"`
	ToolName     OptString                       `json:"tool_name"`
	URL          CodeScanningAnalysisURL         `json:"url"`
	Warning      string                          `json:"warning"`
}

type CodeScanningAnalysisAnalysisKey string

type CodeScanningAnalysisCategory string

type CodeScanningAnalysisCommitSha string

type CodeScanningAnalysisCreatedAt time.Time

// CodeScanningAnalysisDeletion describes #/components/schemas/code-scanning-analysis-deletion.
type CodeScanningAnalysisDeletion struct {
	ConfirmDeleteURL NilURL `json:"confirm_delete_url"`
	NextAnalysisURL  NilURL `json:"next_analysis_url"`
}

func (*CodeScanningAnalysisDeletion) codeScanningDeleteAnalysisRes() {}

type CodeScanningAnalysisEnvironment string

type CodeScanningAnalysisSarifFile string

type CodeScanningAnalysisSarifID string

// CodeScanningAnalysisTool describes #/components/schemas/code-scanning-analysis-tool.
type CodeScanningAnalysisTool struct {
	GUID    *CodeScanningAnalysisToolGUID    `json:"guid"`
	Name    *CodeScanningAnalysisToolName    `json:"name"`
	Version *CodeScanningAnalysisToolVersion `json:"version"`
}

type CodeScanningAnalysisToolGUID string

type CodeScanningAnalysisToolName string

type CodeScanningAnalysisToolVersion string

type CodeScanningAnalysisURL url.URL

type CodeScanningRef string

// CodeScanningSarifsReceipt describes #/components/schemas/code-scanning-sarifs-receipt.
type CodeScanningSarifsReceipt struct {
	ID  *CodeScanningAnalysisSarifID `json:"id"`
	URL OptURL                       `json:"url"`
}

func (*CodeScanningSarifsReceipt) codeScanningUploadSarifRes() {}

// CodeScanningSarifsStatus describes #/components/schemas/code-scanning-sarifs-status.
type CodeScanningSarifsStatus struct {
	AnalysesURL      OptNilURL                                   `json:"analyses_url"`
	ProcessingStatus OptCodeScanningSarifsStatusProcessingStatus `json:"processing_status"`
}

func (*CodeScanningSarifsStatus) codeScanningGetSarifRes() {}

// CombinedBillingUsage describes #/components/schemas/combined-billing-usage.
type CombinedBillingUsage struct {
	DaysLeftInBillingCycle       int `json:"days_left_in_billing_cycle"`
	EstimatedPaidStorageForMonth int `json:"estimated_paid_storage_for_month"`
	EstimatedStorageForMonth     int `json:"estimated_storage_for_month"`
}

// CombinedCommitStatus describes #/components/schemas/combined-commit-status.
type CombinedCommitStatus struct {
	CommitURL  url.URL              `json:"commit_url"`
	Repository MinimalRepository    `json:"repository"`
	Sha        string               `json:"sha"`
	State      string               `json:"state"`
	Statuses   []SimpleCommitStatus `json:"statuses"`
	TotalCount int                  `json:"total_count"`
	URL        url.URL              `json:"url"`
}

func (*CombinedCommitStatus) reposGetCombinedStatusForRefRes() {}

// Commit describes #/components/schemas/commit.
type Commit struct {
	Author      NullableSimpleUser  `json:"author"`
	CommentsURL url.URL             `json:"comments_url"`
	Commit      CommitCommit        `json:"commit"`
	Committer   NullableSimpleUser  `json:"committer"`
	Files       []CommitFilesItem   `json:"files"`
	HTMLURL     url.URL             `json:"html_url"`
	NodeID      string              `json:"node_id"`
	Parents     []CommitParentsItem `json:"parents"`
	Sha         string              `json:"sha"`
	Stats       OptCommitStats      `json:"stats"`
	URL         url.URL             `json:"url"`
}

// CommitActivity describes #/components/schemas/commit-activity.
type CommitActivity struct {
	Days  []int `json:"days"`
	Total int   `json:"total"`
	Week  int   `json:"week"`
}

// CommitComment describes #/components/schemas/commit-comment.
type CommitComment struct {
	AuthorAssociation AuthorAssociation  `json:"author_association"`
	Body              string             `json:"body"`
	CommitID          string             `json:"commit_id"`
	CreatedAt         time.Time          `json:"created_at"`
	HTMLURL           url.URL            `json:"html_url"`
	ID                int                `json:"id"`
	Line              NilInt             `json:"line"`
	NodeID            string             `json:"node_id"`
	Path              NilString          `json:"path"`
	Position          NilInt             `json:"position"`
	Reactions         OptReactionRollup  `json:"reactions"`
	URL               url.URL            `json:"url"`
	UpdatedAt         time.Time          `json:"updated_at"`
	User              NullableSimpleUser `json:"user"`
}

func (*CommitComment) reposGetCommitCommentRes()    {}
func (*CommitComment) reposUpdateCommitCommentRes() {}

// CommitComparison describes #/components/schemas/commit-comparison.
type CommitComparison struct {
	AheadBy         int                    `json:"ahead_by"`
	BaseCommit      Commit                 `json:"base_commit"`
	BehindBy        int                    `json:"behind_by"`
	Commits         []Commit               `json:"commits"`
	DiffURL         url.URL                `json:"diff_url"`
	Files           []DiffEntry            `json:"files"`
	HTMLURL         url.URL                `json:"html_url"`
	MergeBaseCommit Commit                 `json:"merge_base_commit"`
	PatchURL        url.URL                `json:"patch_url"`
	PermalinkURL    url.URL                `json:"permalink_url"`
	Status          CommitComparisonStatus `json:"status"`
	TotalCommits    int                    `json:"total_commits"`
	URL             url.URL                `json:"url"`
}

func (*CommitComparison) reposCompareCommitsRes() {}

// CommunityProfile describes #/components/schemas/community-profile.
type CommunityProfile struct {
	ContentReportsEnabled OptBool               `json:"content_reports_enabled"`
	Description           NilString             `json:"description"`
	Documentation         NilString             `json:"documentation"`
	Files                 CommunityProfileFiles `json:"files"`
	HealthPercentage      int                   `json:"health_percentage"`
	UpdatedAt             NilTime               `json:"updated_at"`
}

// ContentFile describes #/components/schemas/content-file.
type ContentFile struct {
	Content         string           `json:"content"`
	DownloadURL     NilURL           `json:"download_url"`
	Encoding        string           `json:"encoding"`
	GitURL          NilURL           `json:"git_url"`
	HTMLURL         NilURL           `json:"html_url"`
	Links           ContentFileLinks `json:"_links"`
	Name            string           `json:"name"`
	Path            string           `json:"path"`
	Sha             string           `json:"sha"`
	Size            int              `json:"size"`
	SubmoduleGitURL OptString        `json:"submodule_git_url"`
	Target          OptString        `json:"target"`
	Type            string           `json:"type"`
	URL             url.URL          `json:"url"`
}

// ContentReferenceAttachment describes #/components/schemas/content-reference-attachment.
type ContentReferenceAttachment struct {
	Body   string    `json:"body"`
	ID     int       `json:"id"`
	NodeID OptString `json:"node_id"`
	Title  string    `json:"title"`
}

// ContentTraffic describes #/components/schemas/content-traffic.
type ContentTraffic struct {
	Count   int    `json:"count"`
	Path    string `json:"path"`
	Title   string `json:"title"`
	Uniques int    `json:"uniques"`
}

// Contributor describes #/components/schemas/contributor.
type Contributor struct {
	AvatarURL         OptURL       `json:"avatar_url"`
	Contributions     int          `json:"contributions"`
	Email             OptString    `json:"email"`
	EventsURL         OptString    `json:"events_url"`
	FollowersURL      OptURL       `json:"followers_url"`
	FollowingURL      OptString    `json:"following_url"`
	GistsURL          OptString    `json:"gists_url"`
	GravatarID        OptNilString `json:"gravatar_id"`
	HTMLURL           OptURL       `json:"html_url"`
	ID                OptInt       `json:"id"`
	Login             OptString    `json:"login"`
	Name              OptString    `json:"name"`
	NodeID            OptString    `json:"node_id"`
	OrganizationsURL  OptURL       `json:"organizations_url"`
	ReceivedEventsURL OptURL       `json:"received_events_url"`
	ReposURL          OptURL       `json:"repos_url"`
	SiteAdmin         OptBool      `json:"site_admin"`
	StarredURL        OptString    `json:"starred_url"`
	SubscriptionsURL  OptURL       `json:"subscriptions_url"`
	Type              string       `json:"type"`
	URL               OptURL       `json:"url"`
}

// ContributorActivity describes #/components/schemas/contributor-activity.
type ContributorActivity struct {
	Author NullableSimpleUser             `json:"author"`
	Total  int                            `json:"total"`
	Weeks  []ContributorActivityWeeksItem `json:"weeks"`
}

// CredentialAuthorization describes #/components/schemas/credential-authorization.
type CredentialAuthorization struct {
	AuthorizedCredentialID    OptNilInt    `json:"authorized_credential_id"`
	AuthorizedCredentialNote  OptNilString `json:"authorized_credential_note"`
	AuthorizedCredentialTitle OptNilString `json:"authorized_credential_title"`
	CredentialAccessedAt      OptNilTime   `json:"credential_accessed_at"`
	CredentialAuthorizedAt    time.Time    `json:"credential_authorized_at"`
	CredentialID              int          `json:"credential_id"`
	CredentialType            string       `json:"credential_type"`
	Fingerprint               OptString    `json:"fingerprint"`
	Login                     string       `json:"login"`
	Scopes                    []string     `json:"scopes"`
	TokenLastEight            OptString    `json:"token_last_eight"`
}

// DeployKey describes #/components/schemas/deploy-key.
type DeployKey struct {
	CreatedAt string `json:"created_at"`
	ID        int    `json:"id"`
	Key       string `json:"key"`
	ReadOnly  bool   `json:"read_only"`
	Title     string `json:"title"`
	URL       string `json:"url"`
	Verified  bool   `json:"verified"`
}

func (*DeployKey) reposGetDeployKeyRes() {}

// DeploymentSimple describes #/components/schemas/deployment-simple.
type DeploymentSimple struct {
	CreatedAt             time.Time              `json:"created_at"`
	Description           NilString              `json:"description"`
	Environment           string                 `json:"environment"`
	ID                    int                    `json:"id"`
	NodeID                string                 `json:"node_id"`
	OriginalEnvironment   OptString              `json:"original_environment"`
	PerformedViaGithubApp OptNullableIntegration `json:"performed_via_github_app"`
	ProductionEnvironment OptBool                `json:"production_environment"`
	RepositoryURL         url.URL                `json:"repository_url"`
	StatusesURL           url.URL                `json:"statuses_url"`
	Task                  string                 `json:"task"`
	TransientEnvironment  OptBool                `json:"transient_environment"`
	URL                   url.URL                `json:"url"`
	UpdatedAt             time.Time              `json:"updated_at"`
}

// DeploymentStatus describes #/components/schemas/deployment-status.
type DeploymentStatus struct {
	CreatedAt             time.Time              `json:"created_at"`
	Creator               NullableSimpleUser     `json:"creator"`
	DeploymentURL         url.URL                `json:"deployment_url"`
	Description           string                 `json:"description"`
	Environment           OptString              `json:"environment"`
	EnvironmentURL        OptURL                 `json:"environment_url"`
	ID                    int                    `json:"id"`
	LogURL                OptURL                 `json:"log_url"`
	NodeID                string                 `json:"node_id"`
	PerformedViaGithubApp OptNullableIntegration `json:"performed_via_github_app"`
	RepositoryURL         url.URL                `json:"repository_url"`
	State                 DeploymentStatusState  `json:"state"`
	TargetURL             url.URL                `json:"target_url"`
	URL                   url.URL                `json:"url"`
	UpdatedAt             time.Time              `json:"updated_at"`
}

func (*DeploymentStatus) reposGetDeploymentStatusRes() {}

// DiffEntry describes #/components/schemas/diff-entry.
type DiffEntry struct {
	Additions        int             `json:"additions"`
	BlobURL          url.URL         `json:"blob_url"`
	Changes          int             `json:"changes"`
	ContentsURL      url.URL         `json:"contents_url"`
	Deletions        int             `json:"deletions"`
	Filename         string          `json:"filename"`
	Patch            OptString       `json:"patch"`
	PreviousFilename OptString       `json:"previous_filename"`
	RawURL           url.URL         `json:"raw_url"`
	Sha              string          `json:"sha"`
	Status           DiffEntryStatus `json:"status"`
}

// Email describes #/components/schemas/email.
type Email struct {
	Email      string    `json:"email"`
	Primary    bool      `json:"primary"`
	Verified   bool      `json:"verified"`
	Visibility NilString `json:"visibility"`
}

// EmptyObject describes #/components/schemas/empty-object.
type EmptyObject struct{}

func (*EmptyObject) actionsApproveWorkflowRunRes()              {}
func (*EmptyObject) actionsCreateOrUpdateEnvironmentSecretRes() {}
func (*EmptyObject) actionsCreateOrUpdateOrgSecretRes()         {}
func (*EmptyObject) reposGetPagesHealthCheckRes()               {}

type EnabledOrganizations string

const (
	EnabledOrganizationsAll      EnabledOrganizations = "all"
	EnabledOrganizationsNone     EnabledOrganizations = "none"
	EnabledOrganizationsSelected EnabledOrganizations = "selected"
)

type EnabledRepositories string

const (
	EnabledRepositoriesAll      EnabledRepositories = "all"
	EnabledRepositoriesNone     EnabledRepositories = "none"
	EnabledRepositoriesSelected EnabledRepositories = "selected"
)

// EnvironmentApprovals describes #/components/schemas/environment-approvals.
type EnvironmentApprovals struct {
	Comment      string                                 `json:"comment"`
	Environments []EnvironmentApprovalsEnvironmentsItem `json:"environments"`
	State        EnvironmentApprovalsState              `json:"state"`
	User         SimpleUser                             `json:"user"`
}

// Feed describes #/components/schemas/feed.
type Feed struct {
	CurrentUserActorURL         OptString `json:"current_user_actor_url"`
	CurrentUserOrganizationURL  OptString `json:"current_user_organization_url"`
	CurrentUserOrganizationUrls []url.URL `json:"current_user_organization_urls"`
	CurrentUserPublicURL        OptString `json:"current_user_public_url"`
	CurrentUserURL              OptString `json:"current_user_url"`
	Links                       FeedLinks `json:"_links"`
	SecurityAdvisoriesURL       OptString `json:"security_advisories_url"`
	TimelineURL                 string    `json:"timeline_url"`
	UserURL                     string    `json:"user_url"`
}

// FileCommit describes #/components/schemas/file-commit.
type FileCommit struct {
	Commit  FileCommitCommit     `json:"commit"`
	Content NilFileCommitContent `json:"content"`
}

// FullRepository describes #/components/schemas/full-repository.
type FullRepository struct {
	AllowAutoMerge         OptBool                                 `json:"allow_auto_merge"`
	AllowForking           OptBool                                 `json:"allow_forking"`
	AllowMergeCommit       OptBool                                 `json:"allow_merge_commit"`
	AllowRebaseMerge       OptBool                                 `json:"allow_rebase_merge"`
	AllowSquashMerge       OptBool                                 `json:"allow_squash_merge"`
	AnonymousAccessEnabled OptBool                                 `json:"anonymous_access_enabled"`
	ArchiveURL             string                                  `json:"archive_url"`
	Archived               bool                                    `json:"archived"`
	AssigneesURL           string                                  `json:"assignees_url"`
	BlobsURL               string                                  `json:"blobs_url"`
	BranchesURL            string                                  `json:"branches_url"`
	CloneURL               string                                  `json:"clone_url"`
	CodeOfConduct          OptCodeOfConductSimple                  `json:"code_of_conduct"`
	CollaboratorsURL       string                                  `json:"collaborators_url"`
	CommentsURL            string                                  `json:"comments_url"`
	CommitsURL             string                                  `json:"commits_url"`
	CompareURL             string                                  `json:"compare_url"`
	ContentsURL            string                                  `json:"contents_url"`
	ContributorsURL        url.URL                                 `json:"contributors_url"`
	CreatedAt              time.Time                               `json:"created_at"`
	DefaultBranch          string                                  `json:"default_branch"`
	DeleteBranchOnMerge    OptBool                                 `json:"delete_branch_on_merge"`
	DeploymentsURL         url.URL                                 `json:"deployments_url"`
	Description            NilString                               `json:"description"`
	Disabled               bool                                    `json:"disabled"`
	DownloadsURL           url.URL                                 `json:"downloads_url"`
	EventsURL              url.URL                                 `json:"events_url"`
	Fork                   bool                                    `json:"fork"`
	Forks                  int                                     `json:"forks"`
	ForksCount             int                                     `json:"forks_count"`
	ForksURL               url.URL                                 `json:"forks_url"`
	FullName               string                                  `json:"full_name"`
	GitCommitsURL          string                                  `json:"git_commits_url"`
	GitRefsURL             string                                  `json:"git_refs_url"`
	GitTagsURL             string                                  `json:"git_tags_url"`
	GitURL                 string                                  `json:"git_url"`
	HTMLURL                url.URL                                 `json:"html_url"`
	HasDownloads           bool                                    `json:"has_downloads"`
	HasIssues              bool                                    `json:"has_issues"`
	HasPages               bool                                    `json:"has_pages"`
	HasProjects            bool                                    `json:"has_projects"`
	HasWiki                bool                                    `json:"has_wiki"`
	Homepage               NilURL                                  `json:"homepage"`
	HooksURL               url.URL                                 `json:"hooks_url"`
	ID                     int                                     `json:"id"`
	IsTemplate             OptBool                                 `json:"is_template"`
	IssueCommentURL        string                                  `json:"issue_comment_url"`
	IssueEventsURL         string                                  `json:"issue_events_url"`
	IssuesURL              string                                  `json:"issues_url"`
	KeysURL                string                                  `json:"keys_url"`
	LabelsURL              string                                  `json:"labels_url"`
	Language               NilString                               `json:"language"`
	LanguagesURL           url.URL                                 `json:"languages_url"`
	License                NullableLicenseSimple                   `json:"license"`
	MasterBranch           OptString                               `json:"master_branch"`
	MergesURL              url.URL                                 `json:"merges_url"`
	MilestonesURL          string                                  `json:"milestones_url"`
	MirrorURL              NilURL                                  `json:"mirror_url"`
	Name                   string                                  `json:"name"`
	NetworkCount           int                                     `json:"network_count"`
	NodeID                 string                                  `json:"node_id"`
	NotificationsURL       string                                  `json:"notifications_url"`
	OpenIssues             int                                     `json:"open_issues"`
	OpenIssuesCount        int                                     `json:"open_issues_count"`
	Organization           OptNullableSimpleUser                   `json:"organization"`
	Owner                  SimpleUser                              `json:"owner"`
	Parent                 OptRepository                           `json:"parent"`
	Permissions            OptFullRepositoryPermissions            `json:"permissions"`
	Private                bool                                    `json:"private"`
	PullsURL               string                                  `json:"pulls_url"`
	PushedAt               time.Time                               `json:"pushed_at"`
	ReleasesURL            string                                  `json:"releases_url"`
	SSHURL                 string                                  `json:"ssh_url"`
	SecurityAndAnalysis    OptNilFullRepositorySecurityAndAnalysis `json:"security_and_analysis"`
	Size                   int                                     `json:"size"`
	Source                 OptRepository                           `json:"source"`
	StargazersCount        int                                     `json:"stargazers_count"`
	StargazersURL          url.URL                                 `json:"stargazers_url"`
	StatusesURL            string                                  `json:"statuses_url"`
	SubscribersCount       int                                     `json:"subscribers_count"`
	SubscribersURL         url.URL                                 `json:"subscribers_url"`
	SubscriptionURL        url.URL                                 `json:"subscription_url"`
	SvnURL                 url.URL                                 `json:"svn_url"`
	TagsURL                url.URL                                 `json:"tags_url"`
	TeamsURL               url.URL                                 `json:"teams_url"`
	TempCloneToken         OptNilString                            `json:"temp_clone_token"`
	TemplateRepository     OptNullableRepository                   `json:"template_repository"`
	Topics                 []string                                `json:"topics"`
	TreesURL               string                                  `json:"trees_url"`
	URL                    url.URL                                 `json:"url"`
	UpdatedAt              time.Time                               `json:"updated_at"`
	Visibility             OptString                               `json:"visibility"`
	Watchers               int                                     `json:"watchers"`
	WatchersCount          int                                     `json:"watchers_count"`
}

func (*FullRepository) reposGetRes() {}

// GistComment describes #/components/schemas/gist-comment.
type GistComment struct {
	AuthorAssociation AuthorAssociation  `json:"author_association"`
	Body              string             `json:"body"`
	CreatedAt         time.Time          `json:"created_at"`
	ID                int                `json:"id"`
	NodeID            string             `json:"node_id"`
	URL               url.URL            `json:"url"`
	UpdatedAt         time.Time          `json:"updated_at"`
	User              NullableSimpleUser `json:"user"`
}

func (*GistComment) gistsCreateCommentRes() {}
func (*GistComment) gistsGetCommentRes()    {}
func (*GistComment) gistsUpdateCommentRes() {}

// GistCommit describes #/components/schemas/gist-commit.
type GistCommit struct {
	ChangeStatus GistCommitChangeStatus `json:"change_status"`
	CommittedAt  time.Time              `json:"committed_at"`
	URL          url.URL                `json:"url"`
	User         NullableSimpleUser     `json:"user"`
	Version      string                 `json:"version"`
}

// GitCommit describes #/components/schemas/git-commit.
type GitCommit struct {
	Author       GitCommitAuthor        `json:"author"`
	Committer    GitCommitCommitter     `json:"committer"`
	HTMLURL      url.URL                `json:"html_url"`
	Message      string                 `json:"message"`
	NodeID       string                 `json:"node_id"`
	Parents      []GitCommitParentsItem `json:"parents"`
	Sha          string                 `json:"sha"`
	Tree         GitCommitTree          `json:"tree"`
	URL          url.URL                `json:"url"`
	Verification GitCommitVerification  `json:"verification"`
}

func (*GitCommit) gitGetCommitRes() {}

// GitRef describes #/components/schemas/git-ref.
type GitRef struct {
	NodeID string       `json:"node_id"`
	Object GitRefObject `json:"object"`
	Ref    string       `json:"ref"`
	URL    url.URL      `json:"url"`
}

func (*GitRef) gitGetRefRes() {}

// GitTag describes #/components/schemas/git-tag.
type GitTag struct {
	Message      string          `json:"message"`
	NodeID       string          `json:"node_id"`
	Object       GitTagObject    `json:"object"`
	Sha          string          `json:"sha"`
	Tag          string          `json:"tag"`
	Tagger       GitTagTagger    `json:"tagger"`
	URL          url.URL         `json:"url"`
	Verification OptVerification `json:"verification"`
}

func (*GitTag) gitGetTagRes() {}

// GitTree describes #/components/schemas/git-tree.
type GitTree struct {
	Sha       string            `json:"sha"`
	Tree      []GitTreeTreeItem `json:"tree"`
	Truncated bool              `json:"truncated"`
	URL       url.URL           `json:"url"`
}

// GitignoreTemplate describes #/components/schemas/gitignore-template.
type GitignoreTemplate struct {
	Name   string `json:"name"`
	Source string `json:"source"`
}

func (*GitignoreTemplate) gitignoreGetTemplateRes() {}

// GpgKey describes #/components/schemas/gpg-key.
type GpgKey struct {
	CanCertify        bool                `json:"can_certify"`
	CanEncryptComms   bool                `json:"can_encrypt_comms"`
	CanEncryptStorage bool                `json:"can_encrypt_storage"`
	CanSign           bool                `json:"can_sign"`
	CreatedAt         time.Time           `json:"created_at"`
	Emails            []GpgKeyEmailsItem  `json:"emails"`
	ExpiresAt         NilTime             `json:"expires_at"`
	ID                int                 `json:"id"`
	KeyID             string              `json:"key_id"`
	PrimaryKeyID      NilInt              `json:"primary_key_id"`
	PublicKey         string              `json:"public_key"`
	RawKey            NilString           `json:"raw_key"`
	Subkeys           []GpgKeySubkeysItem `json:"subkeys"`
}

func (*GpgKey) usersGetGpgKeyForAuthenticatedRes() {}

// GroupMapping describes #/components/schemas/group-mapping.
type GroupMapping struct {
	Groups []GroupMappingGroupsItem `json:"groups"`
}

func (*GroupMapping) teamsListIdpGroupsForLegacyRes() {}

// HookDelivery describes #/components/schemas/hook-delivery.
type HookDelivery struct {
	Action         NilString            `json:"action"`
	DeliveredAt    time.Time            `json:"delivered_at"`
	Duration       float64              `json:"duration"`
	Event          string               `json:"event"`
	GUID           string               `json:"guid"`
	ID             int                  `json:"id"`
	InstallationID NilInt               `json:"installation_id"`
	Redelivery     bool                 `json:"redelivery"`
	RepositoryID   NilInt               `json:"repository_id"`
	Request        HookDeliveryRequest  `json:"request"`
	Response       HookDeliveryResponse `json:"response"`
	Status         string               `json:"status"`
	StatusCode     int                  `json:"status_code"`
	URL            OptString            `json:"url"`
}

// HookDeliveryItem describes #/components/schemas/hook-delivery-item.
type HookDeliveryItem struct {
	Action         NilString `json:"action"`
	DeliveredAt    time.Time `json:"delivered_at"`
	Duration       float64   `json:"duration"`
	Event          string    `json:"event"`
	GUID           string    `json:"guid"`
	ID             int       `json:"id"`
	InstallationID NilInt    `json:"installation_id"`
	Redelivery     bool      `json:"redelivery"`
	RepositoryID   NilInt    `json:"repository_id"`
	Status         string    `json:"status"`
	StatusCode     int       `json:"status_code"`
}

// Import describes #/components/schemas/import.
type Import struct {
	AuthorsCount    OptNilInt                  `json:"authors_count"`
	AuthorsURL      url.URL                    `json:"authors_url"`
	CommitCount     OptNilInt                  `json:"commit_count"`
	ErrorMessage    OptNilString               `json:"error_message"`
	FailedStep      OptNilString               `json:"failed_step"`
	HTMLURL         url.URL                    `json:"html_url"`
	HasLargeFiles   OptBool                    `json:"has_large_files"`
	ImportPercent   OptNilInt                  `json:"import_percent"`
	LargeFilesCount OptInt                     `json:"large_files_count"`
	LargeFilesSize  OptInt                     `json:"large_files_size"`
	Message         OptString                  `json:"message"`
	ProjectChoices  []ImportProjectChoicesItem `json:"project_choices"`
	PushPercent     OptNilInt                  `json:"push_percent"`
	RepositoryURL   url.URL                    `json:"repository_url"`
	Status          ImportStatus               `json:"status"`
	StatusText      OptNilString               `json:"status_text"`
	SvcRoot         OptString                  `json:"svc_root"`
	SvnRoot         OptString                  `json:"svn_root"`
	TfvcProject     OptString                  `json:"tfvc_project"`
	URL             url.URL                    `json:"url"`
	UseLfs          OptBool                    `json:"use_lfs"`
	Vcs             NilString                  `json:"vcs"`
	VcsURL          string                     `json:"vcs_url"`
}

func (*Import) migrationsGetImportStatusRes() {}

// InstallationToken describes #/components/schemas/installation-token.
type InstallationToken struct {
	ExpiresAt              string                                  `json:"expires_at"`
	HasMultipleSingleFiles OptBool                                 `json:"has_multiple_single_files"`
	Permissions            OptAppPermissions                       `json:"permissions"`
	Repositories           []Repository                            `json:"repositories"`
	RepositorySelection    OptInstallationTokenRepositorySelection `json:"repository_selection"`
	SingleFile             OptString                               `json:"single_file"`
	SingleFilePaths        []string                                `json:"single_file_paths"`
	Token                  string                                  `json:"token"`
}

// Integration describes #/components/schemas/integration.
type Integration struct {
	ClientID           OptString              `json:"client_id"`
	ClientSecret       OptString              `json:"client_secret"`
	CreatedAt          time.Time              `json:"created_at"`
	Description        NilString              `json:"description"`
	Events             []string               `json:"events"`
	ExternalURL        url.URL                `json:"external_url"`
	HTMLURL            url.URL                `json:"html_url"`
	ID                 int                    `json:"id"`
	InstallationsCount OptInt                 `json:"installations_count"`
	Name               string                 `json:"name"`
	NodeID             string                 `json:"node_id"`
	Owner              NullableSimpleUser     `json:"owner"`
	Pem                OptString              `json:"pem"`
	Permissions        IntegrationPermissions `json:"permissions"`
	Slug               OptString              `json:"slug"`
	UpdatedAt          time.Time              `json:"updated_at"`
	WebhookSecret      OptNilString           `json:"webhook_secret"`
}

func (*Integration) appsGetBySlugRes() {}

type InteractionExpiry string

const (
	InteractionExpiryOneDay    InteractionExpiry = "one_day"
	InteractionExpiryThreeDays InteractionExpiry = "three_days"
	InteractionExpiryOneWeek   InteractionExpiry = "one_week"
	InteractionExpiryOneMonth  InteractionExpiry = "one_month"
	InteractionExpirySixMonths InteractionExpiry = "six_months"
)

type InteractionGroup string

const (
	InteractionGroupExistingUsers     InteractionGroup = "existing_users"
	InteractionGroupContributorsOnly  InteractionGroup = "contributors_only"
	InteractionGroupCollaboratorsOnly InteractionGroup = "collaborators_only"
)

// InteractionLimit describes #/components/schemas/interaction-limit.
type InteractionLimit struct {
	Expiry OptInteractionExpiry `json:"expiry"`
	Limit  InteractionGroup     `json:"limit"`
}

func (*InteractionLimit) interactionsSetRestrictionsForAuthenticatedUserReq() {}
func (*InteractionLimit) interactionsSetRestrictionsForOrgReq()               {}

// InteractionLimitResponse describes #/components/schemas/interaction-limit-response.
type InteractionLimitResponse struct {
	ExpiresAt time.Time        `json:"expires_at"`
	Limit     InteractionGroup `json:"limit"`
	Origin    string           `json:"origin"`
}

func (*InteractionLimitResponse) interactionsSetRestrictionsForRepoRes() {}

// IssueComment describes #/components/schemas/issue-comment.
type IssueComment struct {
	AuthorAssociation     AuthorAssociation      `json:"author_association"`
	Body                  OptString              `json:"body"`
	BodyHTML              OptString              `json:"body_html"`
	BodyText              OptString              `json:"body_text"`
	CreatedAt             time.Time              `json:"created_at"`
	HTMLURL               url.URL                `json:"html_url"`
	ID                    int                    `json:"id"`
	IssueURL              url.URL                `json:"issue_url"`
	NodeID                string                 `json:"node_id"`
	PerformedViaGithubApp OptNullableIntegration `json:"performed_via_github_app"`
	Reactions             OptReactionRollup      `json:"reactions"`
	URL                   url.URL                `json:"url"`
	UpdatedAt             time.Time              `json:"updated_at"`
	User                  NullableSimpleUser     `json:"user"`
}

func (*IssueComment) issuesGetCommentRes() {}

// Job describes #/components/schemas/job.
type Job struct {
	CheckRunURL string         `json:"check_run_url"`
	CompletedAt NilTime        `json:"completed_at"`
	Conclusion  NilString      `json:"conclusion"`
	HTMLURL     NilString      `json:"html_url"`
	HeadSha     string         `json:"head_sha"`
	ID          int            `json:"id"`
	Name        string         `json:"name"`
	NodeID      string         `json:"node_id"`
	RunID       int            `json:"run_id"`
	RunURL      string         `json:"run_url"`
	StartedAt   time.Time      `json:"started_at"`
	Status      JobStatus      `json:"status"`
	Steps       []JobStepsItem `json:"steps"`
	URL         string         `json:"url"`
}

// Key describes #/components/schemas/key.
type Key struct {
	CreatedAt time.Time `json:"created_at"`
	ID        int       `json:"id"`
	Key       string    `json:"key"`
	ReadOnly  bool      `json:"read_only"`
	Title     string    `json:"title"`
	URL       string    `json:"url"`
	Verified  bool      `json:"verified"`
}

func (*Key) usersGetPublicSSHKeyForAuthenticatedRes() {}

// KeySimple describes #/components/schemas/key-simple.
type KeySimple struct {
	ID  int    `json:"id"`
	Key string `json:"key"`
}

// Label describes #/components/schemas/label.
type Label struct {
	Color       string    `json:"color"`
	Default     bool      `json:"default"`
	Description NilString `json:"description"`
	ID          int64     `json:"id"`
	Name        string    `json:"name"`
	NodeID      string    `json:"node_id"`
	URL         url.URL   `json:"url"`
}

func (*Label) issuesGetLabelRes() {}

// Language describes #/components/schemas/language.
type Language struct{}

// License describes #/components/schemas/license.
type License struct {
	Body           string    `json:"body"`
	Conditions     []string  `json:"conditions"`
	Description    string    `json:"description"`
	Featured       bool      `json:"featured"`
	HTMLURL        url.URL   `json:"html_url"`
	Implementation string    `json:"implementation"`
	Key            string    `json:"key"`
	Limitations    []string  `json:"limitations"`
	Name           string    `json:"name"`
	NodeID         string    `json:"node_id"`
	Permissions    []string  `json:"permissions"`
	SpdxID         NilString `json:"spdx_id"`
	URL            NilURL    `json:"url"`
}

func (*License) licensesGetRes() {}

// LicenseContent describes #/components/schemas/license-content.
type LicenseContent struct {
	Content     string                `json:"content"`
	DownloadURL NilURL                `json:"download_url"`
	Encoding    string                `json:"encoding"`
	GitURL      NilURL                `json:"git_url"`
	HTMLURL     NilURL                `json:"html_url"`
	License     NullableLicenseSimple `json:"license"`
	Links       LicenseContentLinks   `json:"_links"`
	Name        string                `json:"name"`
	Path        string                `json:"path"`
	Sha         string                `json:"sha"`
	Size        int                   `json:"size"`
	Type        string                `json:"type"`
	URL         url.URL               `json:"url"`
}

// LicenseSimple describes #/components/schemas/license-simple.
type LicenseSimple struct {
	HTMLURL OptURL    `json:"html_url"`
	Key     string    `json:"key"`
	Name    string    `json:"name"`
	NodeID  string    `json:"node_id"`
	SpdxID  NilString `json:"spdx_id"`
	URL     NilURL    `json:"url"`
}

// Link describes #/components/schemas/link.
type Link struct {
	Href string `json:"href"`
}

// LinkWithType describes #/components/schemas/link-with-type.
type LinkWithType struct {
	Href string `json:"href"`
	Type string `json:"type"`
}

// MarketplaceAccount describes #/components/schemas/marketplace-account.
type MarketplaceAccount struct {
	Email                    OptNilString `json:"email"`
	ID                       int          `json:"id"`
	Login                    string       `json:"login"`
	NodeID                   OptString    `json:"node_id"`
	OrganizationBillingEmail OptNilString `json:"organization_billing_email"`
	Type                     string       `json:"type"`
	URL                      url.URL      `json:"url"`
}

// MarketplaceListingPlan describes #/components/schemas/marketplace-listing-plan.
type MarketplaceListingPlan struct {
	AccountsURL         url.URL   `json:"accounts_url"`
	Bullets             []string  `json:"bullets"`
	Description         string    `json:"description"`
	HasFreeTrial        bool      `json:"has_free_trial"`
	ID                  int       `json:"id"`
	MonthlyPriceInCents int       `json:"monthly_price_in_cents"`
	Name                string    `json:"name"`
	Number              int       `json:"number"`
	PriceModel          string    `json:"price_model"`
	State               string    `json:"state"`
	URL                 url.URL   `json:"url"`
	UnitName            NilString `json:"unit_name"`
	YearlyPriceInCents  int       `json:"yearly_price_in_cents"`
}

// MarketplacePurchase describes #/components/schemas/marketplace-purchase.
type MarketplacePurchase struct {
	Email                    OptNilString                                      `json:"email"`
	ID                       int                                               `json:"id"`
	Login                    string                                            `json:"login"`
	MarketplacePendingChange OptNilMarketplacePurchaseMarketplacePendingChange `json:"marketplace_pending_change"`
	MarketplacePurchase      MarketplacePurchaseMarketplacePurchase            `json:"marketplace_purchase"`
	OrganizationBillingEmail OptString                                         `json:"organization_billing_email"`
	Type                     string                                            `json:"type"`
	URL                      string                                            `json:"url"`
}

func (*MarketplacePurchase) appsGetSubscriptionPlanForAccountRes()        {}
func (*MarketplacePurchase) appsGetSubscriptionPlanForAccountStubbedRes() {}

// MergedUpstream describes #/components/schemas/merged-upstream.
type MergedUpstream struct {
	BaseBranch OptString                  `json:"base_branch"`
	MergeType  OptMergedUpstreamMergeType `json:"merge_type"`
	Message    OptString                  `json:"message"`
}

func (*MergedUpstream) reposMergeUpstreamRes() {}

// Migration describes #/components/schemas/migration.
type Migration struct {
	ArchiveURL           OptURL             `json:"archive_url"`
	CreatedAt            time.Time          `json:"created_at"`
	Exclude              []string           `json:"exclude"`
	ExcludeAttachments   bool               `json:"exclude_attachments"`
	ExcludeGitData       bool               `json:"exclude_git_data"`
	ExcludeMetadata      bool               `json:"exclude_metadata"`
	ExcludeOwnerProjects bool               `json:"exclude_owner_projects"`
	ExcludeReleases      bool               `json:"exclude_releases"`
	GUID                 string             `json:"guid"`
	ID                   int                `json:"id"`
	LockRepositories     bool               `json:"lock_repositories"`
	NodeID               string             `json:"node_id"`
	Owner                NullableSimpleUser `json:"owner"`
	Repositories         []Repository       `json:"repositories"`
	State                string             `json:"state"`
	URL                  url.URL            `json:"url"`
	UpdatedAt            time.Time          `json:"updated_at"`
}

func (*Migration) migrationsGetStatusForAuthenticatedUserRes() {}

// Milestone describes #/components/schemas/milestone.
type Milestone struct {
	ClosedAt     NilTime            `json:"closed_at"`
	ClosedIssues int                `json:"closed_issues"`
	CreatedAt    time.Time          `json:"created_at"`
	Creator      NullableSimpleUser `json:"creator"`
	Description  NilString          `json:"description"`
	DueOn        NilTime            `json:"due_on"`
	HTMLURL      url.URL            `json:"html_url"`
	ID           int                `json:"id"`
	LabelsURL    url.URL            `json:"labels_url"`
	NodeID       string             `json:"node_id"`
	Number       int                `json:"number"`
	OpenIssues   int                `json:"open_issues"`
	State        MilestoneState     `json:"state"`
	Title        string             `json:"title"`
	URL          url.URL            `json:"url"`
	UpdatedAt    time.Time          `json:"updated_at"`
}

func (*Milestone) issuesGetMilestoneRes() {}

// MinimalRepository describes #/components/schemas/minimal-repository.
type MinimalRepository struct {
	AllowForking        OptBool                         `json:"allow_forking"`
	ArchiveURL          string                          `json:"archive_url"`
	Archived            OptBool                         `json:"archived"`
	AssigneesURL        string                          `json:"assignees_url"`
	BlobsURL            string                          `json:"blobs_url"`
	BranchesURL         string                          `json:"branches_url"`
	CloneURL            OptString                       `json:"clone_url"`
	CodeOfConduct       OptCodeOfConduct                `json:"code_of_conduct"`
	CollaboratorsURL    string                          `json:"collaborators_url"`
	CommentsURL         string                          `json:"comments_url"`
	CommitsURL          string                          `json:"commits_url"`
	CompareURL          string                          `json:"compare_url"`
	ContentsURL         string                          `json:"contents_url"`
	ContributorsURL     url.URL                         `json:"contributors_url"`
	CreatedAt           OptNilTime                      `json:"created_at"`
	DefaultBranch       OptString                       `json:"default_branch"`
	DeleteBranchOnMerge OptBool                         `json:"delete_branch_on_merge"`
	DeploymentsURL      url.URL                         `json:"deployments_url"`
	Description         NilString                       `json:"description"`
	Disabled            OptBool                         `json:"disabled"`
	DownloadsURL        url.URL                         `json:"downloads_url"`
	EventsURL           url.URL                         `json:"events_url"`
	Fork                bool                            `json:"fork"`
	Forks               OptInt                          `json:"forks"`
	ForksCount          OptInt                          `json:"forks_count"`
	ForksURL            url.URL                         `json:"forks_url"`
	FullName            string                          `json:"full_name"`
	GitCommitsURL       string                          `json:"git_commits_url"`
	GitRefsURL          string                          `json:"git_refs_url"`
	GitTagsURL          string                          `json:"git_tags_url"`
	GitURL              OptString                       `json:"git_url"`
	HTMLURL             url.URL                         `json:"html_url"`
	HasDownloads        OptBool                         `json:"has_downloads"`
	HasIssues           OptBool                         `json:"has_issues"`
	HasPages            OptBool                         `json:"has_pages"`
	HasProjects         OptBool                         `json:"has_projects"`
	HasWiki             OptBool                         `json:"has_wiki"`
	Homepage            OptNilString                    `json:"homepage"`
	HooksURL            url.URL                         `json:"hooks_url"`
	ID                  int                             `json:"id"`
	IsTemplate          OptBool                         `json:"is_template"`
	IssueCommentURL     string                          `json:"issue_comment_url"`
	IssueEventsURL      string                          `json:"issue_events_url"`
	IssuesURL           string                          `json:"issues_url"`
	KeysURL             string                          `json:"keys_url"`
	LabelsURL           string                          `json:"labels_url"`
	Language            OptNilString                    `json:"language"`
	LanguagesURL        url.URL                         `json:"languages_url"`
	License             OptNilMinimalRepositoryLicense  `json:"license"`
	MergesURL           url.URL                         `json:"merges_url"`
	MilestonesURL       string                          `json:"milestones_url"`
	MirrorURL           OptNilString                    `json:"mirror_url"`
	Name                string                          `json:"name"`
	NetworkCount        OptInt                          `json:"network_count"`
	NodeID              string                          `json:"node_id"`
	NotificationsURL    string                          `json:"notifications_url"`
	OpenIssues          OptInt                          `json:"open_issues"`
	OpenIssuesCount     OptInt                          `json:"open_issues_count"`
	Owner               SimpleUser                      `json:"owner"`
	Permissions         OptMinimalRepositoryPermissions `json:"permissions"`
	Private             bool                            `json:"private"`
	PullsURL            string                          `json:"pulls_url"`
	PushedAt            OptNilTime                      `json:"pushed_at"`
	ReleasesURL         string                          `json:"releases_url"`
	SSHURL              OptString                       `json:"ssh_url"`
	Size                OptInt                          `json:"size"`
	StargazersCount     OptInt                          `json:"stargazers_count"`
	StargazersURL       url.URL                         `json:"stargazers_url"`
	StatusesURL         string                          `json:"statuses_url"`
	SubscribersCount    OptInt                          `json:"subscribers_count"`
	SubscribersURL      url.URL                         `json:"subscribers_url"`
	SubscriptionURL     url.URL                         `json:"subscription_url"`
	SvnURL              OptString                       `json:"svn_url"`
	TagsURL             url.URL                         `json:"tags_url"`
	TeamsURL            url.URL                         `json:"teams_url"`
	TempCloneToken      OptString                       `json:"temp_clone_token"`
	TemplateRepository  OptNullableRepository           `json:"template_repository"`
	Topics              []string                        `json:"topics"`
	TreesURL            string                          `json:"trees_url"`
	URL                 url.URL                         `json:"url"`
	UpdatedAt           OptNilTime                      `json:"updated_at"`
	Visibility          OptString                       `json:"visibility"`
	Watchers            OptInt                          `json:"watchers"`
	WatchersCount       OptInt                          `json:"watchers_count"`
}

// NullableCodeOfConductSimple describes #/components/schemas/nullable-code-of-conduct-simple.
type NullableCodeOfConductSimple struct {
	HTMLURL NilURL  `json:"html_url"`
	Key     string  `json:"key"`
	Name    string  `json:"name"`
	URL     url.URL `json:"url"`
}

// NullableCommunityHealthFile describes #/components/schemas/nullable-community-health-file.
type NullableCommunityHealthFile struct {
	HTMLURL url.URL `json:"html_url"`
	URL     url.URL `json:"url"`
}

// NullableGitUser describes #/components/schemas/nullable-git-user.
type NullableGitUser struct {
	Date  OptString `json:"date"`
	Email OptString `json:"email"`
	Name  OptString `json:"name"`
}

// NullableIntegration describes #/components/schemas/nullable-integration.
type NullableIntegration struct {
	ClientID           OptString                      `json:"client_id"`
	ClientSecret       OptString                      `json:"client_secret"`
	CreatedAt          time.Time                      `json:"created_at"`
	Description        NilString                      `json:"description"`
	Events             []string                       `json:"events"`
	ExternalURL        url.URL                        `json:"external_url"`
	HTMLURL            url.URL                        `json:"html_url"`
	ID                 int                            `json:"id"`
	InstallationsCount OptInt                         `json:"installations_count"`
	Name               string                         `json:"name"`
	NodeID             string                         `json:"node_id"`
	Owner              NullableSimpleUser             `json:"owner"`
	Pem                OptString                      `json:"pem"`
	Permissions        NullableIntegrationPermissions `json:"permissions"`
	Slug               OptString                      `json:"slug"`
	UpdatedAt          time.Time                      `json:"updated_at"`
	WebhookSecret      OptNilString                   `json:"webhook_secret"`
}

// NullableLicenseSimple describes #/components/schemas/nullable-license-simple.
type NullableLicenseSimple struct {
	HTMLURL OptURL    `json:"html_url"`
	Key     string    `json:"key"`
	Name    string    `json:"name"`
	NodeID  string    `json:"node_id"`
	SpdxID  NilString `json:"spdx_id"`
	URL     NilURL    `json:"url"`
}

// NullableRepository describes #/components/schemas/nullable-repository.
type NullableRepository struct {
	AllowAutoMerge      OptBool                                    `json:"allow_auto_merge"`
	AllowForking        OptBool                                    `json:"allow_forking"`
	AllowMergeCommit    OptBool                                    `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                                    `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                                    `json:"allow_squash_merge"`
	ArchiveURL          string                                     `json:"archive_url"`
	Archived            bool                                       `json:"archived"`
	AssigneesURL        string                                     `json:"assignees_url"`
	BlobsURL            string                                     `json:"blobs_url"`
	BranchesURL         string                                     `json:"branches_url"`
	CloneURL            string                                     `json:"clone_url"`
	CollaboratorsURL    string                                     `json:"collaborators_url"`
	CommentsURL         string                                     `json:"comments_url"`
	CommitsURL          string                                     `json:"commits_url"`
	CompareURL          string                                     `json:"compare_url"`
	ContentsURL         string                                     `json:"contents_url"`
	ContributorsURL     url.URL                                    `json:"contributors_url"`
	CreatedAt           NilTime                                    `json:"created_at"`
	DefaultBranch       string                                     `json:"default_branch"`
	DeleteBranchOnMerge OptBool                                    `json:"delete_branch_on_merge"`
	DeploymentsURL      url.URL                                    `json:"deployments_url"`
	Description         NilString                                  `json:"description"`
	Disabled            bool                                       `json:"disabled"`
	DownloadsURL        url.URL                                    `json:"downloads_url"`
	EventsURL           url.URL                                    `json:"events_url"`
	Fork                bool                                       `json:"fork"`
	Forks               int                                        `json:"forks"`
	ForksCount          int                                        `json:"forks_count"`
	ForksURL            url.URL                                    `json:"forks_url"`
	FullName            string                                     `json:"full_name"`
	GitCommitsURL       string                                     `json:"git_commits_url"`
	GitRefsURL          string                                     `json:"git_refs_url"`
	GitTagsURL          string                                     `json:"git_tags_url"`
	GitURL              string                                     `json:"git_url"`
	HTMLURL             url.URL                                    `json:"html_url"`
	HasDownloads        bool                                       `json:"has_downloads"`
	HasIssues           bool                                       `json:"has_issues"`
	HasPages            bool                                       `json:"has_pages"`
	HasProjects         bool                                       `json:"has_projects"`
	HasWiki             bool                                       `json:"has_wiki"`
	Homepage            NilURL                                     `json:"homepage"`
	HooksURL            url.URL                                    `json:"hooks_url"`
	ID                  int                                        `json:"id"`
	IsTemplate          OptBool                                    `json:"is_template"`
	IssueCommentURL     string                                     `json:"issue_comment_url"`
	IssueEventsURL      string                                     `json:"issue_events_url"`
	IssuesURL           string                                     `json:"issues_url"`
	KeysURL             string                                     `json:"keys_url"`
	LabelsURL           string                                     `json:"labels_url"`
	Language            NilString                                  `json:"language"`
	LanguagesURL        url.URL                                    `json:"languages_url"`
	License             NullableLicenseSimple                      `json:"license"`
	MasterBranch        OptString                                  `json:"master_branch"`
	MergesURL           url.URL                                    `json:"merges_url"`
	MilestonesURL       string                                     `json:"milestones_url"`
	MirrorURL           NilURL                                     `json:"mirror_url"`
	Name                string                                     `json:"name"`
	NetworkCount        OptInt                                     `json:"network_count"`
	NodeID              string                                     `json:"node_id"`
	NotificationsURL    string                                     `json:"notifications_url"`
	OpenIssues          int                                        `json:"open_issues"`
	OpenIssuesCount     int                                        `json:"open_issues_count"`
	Organization        OptNullableSimpleUser                      `json:"organization"`
	Owner               SimpleUser                                 `json:"owner"`
	Permissions         OptNullableRepositoryPermissions           `json:"permissions"`
	Private             bool                                       `json:"private"`
	PullsURL            string                                     `json:"pulls_url"`
	PushedAt            NilTime                                    `json:"pushed_at"`
	ReleasesURL         string                                     `json:"releases_url"`
	SSHURL              string                                     `json:"ssh_url"`
	Size                int                                        `json:"size"`
	StargazersCount     int                                        `json:"stargazers_count"`
	StargazersURL       url.URL                                    `json:"stargazers_url"`
	StarredAt           OptString                                  `json:"starred_at"`
	StatusesURL         string                                     `json:"statuses_url"`
	SubscribersCount    OptInt                                     `json:"subscribers_count"`
	SubscribersURL      url.URL                                    `json:"subscribers_url"`
	SubscriptionURL     url.URL                                    `json:"subscription_url"`
	SvnURL              url.URL                                    `json:"svn_url"`
	TagsURL             url.URL                                    `json:"tags_url"`
	TeamsURL            url.URL                                    `json:"teams_url"`
	TempCloneToken      OptString                                  `json:"temp_clone_token"`
	TemplateRepository  OptNilNullableRepositoryTemplateRepository `json:"template_repository"`
	Topics              []string                                   `json:"topics"`
	TreesURL            string                                     `json:"trees_url"`
	URL                 url.URL                                    `json:"url"`
	UpdatedAt           NilTime                                    `json:"updated_at"`
	Visibility          OptString                                  `json:"visibility"`
	Watchers            int                                        `json:"watchers"`
	WatchersCount       int                                        `json:"watchers_count"`
}

// NullableScopedInstallation describes #/components/schemas/nullable-scoped-installation.
type NullableScopedInstallation struct {
	Account                SimpleUser                                    `json:"account"`
	HasMultipleSingleFiles OptBool                                       `json:"has_multiple_single_files"`
	Permissions            AppPermissions                                `json:"permissions"`
	RepositoriesURL        url.URL                                       `json:"repositories_url"`
	RepositorySelection    NullableScopedInstallationRepositorySelection `json:"repository_selection"`
	SingleFileName         NilString                                     `json:"single_file_name"`
	SingleFilePaths        []string                                      `json:"single_file_paths"`
}

// NullableSimpleCommit describes #/components/schemas/nullable-simple-commit.
type NullableSimpleCommit struct {
	Author    NilNullableSimpleCommitAuthor    `json:"author"`
	Committer NilNullableSimpleCommitCommitter `json:"committer"`
	ID        string                           `json:"id"`
	Message   string                           `json:"message"`
	Timestamp time.Time                        `json:"timestamp"`
	TreeID    string                           `json:"tree_id"`
}

// NullableSimpleUser describes #/components/schemas/nullable-simple-user.
type NullableSimpleUser struct {
	AvatarURL         url.URL      `json:"avatar_url"`
	Email             OptNilString `json:"email"`
	EventsURL         string       `json:"events_url"`
	FollowersURL      url.URL      `json:"followers_url"`
	FollowingURL      string       `json:"following_url"`
	GistsURL          string       `json:"gists_url"`
	GravatarID        NilString    `json:"gravatar_id"`
	HTMLURL           url.URL      `json:"html_url"`
	ID                int          `json:"id"`
	Login             string       `json:"login"`
	Name              OptNilString `json:"name"`
	NodeID            string       `json:"node_id"`
	OrganizationsURL  url.URL      `json:"organizations_url"`
	ReceivedEventsURL url.URL      `json:"received_events_url"`
	ReposURL          url.URL      `json:"repos_url"`
	SiteAdmin         bool         `json:"site_admin"`
	StarredAt         OptString    `json:"starred_at"`
	StarredURL        string       `json:"starred_url"`
	SubscriptionsURL  url.URL      `json:"subscriptions_url"`
	Type              string       `json:"type"`
	URL               url.URL      `json:"url"`
}

// NullableTeamSimple describes #/components/schemas/nullable-team-simple.
type NullableTeamSimple struct {
	Description     NilString `json:"description"`
	HTMLURL         url.URL   `json:"html_url"`
	ID              int       `json:"id"`
	LdapDn          OptString `json:"ldap_dn"`
	MembersURL      string    `json:"members_url"`
	Name            string    `json:"name"`
	NodeID          string    `json:"node_id"`
	Permission      string    `json:"permission"`
	Privacy         OptString `json:"privacy"`
	RepositoriesURL url.URL   `json:"repositories_url"`
	Slug            string    `json:"slug"`
	URL             url.URL   `json:"url"`
}

// OrgHook describes #/components/schemas/org-hook.
type OrgHook struct {
	Active        bool          `json:"active"`
	Config        OrgHookConfig `json:"config"`
	CreatedAt     time.Time     `json:"created_at"`
	DeliveriesURL OptURL        `json:"deliveries_url"`
	Events        []string      `json:"events"`
	ID            int           `json:"id"`
	Name          string        `json:"name"`
	PingURL       url.URL       `json:"ping_url"`
	Type          string        `json:"type"`
	URL           url.URL       `json:"url"`
	UpdatedAt     time.Time     `json:"updated_at"`
}

func (*OrgHook) orgsGetWebhookRes() {}

// OrgMembership describes #/components/schemas/org-membership.
type OrgMembership struct {
	Organization    OrganizationSimple          `json:"organization"`
	OrganizationURL url.URL                     `json:"organization_url"`
	Permissions     OptOrgMembershipPermissions `json:"permissions"`
	Role            OrgMembershipRole           `json:"role"`
	State           OrgMembershipState          `json:"state"`
	URL             url.URL                     `json:"url"`
	User            NullableSimpleUser          `json:"user"`
}

func (*OrgMembership) orgsGetMembershipForAuthenticatedUserRes() {}
func (*OrgMembership) orgsGetMembershipForUserRes()              {}

// OrganizationActionsSecret describes #/components/schemas/organization-actions-secret.
type OrganizationActionsSecret struct {
	CreatedAt               time.Time                           `json:"created_at"`
	Name                    string                              `json:"name"`
	SelectedRepositoriesURL OptURL                              `json:"selected_repositories_url"`
	UpdatedAt               time.Time                           `json:"updated_at"`
	Visibility              OrganizationActionsSecretVisibility `json:"visibility"`
}

// OrganizationFull describes #/components/schemas/organization-full.
type OrganizationFull struct {
	AvatarURL                            string                  `json:"avatar_url"`
	BillingEmail                         OptNilString            `json:"billing_email"`
	Blog                                 OptURL                  `json:"blog"`
	Collaborators                        OptNilInt               `json:"collaborators"`
	Company                              OptString               `json:"company"`
	CreatedAt                            time.Time               `json:"created_at"`
	DefaultRepositoryPermission          OptNilString            `json:"default_repository_permission"`
	Description                          NilString               `json:"description"`
	DiskUsage                            OptNilInt               `json:"disk_usage"`
	Email                                OptString               `json:"email"`
	EventsURL                            url.URL                 `json:"events_url"`
	Followers                            int                     `json:"followers"`
	Following                            int                     `json:"following"`
	HTMLURL                              url.URL                 `json:"html_url"`
	HasOrganizationProjects              bool                    `json:"has_organization_projects"`
	HasRepositoryProjects                bool                    `json:"has_repository_projects"`
	HooksURL                             string                  `json:"hooks_url"`
	ID                                   int                     `json:"id"`
	IsVerified                           OptBool                 `json:"is_verified"`
	IssuesURL                            string                  `json:"issues_url"`
	Location                             OptString               `json:"location"`
	Login                                string                  `json:"login"`
	MembersAllowedRepositoryCreationType OptString               `json:"members_allowed_repository_creation_type"`
	MembersCanCreateInternalRepositories OptBool                 `json:"members_can_create_internal_repositories"`
	MembersCanCreatePages                OptBool                 `json:"members_can_create_pages"`
	MembersCanCreatePrivatePages         OptBool                 `json:"members_can_create_private_pages"`
	MembersCanCreatePrivateRepositories  OptBool                 `json:"members_can_create_private_repositories"`
	MembersCanCreatePublicPages          OptBool                 `json:"members_can_create_public_pages"`
	MembersCanCreatePublicRepositories   OptBool                 `json:"members_can_create_public_repositories"`
	MembersCanCreateRepositories         OptNilBool              `json:"members_can_create_repositories"`
	MembersURL                           string                  `json:"members_url"`
	Name                                 OptString               `json:"name"`
	NodeID                               string                  `json:"node_id"`
	OwnedPrivateRepos                    OptInt                  `json:"owned_private_repos"`
	Plan                                 OptOrganizationFullPlan `json:"plan"`
	PrivateGists                         OptNilInt               `json:"private_gists"`
	PublicGists                          int                     `json:"public_gists"`
	PublicMembersURL                     string                  `json:"public_members_url"`
	PublicRepos                          int                     `json:"public_repos"`
	ReposURL                             url.URL                 `json:"repos_url"`
	TotalPrivateRepos                    OptInt                  `json:"total_private_repos"`
	TwitterUsername                      OptNilString            `json:"twitter_username"`
	TwoFactorRequirementEnabled          OptNilBool              `json:"two_factor_requirement_enabled"`
	Type                                 string                  `json:"type"`
	URL                                  url.URL                 `json:"url"`
	UpdatedAt                            time.Time               `json:"updated_at"`
}

func (*OrganizationFull) orgsGetRes() {}

// OrganizationInvitation describes #/components/schemas/organization-invitation.
type OrganizationInvitation struct {
	CreatedAt          string       `json:"created_at"`
	Email              NilString    `json:"email"`
	FailedAt           OptNilString `json:"failed_at"`
	FailedReason       OptNilString `json:"failed_reason"`
	ID                 int          `json:"id"`
	InvitationTeamsURL string       `json:"invitation_teams_url"`
	Inviter            SimpleUser   `json:"inviter"`
	Login              NilString    `json:"login"`
	NodeID             string       `json:"node_id"`
	Role               string       `json:"role"`
	TeamCount          int          `json:"team_count"`
}

// OrganizationSimple describes #/components/schemas/organization-simple.
type OrganizationSimple struct {
	AvatarURL        string    `json:"avatar_url"`
	Description      NilString `json:"description"`
	EventsURL        url.URL   `json:"events_url"`
	HooksURL         string    `json:"hooks_url"`
	ID               int       `json:"id"`
	IssuesURL        string    `json:"issues_url"`
	Login            string    `json:"login"`
	MembersURL       string    `json:"members_url"`
	NodeID           string    `json:"node_id"`
	PublicMembersURL string    `json:"public_members_url"`
	ReposURL         url.URL   `json:"repos_url"`
	URL              url.URL   `json:"url"`
}

// PackagesBillingUsage describes #/components/schemas/packages-billing-usage.
type PackagesBillingUsage struct {
	IncludedGigabytesBandwidth      int `json:"included_gigabytes_bandwidth"`
	TotalGigabytesBandwidthUsed     int `json:"total_gigabytes_bandwidth_used"`
	TotalPaidGigabytesBandwidthUsed int `json:"total_paid_gigabytes_bandwidth_used"`
}

// Page describes #/components/schemas/page.
type Page struct {
	Cname                     NilString                      `json:"cname"`
	Custom404                 bool                           `json:"custom_404"`
	HTMLURL                   OptURL                         `json:"html_url"`
	HTTPSCertificate          OptPagesHTTPSCertificate       `json:"https_certificate"`
	HTTPSEnforced             OptBool                        `json:"https_enforced"`
	PendingDomainUnverifiedAt OptNilTime                     `json:"pending_domain_unverified_at"`
	ProtectedDomainState      OptNilPageProtectedDomainState `json:"protected_domain_state"`
	Public                    bool                           `json:"public"`
	Source                    OptPagesSourceHash             `json:"source"`
	Status                    NilPageStatus                  `json:"status"`
	URL                       url.URL                        `json:"url"`
}

func (*Page) reposGetPagesRes() {}

// PageBuild describes #/components/schemas/page-build.
type PageBuild struct {
	Commit    string             `json:"commit"`
	CreatedAt time.Time          `json:"created_at"`
	Duration  int                `json:"duration"`
	Error     PageBuildError     `json:"error"`
	Pusher    NullableSimpleUser `json:"pusher"`
	Status    string             `json:"status"`
	URL       url.URL            `json:"url"`
	UpdatedAt time.Time          `json:"updated_at"`
}

// PageBuildStatus describes #/components/schemas/page-build-status.
type PageBuildStatus struct {
	Status string  `json:"status"`
	URL    url.URL `json:"url"`
}

// PagesHealthCheck describes #/components/schemas/pages-health-check.
type PagesHealthCheck struct {
	AltDomain OptNilPagesHealthCheckAltDomain `json:"alt_domain"`
	Domain    OptPagesHealthCheckDomain       `json:"domain"`
}

func (*PagesHealthCheck) reposGetPagesHealthCheckRes() {}

// PagesHTTPSCertificate describes #/components/schemas/pages-https-certificate.
type PagesHTTPSCertificate struct {
	Description string                     `json:"description"`
	Domains     []string                   `json:"domains"`
	ExpiresAt   OptTime                    `json:"expires_at"`
	State       PagesHTTPSCertificateState `json:"state"`
}

// PagesSourceHash describes #/components/schemas/pages-source-hash.
type PagesSourceHash struct {
	Branch string `json:"branch"`
	Path   string `json:"path"`
}

// ParticipationStats describes #/components/schemas/participation-stats.
type ParticipationStats struct {
	All   []int `json:"all"`
	Owner []int `json:"owner"`
}

func (*ParticipationStats) reposGetParticipationStatsRes() {}

// PorterAuthor describes #/components/schemas/porter-author.
type PorterAuthor struct {
	Email      string  `json:"email"`
	ID         int     `json:"id"`
	ImportURL  url.URL `json:"import_url"`
	Name       string  `json:"name"`
	RemoteID   string  `json:"remote_id"`
	RemoteName string  `json:"remote_name"`
	URL        url.URL `json:"url"`
}

// PorterLargeFile describes #/components/schemas/porter-large-file.
type PorterLargeFile struct {
	Oid     string `json:"oid"`
	Path    string `json:"path"`
	RefName string `json:"ref_name"`
	Size    int    `json:"size"`
}

// PrivateUser describes #/components/schemas/private-user.
type PrivateUser struct {
	AvatarURL               url.URL            `json:"avatar_url"`
	Bio                     NilString          `json:"bio"`
	Blog                    NilString          `json:"blog"`
	BusinessPlus            OptBool            `json:"business_plus"`
	Collaborators           int                `json:"collaborators"`
	Company                 NilString          `json:"company"`
	CreatedAt               time.Time          `json:"created_at"`
	DiskUsage               int                `json:"disk_usage"`
	Email                   NilString          `json:"email"`
	EventsURL               string             `json:"events_url"`
	Followers               int                `json:"followers"`
	FollowersURL            url.URL            `json:"followers_url"`
	Following               int                `json:"following"`
	FollowingURL            string             `json:"following_url"`
	GistsURL                string             `json:"gists_url"`
	GravatarID              NilString          `json:"gravatar_id"`
	HTMLURL                 url.URL            `json:"html_url"`
	Hireable                NilBool            `json:"hireable"`
	ID                      int                `json:"id"`
	LdapDn                  OptString          `json:"ldap_dn"`
	Location                NilString          `json:"location"`
	Login                   string             `json:"login"`
	Name                    NilString          `json:"name"`
	NodeID                  string             `json:"node_id"`
	OrganizationsURL        url.URL            `json:"organizations_url"`
	OwnedPrivateRepos       int                `json:"owned_private_repos"`
	Plan                    OptPrivateUserPlan `json:"plan"`
	PrivateGists            int                `json:"private_gists"`
	PublicGists             int                `json:"public_gists"`
	PublicRepos             int                `json:"public_repos"`
	ReceivedEventsURL       url.URL            `json:"received_events_url"`
	ReposURL                url.URL            `json:"repos_url"`
	SiteAdmin               bool               `json:"site_admin"`
	StarredURL              string             `json:"starred_url"`
	SubscriptionsURL        url.URL            `json:"subscriptions_url"`
	SuspendedAt             OptNilTime         `json:"suspended_at"`
	TotalPrivateRepos       int                `json:"total_private_repos"`
	TwitterUsername         OptNilString       `json:"twitter_username"`
	TwoFactorAuthentication bool               `json:"two_factor_authentication"`
	Type                    string             `json:"type"`
	URL                     url.URL            `json:"url"`
	UpdatedAt               time.Time          `json:"updated_at"`
}

// Project describes #/components/schemas/project.
type Project struct {
	Body                   NilString                        `json:"body"`
	ColumnsURL             url.URL                          `json:"columns_url"`
	CreatedAt              time.Time                        `json:"created_at"`
	Creator                NullableSimpleUser               `json:"creator"`
	HTMLURL                url.URL                          `json:"html_url"`
	ID                     int                              `json:"id"`
	Name                   string                           `json:"name"`
	NodeID                 string                           `json:"node_id"`
	Number                 int                              `json:"number"`
	OrganizationPermission OptProjectOrganizationPermission `json:"organization_permission"`
	OwnerURL               url.URL                          `json:"owner_url"`
	Private                OptBool                          `json:"private"`
	State                  string                           `json:"state"`
	URL                    url.URL                          `json:"url"`
	UpdatedAt              time.Time                        `json:"updated_at"`
}

func (*Project) projectsCreateForAuthenticatedUserRes() {}
func (*Project) projectsCreateForOrgRes()               {}
func (*Project) projectsCreateForRepoRes()              {}
func (*Project) projectsGetRes()                        {}
func (*Project) projectsUpdateRes()                     {}

// ProjectCard describes #/components/schemas/project-card.
type ProjectCard struct {
	Archived   OptBool            `json:"archived"`
	ColumnName OptString          `json:"column_name"`
	ColumnURL  url.URL            `json:"column_url"`
	ContentURL OptURL             `json:"content_url"`
	CreatedAt  time.Time          `json:"created_at"`
	Creator    NullableSimpleUser `json:"creator"`
	ID         int                `json:"id"`
	NodeID     string             `json:"node_id"`
	Note       NilString          `json:"note"`
	ProjectID  OptString          `json:"project_id"`
	ProjectURL url.URL            `json:"project_url"`
	URL        url.URL            `json:"url"`
	UpdatedAt  time.Time          `json:"updated_at"`
}

func (*ProjectCard) projectsGetCardRes()    {}
func (*ProjectCard) projectsUpdateCardRes() {}

// ProjectColumn describes #/components/schemas/project-column.
type ProjectColumn struct {
	CardsURL   url.URL   `json:"cards_url"`
	CreatedAt  time.Time `json:"created_at"`
	ID         int       `json:"id"`
	Name       string    `json:"name"`
	NodeID     string    `json:"node_id"`
	ProjectURL url.URL   `json:"project_url"`
	URL        url.URL   `json:"url"`
	UpdatedAt  time.Time `json:"updated_at"`
}

func (*ProjectColumn) projectsCreateColumnRes() {}
func (*ProjectColumn) projectsGetColumnRes()    {}
func (*ProjectColumn) projectsUpdateColumnRes() {}

// ProtectedBranch describes #/components/schemas/protected-branch.
type ProtectedBranch struct {
	AllowDeletions                 OptProtectedBranchAllowDeletions                 `json:"allow_deletions"`
	AllowForcePushes               OptProtectedBranchAllowForcePushes               `json:"allow_force_pushes"`
	EnforceAdmins                  OptProtectedBranchEnforceAdmins                  `json:"enforce_admins"`
	RequiredConversationResolution OptProtectedBranchRequiredConversationResolution `json:"required_conversation_resolution"`
	RequiredLinearHistory          OptProtectedBranchRequiredLinearHistory          `json:"required_linear_history"`
	RequiredPullRequestReviews     OptProtectedBranchRequiredPullRequestReviews     `json:"required_pull_request_reviews"`
	RequiredSignatures             OptProtectedBranchRequiredSignatures             `json:"required_signatures"`
	RequiredStatusChecks           OptStatusCheckPolicy                             `json:"required_status_checks"`
	Restrictions                   OptBranchRestrictionPolicy                       `json:"restrictions"`
	URL                            url.URL                                          `json:"url"`
}

func (*ProtectedBranch) reposUpdateBranchProtectionRes() {}

// ProtectedBranchAdminEnforced describes #/components/schemas/protected-branch-admin-enforced.
type ProtectedBranchAdminEnforced struct {
	Enabled bool    `json:"enabled"`
	URL     url.URL `json:"url"`
}

func (*ProtectedBranchAdminEnforced) reposCreateCommitSignatureProtectionRes() {}
func (*ProtectedBranchAdminEnforced) reposGetCommitSignatureProtectionRes()    {}

// ProtectedBranchPullRequestReview describes #/components/schemas/protected-branch-pull-request-review.
type ProtectedBranchPullRequestReview struct {
	DismissStaleReviews          bool                                                     `json:"dismiss_stale_reviews"`
	DismissalRestrictions        OptProtectedBranchPullRequestReviewDismissalRestrictions `json:"dismissal_restrictions"`
	RequireCodeOwnerReviews      bool                                                     `json:"require_code_owner_reviews"`
	RequiredApprovingReviewCount OptInt                                                   `json:"required_approving_review_count"`
	URL                          OptURL                                                   `json:"url"`
}

// PullRequestMergeResult describes #/components/schemas/pull-request-merge-result.
type PullRequestMergeResult struct {
	Merged  bool   `json:"merged"`
	Message string `json:"message"`
	Sha     string `json:"sha"`
}

// PullRequestMinimal describes #/components/schemas/pull-request-minimal.
type PullRequestMinimal struct {
	Base   PullRequestMinimalBase `json:"base"`
	Head   PullRequestMinimalHead `json:"head"`
	ID     int                    `json:"id"`
	Number int                    `json:"number"`
	URL    string                 `json:"url"`
}

// PullRequestReview describes #/components/schemas/pull-request-review.
type PullRequestReview struct {
	AuthorAssociation AuthorAssociation      `json:"author_association"`
	Body              string                 `json:"body"`
	BodyHTML          OptString              `json:"body_html"`
	BodyText          OptString              `json:"body_text"`
	CommitID          string                 `json:"commit_id"`
	HTMLURL           url.URL                `json:"html_url"`
	ID                int                    `json:"id"`
	Links             PullRequestReviewLinks `json:"_links"`
	NodeID            string                 `json:"node_id"`
	PullRequestURL    url.URL                `json:"pull_request_url"`
	State             string                 `json:"state"`
	SubmittedAt       OptTime                `json:"submitted_at"`
	User              NullableSimpleUser     `json:"user"`
}

func (*PullRequestReview) pullsCreateReviewRes()        {}
func (*PullRequestReview) pullsDeletePendingReviewRes() {}
func (*PullRequestReview) pullsDismissReviewRes()       {}
func (*PullRequestReview) pullsGetReviewRes()           {}
func (*PullRequestReview) pullsSubmitReviewRes()        {}
func (*PullRequestReview) pullsUpdateReviewRes()        {}

// PullRequestReviewComment describes #/components/schemas/pull-request-review-comment.
type PullRequestReviewComment struct {
	AuthorAssociation   AuthorAssociation                       `json:"author_association"`
	Body                string                                  `json:"body"`
	BodyHTML            OptString                               `json:"body_html"`
	BodyText            OptString                               `json:"body_text"`
	CommitID            string                                  `json:"commit_id"`
	CreatedAt           time.Time                               `json:"created_at"`
	DiffHunk            string                                  `json:"diff_hunk"`
	HTMLURL             url.URL                                 `json:"html_url"`
	ID                  int                                     `json:"id"`
	InReplyToID         OptInt                                  `json:"in_reply_to_id"`
	Line                OptInt                                  `json:"line"`
	Links               PullRequestReviewCommentLinks           `json:"_links"`
	NodeID              string                                  `json:"node_id"`
	OriginalCommitID    string                                  `json:"original_commit_id"`
	OriginalLine        OptInt                                  `json:"original_line"`
	OriginalPosition    int                                     `json:"original_position"`
	OriginalStartLine   OptNilInt                               `json:"original_start_line"`
	Path                string                                  `json:"path"`
	Position            int                                     `json:"position"`
	PullRequestReviewID NilInt                                  `json:"pull_request_review_id"`
	PullRequestURL      url.URL                                 `json:"pull_request_url"`
	Reactions           OptReactionRollup                       `json:"reactions"`
	Side                OptPullRequestReviewCommentSide         `json:"side"`
	StartLine           OptNilInt                               `json:"start_line"`
	StartSide           OptNilPullRequestReviewCommentStartSide `json:"start_side"`
	URL                 string                                  `json:"url"`
	UpdatedAt           time.Time                               `json:"updated_at"`
	User                SimpleUser                              `json:"user"`
}

func (*PullRequestReviewComment) pullsCreateReplyForReviewCommentRes() {}
func (*PullRequestReviewComment) pullsGetReviewCommentRes()            {}

// PullRequestReviewRequest describes #/components/schemas/pull-request-review-request.
type PullRequestReviewRequest struct {
	Teams []Team       `json:"teams"`
	Users []SimpleUser `json:"users"`
}

// RateLimit describes #/components/schemas/rate-limit.
type RateLimit struct {
	Limit     int `json:"limit"`
	Remaining int `json:"remaining"`
	Reset     int `json:"reset"`
	Used      int `json:"used"`
}

// RateLimitOverview describes #/components/schemas/rate-limit-overview.
type RateLimitOverview struct {
	Rate      RateLimit                  `json:"rate"`
	Resources RateLimitOverviewResources `json:"resources"`
}

func (*RateLimitOverview) rateLimitGetRes() {}

// Reaction describes #/components/schemas/reaction.
type Reaction struct {
	Content   ReactionContent    `json:"content"`
	CreatedAt time.Time          `json:"created_at"`
	ID        int                `json:"id"`
	NodeID    string             `json:"node_id"`
	User      NullableSimpleUser `json:"user"`
}

// ReactionRollup describes #/components/schemas/reaction-rollup.
type ReactionRollup struct {
	Confused   int     `json:"confused"`
	Eyes       int     `json:"eyes"`
	Heart      int     `json:"heart"`
	Hooray     int     `json:"hooray"`
	Laugh      int     `json:"laugh"`
	Minus1     int     `json:"-1"`
	Plus1      int     `json:"+1"`
	Rocket     int     `json:"rocket"`
	TotalCount int     `json:"total_count"`
	URL        url.URL `json:"url"`
}

// ReferrerTraffic describes #/components/schemas/referrer-traffic.
type ReferrerTraffic struct {
	Count    int    `json:"count"`
	Referrer string `json:"referrer"`
	Uniques  int    `json:"uniques"`
}

// Release describes #/components/schemas/release.
type Release struct {
	Assets          []ReleaseAsset    `json:"assets"`
	AssetsURL       url.URL           `json:"assets_url"`
	Author          SimpleUser        `json:"author"`
	Body            OptNilString      `json:"body"`
	BodyHTML        OptString         `json:"body_html"`
	BodyText        OptString         `json:"body_text"`
	CreatedAt       time.Time         `json:"created_at"`
	DiscussionURL   OptURL            `json:"discussion_url"`
	Draft           bool              `json:"draft"`
	HTMLURL         url.URL           `json:"html_url"`
	ID              int               `json:"id"`
	MentionsCount   OptInt            `json:"mentions_count"`
	Name            NilString         `json:"name"`
	NodeID          string            `json:"node_id"`
	Prerelease      bool              `json:"prerelease"`
	PublishedAt     NilTime           `json:"published_at"`
	Reactions       OptReactionRollup `json:"reactions"`
	TagName         string            `json:"tag_name"`
	TarballURL      NilURL            `json:"tarball_url"`
	TargetCommitish string            `json:"target_commitish"`
	URL             url.URL           `json:"url"`
	UploadURL       string            `json:"upload_url"`
	ZipballURL      NilURL            `json:"zipball_url"`
}

func (*Release) reposGetReleaseByTagRes() {}
func (*Release) reposGetReleaseRes()      {}
func (*Release) reposUpdateReleaseRes()   {}

// ReleaseAsset describes #/components/schemas/release-asset.
type ReleaseAsset struct {
	BrowserDownloadURL url.URL            `json:"browser_download_url"`
	ContentType        string             `json:"content_type"`
	CreatedAt          time.Time          `json:"created_at"`
	DownloadCount      int                `json:"download_count"`
	ID                 int                `json:"id"`
	Label              NilString          `json:"label"`
	Name               string             `json:"name"`
	NodeID             string             `json:"node_id"`
	Size               int                `json:"size"`
	State              ReleaseAssetState  `json:"state"`
	URL                url.URL            `json:"url"`
	UpdatedAt          time.Time          `json:"updated_at"`
	Uploader           NullableSimpleUser `json:"uploader"`
}

func (*ReleaseAsset) reposGetReleaseAssetRes() {}

// Repository describes #/components/schemas/repository.
type Repository struct {
	AllowAutoMerge      OptBool                            `json:"allow_auto_merge"`
	AllowForking        OptBool                            `json:"allow_forking"`
	AllowMergeCommit    OptBool                            `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                            `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                            `json:"allow_squash_merge"`
	ArchiveURL          string                             `json:"archive_url"`
	Archived            bool                               `json:"archived"`
	AssigneesURL        string                             `json:"assignees_url"`
	BlobsURL            string                             `json:"blobs_url"`
	BranchesURL         string                             `json:"branches_url"`
	CloneURL            string                             `json:"clone_url"`
	CollaboratorsURL    string                             `json:"collaborators_url"`
	CommentsURL         string                             `json:"comments_url"`
	CommitsURL          string                             `json:"commits_url"`
	CompareURL          string                             `json:"compare_url"`
	ContentsURL         string                             `json:"contents_url"`
	ContributorsURL     url.URL                            `json:"contributors_url"`
	CreatedAt           NilTime                            `json:"created_at"`
	DefaultBranch       string                             `json:"default_branch"`
	DeleteBranchOnMerge OptBool                            `json:"delete_branch_on_merge"`
	DeploymentsURL      url.URL                            `json:"deployments_url"`
	Description         NilString                          `json:"description"`
	Disabled            bool                               `json:"disabled"`
	DownloadsURL        url.URL                            `json:"downloads_url"`
	EventsURL           url.URL                            `json:"events_url"`
	Fork                bool                               `json:"fork"`
	Forks               int                                `json:"forks"`
	ForksCount          int                                `json:"forks_count"`
	ForksURL            url.URL                            `json:"forks_url"`
	FullName            string                             `json:"full_name"`
	GitCommitsURL       string                             `json:"git_commits_url"`
	GitRefsURL          string                             `json:"git_refs_url"`
	GitTagsURL          string                             `json:"git_tags_url"`
	GitURL              string                             `json:"git_url"`
	HTMLURL             url.URL                            `json:"html_url"`
	HasDownloads        bool                               `json:"has_downloads"`
	HasIssues           bool                               `json:"has_issues"`
	HasPages            bool                               `json:"has_pages"`
	HasProjects         bool                               `json:"has_projects"`
	HasWiki             bool                               `json:"has_wiki"`
	Homepage            NilURL                             `json:"homepage"`
	HooksURL            url.URL                            `json:"hooks_url"`
	ID                  int                                `json:"id"`
	IsTemplate          OptBool                            `json:"is_template"`
	IssueCommentURL     string                             `json:"issue_comment_url"`
	IssueEventsURL      string                             `json:"issue_events_url"`
	IssuesURL           string                             `json:"issues_url"`
	KeysURL             string                             `json:"keys_url"`
	LabelsURL           string                             `json:"labels_url"`
	Language            NilString                          `json:"language"`
	LanguagesURL        url.URL                            `json:"languages_url"`
	License             NullableLicenseSimple              `json:"license"`
	MasterBranch        OptString                          `json:"master_branch"`
	MergesURL           url.URL                            `json:"merges_url"`
	MilestonesURL       string                             `json:"milestones_url"`
	MirrorURL           NilURL                             `json:"mirror_url"`
	Name                string                             `json:"name"`
	NetworkCount        OptInt                             `json:"network_count"`
	NodeID              string                             `json:"node_id"`
	NotificationsURL    string                             `json:"notifications_url"`
	OpenIssues          int                                `json:"open_issues"`
	OpenIssuesCount     int                                `json:"open_issues_count"`
	Organization        OptNullableSimpleUser              `json:"organization"`
	Owner               SimpleUser                         `json:"owner"`
	Permissions         OptRepositoryPermissions           `json:"permissions"`
	Private             bool                               `json:"private"`
	PullsURL            string                             `json:"pulls_url"`
	PushedAt            NilTime                            `json:"pushed_at"`
	ReleasesURL         string                             `json:"releases_url"`
	SSHURL              string                             `json:"ssh_url"`
	Size                int                                `json:"size"`
	StargazersCount     int                                `json:"stargazers_count"`
	StargazersURL       url.URL                            `json:"stargazers_url"`
	StarredAt           OptString                          `json:"starred_at"`
	StatusesURL         string                             `json:"statuses_url"`
	SubscribersCount    OptInt                             `json:"subscribers_count"`
	SubscribersURL      url.URL                            `json:"subscribers_url"`
	SubscriptionURL     url.URL                            `json:"subscription_url"`
	SvnURL              url.URL                            `json:"svn_url"`
	TagsURL             url.URL                            `json:"tags_url"`
	TeamsURL            url.URL                            `json:"teams_url"`
	TempCloneToken      OptString                          `json:"temp_clone_token"`
	TemplateRepository  OptNilRepositoryTemplateRepository `json:"template_repository"`
	Topics              []string                           `json:"topics"`
	TreesURL            string                             `json:"trees_url"`
	URL                 url.URL                            `json:"url"`
	UpdatedAt           NilTime                            `json:"updated_at"`
	Visibility          OptString                          `json:"visibility"`
	Watchers            int                                `json:"watchers"`
	WatchersCount       int                                `json:"watchers_count"`
}

// RepositoryCollaboratorPermission describes #/components/schemas/repository-collaborator-permission.
type RepositoryCollaboratorPermission struct {
	Permission string             `json:"permission"`
	User       NullableSimpleUser `json:"user"`
}

func (*RepositoryCollaboratorPermission) reposGetCollaboratorPermissionLevelRes() {}

// RepositoryInvitation describes #/components/schemas/repository-invitation.
type RepositoryInvitation struct {
	CreatedAt   time.Time                       `json:"created_at"`
	Expired     OptBool                         `json:"expired"`
	HTMLURL     string                          `json:"html_url"`
	ID          int                             `json:"id"`
	Invitee     NullableSimpleUser              `json:"invitee"`
	Inviter     NullableSimpleUser              `json:"inviter"`
	NodeID      string                          `json:"node_id"`
	Permissions RepositoryInvitationPermissions `json:"permissions"`
	Repository  MinimalRepository               `json:"repository"`
	URL         string                          `json:"url"`
}

// RepositorySubscription describes #/components/schemas/repository-subscription.
type RepositorySubscription struct {
	CreatedAt     time.Time `json:"created_at"`
	Ignored       bool      `json:"ignored"`
	Reason        NilString `json:"reason"`
	RepositoryURL url.URL   `json:"repository_url"`
	Subscribed    bool      `json:"subscribed"`
	URL           url.URL   `json:"url"`
}

func (*RepositorySubscription) activityGetRepoSubscriptionRes() {}

// ReviewComment describes #/components/schemas/review-comment.
type ReviewComment struct {
	AuthorAssociation   AuthorAssociation            `json:"author_association"`
	Body                string                       `json:"body"`
	BodyHTML            OptString                    `json:"body_html"`
	BodyText            OptString                    `json:"body_text"`
	CommitID            string                       `json:"commit_id"`
	CreatedAt           time.Time                    `json:"created_at"`
	DiffHunk            string                       `json:"diff_hunk"`
	HTMLURL             url.URL                      `json:"html_url"`
	ID                  int                          `json:"id"`
	InReplyToID         OptInt                       `json:"in_reply_to_id"`
	Line                OptInt                       `json:"line"`
	Links               ReviewCommentLinks           `json:"_links"`
	NodeID              string                       `json:"node_id"`
	OriginalCommitID    string                       `json:"original_commit_id"`
	OriginalLine        OptInt                       `json:"original_line"`
	OriginalPosition    int                          `json:"original_position"`
	OriginalStartLine   OptNilInt                    `json:"original_start_line"`
	Path                string                       `json:"path"`
	Position            NilInt                       `json:"position"`
	PullRequestReviewID NilInt                       `json:"pull_request_review_id"`
	PullRequestURL      url.URL                      `json:"pull_request_url"`
	Reactions           OptReactionRollup            `json:"reactions"`
	Side                OptReviewCommentSide         `json:"side"`
	StartLine           OptNilInt                    `json:"start_line"`
	StartSide           OptNilReviewCommentStartSide `json:"start_side"`
	URL                 url.URL                      `json:"url"`
	UpdatedAt           time.Time                    `json:"updated_at"`
	User                NullableSimpleUser           `json:"user"`
}

// Runner describes #/components/schemas/runner.
type Runner struct {
	Busy   bool               `json:"busy"`
	ID     int                `json:"id"`
	Labels []RunnerLabelsItem `json:"labels"`
	Name   string             `json:"name"`
	Os     string             `json:"os"`
	Status string             `json:"status"`
}

// RunnerApplication describes #/components/schemas/runner-application.
type RunnerApplication struct {
	Architecture      string    `json:"architecture"`
	DownloadURL       string    `json:"download_url"`
	Filename          string    `json:"filename"`
	Os                string    `json:"os"`
	SHA256Checksum    OptString `json:"sha256_checksum"`
	TempDownloadToken OptString `json:"temp_download_token"`
}

// RunnerGroupsEnterprise describes #/components/schemas/runner-groups-enterprise.
type RunnerGroupsEnterprise struct {
	AllowsPublicRepositories bool      `json:"allows_public_repositories"`
	Default                  bool      `json:"default"`
	ID                       float64   `json:"id"`
	Name                     string    `json:"name"`
	RunnersURL               string    `json:"runners_url"`
	SelectedOrganizationsURL OptString `json:"selected_organizations_url"`
	Visibility               string    `json:"visibility"`
}

// RunnerGroupsOrg describes #/components/schemas/runner-groups-org.
type RunnerGroupsOrg struct {
	AllowsPublicRepositories          bool      `json:"allows_public_repositories"`
	Default                           bool      `json:"default"`
	ID                                float64   `json:"id"`
	Inherited                         bool      `json:"inherited"`
	InheritedAllowsPublicRepositories OptBool   `json:"inherited_allows_public_repositories"`
	Name                              string    `json:"name"`
	RunnersURL                        string    `json:"runners_url"`
	SelectedRepositoriesURL           OptString `json:"selected_repositories_url"`
	Visibility                        string    `json:"visibility"`
}

// ScimEnterpriseGroup describes #/components/schemas/scim-enterprise-group.
type ScimEnterpriseGroup struct {
	DisplayName OptString                        `json:"displayName"`
	ExternalId  OptNilString                     `json:"externalId"`
	ID          string                           `json:"id"`
	Members     []ScimEnterpriseGroupMembersItem `json:"members"`
	Meta        OptScimEnterpriseGroupMeta       `json:"meta"`
	Schemas     []string                         `json:"schemas"`
}

// ScimEnterpriseUser describes #/components/schemas/scim-enterprise-user.
type ScimEnterpriseUser struct {
	Active     OptBool                        `json:"active"`
	Emails     []ScimEnterpriseUserEmailsItem `json:"emails"`
	ExternalId OptString                      `json:"externalId"`
	Groups     []ScimEnterpriseUserGroupsItem `json:"groups"`
	ID         string                         `json:"id"`
	Meta       OptScimEnterpriseUserMeta      `json:"meta"`
	Name       OptScimEnterpriseUserName      `json:"name"`
	Schemas    []string                       `json:"schemas"`
	UserName   OptString                      `json:"userName"`
}

// ScimError describes #/components/schemas/scim-error.
type ScimError struct {
	Detail           OptNilString `json:"detail"`
	DocumentationURL OptNilString `json:"documentation_url"`
	Message          OptNilString `json:"message"`
	Schemas          []string     `json:"schemas"`
	ScimType         OptNilString `json:"scimType"`
	Status           OptInt       `json:"status"`
}

func (*ScimError) codeScanningDeleteAnalysisRes() {}
func (*ScimError) reposListCommitsRes()           {}

// ScimGroupListEnterprise describes #/components/schemas/scim-group-list-enterprise.
type ScimGroupListEnterprise struct {
	ItemsPerPage float64                                `json:"itemsPerPage"`
	Resources    []ScimGroupListEnterpriseResourcesItem `json:"Resources"`
	Schemas      []string                               `json:"schemas"`
	StartIndex   float64                                `json:"startIndex"`
	TotalResults float64                                `json:"totalResults"`
}

// ScimUserListEnterprise describes #/components/schemas/scim-user-list-enterprise.
type ScimUserListEnterprise struct {
	ItemsPerPage float64                               `json:"itemsPerPage"`
	Resources    []ScimUserListEnterpriseResourcesItem `json:"Resources"`
	Schemas      []string                              `json:"schemas"`
	StartIndex   float64                               `json:"startIndex"`
	TotalResults float64                               `json:"totalResults"`
}

// SecretScanningAlert describes #/components/schemas/secret-scanning-alert.
type SecretScanningAlert struct {
	CreatedAt    *AlertCreatedAt                  `json:"created_at"`
	HTMLURL      *AlertHTMLURL                    `json:"html_url"`
	LocationsURL OptURL                           `json:"locations_url"`
	Number       *AlertNumber                     `json:"number"`
	Resolution   OptSecretScanningAlertResolution `json:"resolution"`
	ResolvedAt   OptNilTime                       `json:"resolved_at"`
	ResolvedBy   OptNullableSimpleUser            `json:"resolved_by"`
	Secret       OptString                        `json:"secret"`
	SecretType   OptString                        `json:"secret_type"`
	State        OptSecretScanningAlertState      `json:"state"`
	URL          *AlertURL                        `json:"url"`
}

func (*SecretScanningAlert) secretScanningGetAlertRes()    {}
func (*SecretScanningAlert) secretScanningUpdateAlertRes() {}

type SecretScanningAlertResolution string

const (
	SecretScanningAlertResolutionFalsePositive SecretScanningAlertResolution = "false_positive"
	SecretScanningAlertResolutionWontFix       SecretScanningAlertResolution = "wont_fix"
	SecretScanningAlertResolutionRevoked       SecretScanningAlertResolution = "revoked"
	SecretScanningAlertResolutionUsedInTests   SecretScanningAlertResolution = "used_in_tests"
)

type SecretScanningAlertState string

const (
	SecretScanningAlertStateOpen     SecretScanningAlertState = "open"
	SecretScanningAlertStateResolved SecretScanningAlertState = "resolved"
)

// SelectedActions describes #/components/schemas/selected-actions.
type SelectedActions struct {
	GithubOwnedAllowed OptBool  `json:"github_owned_allowed"`
	PatternsAllowed    []string `json:"patterns_allowed"`
	VerifiedAllowed    OptBool  `json:"verified_allowed"`
}

type SelectedActionsURL string

// ShortBlob describes #/components/schemas/short-blob.
type ShortBlob struct {
	Sha string `json:"sha"`
	URL string `json:"url"`
}

// ShortBranch describes #/components/schemas/short-branch.
type ShortBranch struct {
	Commit        ShortBranchCommit   `json:"commit"`
	Name          string              `json:"name"`
	Protected     bool                `json:"protected"`
	Protection    OptBranchProtection `json:"protection"`
	ProtectionURL OptURL              `json:"protection_url"`
}

// SimpleCommit describes #/components/schemas/simple-commit.
type SimpleCommit struct {
	Author    NilSimpleCommitAuthor    `json:"author"`
	Committer NilSimpleCommitCommitter `json:"committer"`
	ID        string                   `json:"id"`
	Message   string                   `json:"message"`
	Timestamp time.Time                `json:"timestamp"`
	TreeID    string                   `json:"tree_id"`
}

// SimpleCommitStatus describes #/components/schemas/simple-commit-status.
type SimpleCommitStatus struct {
	AvatarURL   NilURL     `json:"avatar_url"`
	Context     string     `json:"context"`
	CreatedAt   time.Time  `json:"created_at"`
	Description NilString  `json:"description"`
	ID          int        `json:"id"`
	NodeID      string     `json:"node_id"`
	Required    OptNilBool `json:"required"`
	State       string     `json:"state"`
	TargetURL   url.URL    `json:"target_url"`
	URL         url.URL    `json:"url"`
	UpdatedAt   time.Time  `json:"updated_at"`
}

// SimpleUser describes #/components/schemas/simple-user.
type SimpleUser struct {
	AvatarURL         url.URL      `json:"avatar_url"`
	Email             OptNilString `json:"email"`
	EventsURL         string       `json:"events_url"`
	FollowersURL      url.URL      `json:"followers_url"`
	FollowingURL      string       `json:"following_url"`
	GistsURL          string       `json:"gists_url"`
	GravatarID        NilString    `json:"gravatar_id"`
	HTMLURL           url.URL      `json:"html_url"`
	ID                int          `json:"id"`
	Login             string       `json:"login"`
	Name              OptNilString `json:"name"`
	NodeID            string       `json:"node_id"`
	OrganizationsURL  url.URL      `json:"organizations_url"`
	ReceivedEventsURL url.URL      `json:"received_events_url"`
	ReposURL          url.URL      `json:"repos_url"`
	SiteAdmin         bool         `json:"site_admin"`
	StarredAt         OptString    `json:"starred_at"`
	StarredURL        string       `json:"starred_url"`
	SubscriptionsURL  url.URL      `json:"subscriptions_url"`
	Type              string       `json:"type"`
	URL               url.URL      `json:"url"`
}

// Status describes #/components/schemas/status.
type Status struct {
	AvatarURL   NilString          `json:"avatar_url"`
	Context     string             `json:"context"`
	CreatedAt   string             `json:"created_at"`
	Creator     NullableSimpleUser `json:"creator"`
	Description string             `json:"description"`
	ID          int                `json:"id"`
	NodeID      string             `json:"node_id"`
	State       string             `json:"state"`
	TargetURL   string             `json:"target_url"`
	URL         string             `json:"url"`
	UpdatedAt   string             `json:"updated_at"`
}

// StatusCheckPolicy describes #/components/schemas/status-check-policy.
type StatusCheckPolicy struct {
	Contexts    []string `json:"contexts"`
	ContextsURL url.URL  `json:"contexts_url"`
	Strict      bool     `json:"strict"`
	URL         url.URL  `json:"url"`
}

func (*StatusCheckPolicy) reposGetStatusChecksProtectionRes() {}

// Tag describes #/components/schemas/tag.
type Tag struct {
	Commit     TagCommit `json:"commit"`
	Name       string    `json:"name"`
	NodeID     string    `json:"node_id"`
	TarballURL url.URL   `json:"tarball_url"`
	ZipballURL url.URL   `json:"zipball_url"`
}

// Team describes #/components/schemas/team.
type Team struct {
	Description     NilString          `json:"description"`
	HTMLURL         url.URL            `json:"html_url"`
	ID              int                `json:"id"`
	MembersURL      string             `json:"members_url"`
	Name            string             `json:"name"`
	NodeID          string             `json:"node_id"`
	Parent          NullableTeamSimple `json:"parent"`
	Permission      string             `json:"permission"`
	Permissions     OptTeamPermissions `json:"permissions"`
	Privacy         OptString          `json:"privacy"`
	RepositoriesURL url.URL            `json:"repositories_url"`
	Slug            string             `json:"slug"`
	URL             url.URL            `json:"url"`
}

// TeamDiscussion describes #/components/schemas/team-discussion.
type TeamDiscussion struct {
	Author        NullableSimpleUser `json:"author"`
	Body          string             `json:"body"`
	BodyHTML      string             `json:"body_html"`
	BodyVersion   string             `json:"body_version"`
	CommentsCount int                `json:"comments_count"`
	CommentsURL   url.URL            `json:"comments_url"`
	CreatedAt     time.Time          `json:"created_at"`
	HTMLURL       url.URL            `json:"html_url"`
	LastEditedAt  NilTime            `json:"last_edited_at"`
	NodeID        string             `json:"node_id"`
	Number        int                `json:"number"`
	Pinned        bool               `json:"pinned"`
	Private       bool               `json:"private"`
	Reactions     OptReactionRollup  `json:"reactions"`
	TeamURL       url.URL            `json:"team_url"`
	Title         string             `json:"title"`
	URL           url.URL            `json:"url"`
	UpdatedAt     time.Time          `json:"updated_at"`
}

// TeamDiscussionComment describes #/components/schemas/team-discussion-comment.
type TeamDiscussionComment struct {
	Author        NullableSimpleUser `json:"author"`
	Body          string             `json:"body"`
	BodyHTML      string             `json:"body_html"`
	BodyVersion   string             `json:"body_version"`
	CreatedAt     time.Time          `json:"created_at"`
	DiscussionURL url.URL            `json:"discussion_url"`
	HTMLURL       url.URL            `json:"html_url"`
	LastEditedAt  NilTime            `json:"last_edited_at"`
	NodeID        string             `json:"node_id"`
	Number        int                `json:"number"`
	Reactions     OptReactionRollup  `json:"reactions"`
	URL           url.URL            `json:"url"`
	UpdatedAt     time.Time          `json:"updated_at"`
}

// TeamFull describes #/components/schemas/team-full.
type TeamFull struct {
	CreatedAt       time.Time             `json:"created_at"`
	Description     NilString             `json:"description"`
	HTMLURL         url.URL               `json:"html_url"`
	ID              int                   `json:"id"`
	LdapDn          OptString             `json:"ldap_dn"`
	MembersCount    int                   `json:"members_count"`
	MembersURL      string                `json:"members_url"`
	Name            string                `json:"name"`
	NodeID          string                `json:"node_id"`
	Organization    OrganizationFull      `json:"organization"`
	Parent          OptNullableTeamSimple `json:"parent"`
	Permission      string                `json:"permission"`
	Privacy         OptTeamFullPrivacy    `json:"privacy"`
	ReposCount      int                   `json:"repos_count"`
	RepositoriesURL url.URL               `json:"repositories_url"`
	Slug            string                `json:"slug"`
	URL             url.URL               `json:"url"`
	UpdatedAt       time.Time             `json:"updated_at"`
}

func (*TeamFull) teamsGetByNameRes() {}
func (*TeamFull) teamsGetLegacyRes() {}

// TeamMembership describes #/components/schemas/team-membership.
type TeamMembership struct {
	Role  TeamMembershipRole  `json:"role"`
	State TeamMembershipState `json:"state"`
	URL   url.URL             `json:"url"`
}

func (*TeamMembership) teamsAddOrUpdateMembershipForUserInOrgRes()  {}
func (*TeamMembership) teamsAddOrUpdateMembershipForUserLegacyRes() {}
func (*TeamMembership) teamsGetMembershipForUserInOrgRes()          {}
func (*TeamMembership) teamsGetMembershipForUserLegacyRes()         {}

// TeamProject describes #/components/schemas/team-project.
type TeamProject struct {
	Body                   NilString              `json:"body"`
	ColumnsURL             string                 `json:"columns_url"`
	CreatedAt              string                 `json:"created_at"`
	Creator                SimpleUser             `json:"creator"`
	HTMLURL                string                 `json:"html_url"`
	ID                     int                    `json:"id"`
	Name                   string                 `json:"name"`
	NodeID                 string                 `json:"node_id"`
	Number                 int                    `json:"number"`
	OrganizationPermission OptString              `json:"organization_permission"`
	OwnerURL               string                 `json:"owner_url"`
	Permissions            TeamProjectPermissions `json:"permissions"`
	Private                OptBool                `json:"private"`
	State                  string                 `json:"state"`
	URL                    string                 `json:"url"`
	UpdatedAt              string                 `json:"updated_at"`
}

func (*TeamProject) teamsCheckPermissionsForProjectInOrgRes()  {}
func (*TeamProject) teamsCheckPermissionsForProjectLegacyRes() {}

// TeamRepository describes #/components/schemas/team-repository.
type TeamRepository struct {
	AllowAutoMerge      OptBool                      `json:"allow_auto_merge"`
	AllowForking        OptBool                      `json:"allow_forking"`
	AllowMergeCommit    OptBool                      `json:"allow_merge_commit"`
	AllowRebaseMerge    OptBool                      `json:"allow_rebase_merge"`
	AllowSquashMerge    OptBool                      `json:"allow_squash_merge"`
	ArchiveURL          string                       `json:"archive_url"`
	Archived            bool                         `json:"archived"`
	AssigneesURL        string                       `json:"assignees_url"`
	BlobsURL            string                       `json:"blobs_url"`
	BranchesURL         string                       `json:"branches_url"`
	CloneURL            string                       `json:"clone_url"`
	CollaboratorsURL    string                       `json:"collaborators_url"`
	CommentsURL         string                       `json:"comments_url"`
	CommitsURL          string                       `json:"commits_url"`
	CompareURL          string                       `json:"compare_url"`
	ContentsURL         string                       `json:"contents_url"`
	ContributorsURL     url.URL                      `json:"contributors_url"`
	CreatedAt           NilTime                      `json:"created_at"`
	DefaultBranch       string                       `json:"default_branch"`
	DeleteBranchOnMerge OptBool                      `json:"delete_branch_on_merge"`
	DeploymentsURL      url.URL                      `json:"deployments_url"`
	Description         NilString                    `json:"description"`
	Disabled            bool                         `json:"disabled"`
	DownloadsURL        url.URL                      `json:"downloads_url"`
	EventsURL           url.URL                      `json:"events_url"`
	Fork                bool                         `json:"fork"`
	Forks               int                          `json:"forks"`
	ForksCount          int                          `json:"forks_count"`
	ForksURL            url.URL                      `json:"forks_url"`
	FullName            string                       `json:"full_name"`
	GitCommitsURL       string                       `json:"git_commits_url"`
	GitRefsURL          string                       `json:"git_refs_url"`
	GitTagsURL          string                       `json:"git_tags_url"`
	GitURL              string                       `json:"git_url"`
	HTMLURL             url.URL                      `json:"html_url"`
	HasDownloads        bool                         `json:"has_downloads"`
	HasIssues           bool                         `json:"has_issues"`
	HasPages            bool                         `json:"has_pages"`
	HasProjects         bool                         `json:"has_projects"`
	HasWiki             bool                         `json:"has_wiki"`
	Homepage            NilURL                       `json:"homepage"`
	HooksURL            url.URL                      `json:"hooks_url"`
	ID                  int                          `json:"id"`
	IsTemplate          OptBool                      `json:"is_template"`
	IssueCommentURL     string                       `json:"issue_comment_url"`
	IssueEventsURL      string                       `json:"issue_events_url"`
	IssuesURL           string                       `json:"issues_url"`
	KeysURL             string                       `json:"keys_url"`
	LabelsURL           string                       `json:"labels_url"`
	Language            NilString                    `json:"language"`
	LanguagesURL        url.URL                      `json:"languages_url"`
	License             NullableLicenseSimple        `json:"license"`
	MasterBranch        OptString                    `json:"master_branch"`
	MergesURL           url.URL                      `json:"merges_url"`
	MilestonesURL       string                       `json:"milestones_url"`
	MirrorURL           NilURL                       `json:"mirror_url"`
	Name                string                       `json:"name"`
	NetworkCount        OptInt                       `json:"network_count"`
	NodeID              string                       `json:"node_id"`
	NotificationsURL    string                       `json:"notifications_url"`
	OpenIssues          int                          `json:"open_issues"`
	OpenIssuesCount     int                          `json:"open_issues_count"`
	Owner               NullableSimpleUser           `json:"owner"`
	Permissions         OptTeamRepositoryPermissions `json:"permissions"`
	Private             bool                         `json:"private"`
	PullsURL            string                       `json:"pulls_url"`
	PushedAt            NilTime                      `json:"pushed_at"`
	ReleasesURL         string                       `json:"releases_url"`
	SSHURL              string                       `json:"ssh_url"`
	Size                int                          `json:"size"`
	StargazersCount     int                          `json:"stargazers_count"`
	StargazersURL       url.URL                      `json:"stargazers_url"`
	StatusesURL         string                       `json:"statuses_url"`
	SubscribersCount    OptInt                       `json:"subscribers_count"`
	SubscribersURL      url.URL                      `json:"subscribers_url"`
	SubscriptionURL     url.URL                      `json:"subscription_url"`
	SvnURL              url.URL                      `json:"svn_url"`
	TagsURL             url.URL                      `json:"tags_url"`
	TeamsURL            url.URL                      `json:"teams_url"`
	TempCloneToken      OptString                    `json:"temp_clone_token"`
	TemplateRepository  OptNullableRepository        `json:"template_repository"`
	Topics              []string                     `json:"topics"`
	TreesURL            string                       `json:"trees_url"`
	URL                 url.URL                      `json:"url"`
	UpdatedAt           NilTime                      `json:"updated_at"`
	Visibility          OptString                    `json:"visibility"`
	Watchers            int                          `json:"watchers"`
	WatchersCount       int                          `json:"watchers_count"`
}

func (*TeamRepository) teamsCheckPermissionsForRepoInOrgRes()  {}
func (*TeamRepository) teamsCheckPermissionsForRepoLegacyRes() {}

// Thread describes #/components/schemas/thread.
type Thread struct {
	ID              string            `json:"id"`
	LastReadAt      NilString         `json:"last_read_at"`
	Reason          string            `json:"reason"`
	Repository      MinimalRepository `json:"repository"`
	Subject         ThreadSubject     `json:"subject"`
	SubscriptionURL string            `json:"subscription_url"`
	URL             string            `json:"url"`
	Unread          bool              `json:"unread"`
	UpdatedAt       string            `json:"updated_at"`
}

func (*Thread) activityGetThreadRes() {}

// ThreadSubscription describes #/components/schemas/thread-subscription.
type ThreadSubscription struct {
	CreatedAt     NilTime   `json:"created_at"`
	Ignored       bool      `json:"ignored"`
	Reason        NilString `json:"reason"`
	RepositoryURL OptURL    `json:"repository_url"`
	Subscribed    bool      `json:"subscribed"`
	ThreadURL     OptURL    `json:"thread_url"`
	URL           url.URL   `json:"url"`
}

func (*ThreadSubscription) activityGetThreadSubscriptionForAuthenticatedUserRes() {}
func (*ThreadSubscription) activitySetThreadSubscriptionRes()                     {}

// Topic describes #/components/schemas/topic.
type Topic struct {
	Names []string `json:"names"`
}

func (*Topic) reposGetAllTopicsRes()     {}
func (*Topic) reposReplaceAllTopicsRes() {}

// UserMarketplacePurchase describes #/components/schemas/user-marketplace-purchase.
type UserMarketplacePurchase struct {
	Account         MarketplaceAccount     `json:"account"`
	BillingCycle    string                 `json:"billing_cycle"`
	FreeTrialEndsOn NilTime                `json:"free_trial_ends_on"`
	NextBillingDate NilTime                `json:"next_billing_date"`
	OnFreeTrial     bool                   `json:"on_free_trial"`
	Plan            MarketplaceListingPlan `json:"plan"`
	UnitCount       NilInt                 `json:"unit_count"`
	UpdatedAt       NilTime                `json:"updated_at"`
}

// ValidationErrorSimple describes #/components/schemas/validation-error-simple.
type ValidationErrorSimple struct {
	DocumentationURL string   `json:"documentation_url"`
	Errors           []string `json:"errors"`
	Message          string   `json:"message"`
}

func (*ValidationErrorSimple) projectsCreateColumnRes()               {}
func (*ValidationErrorSimple) projectsCreateForAuthenticatedUserRes() {}
func (*ValidationErrorSimple) projectsCreateForOrgRes()               {}
func (*ValidationErrorSimple) projectsCreateForRepoRes()              {}
func (*ValidationErrorSimple) projectsMoveColumnRes()                 {}
func (*ValidationErrorSimple) projectsUpdateCardRes()                 {}
func (*ValidationErrorSimple) projectsUpdateRes()                     {}
func (*ValidationErrorSimple) pullsCreateReviewRes()                  {}
func (*ValidationErrorSimple) pullsDeletePendingReviewRes()           {}
func (*ValidationErrorSimple) pullsDismissReviewRes()                 {}
func (*ValidationErrorSimple) pullsSubmitReviewRes()                  {}
func (*ValidationErrorSimple) pullsUpdateReviewRes()                  {}
func (*ValidationErrorSimple) reposDeleteDeploymentRes()              {}
func (*ValidationErrorSimple) reposReplaceAllTopicsRes()              {}
func (*ValidationErrorSimple) reposUpdateBranchProtectionRes()        {}

// Verification describes #/components/schemas/verification.
type Verification struct {
	Payload   NilString `json:"payload"`
	Reason    string    `json:"reason"`
	Signature NilString `json:"signature"`
	Verified  bool      `json:"verified"`
}

// Workflow describes #/components/schemas/workflow.
type Workflow struct {
	BadgeURL  string        `json:"badge_url"`
	CreatedAt time.Time     `json:"created_at"`
	DeletedAt OptTime       `json:"deleted_at"`
	HTMLURL   string        `json:"html_url"`
	ID        int           `json:"id"`
	Name      string        `json:"name"`
	NodeID    string        `json:"node_id"`
	Path      string        `json:"path"`
	State     WorkflowState `json:"state"`
	URL       string        `json:"url"`
	UpdatedAt time.Time     `json:"updated_at"`
}

// WorkflowRun describes #/components/schemas/workflow-run.
type WorkflowRun struct {
	ArtifactsURL       string               `json:"artifacts_url"`
	CancelURL          string               `json:"cancel_url"`
	CheckSuiteID       OptInt               `json:"check_suite_id"`
	CheckSuiteNodeID   OptString            `json:"check_suite_node_id"`
	CheckSuiteURL      string               `json:"check_suite_url"`
	Conclusion         NilString            `json:"conclusion"`
	CreatedAt          time.Time            `json:"created_at"`
	Event              string               `json:"event"`
	HTMLURL            string               `json:"html_url"`
	HeadBranch         NilString            `json:"head_branch"`
	HeadCommit         NullableSimpleCommit `json:"head_commit"`
	HeadRepository     MinimalRepository    `json:"head_repository"`
	HeadRepositoryID   OptInt               `json:"head_repository_id"`
	HeadSha            string               `json:"head_sha"`
	ID                 int                  `json:"id"`
	JobsURL            string               `json:"jobs_url"`
	LogsURL            string               `json:"logs_url"`
	Name               OptNilString         `json:"name"`
	NodeID             string               `json:"node_id"`
	PreviousAttemptURL OptNilString         `json:"previous_attempt_url"`
	PullRequests       []PullRequestMinimal `json:"pull_requests"`
	Repository         MinimalRepository    `json:"repository"`
	RerunURL           string               `json:"rerun_url"`
	RunAttempt         OptInt               `json:"run_attempt"`
	RunNumber          int                  `json:"run_number"`
	Status             NilString            `json:"status"`
	URL                string               `json:"url"`
	UpdatedAt          time.Time            `json:"updated_at"`
	WorkflowID         int                  `json:"workflow_id"`
	WorkflowURL        string               `json:"workflow_url"`
}

// WorkflowRunUsage describes #/components/schemas/workflow-run-usage.
type WorkflowRunUsage struct {
	Billable      WorkflowRunUsageBillable `json:"billable"`
	RunDurationMs OptInt                   `json:"run_duration_ms"`
}
