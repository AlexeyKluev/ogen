// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/errors"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
)

func decodeCreateAdmissionregistrationV1MutatingWebhookConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sAPIAdmissionregistrationV1MutatingWebhookConfiguration, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAdmissionregistrationV1MutatingWebhookConfiguration
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAdmissionregistrationV1ValidatingWebhookConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sAPIAdmissionregistrationV1ValidatingWebhookConfiguration, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAdmissionregistrationV1ValidatingWebhookConfiguration
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateApiextensionsV1CustomResourceDefinitionRequest(r *http.Request, span trace.Span) (req IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateApiregistrationV1APIServiceRequest(r *http.Request, span trace.Span) (req IoK8sKubeAggregatorPkgApisApiregistrationV1APIService, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sKubeAggregatorPkgApisApiregistrationV1APIService
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAppsV1NamespacedControllerRevisionRequest(r *http.Request, span trace.Span) (req IoK8sAPIAppsV1ControllerRevision, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAppsV1ControllerRevision
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAppsV1NamespacedDaemonSetRequest(r *http.Request, span trace.Span) (req IoK8sAPIAppsV1DaemonSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAppsV1DaemonSet
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAppsV1NamespacedDeploymentRequest(r *http.Request, span trace.Span) (req IoK8sAPIAppsV1Deployment, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAppsV1Deployment
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAppsV1NamespacedReplicaSetRequest(r *http.Request, span trace.Span) (req IoK8sAPIAppsV1ReplicaSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAppsV1ReplicaSet
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAppsV1NamespacedStatefulSetRequest(r *http.Request, span trace.Span) (req IoK8sAPIAppsV1StatefulSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAppsV1StatefulSet
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAuthenticationV1TokenReviewRequest(r *http.Request, span trace.Span) (req IoK8sAPIAuthenticationV1TokenReview, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAuthenticationV1TokenReview
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAuthorizationV1NamespacedLocalSubjectAccessReviewRequest(r *http.Request, span trace.Span) (req IoK8sAPIAuthorizationV1LocalSubjectAccessReview, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAuthorizationV1LocalSubjectAccessReview
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAuthorizationV1SelfSubjectAccessReviewRequest(r *http.Request, span trace.Span) (req IoK8sAPIAuthorizationV1SelfSubjectAccessReview, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAuthorizationV1SelfSubjectAccessReview
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAuthorizationV1SelfSubjectRulesReviewRequest(r *http.Request, span trace.Span) (req IoK8sAPIAuthorizationV1SelfSubjectRulesReview, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAuthorizationV1SelfSubjectRulesReview
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAuthorizationV1SubjectAccessReviewRequest(r *http.Request, span trace.Span) (req IoK8sAPIAuthorizationV1SubjectAccessReview, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAuthorizationV1SubjectAccessReview
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAutoscalingV1NamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req IoK8sAPIAutoscalingV1HorizontalPodAutoscaler, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAutoscalingV1HorizontalPodAutoscaler
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscaler, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscaler
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAutoscalingV2beta2NamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscaler, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscaler
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateBatchV1NamespacedCronJobRequest(r *http.Request, span trace.Span) (req IoK8sAPIBatchV1CronJob, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIBatchV1CronJob
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateBatchV1NamespacedJobRequest(r *http.Request, span trace.Span) (req IoK8sAPIBatchV1Job, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIBatchV1Job
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateBatchV1beta1NamespacedCronJobRequest(r *http.Request, span trace.Span) (req IoK8sAPIBatchV1beta1CronJob, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIBatchV1beta1CronJob
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCertificatesV1CertificateSigningRequestRequest(r *http.Request, span trace.Span) (req IoK8sAPICertificatesV1CertificateSigningRequest, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICertificatesV1CertificateSigningRequest
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoordinationV1NamespacedLeaseRequest(r *http.Request, span trace.Span) (req IoK8sAPICoordinationV1Lease, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoordinationV1Lease
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespaceRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Namespace, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Namespace
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedBindingRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Binding, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Binding
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedConfigMapRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1ConfigMap, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1ConfigMap
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedEndpointsRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Endpoints, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Endpoints
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedEventRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Event, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Event
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedLimitRangeRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1LimitRange, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1LimitRange
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedPersistentVolumeClaimRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1PersistentVolumeClaim, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1PersistentVolumeClaim
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedPodRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Pod, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Pod
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedPodBindingRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Binding, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Binding
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedPodEvictionRequest(r *http.Request, span trace.Span) (req IoK8sAPIPolicyV1Eviction, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIPolicyV1Eviction
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedPodTemplateRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1PodTemplate, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1PodTemplate
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedReplicationControllerRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1ReplicationController, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1ReplicationController
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedResourceQuotaRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1ResourceQuota, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1ResourceQuota
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedSecretRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Secret, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Secret
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedServiceRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Service, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Service
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedServiceAccountRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1ServiceAccount, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1ServiceAccount
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NamespacedServiceAccountTokenRequest(r *http.Request, span trace.Span) (req IoK8sAPIAuthenticationV1TokenRequest, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAuthenticationV1TokenRequest
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NodeRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Node, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Node
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1PersistentVolumeRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1PersistentVolume, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1PersistentVolume
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateDiscoveryV1NamespacedEndpointSliceRequest(r *http.Request, span trace.Span) (req IoK8sAPIDiscoveryV1EndpointSlice, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIDiscoveryV1EndpointSlice
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateDiscoveryV1beta1NamespacedEndpointSliceRequest(r *http.Request, span trace.Span) (req IoK8sAPIDiscoveryV1beta1EndpointSlice, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIDiscoveryV1beta1EndpointSlice
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateEventsV1NamespacedEventRequest(r *http.Request, span trace.Span) (req IoK8sAPIEventsV1Event, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIEventsV1Event
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateEventsV1beta1NamespacedEventRequest(r *http.Request, span trace.Span) (req IoK8sAPIEventsV1beta1Event, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIEventsV1beta1Event
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateFlowcontrolApiserverV1beta1FlowSchemaRequest(r *http.Request, span trace.Span) (req IoK8sAPIFlowcontrolV1beta1FlowSchema, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta1FlowSchema
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateFlowcontrolApiserverV1beta1PriorityLevelConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sAPIFlowcontrolV1beta1PriorityLevelConfiguration, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta1PriorityLevelConfiguration
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateFlowcontrolApiserverV1beta2FlowSchemaRequest(r *http.Request, span trace.Span) (req IoK8sAPIFlowcontrolV1beta2FlowSchema, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta2FlowSchema
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateFlowcontrolApiserverV1beta2PriorityLevelConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sAPIFlowcontrolV1beta2PriorityLevelConfiguration, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta2PriorityLevelConfiguration
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateInternalApiserverV1alpha1StorageVersionRequest(r *http.Request, span trace.Span) (req IoK8sAPIApiserverinternalV1alpha1StorageVersion, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIApiserverinternalV1alpha1StorageVersion
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateNetworkingV1IngressClassRequest(r *http.Request, span trace.Span) (req IoK8sAPINetworkingV1IngressClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINetworkingV1IngressClass
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateNetworkingV1NamespacedIngressRequest(r *http.Request, span trace.Span) (req IoK8sAPINetworkingV1Ingress, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINetworkingV1Ingress
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateNetworkingV1NamespacedNetworkPolicyRequest(r *http.Request, span trace.Span) (req IoK8sAPINetworkingV1NetworkPolicy, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINetworkingV1NetworkPolicy
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateNodeV1RuntimeClassRequest(r *http.Request, span trace.Span) (req IoK8sAPINodeV1RuntimeClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINodeV1RuntimeClass
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateNodeV1alpha1RuntimeClassRequest(r *http.Request, span trace.Span) (req IoK8sAPINodeV1alpha1RuntimeClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINodeV1alpha1RuntimeClass
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateNodeV1beta1RuntimeClassRequest(r *http.Request, span trace.Span) (req IoK8sAPINodeV1beta1RuntimeClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINodeV1beta1RuntimeClass
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreatePolicyV1NamespacedPodDisruptionBudgetRequest(r *http.Request, span trace.Span) (req IoK8sAPIPolicyV1PodDisruptionBudget, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIPolicyV1PodDisruptionBudget
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreatePolicyV1beta1NamespacedPodDisruptionBudgetRequest(r *http.Request, span trace.Span) (req IoK8sAPIPolicyV1beta1PodDisruptionBudget, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIPolicyV1beta1PodDisruptionBudget
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreatePolicyV1beta1PodSecurityPolicyRequest(r *http.Request, span trace.Span) (req IoK8sAPIPolicyV1beta1PodSecurityPolicy, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIPolicyV1beta1PodSecurityPolicy
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateRbacAuthorizationV1ClusterRoleRequest(r *http.Request, span trace.Span) (req IoK8sAPIRbacV1ClusterRole, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIRbacV1ClusterRole
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateRbacAuthorizationV1ClusterRoleBindingRequest(r *http.Request, span trace.Span) (req IoK8sAPIRbacV1ClusterRoleBinding, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIRbacV1ClusterRoleBinding
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateRbacAuthorizationV1NamespacedRoleRequest(r *http.Request, span trace.Span) (req IoK8sAPIRbacV1Role, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIRbacV1Role
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateRbacAuthorizationV1NamespacedRoleBindingRequest(r *http.Request, span trace.Span) (req IoK8sAPIRbacV1RoleBinding, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIRbacV1RoleBinding
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateSchedulingV1PriorityClassRequest(r *http.Request, span trace.Span) (req IoK8sAPISchedulingV1PriorityClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPISchedulingV1PriorityClass
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateStorageV1CSIDriverRequest(r *http.Request, span trace.Span) (req IoK8sAPIStorageV1CSIDriver, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1CSIDriver
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateStorageV1CSINodeRequest(r *http.Request, span trace.Span) (req IoK8sAPIStorageV1CSINode, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1CSINode
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateStorageV1StorageClassRequest(r *http.Request, span trace.Span) (req IoK8sAPIStorageV1StorageClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1StorageClass
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateStorageV1VolumeAttachmentRequest(r *http.Request, span trace.Span) (req IoK8sAPIStorageV1VolumeAttachment, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1VolumeAttachment
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateStorageV1alpha1NamespacedCSIStorageCapacityRequest(r *http.Request, span trace.Span) (req IoK8sAPIStorageV1alpha1CSIStorageCapacity, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1alpha1CSIStorageCapacity
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateStorageV1beta1NamespacedCSIStorageCapacityRequest(r *http.Request, span trace.Span) (req IoK8sAPIStorageV1beta1CSIStorageCapacity, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1beta1CSIStorageCapacity
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAdmissionregistrationV1MutatingWebhookConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAdmissionregistrationV1ValidatingWebhookConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteApiextensionsV1CollectionCustomResourceDefinitionRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteApiextensionsV1CustomResourceDefinitionRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteApiregistrationV1APIServiceRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteApiregistrationV1CollectionAPIServiceRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAppsV1CollectionNamespacedControllerRevisionRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAppsV1CollectionNamespacedDaemonSetRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAppsV1CollectionNamespacedDeploymentRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAppsV1CollectionNamespacedReplicaSetRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAppsV1CollectionNamespacedStatefulSetRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAppsV1NamespacedControllerRevisionRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAppsV1NamespacedDaemonSetRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAppsV1NamespacedDeploymentRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAppsV1NamespacedReplicaSetRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAppsV1NamespacedStatefulSetRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAutoscalingV1NamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAutoscalingV2beta2CollectionNamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAutoscalingV2beta2NamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteBatchV1CollectionNamespacedCronJobRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteBatchV1CollectionNamespacedJobRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteBatchV1NamespacedCronJobRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteBatchV1NamespacedJobRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteBatchV1beta1CollectionNamespacedCronJobRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteBatchV1beta1NamespacedCronJobRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCertificatesV1CertificateSigningRequestRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCertificatesV1CollectionCertificateSigningRequestRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoordinationV1CollectionNamespacedLeaseRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoordinationV1NamespacedLeaseRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionNamespacedConfigMapRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionNamespacedEndpointsRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionNamespacedEventRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionNamespacedLimitRangeRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionNamespacedPersistentVolumeClaimRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionNamespacedPodRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionNamespacedPodTemplateRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionNamespacedReplicationControllerRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionNamespacedResourceQuotaRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionNamespacedSecretRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionNamespacedServiceRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionNamespacedServiceAccountRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionNodeRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionPersistentVolumeRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1NamespaceRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1NamespacedConfigMapRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1NamespacedEndpointsRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1NamespacedEventRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1NamespacedLimitRangeRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1NamespacedPersistentVolumeClaimRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1NamespacedPodRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1NamespacedPodTemplateRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1NamespacedReplicationControllerRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1NamespacedResourceQuotaRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1NamespacedSecretRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1NamespacedServiceRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1NamespacedServiceAccountRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1NodeRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1PersistentVolumeRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteDiscoveryV1CollectionNamespacedEndpointSliceRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteDiscoveryV1NamespacedEndpointSliceRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteDiscoveryV1beta1CollectionNamespacedEndpointSliceRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteDiscoveryV1beta1NamespacedEndpointSliceRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteEventsV1CollectionNamespacedEventRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteEventsV1NamespacedEventRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteEventsV1beta1CollectionNamespacedEventRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteEventsV1beta1NamespacedEventRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteFlowcontrolApiserverV1beta1CollectionFlowSchemaRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteFlowcontrolApiserverV1beta1CollectionPriorityLevelConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteFlowcontrolApiserverV1beta1FlowSchemaRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteFlowcontrolApiserverV1beta1PriorityLevelConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteFlowcontrolApiserverV1beta2CollectionFlowSchemaRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteFlowcontrolApiserverV1beta2CollectionPriorityLevelConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteFlowcontrolApiserverV1beta2FlowSchemaRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteFlowcontrolApiserverV1beta2PriorityLevelConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteInternalApiserverV1alpha1CollectionStorageVersionRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteInternalApiserverV1alpha1StorageVersionRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNetworkingV1CollectionIngressClassRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNetworkingV1CollectionNamespacedIngressRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNetworkingV1CollectionNamespacedNetworkPolicyRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNetworkingV1IngressClassRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNetworkingV1NamespacedIngressRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNetworkingV1NamespacedNetworkPolicyRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNodeV1CollectionRuntimeClassRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNodeV1RuntimeClassRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNodeV1alpha1CollectionRuntimeClassRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNodeV1alpha1RuntimeClassRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNodeV1beta1CollectionRuntimeClassRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNodeV1beta1RuntimeClassRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeletePolicyV1CollectionNamespacedPodDisruptionBudgetRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeletePolicyV1NamespacedPodDisruptionBudgetRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeletePolicyV1beta1CollectionPodSecurityPolicyRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeletePolicyV1beta1NamespacedPodDisruptionBudgetRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeletePolicyV1beta1PodSecurityPolicyRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteRbacAuthorizationV1ClusterRoleRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteRbacAuthorizationV1ClusterRoleBindingRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteRbacAuthorizationV1CollectionClusterRoleRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteRbacAuthorizationV1CollectionClusterRoleBindingRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteRbacAuthorizationV1CollectionNamespacedRoleRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteRbacAuthorizationV1CollectionNamespacedRoleBindingRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteRbacAuthorizationV1NamespacedRoleRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteRbacAuthorizationV1NamespacedRoleBindingRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteSchedulingV1CollectionPriorityClassRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteSchedulingV1PriorityClassRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1CSIDriverRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1CSINodeRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1CollectionCSIDriverRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1CollectionCSINodeRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1CollectionStorageClassRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1CollectionVolumeAttachmentRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1StorageClassRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1VolumeAttachmentRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1alpha1CollectionNamespacedCSIStorageCapacityRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1alpha1NamespacedCSIStorageCapacityRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1beta1CollectionNamespacedCSIStorageCapacityRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1beta1NamespacedCSIStorageCapacityRequest(r *http.Request, span trace.Span) (req IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAdmissionregistrationV1MutatingWebhookConfigurationRequest(r *http.Request, span trace.Span) (req PatchAdmissionregistrationV1MutatingWebhookConfigurationReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAdmissionregistrationV1MutatingWebhookConfigurationApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAdmissionregistrationV1MutatingWebhookConfigurationApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAdmissionregistrationV1MutatingWebhookConfigurationApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAdmissionregistrationV1MutatingWebhookConfigurationApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAdmissionregistrationV1ValidatingWebhookConfigurationRequest(r *http.Request, span trace.Span) (req PatchAdmissionregistrationV1ValidatingWebhookConfigurationReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAdmissionregistrationV1ValidatingWebhookConfigurationApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAdmissionregistrationV1ValidatingWebhookConfigurationApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAdmissionregistrationV1ValidatingWebhookConfigurationApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAdmissionregistrationV1ValidatingWebhookConfigurationApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchApiextensionsV1CustomResourceDefinitionRequest(r *http.Request, span trace.Span) (req PatchApiextensionsV1CustomResourceDefinitionReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchApiextensionsV1CustomResourceDefinitionApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchApiextensionsV1CustomResourceDefinitionApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchApiextensionsV1CustomResourceDefinitionApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchApiextensionsV1CustomResourceDefinitionApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchApiextensionsV1CustomResourceDefinitionStatusRequest(r *http.Request, span trace.Span) (req PatchApiextensionsV1CustomResourceDefinitionStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchApiextensionsV1CustomResourceDefinitionStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchApiextensionsV1CustomResourceDefinitionStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchApiextensionsV1CustomResourceDefinitionStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchApiextensionsV1CustomResourceDefinitionStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchApiregistrationV1APIServiceRequest(r *http.Request, span trace.Span) (req PatchApiregistrationV1APIServiceReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchApiregistrationV1APIServiceApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchApiregistrationV1APIServiceApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchApiregistrationV1APIServiceApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchApiregistrationV1APIServiceApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchApiregistrationV1APIServiceStatusRequest(r *http.Request, span trace.Span) (req PatchApiregistrationV1APIServiceStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchApiregistrationV1APIServiceStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchApiregistrationV1APIServiceStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchApiregistrationV1APIServiceStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchApiregistrationV1APIServiceStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAppsV1NamespacedControllerRevisionRequest(r *http.Request, span trace.Span) (req PatchAppsV1NamespacedControllerRevisionReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAppsV1NamespacedControllerRevisionApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAppsV1NamespacedControllerRevisionApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAppsV1NamespacedControllerRevisionApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAppsV1NamespacedControllerRevisionApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAppsV1NamespacedDaemonSetRequest(r *http.Request, span trace.Span) (req PatchAppsV1NamespacedDaemonSetReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAppsV1NamespacedDaemonSetApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAppsV1NamespacedDaemonSetApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAppsV1NamespacedDaemonSetApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAppsV1NamespacedDaemonSetApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAppsV1NamespacedDaemonSetStatusRequest(r *http.Request, span trace.Span) (req PatchAppsV1NamespacedDaemonSetStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAppsV1NamespacedDaemonSetStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAppsV1NamespacedDaemonSetStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAppsV1NamespacedDaemonSetStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAppsV1NamespacedDaemonSetStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAppsV1NamespacedDeploymentRequest(r *http.Request, span trace.Span) (req PatchAppsV1NamespacedDeploymentReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAppsV1NamespacedDeploymentApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAppsV1NamespacedDeploymentApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAppsV1NamespacedDeploymentApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAppsV1NamespacedDeploymentApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAppsV1NamespacedDeploymentScaleRequest(r *http.Request, span trace.Span) (req PatchAppsV1NamespacedDeploymentScaleReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAppsV1NamespacedDeploymentScaleApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAppsV1NamespacedDeploymentScaleApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAppsV1NamespacedDeploymentScaleApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAppsV1NamespacedDeploymentScaleApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAppsV1NamespacedDeploymentStatusRequest(r *http.Request, span trace.Span) (req PatchAppsV1NamespacedDeploymentStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAppsV1NamespacedDeploymentStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAppsV1NamespacedDeploymentStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAppsV1NamespacedDeploymentStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAppsV1NamespacedDeploymentStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAppsV1NamespacedReplicaSetRequest(r *http.Request, span trace.Span) (req PatchAppsV1NamespacedReplicaSetReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAppsV1NamespacedReplicaSetApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAppsV1NamespacedReplicaSetApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAppsV1NamespacedReplicaSetApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAppsV1NamespacedReplicaSetApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAppsV1NamespacedReplicaSetScaleRequest(r *http.Request, span trace.Span) (req PatchAppsV1NamespacedReplicaSetScaleReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAppsV1NamespacedReplicaSetScaleApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAppsV1NamespacedReplicaSetScaleApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAppsV1NamespacedReplicaSetScaleApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAppsV1NamespacedReplicaSetScaleApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAppsV1NamespacedReplicaSetStatusRequest(r *http.Request, span trace.Span) (req PatchAppsV1NamespacedReplicaSetStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAppsV1NamespacedReplicaSetStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAppsV1NamespacedReplicaSetStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAppsV1NamespacedReplicaSetStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAppsV1NamespacedReplicaSetStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAppsV1NamespacedStatefulSetRequest(r *http.Request, span trace.Span) (req PatchAppsV1NamespacedStatefulSetReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAppsV1NamespacedStatefulSetApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAppsV1NamespacedStatefulSetApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAppsV1NamespacedStatefulSetApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAppsV1NamespacedStatefulSetApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAppsV1NamespacedStatefulSetScaleRequest(r *http.Request, span trace.Span) (req PatchAppsV1NamespacedStatefulSetScaleReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAppsV1NamespacedStatefulSetScaleApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAppsV1NamespacedStatefulSetScaleApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAppsV1NamespacedStatefulSetScaleApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAppsV1NamespacedStatefulSetScaleApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAppsV1NamespacedStatefulSetStatusRequest(r *http.Request, span trace.Span) (req PatchAppsV1NamespacedStatefulSetStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAppsV1NamespacedStatefulSetStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAppsV1NamespacedStatefulSetStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAppsV1NamespacedStatefulSetStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAppsV1NamespacedStatefulSetStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAutoscalingV1NamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req PatchAutoscalingV1NamespacedHorizontalPodAutoscalerReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAutoscalingV1NamespacedHorizontalPodAutoscalerApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAutoscalingV1NamespacedHorizontalPodAutoscalerApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAutoscalingV1NamespacedHorizontalPodAutoscalerApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAutoscalingV1NamespacedHorizontalPodAutoscalerApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusRequest(r *http.Request, span trace.Span) (req PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusRequest(r *http.Request, span trace.Span) (req PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatusRequest(r *http.Request, span trace.Span) (req PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchBatchV1NamespacedCronJobRequest(r *http.Request, span trace.Span) (req PatchBatchV1NamespacedCronJobReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchBatchV1NamespacedCronJobApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchBatchV1NamespacedCronJobApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchBatchV1NamespacedCronJobApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchBatchV1NamespacedCronJobApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchBatchV1NamespacedCronJobStatusRequest(r *http.Request, span trace.Span) (req PatchBatchV1NamespacedCronJobStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchBatchV1NamespacedCronJobStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchBatchV1NamespacedCronJobStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchBatchV1NamespacedCronJobStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchBatchV1NamespacedCronJobStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchBatchV1NamespacedJobRequest(r *http.Request, span trace.Span) (req PatchBatchV1NamespacedJobReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchBatchV1NamespacedJobApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchBatchV1NamespacedJobApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchBatchV1NamespacedJobApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchBatchV1NamespacedJobApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchBatchV1NamespacedJobStatusRequest(r *http.Request, span trace.Span) (req PatchBatchV1NamespacedJobStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchBatchV1NamespacedJobStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchBatchV1NamespacedJobStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchBatchV1NamespacedJobStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchBatchV1NamespacedJobStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchBatchV1beta1NamespacedCronJobRequest(r *http.Request, span trace.Span) (req PatchBatchV1beta1NamespacedCronJobReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchBatchV1beta1NamespacedCronJobApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchBatchV1beta1NamespacedCronJobApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchBatchV1beta1NamespacedCronJobApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchBatchV1beta1NamespacedCronJobApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchBatchV1beta1NamespacedCronJobStatusRequest(r *http.Request, span trace.Span) (req PatchBatchV1beta1NamespacedCronJobStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchBatchV1beta1NamespacedCronJobStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchBatchV1beta1NamespacedCronJobStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchBatchV1beta1NamespacedCronJobStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchBatchV1beta1NamespacedCronJobStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCertificatesV1CertificateSigningRequestRequest(r *http.Request, span trace.Span) (req PatchCertificatesV1CertificateSigningRequestReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCertificatesV1CertificateSigningRequestApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCertificatesV1CertificateSigningRequestApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCertificatesV1CertificateSigningRequestApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCertificatesV1CertificateSigningRequestApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCertificatesV1CertificateSigningRequestApprovalRequest(r *http.Request, span trace.Span) (req PatchCertificatesV1CertificateSigningRequestApprovalReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCertificatesV1CertificateSigningRequestApprovalApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCertificatesV1CertificateSigningRequestApprovalApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCertificatesV1CertificateSigningRequestApprovalApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCertificatesV1CertificateSigningRequestApprovalApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCertificatesV1CertificateSigningRequestStatusRequest(r *http.Request, span trace.Span) (req PatchCertificatesV1CertificateSigningRequestStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCertificatesV1CertificateSigningRequestStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCertificatesV1CertificateSigningRequestStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCertificatesV1CertificateSigningRequestStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCertificatesV1CertificateSigningRequestStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoordinationV1NamespacedLeaseRequest(r *http.Request, span trace.Span) (req PatchCoordinationV1NamespacedLeaseReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoordinationV1NamespacedLeaseApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoordinationV1NamespacedLeaseApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoordinationV1NamespacedLeaseApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoordinationV1NamespacedLeaseApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespaceRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespaceReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespaceApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespaceApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespaceApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespaceApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespaceStatusRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespaceStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespaceStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespaceStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespaceStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespaceStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedConfigMapRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedConfigMapReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedConfigMapApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedConfigMapApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedConfigMapApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedConfigMapApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedEndpointsRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedEndpointsReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedEndpointsApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedEndpointsApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedEndpointsApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedEndpointsApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedEventRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedEventReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedEventApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedEventApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedEventApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedEventApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedLimitRangeRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedLimitRangeReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedLimitRangeApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedLimitRangeApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedLimitRangeApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedLimitRangeApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedPersistentVolumeClaimRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedPersistentVolumeClaimReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedPersistentVolumeClaimApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedPersistentVolumeClaimApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedPersistentVolumeClaimApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedPersistentVolumeClaimApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedPersistentVolumeClaimStatusRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedPersistentVolumeClaimStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedPersistentVolumeClaimStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedPersistentVolumeClaimStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedPersistentVolumeClaimStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedPersistentVolumeClaimStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedPodRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedPodReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedPodApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedPodApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedPodApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedPodApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedPodEphemeralcontainersRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedPodEphemeralcontainersReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedPodEphemeralcontainersApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedPodEphemeralcontainersApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedPodEphemeralcontainersApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedPodEphemeralcontainersApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedPodStatusRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedPodStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedPodStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedPodStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedPodStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedPodStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedPodTemplateRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedPodTemplateReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedPodTemplateApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedPodTemplateApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedPodTemplateApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedPodTemplateApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedReplicationControllerRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedReplicationControllerReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedReplicationControllerApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedReplicationControllerApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedReplicationControllerApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedReplicationControllerApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedReplicationControllerScaleRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedReplicationControllerScaleReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedReplicationControllerScaleApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedReplicationControllerScaleApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedReplicationControllerScaleApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedReplicationControllerScaleApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedReplicationControllerStatusRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedReplicationControllerStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedReplicationControllerStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedReplicationControllerStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedReplicationControllerStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedReplicationControllerStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedResourceQuotaRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedResourceQuotaReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedResourceQuotaApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedResourceQuotaApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedResourceQuotaApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedResourceQuotaApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedResourceQuotaStatusRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedResourceQuotaStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedResourceQuotaStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedResourceQuotaStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedResourceQuotaStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedResourceQuotaStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedSecretRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedSecretReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedSecretApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedSecretApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedSecretApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedSecretApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedServiceRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedServiceReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedServiceApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedServiceApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedServiceApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedServiceApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedServiceAccountRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedServiceAccountReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedServiceAccountApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedServiceAccountApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedServiceAccountApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedServiceAccountApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NamespacedServiceStatusRequest(r *http.Request, span trace.Span) (req PatchCoreV1NamespacedServiceStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NamespacedServiceStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NamespacedServiceStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NamespacedServiceStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NamespacedServiceStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NodeRequest(r *http.Request, span trace.Span) (req PatchCoreV1NodeReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NodeApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NodeApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NodeApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NodeApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1NodeStatusRequest(r *http.Request, span trace.Span) (req PatchCoreV1NodeStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1NodeStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1NodeStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1NodeStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1NodeStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1PersistentVolumeRequest(r *http.Request, span trace.Span) (req PatchCoreV1PersistentVolumeReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1PersistentVolumeApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1PersistentVolumeApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1PersistentVolumeApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1PersistentVolumeApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchCoreV1PersistentVolumeStatusRequest(r *http.Request, span trace.Span) (req PatchCoreV1PersistentVolumeStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchCoreV1PersistentVolumeStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchCoreV1PersistentVolumeStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchCoreV1PersistentVolumeStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchCoreV1PersistentVolumeStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchDiscoveryV1NamespacedEndpointSliceRequest(r *http.Request, span trace.Span) (req PatchDiscoveryV1NamespacedEndpointSliceReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchDiscoveryV1NamespacedEndpointSliceApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchDiscoveryV1NamespacedEndpointSliceApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchDiscoveryV1NamespacedEndpointSliceApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchDiscoveryV1NamespacedEndpointSliceApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchDiscoveryV1beta1NamespacedEndpointSliceRequest(r *http.Request, span trace.Span) (req PatchDiscoveryV1beta1NamespacedEndpointSliceReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchDiscoveryV1beta1NamespacedEndpointSliceApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchDiscoveryV1beta1NamespacedEndpointSliceApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchDiscoveryV1beta1NamespacedEndpointSliceApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchDiscoveryV1beta1NamespacedEndpointSliceApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchEventsV1NamespacedEventRequest(r *http.Request, span trace.Span) (req PatchEventsV1NamespacedEventReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchEventsV1NamespacedEventApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchEventsV1NamespacedEventApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchEventsV1NamespacedEventApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchEventsV1NamespacedEventApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchEventsV1beta1NamespacedEventRequest(r *http.Request, span trace.Span) (req PatchEventsV1beta1NamespacedEventReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchEventsV1beta1NamespacedEventApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchEventsV1beta1NamespacedEventApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchEventsV1beta1NamespacedEventApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchEventsV1beta1NamespacedEventApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchFlowcontrolApiserverV1beta1FlowSchemaRequest(r *http.Request, span trace.Span) (req PatchFlowcontrolApiserverV1beta1FlowSchemaReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchFlowcontrolApiserverV1beta1FlowSchemaApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchFlowcontrolApiserverV1beta1FlowSchemaApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta1FlowSchemaApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta1FlowSchemaApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchFlowcontrolApiserverV1beta1FlowSchemaStatusRequest(r *http.Request, span trace.Span) (req PatchFlowcontrolApiserverV1beta1FlowSchemaStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchFlowcontrolApiserverV1beta1FlowSchemaStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchFlowcontrolApiserverV1beta1FlowSchemaStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta1FlowSchemaStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta1FlowSchemaStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationRequest(r *http.Request, span trace.Span) (req PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatusRequest(r *http.Request, span trace.Span) (req PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchFlowcontrolApiserverV1beta2FlowSchemaRequest(r *http.Request, span trace.Span) (req PatchFlowcontrolApiserverV1beta2FlowSchemaReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchFlowcontrolApiserverV1beta2FlowSchemaApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchFlowcontrolApiserverV1beta2FlowSchemaApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta2FlowSchemaApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta2FlowSchemaApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchFlowcontrolApiserverV1beta2FlowSchemaStatusRequest(r *http.Request, span trace.Span) (req PatchFlowcontrolApiserverV1beta2FlowSchemaStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchFlowcontrolApiserverV1beta2FlowSchemaStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchFlowcontrolApiserverV1beta2FlowSchemaStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta2FlowSchemaStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta2FlowSchemaStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationRequest(r *http.Request, span trace.Span) (req PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatusRequest(r *http.Request, span trace.Span) (req PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchInternalApiserverV1alpha1StorageVersionRequest(r *http.Request, span trace.Span) (req PatchInternalApiserverV1alpha1StorageVersionReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchInternalApiserverV1alpha1StorageVersionApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchInternalApiserverV1alpha1StorageVersionApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchInternalApiserverV1alpha1StorageVersionApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchInternalApiserverV1alpha1StorageVersionApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchInternalApiserverV1alpha1StorageVersionStatusRequest(r *http.Request, span trace.Span) (req PatchInternalApiserverV1alpha1StorageVersionStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchInternalApiserverV1alpha1StorageVersionStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchInternalApiserverV1alpha1StorageVersionStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchInternalApiserverV1alpha1StorageVersionStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchInternalApiserverV1alpha1StorageVersionStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchNetworkingV1IngressClassRequest(r *http.Request, span trace.Span) (req PatchNetworkingV1IngressClassReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchNetworkingV1IngressClassApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchNetworkingV1IngressClassApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchNetworkingV1IngressClassApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchNetworkingV1IngressClassApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchNetworkingV1NamespacedIngressRequest(r *http.Request, span trace.Span) (req PatchNetworkingV1NamespacedIngressReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchNetworkingV1NamespacedIngressApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchNetworkingV1NamespacedIngressApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchNetworkingV1NamespacedIngressApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchNetworkingV1NamespacedIngressApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchNetworkingV1NamespacedIngressStatusRequest(r *http.Request, span trace.Span) (req PatchNetworkingV1NamespacedIngressStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchNetworkingV1NamespacedIngressStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchNetworkingV1NamespacedIngressStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchNetworkingV1NamespacedIngressStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchNetworkingV1NamespacedIngressStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchNetworkingV1NamespacedNetworkPolicyRequest(r *http.Request, span trace.Span) (req PatchNetworkingV1NamespacedNetworkPolicyReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchNetworkingV1NamespacedNetworkPolicyApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchNetworkingV1NamespacedNetworkPolicyApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchNetworkingV1NamespacedNetworkPolicyApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchNetworkingV1NamespacedNetworkPolicyApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchNodeV1RuntimeClassRequest(r *http.Request, span trace.Span) (req PatchNodeV1RuntimeClassReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchNodeV1RuntimeClassApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchNodeV1RuntimeClassApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchNodeV1RuntimeClassApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchNodeV1RuntimeClassApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchNodeV1alpha1RuntimeClassRequest(r *http.Request, span trace.Span) (req PatchNodeV1alpha1RuntimeClassReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchNodeV1alpha1RuntimeClassApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchNodeV1alpha1RuntimeClassApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchNodeV1alpha1RuntimeClassApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchNodeV1alpha1RuntimeClassApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchNodeV1beta1RuntimeClassRequest(r *http.Request, span trace.Span) (req PatchNodeV1beta1RuntimeClassReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchNodeV1beta1RuntimeClassApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchNodeV1beta1RuntimeClassApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchNodeV1beta1RuntimeClassApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchNodeV1beta1RuntimeClassApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchPolicyV1NamespacedPodDisruptionBudgetRequest(r *http.Request, span trace.Span) (req PatchPolicyV1NamespacedPodDisruptionBudgetReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchPolicyV1NamespacedPodDisruptionBudgetApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchPolicyV1NamespacedPodDisruptionBudgetApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchPolicyV1NamespacedPodDisruptionBudgetApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchPolicyV1NamespacedPodDisruptionBudgetApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchPolicyV1NamespacedPodDisruptionBudgetStatusRequest(r *http.Request, span trace.Span) (req PatchPolicyV1NamespacedPodDisruptionBudgetStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchPolicyV1NamespacedPodDisruptionBudgetStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchPolicyV1NamespacedPodDisruptionBudgetStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchPolicyV1NamespacedPodDisruptionBudgetStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchPolicyV1NamespacedPodDisruptionBudgetStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchPolicyV1beta1NamespacedPodDisruptionBudgetRequest(r *http.Request, span trace.Span) (req PatchPolicyV1beta1NamespacedPodDisruptionBudgetReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchPolicyV1beta1NamespacedPodDisruptionBudgetApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchPolicyV1beta1NamespacedPodDisruptionBudgetApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchPolicyV1beta1NamespacedPodDisruptionBudgetApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchPolicyV1beta1NamespacedPodDisruptionBudgetApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusRequest(r *http.Request, span trace.Span) (req PatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchPolicyV1beta1PodSecurityPolicyRequest(r *http.Request, span trace.Span) (req PatchPolicyV1beta1PodSecurityPolicyReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchPolicyV1beta1PodSecurityPolicyApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchPolicyV1beta1PodSecurityPolicyApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchPolicyV1beta1PodSecurityPolicyApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchPolicyV1beta1PodSecurityPolicyApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchRbacAuthorizationV1ClusterRoleRequest(r *http.Request, span trace.Span) (req PatchRbacAuthorizationV1ClusterRoleReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchRbacAuthorizationV1ClusterRoleApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchRbacAuthorizationV1ClusterRoleApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchRbacAuthorizationV1ClusterRoleApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchRbacAuthorizationV1ClusterRoleApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchRbacAuthorizationV1ClusterRoleBindingRequest(r *http.Request, span trace.Span) (req PatchRbacAuthorizationV1ClusterRoleBindingReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchRbacAuthorizationV1ClusterRoleBindingApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchRbacAuthorizationV1ClusterRoleBindingApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchRbacAuthorizationV1ClusterRoleBindingApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchRbacAuthorizationV1ClusterRoleBindingApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchRbacAuthorizationV1NamespacedRoleRequest(r *http.Request, span trace.Span) (req PatchRbacAuthorizationV1NamespacedRoleReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchRbacAuthorizationV1NamespacedRoleApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchRbacAuthorizationV1NamespacedRoleApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchRbacAuthorizationV1NamespacedRoleApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchRbacAuthorizationV1NamespacedRoleApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchRbacAuthorizationV1NamespacedRoleBindingRequest(r *http.Request, span trace.Span) (req PatchRbacAuthorizationV1NamespacedRoleBindingReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchRbacAuthorizationV1NamespacedRoleBindingApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchRbacAuthorizationV1NamespacedRoleBindingApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchRbacAuthorizationV1NamespacedRoleBindingApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchRbacAuthorizationV1NamespacedRoleBindingApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchSchedulingV1PriorityClassRequest(r *http.Request, span trace.Span) (req PatchSchedulingV1PriorityClassReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchSchedulingV1PriorityClassApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchSchedulingV1PriorityClassApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchSchedulingV1PriorityClassApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchSchedulingV1PriorityClassApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchStorageV1CSIDriverRequest(r *http.Request, span trace.Span) (req PatchStorageV1CSIDriverReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchStorageV1CSIDriverApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchStorageV1CSIDriverApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchStorageV1CSIDriverApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchStorageV1CSIDriverApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchStorageV1CSINodeRequest(r *http.Request, span trace.Span) (req PatchStorageV1CSINodeReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchStorageV1CSINodeApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchStorageV1CSINodeApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchStorageV1CSINodeApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchStorageV1CSINodeApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchStorageV1StorageClassRequest(r *http.Request, span trace.Span) (req PatchStorageV1StorageClassReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchStorageV1StorageClassApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchStorageV1StorageClassApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchStorageV1StorageClassApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchStorageV1StorageClassApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchStorageV1VolumeAttachmentRequest(r *http.Request, span trace.Span) (req PatchStorageV1VolumeAttachmentReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchStorageV1VolumeAttachmentApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchStorageV1VolumeAttachmentApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchStorageV1VolumeAttachmentApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchStorageV1VolumeAttachmentApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchStorageV1VolumeAttachmentStatusRequest(r *http.Request, span trace.Span) (req PatchStorageV1VolumeAttachmentStatusReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchStorageV1VolumeAttachmentStatusApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchStorageV1VolumeAttachmentStatusApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchStorageV1VolumeAttachmentStatusApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchStorageV1VolumeAttachmentStatusApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchStorageV1alpha1NamespacedCSIStorageCapacityRequest(r *http.Request, span trace.Span) (req PatchStorageV1alpha1NamespacedCSIStorageCapacityReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchStorageV1alpha1NamespacedCSIStorageCapacityApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchStorageV1alpha1NamespacedCSIStorageCapacityApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchStorageV1alpha1NamespacedCSIStorageCapacityApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchStorageV1alpha1NamespacedCSIStorageCapacityApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePatchStorageV1beta1NamespacedCSIStorageCapacityRequest(r *http.Request, span trace.Span) (req PatchStorageV1beta1NamespacedCSIStorageCapacityReq, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/apply-patch+yaml":
		var request PatchStorageV1beta1NamespacedCSIStorageCapacityApplicationApplyPatchYaml
		_ = request
		return req, errors.New("application/apply-patch+yaml decoder not implemented")
	case "application/json-patch+json":
		var request PatchStorageV1beta1NamespacedCSIStorageCapacityApplicationJSONPatchJSON
		_ = request
		return req, errors.New("application/json-patch+json decoder not implemented")
	case "application/merge-patch+json":
		var request PatchStorageV1beta1NamespacedCSIStorageCapacityApplicationMergePatchJSON
		_ = request
		return req, errors.New("application/merge-patch+json decoder not implemented")
	case "application/strategic-merge-patch+json":
		var request PatchStorageV1beta1NamespacedCSIStorageCapacityApplicationStrategicMergePatchJSON
		_ = request
		return req, errors.New("application/strategic-merge-patch+json decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAdmissionregistrationV1MutatingWebhookConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sAPIAdmissionregistrationV1MutatingWebhookConfiguration, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAdmissionregistrationV1MutatingWebhookConfiguration
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAdmissionregistrationV1ValidatingWebhookConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sAPIAdmissionregistrationV1ValidatingWebhookConfiguration, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAdmissionregistrationV1ValidatingWebhookConfiguration
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceApiextensionsV1CustomResourceDefinitionRequest(r *http.Request, span trace.Span) (req IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceApiextensionsV1CustomResourceDefinitionStatusRequest(r *http.Request, span trace.Span) (req IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceApiregistrationV1APIServiceRequest(r *http.Request, span trace.Span) (req IoK8sKubeAggregatorPkgApisApiregistrationV1APIService, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sKubeAggregatorPkgApisApiregistrationV1APIService
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceApiregistrationV1APIServiceStatusRequest(r *http.Request, span trace.Span) (req IoK8sKubeAggregatorPkgApisApiregistrationV1APIService, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sKubeAggregatorPkgApisApiregistrationV1APIService
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAppsV1NamespacedControllerRevisionRequest(r *http.Request, span trace.Span) (req IoK8sAPIAppsV1ControllerRevision, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAppsV1ControllerRevision
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAppsV1NamespacedDaemonSetRequest(r *http.Request, span trace.Span) (req IoK8sAPIAppsV1DaemonSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAppsV1DaemonSet
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAppsV1NamespacedDaemonSetStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIAppsV1DaemonSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAppsV1DaemonSet
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAppsV1NamespacedDeploymentRequest(r *http.Request, span trace.Span) (req IoK8sAPIAppsV1Deployment, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAppsV1Deployment
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAppsV1NamespacedDeploymentScaleRequest(r *http.Request, span trace.Span) (req IoK8sAPIAutoscalingV1Scale, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAutoscalingV1Scale
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAppsV1NamespacedDeploymentStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIAppsV1Deployment, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAppsV1Deployment
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAppsV1NamespacedReplicaSetRequest(r *http.Request, span trace.Span) (req IoK8sAPIAppsV1ReplicaSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAppsV1ReplicaSet
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAppsV1NamespacedReplicaSetScaleRequest(r *http.Request, span trace.Span) (req IoK8sAPIAutoscalingV1Scale, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAutoscalingV1Scale
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAppsV1NamespacedReplicaSetStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIAppsV1ReplicaSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAppsV1ReplicaSet
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAppsV1NamespacedStatefulSetRequest(r *http.Request, span trace.Span) (req IoK8sAPIAppsV1StatefulSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAppsV1StatefulSet
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAppsV1NamespacedStatefulSetScaleRequest(r *http.Request, span trace.Span) (req IoK8sAPIAutoscalingV1Scale, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAutoscalingV1Scale
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAppsV1NamespacedStatefulSetStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIAppsV1StatefulSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAppsV1StatefulSet
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req IoK8sAPIAutoscalingV1HorizontalPodAutoscaler, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAutoscalingV1HorizontalPodAutoscaler
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIAutoscalingV1HorizontalPodAutoscaler, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAutoscalingV1HorizontalPodAutoscaler
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscaler, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscaler
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscaler, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscaler
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAutoscalingV2beta2NamespacedHorizontalPodAutoscalerRequest(r *http.Request, span trace.Span) (req IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscaler, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscaler
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscaler, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscaler
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceBatchV1NamespacedCronJobRequest(r *http.Request, span trace.Span) (req IoK8sAPIBatchV1CronJob, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIBatchV1CronJob
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceBatchV1NamespacedCronJobStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIBatchV1CronJob, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIBatchV1CronJob
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceBatchV1NamespacedJobRequest(r *http.Request, span trace.Span) (req IoK8sAPIBatchV1Job, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIBatchV1Job
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceBatchV1NamespacedJobStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIBatchV1Job, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIBatchV1Job
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceBatchV1beta1NamespacedCronJobRequest(r *http.Request, span trace.Span) (req IoK8sAPIBatchV1beta1CronJob, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIBatchV1beta1CronJob
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceBatchV1beta1NamespacedCronJobStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIBatchV1beta1CronJob, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIBatchV1beta1CronJob
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCertificatesV1CertificateSigningRequestRequest(r *http.Request, span trace.Span) (req IoK8sAPICertificatesV1CertificateSigningRequest, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICertificatesV1CertificateSigningRequest
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCertificatesV1CertificateSigningRequestApprovalRequest(r *http.Request, span trace.Span) (req IoK8sAPICertificatesV1CertificateSigningRequest, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICertificatesV1CertificateSigningRequest
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCertificatesV1CertificateSigningRequestStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPICertificatesV1CertificateSigningRequest, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICertificatesV1CertificateSigningRequest
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoordinationV1NamespacedLeaseRequest(r *http.Request, span trace.Span) (req IoK8sAPICoordinationV1Lease, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoordinationV1Lease
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespaceRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Namespace, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Namespace
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespaceFinalizeRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Namespace, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Namespace
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespaceStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Namespace, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Namespace
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedConfigMapRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1ConfigMap, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1ConfigMap
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedEndpointsRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Endpoints, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Endpoints
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedEventRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Event, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Event
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedLimitRangeRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1LimitRange, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1LimitRange
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedPersistentVolumeClaimRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1PersistentVolumeClaim, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1PersistentVolumeClaim
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedPersistentVolumeClaimStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1PersistentVolumeClaim, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1PersistentVolumeClaim
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedPodRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Pod, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Pod
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedPodEphemeralcontainersRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Pod, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Pod
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedPodStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Pod, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Pod
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedPodTemplateRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1PodTemplate, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1PodTemplate
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedReplicationControllerRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1ReplicationController, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1ReplicationController
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedReplicationControllerScaleRequest(r *http.Request, span trace.Span) (req IoK8sAPIAutoscalingV1Scale, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAutoscalingV1Scale
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedReplicationControllerStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1ReplicationController, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1ReplicationController
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedResourceQuotaRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1ResourceQuota, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1ResourceQuota
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedResourceQuotaStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1ResourceQuota, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1ResourceQuota
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedSecretRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Secret, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Secret
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedServiceRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Service, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Service
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedServiceAccountRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1ServiceAccount, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1ServiceAccount
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NamespacedServiceStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Service, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Service
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NodeRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Node, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Node
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1NodeStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1Node, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Node
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1PersistentVolumeRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1PersistentVolume, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1PersistentVolume
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceCoreV1PersistentVolumeStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPICoreV1PersistentVolume, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1PersistentVolume
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceDiscoveryV1NamespacedEndpointSliceRequest(r *http.Request, span trace.Span) (req IoK8sAPIDiscoveryV1EndpointSlice, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIDiscoveryV1EndpointSlice
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceDiscoveryV1beta1NamespacedEndpointSliceRequest(r *http.Request, span trace.Span) (req IoK8sAPIDiscoveryV1beta1EndpointSlice, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIDiscoveryV1beta1EndpointSlice
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceEventsV1NamespacedEventRequest(r *http.Request, span trace.Span) (req IoK8sAPIEventsV1Event, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIEventsV1Event
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceEventsV1beta1NamespacedEventRequest(r *http.Request, span trace.Span) (req IoK8sAPIEventsV1beta1Event, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIEventsV1beta1Event
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceFlowcontrolApiserverV1beta1FlowSchemaRequest(r *http.Request, span trace.Span) (req IoK8sAPIFlowcontrolV1beta1FlowSchema, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta1FlowSchema
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceFlowcontrolApiserverV1beta1FlowSchemaStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIFlowcontrolV1beta1FlowSchema, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta1FlowSchema
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceFlowcontrolApiserverV1beta1PriorityLevelConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sAPIFlowcontrolV1beta1PriorityLevelConfiguration, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta1PriorityLevelConfiguration
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIFlowcontrolV1beta1PriorityLevelConfiguration, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta1PriorityLevelConfiguration
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceFlowcontrolApiserverV1beta2FlowSchemaRequest(r *http.Request, span trace.Span) (req IoK8sAPIFlowcontrolV1beta2FlowSchema, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta2FlowSchema
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceFlowcontrolApiserverV1beta2FlowSchemaStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIFlowcontrolV1beta2FlowSchema, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta2FlowSchema
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceFlowcontrolApiserverV1beta2PriorityLevelConfigurationRequest(r *http.Request, span trace.Span) (req IoK8sAPIFlowcontrolV1beta2PriorityLevelConfiguration, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta2PriorityLevelConfiguration
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIFlowcontrolV1beta2PriorityLevelConfiguration, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta2PriorityLevelConfiguration
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceInternalApiserverV1alpha1StorageVersionRequest(r *http.Request, span trace.Span) (req IoK8sAPIApiserverinternalV1alpha1StorageVersion, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIApiserverinternalV1alpha1StorageVersion
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceInternalApiserverV1alpha1StorageVersionStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIApiserverinternalV1alpha1StorageVersion, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIApiserverinternalV1alpha1StorageVersion
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceNetworkingV1IngressClassRequest(r *http.Request, span trace.Span) (req IoK8sAPINetworkingV1IngressClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINetworkingV1IngressClass
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceNetworkingV1NamespacedIngressRequest(r *http.Request, span trace.Span) (req IoK8sAPINetworkingV1Ingress, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINetworkingV1Ingress
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceNetworkingV1NamespacedIngressStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPINetworkingV1Ingress, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINetworkingV1Ingress
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceNetworkingV1NamespacedNetworkPolicyRequest(r *http.Request, span trace.Span) (req IoK8sAPINetworkingV1NetworkPolicy, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINetworkingV1NetworkPolicy
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceNodeV1RuntimeClassRequest(r *http.Request, span trace.Span) (req IoK8sAPINodeV1RuntimeClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINodeV1RuntimeClass
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceNodeV1alpha1RuntimeClassRequest(r *http.Request, span trace.Span) (req IoK8sAPINodeV1alpha1RuntimeClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINodeV1alpha1RuntimeClass
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceNodeV1beta1RuntimeClassRequest(r *http.Request, span trace.Span) (req IoK8sAPINodeV1beta1RuntimeClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINodeV1beta1RuntimeClass
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplacePolicyV1NamespacedPodDisruptionBudgetRequest(r *http.Request, span trace.Span) (req IoK8sAPIPolicyV1PodDisruptionBudget, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIPolicyV1PodDisruptionBudget
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplacePolicyV1NamespacedPodDisruptionBudgetStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIPolicyV1PodDisruptionBudget, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIPolicyV1PodDisruptionBudget
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplacePolicyV1beta1NamespacedPodDisruptionBudgetRequest(r *http.Request, span trace.Span) (req IoK8sAPIPolicyV1beta1PodDisruptionBudget, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIPolicyV1beta1PodDisruptionBudget
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplacePolicyV1beta1NamespacedPodDisruptionBudgetStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIPolicyV1beta1PodDisruptionBudget, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIPolicyV1beta1PodDisruptionBudget
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplacePolicyV1beta1PodSecurityPolicyRequest(r *http.Request, span trace.Span) (req IoK8sAPIPolicyV1beta1PodSecurityPolicy, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIPolicyV1beta1PodSecurityPolicy
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceRbacAuthorizationV1ClusterRoleRequest(r *http.Request, span trace.Span) (req IoK8sAPIRbacV1ClusterRole, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIRbacV1ClusterRole
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceRbacAuthorizationV1ClusterRoleBindingRequest(r *http.Request, span trace.Span) (req IoK8sAPIRbacV1ClusterRoleBinding, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIRbacV1ClusterRoleBinding
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceRbacAuthorizationV1NamespacedRoleRequest(r *http.Request, span trace.Span) (req IoK8sAPIRbacV1Role, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIRbacV1Role
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceRbacAuthorizationV1NamespacedRoleBindingRequest(r *http.Request, span trace.Span) (req IoK8sAPIRbacV1RoleBinding, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIRbacV1RoleBinding
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceSchedulingV1PriorityClassRequest(r *http.Request, span trace.Span) (req IoK8sAPISchedulingV1PriorityClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPISchedulingV1PriorityClass
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceStorageV1CSIDriverRequest(r *http.Request, span trace.Span) (req IoK8sAPIStorageV1CSIDriver, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1CSIDriver
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceStorageV1CSINodeRequest(r *http.Request, span trace.Span) (req IoK8sAPIStorageV1CSINode, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1CSINode
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceStorageV1StorageClassRequest(r *http.Request, span trace.Span) (req IoK8sAPIStorageV1StorageClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1StorageClass
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceStorageV1VolumeAttachmentRequest(r *http.Request, span trace.Span) (req IoK8sAPIStorageV1VolumeAttachment, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1VolumeAttachment
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceStorageV1VolumeAttachmentStatusRequest(r *http.Request, span trace.Span) (req IoK8sAPIStorageV1VolumeAttachment, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1VolumeAttachment
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceStorageV1alpha1NamespacedCSIStorageCapacityRequest(r *http.Request, span trace.Span) (req IoK8sAPIStorageV1alpha1CSIStorageCapacity, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1alpha1CSIStorageCapacity
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeReplaceStorageV1beta1NamespacedCSIStorageCapacityRequest(r *http.Request, span trace.Span) (req IoK8sAPIStorageV1beta1CSIStorageCapacity, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1beta1CSIStorageCapacity
		_ = request
		return req, errors.New("*/* decoder not implemented")
	default:
		return req, errors.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}
