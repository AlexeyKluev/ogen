// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
)

func decodeCreateCoreV1NamespaceRequest(r *http.Request) (req IoK8sAPICoreV1Namespace, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Namespace
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1NodeRequest(r *http.Request) (req IoK8sAPICoreV1Node, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1Node
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionNodeRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCoreV1PersistentVolumeRequest(r *http.Request) (req IoK8sAPICoreV1PersistentVolume, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICoreV1PersistentVolume
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCoreV1CollectionPersistentVolumeRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAdmissionregistrationV1MutatingWebhookConfigurationRequest(r *http.Request) (req IoK8sAPIAdmissionregistrationV1MutatingWebhookConfiguration, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAdmissionregistrationV1MutatingWebhookConfiguration
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAdmissionregistrationV1ValidatingWebhookConfigurationRequest(r *http.Request) (req IoK8sAPIAdmissionregistrationV1ValidatingWebhookConfiguration, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAdmissionregistrationV1ValidatingWebhookConfiguration
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateApiextensionsV1CustomResourceDefinitionRequest(r *http.Request) (req IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteApiextensionsV1CollectionCustomResourceDefinitionRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateApiregistrationV1APIServiceRequest(r *http.Request) (req IoK8sKubeAggregatorPkgApisApiregistrationV1APIService, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sKubeAggregatorPkgApisApiregistrationV1APIService
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteApiregistrationV1CollectionAPIServiceRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAuthenticationV1TokenReviewRequest(r *http.Request) (req IoK8sAPIAuthenticationV1TokenReview, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAuthenticationV1TokenReview
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAuthorizationV1SelfSubjectAccessReviewRequest(r *http.Request) (req IoK8sAPIAuthorizationV1SelfSubjectAccessReview, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAuthorizationV1SelfSubjectAccessReview
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAuthorizationV1SelfSubjectRulesReviewRequest(r *http.Request) (req IoK8sAPIAuthorizationV1SelfSubjectRulesReview, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAuthorizationV1SelfSubjectRulesReview
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateAuthorizationV1SubjectAccessReviewRequest(r *http.Request) (req IoK8sAPIAuthorizationV1SubjectAccessReview, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIAuthorizationV1SubjectAccessReview
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateCertificatesV1CertificateSigningRequestRequest(r *http.Request) (req IoK8sAPICertificatesV1CertificateSigningRequest, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPICertificatesV1CertificateSigningRequest
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteCertificatesV1CollectionCertificateSigningRequestRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateFlowcontrolApiserverV1beta1FlowSchemaRequest(r *http.Request) (req IoK8sAPIFlowcontrolV1beta1FlowSchema, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta1FlowSchema
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteFlowcontrolApiserverV1beta1CollectionFlowSchemaRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateFlowcontrolApiserverV1beta1PriorityLevelConfigurationRequest(r *http.Request) (req IoK8sAPIFlowcontrolV1beta1PriorityLevelConfiguration, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta1PriorityLevelConfiguration
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteFlowcontrolApiserverV1beta1CollectionPriorityLevelConfigurationRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateFlowcontrolApiserverV1beta2FlowSchemaRequest(r *http.Request) (req IoK8sAPIFlowcontrolV1beta2FlowSchema, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta2FlowSchema
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteFlowcontrolApiserverV1beta2CollectionFlowSchemaRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateFlowcontrolApiserverV1beta2PriorityLevelConfigurationRequest(r *http.Request) (req IoK8sAPIFlowcontrolV1beta2PriorityLevelConfiguration, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIFlowcontrolV1beta2PriorityLevelConfiguration
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteFlowcontrolApiserverV1beta2CollectionPriorityLevelConfigurationRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateInternalApiserverV1alpha1StorageVersionRequest(r *http.Request) (req IoK8sAPIApiserverinternalV1alpha1StorageVersion, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIApiserverinternalV1alpha1StorageVersion
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteInternalApiserverV1alpha1CollectionStorageVersionRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateNetworkingV1IngressClassRequest(r *http.Request) (req IoK8sAPINetworkingV1IngressClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINetworkingV1IngressClass
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNetworkingV1CollectionIngressClassRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateNodeV1RuntimeClassRequest(r *http.Request) (req IoK8sAPINodeV1RuntimeClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINodeV1RuntimeClass
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNodeV1CollectionRuntimeClassRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateNodeV1alpha1RuntimeClassRequest(r *http.Request) (req IoK8sAPINodeV1alpha1RuntimeClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINodeV1alpha1RuntimeClass
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNodeV1alpha1CollectionRuntimeClassRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateNodeV1beta1RuntimeClassRequest(r *http.Request) (req IoK8sAPINodeV1beta1RuntimeClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPINodeV1beta1RuntimeClass
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteNodeV1beta1CollectionRuntimeClassRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreatePolicyV1beta1PodSecurityPolicyRequest(r *http.Request) (req IoK8sAPIPolicyV1beta1PodSecurityPolicy, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIPolicyV1beta1PodSecurityPolicy
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeletePolicyV1beta1CollectionPodSecurityPolicyRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateRbacAuthorizationV1ClusterRoleBindingRequest(r *http.Request) (req IoK8sAPIRbacV1ClusterRoleBinding, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIRbacV1ClusterRoleBinding
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteRbacAuthorizationV1CollectionClusterRoleBindingRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateRbacAuthorizationV1ClusterRoleRequest(r *http.Request) (req IoK8sAPIRbacV1ClusterRole, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIRbacV1ClusterRole
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteRbacAuthorizationV1CollectionClusterRoleRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateSchedulingV1PriorityClassRequest(r *http.Request) (req IoK8sAPISchedulingV1PriorityClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPISchedulingV1PriorityClass
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteSchedulingV1CollectionPriorityClassRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateStorageV1CSIDriverRequest(r *http.Request) (req IoK8sAPIStorageV1CSIDriver, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1CSIDriver
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1CollectionCSIDriverRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateStorageV1CSINodeRequest(r *http.Request) (req IoK8sAPIStorageV1CSINode, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1CSINode
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1CollectionCSINodeRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateStorageV1StorageClassRequest(r *http.Request) (req IoK8sAPIStorageV1StorageClass, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1StorageClass
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1CollectionStorageClassRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateStorageV1VolumeAttachmentRequest(r *http.Request) (req IoK8sAPIStorageV1VolumeAttachment, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sAPIStorageV1VolumeAttachment
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStorageV1CollectionVolumeAttachmentRequest(r *http.Request) (req *IoK8sApimachineryPkgApisMetaV1DeleteOptions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "*/*":
		var request IoK8sApimachineryPkgApisMetaV1DeleteOptions
		_ = request
		return req, fmt.Errorf("*/* decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}
