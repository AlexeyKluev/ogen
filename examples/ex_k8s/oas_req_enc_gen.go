// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/errors"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
)

func encodeCreateAdmissionregistrationV1MutatingWebhookConfigurationRequest(req IoK8sAPIAdmissionregistrationV1MutatingWebhookConfiguration, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateAdmissionregistrationV1ValidatingWebhookConfigurationRequest(req IoK8sAPIAdmissionregistrationV1ValidatingWebhookConfiguration, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateApiextensionsV1CustomResourceDefinitionRequest(req IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateApiregistrationV1APIServiceRequest(req IoK8sKubeAggregatorPkgApisApiregistrationV1APIService, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateAppsV1NamespacedControllerRevisionRequest(req IoK8sAPIAppsV1ControllerRevision, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateAppsV1NamespacedDaemonSetRequest(req IoK8sAPIAppsV1DaemonSet, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateAppsV1NamespacedDeploymentRequest(req IoK8sAPIAppsV1Deployment, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateAppsV1NamespacedReplicaSetRequest(req IoK8sAPIAppsV1ReplicaSet, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateAppsV1NamespacedStatefulSetRequest(req IoK8sAPIAppsV1StatefulSet, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateAuthenticationV1TokenReviewRequest(req IoK8sAPIAuthenticationV1TokenReview, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateAuthorizationV1NamespacedLocalSubjectAccessReviewRequest(req IoK8sAPIAuthorizationV1LocalSubjectAccessReview, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateAuthorizationV1SelfSubjectAccessReviewRequest(req IoK8sAPIAuthorizationV1SelfSubjectAccessReview, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateAuthorizationV1SelfSubjectRulesReviewRequest(req IoK8sAPIAuthorizationV1SelfSubjectRulesReview, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateAuthorizationV1SubjectAccessReviewRequest(req IoK8sAPIAuthorizationV1SubjectAccessReview, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateAutoscalingV1NamespacedHorizontalPodAutoscalerRequest(req IoK8sAPIAutoscalingV1HorizontalPodAutoscaler, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateAutoscalingV2beta1NamespacedHorizontalPodAutoscalerRequest(req IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscaler, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateAutoscalingV2beta2NamespacedHorizontalPodAutoscalerRequest(req IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscaler, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateBatchV1NamespacedCronJobRequest(req IoK8sAPIBatchV1CronJob, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateBatchV1NamespacedJobRequest(req IoK8sAPIBatchV1Job, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateBatchV1beta1NamespacedCronJobRequest(req IoK8sAPIBatchV1beta1CronJob, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCertificatesV1CertificateSigningRequestRequest(req IoK8sAPICertificatesV1CertificateSigningRequest, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoordinationV1NamespacedLeaseRequest(req IoK8sAPICoordinationV1Lease, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespaceRequest(req IoK8sAPICoreV1Namespace, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedBindingRequest(req IoK8sAPICoreV1Binding, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedConfigMapRequest(req IoK8sAPICoreV1ConfigMap, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedEndpointsRequest(req IoK8sAPICoreV1Endpoints, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedEventRequest(req IoK8sAPICoreV1Event, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedLimitRangeRequest(req IoK8sAPICoreV1LimitRange, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedPersistentVolumeClaimRequest(req IoK8sAPICoreV1PersistentVolumeClaim, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedPodRequest(req IoK8sAPICoreV1Pod, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedPodBindingRequest(req IoK8sAPICoreV1Binding, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedPodEvictionRequest(req IoK8sAPIPolicyV1Eviction, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedPodTemplateRequest(req IoK8sAPICoreV1PodTemplate, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedReplicationControllerRequest(req IoK8sAPICoreV1ReplicationController, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedResourceQuotaRequest(req IoK8sAPICoreV1ResourceQuota, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedSecretRequest(req IoK8sAPICoreV1Secret, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedServiceRequest(req IoK8sAPICoreV1Service, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedServiceAccountRequest(req IoK8sAPICoreV1ServiceAccount, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NamespacedServiceAccountTokenRequest(req IoK8sAPIAuthenticationV1TokenRequest, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1NodeRequest(req IoK8sAPICoreV1Node, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateCoreV1PersistentVolumeRequest(req IoK8sAPICoreV1PersistentVolume, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateDiscoveryV1NamespacedEndpointSliceRequest(req IoK8sAPIDiscoveryV1EndpointSlice, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateDiscoveryV1beta1NamespacedEndpointSliceRequest(req IoK8sAPIDiscoveryV1beta1EndpointSlice, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateEventsV1NamespacedEventRequest(req IoK8sAPIEventsV1Event, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateEventsV1beta1NamespacedEventRequest(req IoK8sAPIEventsV1beta1Event, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateFlowcontrolApiserverV1beta1FlowSchemaRequest(req IoK8sAPIFlowcontrolV1beta1FlowSchema, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateFlowcontrolApiserverV1beta1PriorityLevelConfigurationRequest(req IoK8sAPIFlowcontrolV1beta1PriorityLevelConfiguration, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateFlowcontrolApiserverV1beta2FlowSchemaRequest(req IoK8sAPIFlowcontrolV1beta2FlowSchema, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateFlowcontrolApiserverV1beta2PriorityLevelConfigurationRequest(req IoK8sAPIFlowcontrolV1beta2PriorityLevelConfiguration, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateInternalApiserverV1alpha1StorageVersionRequest(req IoK8sAPIApiserverinternalV1alpha1StorageVersion, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateNetworkingV1IngressClassRequest(req IoK8sAPINetworkingV1IngressClass, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateNetworkingV1NamespacedIngressRequest(req IoK8sAPINetworkingV1Ingress, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateNetworkingV1NamespacedNetworkPolicyRequest(req IoK8sAPINetworkingV1NetworkPolicy, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateNodeV1RuntimeClassRequest(req IoK8sAPINodeV1RuntimeClass, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateNodeV1alpha1RuntimeClassRequest(req IoK8sAPINodeV1alpha1RuntimeClass, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateNodeV1beta1RuntimeClassRequest(req IoK8sAPINodeV1beta1RuntimeClass, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreatePolicyV1NamespacedPodDisruptionBudgetRequest(req IoK8sAPIPolicyV1PodDisruptionBudget, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreatePolicyV1beta1NamespacedPodDisruptionBudgetRequest(req IoK8sAPIPolicyV1beta1PodDisruptionBudget, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreatePolicyV1beta1PodSecurityPolicyRequest(req IoK8sAPIPolicyV1beta1PodSecurityPolicy, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateRbacAuthorizationV1ClusterRoleRequest(req IoK8sAPIRbacV1ClusterRole, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateRbacAuthorizationV1ClusterRoleBindingRequest(req IoK8sAPIRbacV1ClusterRoleBinding, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateRbacAuthorizationV1NamespacedRoleRequest(req IoK8sAPIRbacV1Role, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateRbacAuthorizationV1NamespacedRoleBindingRequest(req IoK8sAPIRbacV1RoleBinding, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateSchedulingV1PriorityClassRequest(req IoK8sAPISchedulingV1PriorityClass, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateStorageV1CSIDriverRequest(req IoK8sAPIStorageV1CSIDriver, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateStorageV1CSINodeRequest(req IoK8sAPIStorageV1CSINode, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateStorageV1StorageClassRequest(req IoK8sAPIStorageV1StorageClass, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateStorageV1VolumeAttachmentRequest(req IoK8sAPIStorageV1VolumeAttachment, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateStorageV1alpha1NamespacedCSIStorageCapacityRequest(req IoK8sAPIStorageV1alpha1CSIStorageCapacity, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeCreateStorageV1beta1NamespacedCSIStorageCapacityRequest(req IoK8sAPIStorageV1beta1CSIStorageCapacity, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAdmissionregistrationV1CollectionMutatingWebhookConfigurationRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAdmissionregistrationV1CollectionValidatingWebhookConfigurationRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAdmissionregistrationV1MutatingWebhookConfigurationRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAdmissionregistrationV1ValidatingWebhookConfigurationRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteApiextensionsV1CollectionCustomResourceDefinitionRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteApiextensionsV1CustomResourceDefinitionRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteApiregistrationV1APIServiceRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteApiregistrationV1CollectionAPIServiceRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAppsV1CollectionNamespacedControllerRevisionRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAppsV1CollectionNamespacedDaemonSetRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAppsV1CollectionNamespacedDeploymentRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAppsV1CollectionNamespacedReplicaSetRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAppsV1CollectionNamespacedStatefulSetRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAppsV1NamespacedControllerRevisionRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAppsV1NamespacedDaemonSetRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAppsV1NamespacedDeploymentRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAppsV1NamespacedReplicaSetRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAppsV1NamespacedStatefulSetRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscalerRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAutoscalingV1NamespacedHorizontalPodAutoscalerRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscalerRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAutoscalingV2beta1NamespacedHorizontalPodAutoscalerRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAutoscalingV2beta2CollectionNamespacedHorizontalPodAutoscalerRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteAutoscalingV2beta2NamespacedHorizontalPodAutoscalerRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteBatchV1CollectionNamespacedCronJobRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteBatchV1CollectionNamespacedJobRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteBatchV1NamespacedCronJobRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteBatchV1NamespacedJobRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteBatchV1beta1CollectionNamespacedCronJobRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteBatchV1beta1NamespacedCronJobRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCertificatesV1CertificateSigningRequestRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCertificatesV1CollectionCertificateSigningRequestRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoordinationV1CollectionNamespacedLeaseRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoordinationV1NamespacedLeaseRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1CollectionNamespacedConfigMapRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1CollectionNamespacedEndpointsRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1CollectionNamespacedEventRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1CollectionNamespacedLimitRangeRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1CollectionNamespacedPersistentVolumeClaimRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1CollectionNamespacedPodRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1CollectionNamespacedPodTemplateRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1CollectionNamespacedReplicationControllerRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1CollectionNamespacedResourceQuotaRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1CollectionNamespacedSecretRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1CollectionNamespacedServiceRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1CollectionNamespacedServiceAccountRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1CollectionNodeRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1CollectionPersistentVolumeRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1NamespaceRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1NamespacedConfigMapRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1NamespacedEndpointsRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1NamespacedEventRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1NamespacedLimitRangeRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1NamespacedPersistentVolumeClaimRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1NamespacedPodRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1NamespacedPodTemplateRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1NamespacedReplicationControllerRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1NamespacedResourceQuotaRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1NamespacedSecretRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1NamespacedServiceRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1NamespacedServiceAccountRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1NodeRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteCoreV1PersistentVolumeRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteDiscoveryV1CollectionNamespacedEndpointSliceRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteDiscoveryV1NamespacedEndpointSliceRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteDiscoveryV1beta1CollectionNamespacedEndpointSliceRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteDiscoveryV1beta1NamespacedEndpointSliceRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteEventsV1CollectionNamespacedEventRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteEventsV1NamespacedEventRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteEventsV1beta1CollectionNamespacedEventRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteEventsV1beta1NamespacedEventRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteFlowcontrolApiserverV1beta1CollectionFlowSchemaRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteFlowcontrolApiserverV1beta1CollectionPriorityLevelConfigurationRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteFlowcontrolApiserverV1beta1FlowSchemaRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteFlowcontrolApiserverV1beta1PriorityLevelConfigurationRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteFlowcontrolApiserverV1beta2CollectionFlowSchemaRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteFlowcontrolApiserverV1beta2CollectionPriorityLevelConfigurationRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteFlowcontrolApiserverV1beta2FlowSchemaRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteFlowcontrolApiserverV1beta2PriorityLevelConfigurationRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteInternalApiserverV1alpha1CollectionStorageVersionRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteInternalApiserverV1alpha1StorageVersionRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteNetworkingV1CollectionIngressClassRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteNetworkingV1CollectionNamespacedIngressRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteNetworkingV1CollectionNamespacedNetworkPolicyRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteNetworkingV1IngressClassRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteNetworkingV1NamespacedIngressRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteNetworkingV1NamespacedNetworkPolicyRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteNodeV1CollectionRuntimeClassRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteNodeV1RuntimeClassRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteNodeV1alpha1CollectionRuntimeClassRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteNodeV1alpha1RuntimeClassRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteNodeV1beta1CollectionRuntimeClassRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteNodeV1beta1RuntimeClassRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeletePolicyV1CollectionNamespacedPodDisruptionBudgetRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeletePolicyV1NamespacedPodDisruptionBudgetRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeletePolicyV1beta1CollectionNamespacedPodDisruptionBudgetRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeletePolicyV1beta1CollectionPodSecurityPolicyRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeletePolicyV1beta1NamespacedPodDisruptionBudgetRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeletePolicyV1beta1PodSecurityPolicyRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteRbacAuthorizationV1ClusterRoleRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteRbacAuthorizationV1ClusterRoleBindingRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteRbacAuthorizationV1CollectionClusterRoleRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteRbacAuthorizationV1CollectionClusterRoleBindingRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteRbacAuthorizationV1CollectionNamespacedRoleRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteRbacAuthorizationV1CollectionNamespacedRoleBindingRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteRbacAuthorizationV1NamespacedRoleRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteRbacAuthorizationV1NamespacedRoleBindingRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteSchedulingV1CollectionPriorityClassRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteSchedulingV1PriorityClassRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteStorageV1CSIDriverRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteStorageV1CSINodeRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteStorageV1CollectionCSIDriverRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteStorageV1CollectionCSINodeRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteStorageV1CollectionStorageClassRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteStorageV1CollectionVolumeAttachmentRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteStorageV1StorageClassRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteStorageV1VolumeAttachmentRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteStorageV1alpha1CollectionNamespacedCSIStorageCapacityRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteStorageV1alpha1NamespacedCSIStorageCapacityRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteStorageV1beta1CollectionNamespacedCSIStorageCapacityRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeDeleteStorageV1beta1NamespacedCSIStorageCapacityRequest(req IoK8sApimachineryPkgApisMetaV1DeleteOptions, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodePatchAdmissionregistrationV1MutatingWebhookConfigurationRequest(req PatchAdmissionregistrationV1MutatingWebhookConfigurationReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAdmissionregistrationV1MutatingWebhookConfigurationApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAdmissionregistrationV1MutatingWebhookConfigurationApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAdmissionregistrationV1MutatingWebhookConfigurationApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAdmissionregistrationV1MutatingWebhookConfigurationApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAdmissionregistrationV1ValidatingWebhookConfigurationRequest(req PatchAdmissionregistrationV1ValidatingWebhookConfigurationReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAdmissionregistrationV1ValidatingWebhookConfigurationApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAdmissionregistrationV1ValidatingWebhookConfigurationApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAdmissionregistrationV1ValidatingWebhookConfigurationApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAdmissionregistrationV1ValidatingWebhookConfigurationApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchApiextensionsV1CustomResourceDefinitionRequest(req PatchApiextensionsV1CustomResourceDefinitionReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchApiextensionsV1CustomResourceDefinitionApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchApiextensionsV1CustomResourceDefinitionApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchApiextensionsV1CustomResourceDefinitionApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchApiextensionsV1CustomResourceDefinitionApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchApiextensionsV1CustomResourceDefinitionStatusRequest(req PatchApiextensionsV1CustomResourceDefinitionStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchApiextensionsV1CustomResourceDefinitionStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchApiextensionsV1CustomResourceDefinitionStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchApiextensionsV1CustomResourceDefinitionStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchApiextensionsV1CustomResourceDefinitionStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchApiregistrationV1APIServiceRequest(req PatchApiregistrationV1APIServiceReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchApiregistrationV1APIServiceApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchApiregistrationV1APIServiceApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchApiregistrationV1APIServiceApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchApiregistrationV1APIServiceApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchApiregistrationV1APIServiceStatusRequest(req PatchApiregistrationV1APIServiceStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchApiregistrationV1APIServiceStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchApiregistrationV1APIServiceStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchApiregistrationV1APIServiceStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchApiregistrationV1APIServiceStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAppsV1NamespacedControllerRevisionRequest(req PatchAppsV1NamespacedControllerRevisionReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAppsV1NamespacedControllerRevisionApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAppsV1NamespacedControllerRevisionApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedControllerRevisionApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedControllerRevisionApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAppsV1NamespacedDaemonSetRequest(req PatchAppsV1NamespacedDaemonSetReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAppsV1NamespacedDaemonSetApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAppsV1NamespacedDaemonSetApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedDaemonSetApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedDaemonSetApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAppsV1NamespacedDaemonSetStatusRequest(req PatchAppsV1NamespacedDaemonSetStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAppsV1NamespacedDaemonSetStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAppsV1NamespacedDaemonSetStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedDaemonSetStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedDaemonSetStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAppsV1NamespacedDeploymentRequest(req PatchAppsV1NamespacedDeploymentReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAppsV1NamespacedDeploymentApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAppsV1NamespacedDeploymentApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedDeploymentApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedDeploymentApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAppsV1NamespacedDeploymentScaleRequest(req PatchAppsV1NamespacedDeploymentScaleReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAppsV1NamespacedDeploymentScaleApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAppsV1NamespacedDeploymentScaleApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedDeploymentScaleApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedDeploymentScaleApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAppsV1NamespacedDeploymentStatusRequest(req PatchAppsV1NamespacedDeploymentStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAppsV1NamespacedDeploymentStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAppsV1NamespacedDeploymentStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedDeploymentStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedDeploymentStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAppsV1NamespacedReplicaSetRequest(req PatchAppsV1NamespacedReplicaSetReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAppsV1NamespacedReplicaSetApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAppsV1NamespacedReplicaSetApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedReplicaSetApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedReplicaSetApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAppsV1NamespacedReplicaSetScaleRequest(req PatchAppsV1NamespacedReplicaSetScaleReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAppsV1NamespacedReplicaSetScaleApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAppsV1NamespacedReplicaSetScaleApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedReplicaSetScaleApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedReplicaSetScaleApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAppsV1NamespacedReplicaSetStatusRequest(req PatchAppsV1NamespacedReplicaSetStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAppsV1NamespacedReplicaSetStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAppsV1NamespacedReplicaSetStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedReplicaSetStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedReplicaSetStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAppsV1NamespacedStatefulSetRequest(req PatchAppsV1NamespacedStatefulSetReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAppsV1NamespacedStatefulSetApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAppsV1NamespacedStatefulSetApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedStatefulSetApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedStatefulSetApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAppsV1NamespacedStatefulSetScaleRequest(req PatchAppsV1NamespacedStatefulSetScaleReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAppsV1NamespacedStatefulSetScaleApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAppsV1NamespacedStatefulSetScaleApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedStatefulSetScaleApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedStatefulSetScaleApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAppsV1NamespacedStatefulSetStatusRequest(req PatchAppsV1NamespacedStatefulSetStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAppsV1NamespacedStatefulSetStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAppsV1NamespacedStatefulSetStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedStatefulSetStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAppsV1NamespacedStatefulSetStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAutoscalingV1NamespacedHorizontalPodAutoscalerRequest(req PatchAutoscalingV1NamespacedHorizontalPodAutoscalerReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAutoscalingV1NamespacedHorizontalPodAutoscalerApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAutoscalingV1NamespacedHorizontalPodAutoscalerApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAutoscalingV1NamespacedHorizontalPodAutoscalerApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAutoscalingV1NamespacedHorizontalPodAutoscalerApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusRequest(req PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerRequest(req PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusRequest(req PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerRequest(req PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatusRequest(req PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchBatchV1NamespacedCronJobRequest(req PatchBatchV1NamespacedCronJobReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchBatchV1NamespacedCronJobApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchBatchV1NamespacedCronJobApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchBatchV1NamespacedCronJobApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchBatchV1NamespacedCronJobApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchBatchV1NamespacedCronJobStatusRequest(req PatchBatchV1NamespacedCronJobStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchBatchV1NamespacedCronJobStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchBatchV1NamespacedCronJobStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchBatchV1NamespacedCronJobStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchBatchV1NamespacedCronJobStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchBatchV1NamespacedJobRequest(req PatchBatchV1NamespacedJobReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchBatchV1NamespacedJobApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchBatchV1NamespacedJobApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchBatchV1NamespacedJobApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchBatchV1NamespacedJobApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchBatchV1NamespacedJobStatusRequest(req PatchBatchV1NamespacedJobStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchBatchV1NamespacedJobStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchBatchV1NamespacedJobStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchBatchV1NamespacedJobStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchBatchV1NamespacedJobStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchBatchV1beta1NamespacedCronJobRequest(req PatchBatchV1beta1NamespacedCronJobReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchBatchV1beta1NamespacedCronJobApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchBatchV1beta1NamespacedCronJobApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchBatchV1beta1NamespacedCronJobApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchBatchV1beta1NamespacedCronJobApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchBatchV1beta1NamespacedCronJobStatusRequest(req PatchBatchV1beta1NamespacedCronJobStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchBatchV1beta1NamespacedCronJobStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchBatchV1beta1NamespacedCronJobStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchBatchV1beta1NamespacedCronJobStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchBatchV1beta1NamespacedCronJobStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCertificatesV1CertificateSigningRequestRequest(req PatchCertificatesV1CertificateSigningRequestReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCertificatesV1CertificateSigningRequestApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCertificatesV1CertificateSigningRequestApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCertificatesV1CertificateSigningRequestApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCertificatesV1CertificateSigningRequestApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCertificatesV1CertificateSigningRequestApprovalRequest(req PatchCertificatesV1CertificateSigningRequestApprovalReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCertificatesV1CertificateSigningRequestApprovalApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCertificatesV1CertificateSigningRequestApprovalApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCertificatesV1CertificateSigningRequestApprovalApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCertificatesV1CertificateSigningRequestApprovalApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCertificatesV1CertificateSigningRequestStatusRequest(req PatchCertificatesV1CertificateSigningRequestStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCertificatesV1CertificateSigningRequestStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCertificatesV1CertificateSigningRequestStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCertificatesV1CertificateSigningRequestStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCertificatesV1CertificateSigningRequestStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoordinationV1NamespacedLeaseRequest(req PatchCoordinationV1NamespacedLeaseReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoordinationV1NamespacedLeaseApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoordinationV1NamespacedLeaseApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoordinationV1NamespacedLeaseApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoordinationV1NamespacedLeaseApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespaceRequest(req PatchCoreV1NamespaceReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespaceApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespaceApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespaceApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespaceApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespaceStatusRequest(req PatchCoreV1NamespaceStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespaceStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespaceStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespaceStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespaceStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedConfigMapRequest(req PatchCoreV1NamespacedConfigMapReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedConfigMapApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedConfigMapApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedConfigMapApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedConfigMapApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedEndpointsRequest(req PatchCoreV1NamespacedEndpointsReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedEndpointsApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedEndpointsApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedEndpointsApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedEndpointsApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedEventRequest(req PatchCoreV1NamespacedEventReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedEventApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedEventApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedEventApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedEventApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedLimitRangeRequest(req PatchCoreV1NamespacedLimitRangeReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedLimitRangeApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedLimitRangeApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedLimitRangeApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedLimitRangeApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedPersistentVolumeClaimRequest(req PatchCoreV1NamespacedPersistentVolumeClaimReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedPersistentVolumeClaimApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedPersistentVolumeClaimApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedPersistentVolumeClaimApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedPersistentVolumeClaimApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedPersistentVolumeClaimStatusRequest(req PatchCoreV1NamespacedPersistentVolumeClaimStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedPersistentVolumeClaimStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedPersistentVolumeClaimStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedPersistentVolumeClaimStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedPersistentVolumeClaimStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedPodRequest(req PatchCoreV1NamespacedPodReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedPodApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedPodApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedPodApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedPodApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedPodEphemeralcontainersRequest(req PatchCoreV1NamespacedPodEphemeralcontainersReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedPodEphemeralcontainersApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedPodEphemeralcontainersApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedPodEphemeralcontainersApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedPodEphemeralcontainersApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedPodStatusRequest(req PatchCoreV1NamespacedPodStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedPodStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedPodStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedPodStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedPodStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedPodTemplateRequest(req PatchCoreV1NamespacedPodTemplateReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedPodTemplateApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedPodTemplateApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedPodTemplateApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedPodTemplateApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedReplicationControllerRequest(req PatchCoreV1NamespacedReplicationControllerReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedReplicationControllerApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedReplicationControllerApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedReplicationControllerApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedReplicationControllerApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedReplicationControllerScaleRequest(req PatchCoreV1NamespacedReplicationControllerScaleReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedReplicationControllerScaleApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedReplicationControllerScaleApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedReplicationControllerScaleApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedReplicationControllerScaleApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedReplicationControllerStatusRequest(req PatchCoreV1NamespacedReplicationControllerStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedReplicationControllerStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedReplicationControllerStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedReplicationControllerStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedReplicationControllerStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedResourceQuotaRequest(req PatchCoreV1NamespacedResourceQuotaReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedResourceQuotaApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedResourceQuotaApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedResourceQuotaApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedResourceQuotaApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedResourceQuotaStatusRequest(req PatchCoreV1NamespacedResourceQuotaStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedResourceQuotaStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedResourceQuotaStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedResourceQuotaStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedResourceQuotaStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedSecretRequest(req PatchCoreV1NamespacedSecretReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedSecretApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedSecretApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedSecretApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedSecretApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedServiceRequest(req PatchCoreV1NamespacedServiceReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedServiceApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedServiceApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedServiceApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedServiceApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedServiceAccountRequest(req PatchCoreV1NamespacedServiceAccountReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedServiceAccountApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedServiceAccountApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedServiceAccountApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedServiceAccountApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NamespacedServiceStatusRequest(req PatchCoreV1NamespacedServiceStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NamespacedServiceStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NamespacedServiceStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedServiceStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NamespacedServiceStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NodeRequest(req PatchCoreV1NodeReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NodeApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NodeApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NodeApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NodeApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1NodeStatusRequest(req PatchCoreV1NodeStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1NodeStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1NodeStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1NodeStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1NodeStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1PersistentVolumeRequest(req PatchCoreV1PersistentVolumeReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1PersistentVolumeApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1PersistentVolumeApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1PersistentVolumeApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1PersistentVolumeApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchCoreV1PersistentVolumeStatusRequest(req PatchCoreV1PersistentVolumeStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchCoreV1PersistentVolumeStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchCoreV1PersistentVolumeStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchCoreV1PersistentVolumeStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchCoreV1PersistentVolumeStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchDiscoveryV1NamespacedEndpointSliceRequest(req PatchDiscoveryV1NamespacedEndpointSliceReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchDiscoveryV1NamespacedEndpointSliceApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchDiscoveryV1NamespacedEndpointSliceApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchDiscoveryV1NamespacedEndpointSliceApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchDiscoveryV1NamespacedEndpointSliceApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchDiscoveryV1beta1NamespacedEndpointSliceRequest(req PatchDiscoveryV1beta1NamespacedEndpointSliceReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchDiscoveryV1beta1NamespacedEndpointSliceApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchDiscoveryV1beta1NamespacedEndpointSliceApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchDiscoveryV1beta1NamespacedEndpointSliceApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchDiscoveryV1beta1NamespacedEndpointSliceApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchEventsV1NamespacedEventRequest(req PatchEventsV1NamespacedEventReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchEventsV1NamespacedEventApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchEventsV1NamespacedEventApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchEventsV1NamespacedEventApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchEventsV1NamespacedEventApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchEventsV1beta1NamespacedEventRequest(req PatchEventsV1beta1NamespacedEventReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchEventsV1beta1NamespacedEventApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchEventsV1beta1NamespacedEventApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchEventsV1beta1NamespacedEventApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchEventsV1beta1NamespacedEventApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchFlowcontrolApiserverV1beta1FlowSchemaRequest(req PatchFlowcontrolApiserverV1beta1FlowSchemaReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchFlowcontrolApiserverV1beta1FlowSchemaApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta1FlowSchemaApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta1FlowSchemaApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta1FlowSchemaApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchFlowcontrolApiserverV1beta1FlowSchemaStatusRequest(req PatchFlowcontrolApiserverV1beta1FlowSchemaStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchFlowcontrolApiserverV1beta1FlowSchemaStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta1FlowSchemaStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta1FlowSchemaStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta1FlowSchemaStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationRequest(req PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatusRequest(req PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchFlowcontrolApiserverV1beta2FlowSchemaRequest(req PatchFlowcontrolApiserverV1beta2FlowSchemaReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchFlowcontrolApiserverV1beta2FlowSchemaApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta2FlowSchemaApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta2FlowSchemaApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta2FlowSchemaApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchFlowcontrolApiserverV1beta2FlowSchemaStatusRequest(req PatchFlowcontrolApiserverV1beta2FlowSchemaStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchFlowcontrolApiserverV1beta2FlowSchemaStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta2FlowSchemaStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta2FlowSchemaStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta2FlowSchemaStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationRequest(req PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatusRequest(req PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchInternalApiserverV1alpha1StorageVersionRequest(req PatchInternalApiserverV1alpha1StorageVersionReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchInternalApiserverV1alpha1StorageVersionApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchInternalApiserverV1alpha1StorageVersionApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchInternalApiserverV1alpha1StorageVersionApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchInternalApiserverV1alpha1StorageVersionApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchInternalApiserverV1alpha1StorageVersionStatusRequest(req PatchInternalApiserverV1alpha1StorageVersionStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchInternalApiserverV1alpha1StorageVersionStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchInternalApiserverV1alpha1StorageVersionStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchInternalApiserverV1alpha1StorageVersionStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchInternalApiserverV1alpha1StorageVersionStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchNetworkingV1IngressClassRequest(req PatchNetworkingV1IngressClassReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchNetworkingV1IngressClassApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchNetworkingV1IngressClassApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchNetworkingV1IngressClassApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchNetworkingV1IngressClassApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchNetworkingV1NamespacedIngressRequest(req PatchNetworkingV1NamespacedIngressReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchNetworkingV1NamespacedIngressApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchNetworkingV1NamespacedIngressApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchNetworkingV1NamespacedIngressApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchNetworkingV1NamespacedIngressApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchNetworkingV1NamespacedIngressStatusRequest(req PatchNetworkingV1NamespacedIngressStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchNetworkingV1NamespacedIngressStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchNetworkingV1NamespacedIngressStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchNetworkingV1NamespacedIngressStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchNetworkingV1NamespacedIngressStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchNetworkingV1NamespacedNetworkPolicyRequest(req PatchNetworkingV1NamespacedNetworkPolicyReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchNetworkingV1NamespacedNetworkPolicyApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchNetworkingV1NamespacedNetworkPolicyApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchNetworkingV1NamespacedNetworkPolicyApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchNetworkingV1NamespacedNetworkPolicyApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchNodeV1RuntimeClassRequest(req PatchNodeV1RuntimeClassReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchNodeV1RuntimeClassApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchNodeV1RuntimeClassApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchNodeV1RuntimeClassApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchNodeV1RuntimeClassApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchNodeV1alpha1RuntimeClassRequest(req PatchNodeV1alpha1RuntimeClassReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchNodeV1alpha1RuntimeClassApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchNodeV1alpha1RuntimeClassApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchNodeV1alpha1RuntimeClassApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchNodeV1alpha1RuntimeClassApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchNodeV1beta1RuntimeClassRequest(req PatchNodeV1beta1RuntimeClassReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchNodeV1beta1RuntimeClassApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchNodeV1beta1RuntimeClassApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchNodeV1beta1RuntimeClassApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchNodeV1beta1RuntimeClassApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchPolicyV1NamespacedPodDisruptionBudgetRequest(req PatchPolicyV1NamespacedPodDisruptionBudgetReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchPolicyV1NamespacedPodDisruptionBudgetApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchPolicyV1NamespacedPodDisruptionBudgetApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchPolicyV1NamespacedPodDisruptionBudgetApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchPolicyV1NamespacedPodDisruptionBudgetApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchPolicyV1NamespacedPodDisruptionBudgetStatusRequest(req PatchPolicyV1NamespacedPodDisruptionBudgetStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchPolicyV1NamespacedPodDisruptionBudgetStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchPolicyV1NamespacedPodDisruptionBudgetStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchPolicyV1NamespacedPodDisruptionBudgetStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchPolicyV1NamespacedPodDisruptionBudgetStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchPolicyV1beta1NamespacedPodDisruptionBudgetRequest(req PatchPolicyV1beta1NamespacedPodDisruptionBudgetReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchPolicyV1beta1NamespacedPodDisruptionBudgetApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchPolicyV1beta1NamespacedPodDisruptionBudgetApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchPolicyV1beta1NamespacedPodDisruptionBudgetApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchPolicyV1beta1NamespacedPodDisruptionBudgetApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusRequest(req PatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchPolicyV1beta1NamespacedPodDisruptionBudgetStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchPolicyV1beta1PodSecurityPolicyRequest(req PatchPolicyV1beta1PodSecurityPolicyReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchPolicyV1beta1PodSecurityPolicyApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchPolicyV1beta1PodSecurityPolicyApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchPolicyV1beta1PodSecurityPolicyApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchPolicyV1beta1PodSecurityPolicyApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchRbacAuthorizationV1ClusterRoleRequest(req PatchRbacAuthorizationV1ClusterRoleReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchRbacAuthorizationV1ClusterRoleApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchRbacAuthorizationV1ClusterRoleApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchRbacAuthorizationV1ClusterRoleApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchRbacAuthorizationV1ClusterRoleApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchRbacAuthorizationV1ClusterRoleBindingRequest(req PatchRbacAuthorizationV1ClusterRoleBindingReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchRbacAuthorizationV1ClusterRoleBindingApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchRbacAuthorizationV1ClusterRoleBindingApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchRbacAuthorizationV1ClusterRoleBindingApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchRbacAuthorizationV1ClusterRoleBindingApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchRbacAuthorizationV1NamespacedRoleRequest(req PatchRbacAuthorizationV1NamespacedRoleReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchRbacAuthorizationV1NamespacedRoleApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchRbacAuthorizationV1NamespacedRoleApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchRbacAuthorizationV1NamespacedRoleApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchRbacAuthorizationV1NamespacedRoleApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchRbacAuthorizationV1NamespacedRoleBindingRequest(req PatchRbacAuthorizationV1NamespacedRoleBindingReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchRbacAuthorizationV1NamespacedRoleBindingApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchRbacAuthorizationV1NamespacedRoleBindingApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchRbacAuthorizationV1NamespacedRoleBindingApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchRbacAuthorizationV1NamespacedRoleBindingApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchSchedulingV1PriorityClassRequest(req PatchSchedulingV1PriorityClassReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchSchedulingV1PriorityClassApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchSchedulingV1PriorityClassApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchSchedulingV1PriorityClassApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchSchedulingV1PriorityClassApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchStorageV1CSIDriverRequest(req PatchStorageV1CSIDriverReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchStorageV1CSIDriverApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchStorageV1CSIDriverApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchStorageV1CSIDriverApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchStorageV1CSIDriverApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchStorageV1CSINodeRequest(req PatchStorageV1CSINodeReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchStorageV1CSINodeApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchStorageV1CSINodeApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchStorageV1CSINodeApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchStorageV1CSINodeApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchStorageV1StorageClassRequest(req PatchStorageV1StorageClassReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchStorageV1StorageClassApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchStorageV1StorageClassApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchStorageV1StorageClassApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchStorageV1StorageClassApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchStorageV1VolumeAttachmentRequest(req PatchStorageV1VolumeAttachmentReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchStorageV1VolumeAttachmentApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchStorageV1VolumeAttachmentApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchStorageV1VolumeAttachmentApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchStorageV1VolumeAttachmentApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchStorageV1VolumeAttachmentStatusRequest(req PatchStorageV1VolumeAttachmentStatusReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchStorageV1VolumeAttachmentStatusApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchStorageV1VolumeAttachmentStatusApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchStorageV1VolumeAttachmentStatusApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchStorageV1VolumeAttachmentStatusApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchStorageV1alpha1NamespacedCSIStorageCapacityRequest(req PatchStorageV1alpha1NamespacedCSIStorageCapacityReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchStorageV1alpha1NamespacedCSIStorageCapacityApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchStorageV1alpha1NamespacedCSIStorageCapacityApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchStorageV1alpha1NamespacedCSIStorageCapacityApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchStorageV1alpha1NamespacedCSIStorageCapacityApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodePatchStorageV1beta1NamespacedCSIStorageCapacityRequest(req PatchStorageV1beta1NamespacedCSIStorageCapacityReq, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	switch req := req.(type) {
	case *PatchStorageV1beta1NamespacedCSIStorageCapacityApplicationApplyPatchYaml:
		return nil, "", errors.New(`application/apply-patch+yaml encoder not implemented`)
	case *PatchStorageV1beta1NamespacedCSIStorageCapacityApplicationJSONPatchJSON:
		return nil, "", errors.New(`application/json-patch+json encoder not implemented`)
	case *PatchStorageV1beta1NamespacedCSIStorageCapacityApplicationMergePatchJSON:
		return nil, "", errors.New(`application/merge-patch+json encoder not implemented`)
	case *PatchStorageV1beta1NamespacedCSIStorageCapacityApplicationStrategicMergePatchJSON:
		return nil, "", errors.New(`application/strategic-merge-patch+json encoder not implemented`)
	default:
		return nil, "", errors.Errorf("unexpected request type: %T", req)
	}
}

func encodeReplaceAdmissionregistrationV1MutatingWebhookConfigurationRequest(req IoK8sAPIAdmissionregistrationV1MutatingWebhookConfiguration, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAdmissionregistrationV1ValidatingWebhookConfigurationRequest(req IoK8sAPIAdmissionregistrationV1ValidatingWebhookConfiguration, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceApiextensionsV1CustomResourceDefinitionRequest(req IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceApiextensionsV1CustomResourceDefinitionStatusRequest(req IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinition, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceApiregistrationV1APIServiceRequest(req IoK8sKubeAggregatorPkgApisApiregistrationV1APIService, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceApiregistrationV1APIServiceStatusRequest(req IoK8sKubeAggregatorPkgApisApiregistrationV1APIService, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAppsV1NamespacedControllerRevisionRequest(req IoK8sAPIAppsV1ControllerRevision, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAppsV1NamespacedDaemonSetRequest(req IoK8sAPIAppsV1DaemonSet, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAppsV1NamespacedDaemonSetStatusRequest(req IoK8sAPIAppsV1DaemonSet, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAppsV1NamespacedDeploymentRequest(req IoK8sAPIAppsV1Deployment, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAppsV1NamespacedDeploymentScaleRequest(req IoK8sAPIAutoscalingV1Scale, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAppsV1NamespacedDeploymentStatusRequest(req IoK8sAPIAppsV1Deployment, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAppsV1NamespacedReplicaSetRequest(req IoK8sAPIAppsV1ReplicaSet, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAppsV1NamespacedReplicaSetScaleRequest(req IoK8sAPIAutoscalingV1Scale, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAppsV1NamespacedReplicaSetStatusRequest(req IoK8sAPIAppsV1ReplicaSet, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAppsV1NamespacedStatefulSetRequest(req IoK8sAPIAppsV1StatefulSet, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAppsV1NamespacedStatefulSetScaleRequest(req IoK8sAPIAutoscalingV1Scale, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAppsV1NamespacedStatefulSetStatusRequest(req IoK8sAPIAppsV1StatefulSet, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerRequest(req IoK8sAPIAutoscalingV1HorizontalPodAutoscaler, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatusRequest(req IoK8sAPIAutoscalingV1HorizontalPodAutoscaler, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerRequest(req IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscaler, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatusRequest(req IoK8sAPIAutoscalingV2beta1HorizontalPodAutoscaler, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAutoscalingV2beta2NamespacedHorizontalPodAutoscalerRequest(req IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscaler, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatusRequest(req IoK8sAPIAutoscalingV2beta2HorizontalPodAutoscaler, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceBatchV1NamespacedCronJobRequest(req IoK8sAPIBatchV1CronJob, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceBatchV1NamespacedCronJobStatusRequest(req IoK8sAPIBatchV1CronJob, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceBatchV1NamespacedJobRequest(req IoK8sAPIBatchV1Job, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceBatchV1NamespacedJobStatusRequest(req IoK8sAPIBatchV1Job, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceBatchV1beta1NamespacedCronJobRequest(req IoK8sAPIBatchV1beta1CronJob, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceBatchV1beta1NamespacedCronJobStatusRequest(req IoK8sAPIBatchV1beta1CronJob, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCertificatesV1CertificateSigningRequestRequest(req IoK8sAPICertificatesV1CertificateSigningRequest, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCertificatesV1CertificateSigningRequestApprovalRequest(req IoK8sAPICertificatesV1CertificateSigningRequest, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCertificatesV1CertificateSigningRequestStatusRequest(req IoK8sAPICertificatesV1CertificateSigningRequest, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoordinationV1NamespacedLeaseRequest(req IoK8sAPICoordinationV1Lease, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespaceRequest(req IoK8sAPICoreV1Namespace, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespaceFinalizeRequest(req IoK8sAPICoreV1Namespace, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespaceStatusRequest(req IoK8sAPICoreV1Namespace, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedConfigMapRequest(req IoK8sAPICoreV1ConfigMap, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedEndpointsRequest(req IoK8sAPICoreV1Endpoints, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedEventRequest(req IoK8sAPICoreV1Event, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedLimitRangeRequest(req IoK8sAPICoreV1LimitRange, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedPersistentVolumeClaimRequest(req IoK8sAPICoreV1PersistentVolumeClaim, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedPersistentVolumeClaimStatusRequest(req IoK8sAPICoreV1PersistentVolumeClaim, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedPodRequest(req IoK8sAPICoreV1Pod, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedPodEphemeralcontainersRequest(req IoK8sAPICoreV1Pod, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedPodStatusRequest(req IoK8sAPICoreV1Pod, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedPodTemplateRequest(req IoK8sAPICoreV1PodTemplate, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedReplicationControllerRequest(req IoK8sAPICoreV1ReplicationController, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedReplicationControllerScaleRequest(req IoK8sAPIAutoscalingV1Scale, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedReplicationControllerStatusRequest(req IoK8sAPICoreV1ReplicationController, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedResourceQuotaRequest(req IoK8sAPICoreV1ResourceQuota, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedResourceQuotaStatusRequest(req IoK8sAPICoreV1ResourceQuota, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedSecretRequest(req IoK8sAPICoreV1Secret, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedServiceRequest(req IoK8sAPICoreV1Service, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedServiceAccountRequest(req IoK8sAPICoreV1ServiceAccount, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NamespacedServiceStatusRequest(req IoK8sAPICoreV1Service, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NodeRequest(req IoK8sAPICoreV1Node, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1NodeStatusRequest(req IoK8sAPICoreV1Node, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1PersistentVolumeRequest(req IoK8sAPICoreV1PersistentVolume, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceCoreV1PersistentVolumeStatusRequest(req IoK8sAPICoreV1PersistentVolume, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceDiscoveryV1NamespacedEndpointSliceRequest(req IoK8sAPIDiscoveryV1EndpointSlice, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceDiscoveryV1beta1NamespacedEndpointSliceRequest(req IoK8sAPIDiscoveryV1beta1EndpointSlice, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceEventsV1NamespacedEventRequest(req IoK8sAPIEventsV1Event, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceEventsV1beta1NamespacedEventRequest(req IoK8sAPIEventsV1beta1Event, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceFlowcontrolApiserverV1beta1FlowSchemaRequest(req IoK8sAPIFlowcontrolV1beta1FlowSchema, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceFlowcontrolApiserverV1beta1FlowSchemaStatusRequest(req IoK8sAPIFlowcontrolV1beta1FlowSchema, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceFlowcontrolApiserverV1beta1PriorityLevelConfigurationRequest(req IoK8sAPIFlowcontrolV1beta1PriorityLevelConfiguration, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceFlowcontrolApiserverV1beta1PriorityLevelConfigurationStatusRequest(req IoK8sAPIFlowcontrolV1beta1PriorityLevelConfiguration, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceFlowcontrolApiserverV1beta2FlowSchemaRequest(req IoK8sAPIFlowcontrolV1beta2FlowSchema, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceFlowcontrolApiserverV1beta2FlowSchemaStatusRequest(req IoK8sAPIFlowcontrolV1beta2FlowSchema, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceFlowcontrolApiserverV1beta2PriorityLevelConfigurationRequest(req IoK8sAPIFlowcontrolV1beta2PriorityLevelConfiguration, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceFlowcontrolApiserverV1beta2PriorityLevelConfigurationStatusRequest(req IoK8sAPIFlowcontrolV1beta2PriorityLevelConfiguration, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceInternalApiserverV1alpha1StorageVersionRequest(req IoK8sAPIApiserverinternalV1alpha1StorageVersion, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceInternalApiserverV1alpha1StorageVersionStatusRequest(req IoK8sAPIApiserverinternalV1alpha1StorageVersion, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceNetworkingV1IngressClassRequest(req IoK8sAPINetworkingV1IngressClass, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceNetworkingV1NamespacedIngressRequest(req IoK8sAPINetworkingV1Ingress, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceNetworkingV1NamespacedIngressStatusRequest(req IoK8sAPINetworkingV1Ingress, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceNetworkingV1NamespacedNetworkPolicyRequest(req IoK8sAPINetworkingV1NetworkPolicy, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceNodeV1RuntimeClassRequest(req IoK8sAPINodeV1RuntimeClass, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceNodeV1alpha1RuntimeClassRequest(req IoK8sAPINodeV1alpha1RuntimeClass, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceNodeV1beta1RuntimeClassRequest(req IoK8sAPINodeV1beta1RuntimeClass, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplacePolicyV1NamespacedPodDisruptionBudgetRequest(req IoK8sAPIPolicyV1PodDisruptionBudget, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplacePolicyV1NamespacedPodDisruptionBudgetStatusRequest(req IoK8sAPIPolicyV1PodDisruptionBudget, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplacePolicyV1beta1NamespacedPodDisruptionBudgetRequest(req IoK8sAPIPolicyV1beta1PodDisruptionBudget, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplacePolicyV1beta1NamespacedPodDisruptionBudgetStatusRequest(req IoK8sAPIPolicyV1beta1PodDisruptionBudget, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplacePolicyV1beta1PodSecurityPolicyRequest(req IoK8sAPIPolicyV1beta1PodSecurityPolicy, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceRbacAuthorizationV1ClusterRoleRequest(req IoK8sAPIRbacV1ClusterRole, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceRbacAuthorizationV1ClusterRoleBindingRequest(req IoK8sAPIRbacV1ClusterRoleBinding, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceRbacAuthorizationV1NamespacedRoleRequest(req IoK8sAPIRbacV1Role, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceRbacAuthorizationV1NamespacedRoleBindingRequest(req IoK8sAPIRbacV1RoleBinding, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceSchedulingV1PriorityClassRequest(req IoK8sAPISchedulingV1PriorityClass, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceStorageV1CSIDriverRequest(req IoK8sAPIStorageV1CSIDriver, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceStorageV1CSINodeRequest(req IoK8sAPIStorageV1CSINode, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceStorageV1StorageClassRequest(req IoK8sAPIStorageV1StorageClass, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceStorageV1VolumeAttachmentRequest(req IoK8sAPIStorageV1VolumeAttachment, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceStorageV1VolumeAttachmentStatusRequest(req IoK8sAPIStorageV1VolumeAttachment, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceStorageV1alpha1NamespacedCSIStorageCapacityRequest(req IoK8sAPIStorageV1alpha1CSIStorageCapacity, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}

func encodeReplaceStorageV1beta1NamespacedCSIStorageCapacityRequest(req IoK8sAPIStorageV1beta1CSIStorageCapacity, span trace.Span) (data *bytes.Buffer, contentType string, err error) {
	return nil, "", errors.New(`*/* encoder not implemented`)
}
