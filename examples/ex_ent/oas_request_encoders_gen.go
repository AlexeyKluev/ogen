// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"io"

	"github.com/go-faster/jx"
	"go.opentelemetry.io/otel/trace"
)

func encodeCreatePetRequestJSON(
	req CreatePetReq,
	span trace.Span,
) (
	data func() (io.ReadCloser, error),
	rerr error,
) {
	return func() (io.ReadCloser, error) {
		e := jx.GetEncoder()
		defer jx.PutEncoder(e)

		req.Encode(e)
		return io.NopCloser(bytes.NewReader(e.Bytes())), nil
	}, nil
}
func encodeCreatePetCategoriesRequestJSON(
	req CreatePetCategoriesReq,
	span trace.Span,
) (
	data func() (io.ReadCloser, error),
	rerr error,
) {
	return func() (io.ReadCloser, error) {
		e := jx.GetEncoder()
		defer jx.PutEncoder(e)

		req.Encode(e)
		return io.NopCloser(bytes.NewReader(e.Bytes())), nil
	}, nil
}
func encodeCreatePetFriendsRequestJSON(
	req CreatePetFriendsReq,
	span trace.Span,
) (
	data func() (io.ReadCloser, error),
	rerr error,
) {
	return func() (io.ReadCloser, error) {
		e := jx.GetEncoder()
		defer jx.PutEncoder(e)

		req.Encode(e)
		return io.NopCloser(bytes.NewReader(e.Bytes())), nil
	}, nil
}
func encodeCreatePetOwnerRequestJSON(
	req CreatePetOwnerReq,
	span trace.Span,
) (
	data func() (io.ReadCloser, error),
	rerr error,
) {
	return func() (io.ReadCloser, error) {
		e := jx.GetEncoder()
		defer jx.PutEncoder(e)

		req.Encode(e)
		return io.NopCloser(bytes.NewReader(e.Bytes())), nil
	}, nil
}
func encodeUpdatePetRequestJSON(
	req UpdatePetReq,
	span trace.Span,
) (
	data func() (io.ReadCloser, error),
	rerr error,
) {
	return func() (io.ReadCloser, error) {
		e := jx.GetEncoder()
		defer jx.PutEncoder(e)

		req.Encode(e)
		return io.NopCloser(bytes.NewReader(e.Bytes())), nil
	}, nil
}
