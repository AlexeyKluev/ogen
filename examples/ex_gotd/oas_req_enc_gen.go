// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
)

func encodeAddStickerToSetRequest(req addStickerToSet) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeAnswerCallbackQueryRequest(req answerCallbackQuery) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeAnswerInlineQueryRequest(req answerInlineQuery) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeAnswerPreCheckoutQueryRequest(req answerPreCheckoutQuery) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeAnswerShippingQueryRequest(req answerShippingQuery) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeBanChatMemberRequest(req banChatMember) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeCopyMessageRequest(req copyMessage) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeCreateChatInviteLinkRequest(req createChatInviteLink) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeCreateNewStickerSetRequest(req createNewStickerSet) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeDeleteChatPhotoRequest(req deleteChatPhoto) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeDeleteChatStickerSetRequest(req deleteChatStickerSet) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeDeleteMessageRequest(req deleteMessage) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeDeleteMyCommandsRequest(req deleteMyCommands) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeDeleteStickerFromSetRequest(req deleteStickerFromSet) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeDeleteWebhookRequest(req deleteWebhook) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeEditChatInviteLinkRequest(req editChatInviteLink) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeEditMessageCaptionRequest(req editMessageCaption) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeEditMessageLiveLocationRequest(req editMessageLiveLocation) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeEditMessageMediaRequest(req editMessageMedia) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeEditMessageReplyMarkupRequest(req editMessageReplyMarkup) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeEditMessageTextRequest(req editMessageText) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeExportChatInviteLinkRequest(req exportChatInviteLink) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeForwardMessageRequest(req forwardMessage) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetChatRequest(req getChat) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetChatAdministratorsRequest(req getChatAdministrators) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetChatMemberRequest(req getChatMember) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetChatMemberCountRequest(req getChatMemberCount) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetFileRequest(req getFile) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetGameHighScoresRequest(req getGameHighScores) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetMyCommandsRequest(req getMyCommands) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetStickerSetRequest(req getStickerSet) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetUpdatesRequest(req getUpdates) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetUserProfilePhotosRequest(req getUserProfilePhotos) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeLeaveChatRequest(req leaveChat) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodePinChatMessageRequest(req pinChatMessage) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodePromoteChatMemberRequest(req promoteChatMember) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeRestrictChatMemberRequest(req restrictChatMember) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeRevokeChatInviteLinkRequest(req revokeChatInviteLink) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendAnimationRequest(req sendAnimation) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendAudioRequest(req sendAudio) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendChatActionRequest(req sendChatAction) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendContactRequest(req sendContact) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendDiceRequest(req sendDice) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendDocumentRequest(req sendDocument) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendGameRequest(req sendGame) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendInvoiceRequest(req sendInvoice) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendLocationRequest(req sendLocation) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendMediaGroupRequest(req sendMediaGroup) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendMessageRequest(req sendMessage) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendPhotoRequest(req sendPhoto) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendPollRequest(req sendPoll) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendStickerRequest(req sendSticker) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendVenueRequest(req sendVenue) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendVideoRequest(req sendVideo) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendVideoNoteRequest(req sendVideoNote) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendVoiceRequest(req sendVoice) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetChatAdministratorCustomTitleRequest(req setChatAdministratorCustomTitle) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetChatDescriptionRequest(req setChatDescription) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetChatPermissionsRequest(req setChatPermissions) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetChatPhotoRequest(req setChatPhoto) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetChatStickerSetRequest(req setChatStickerSet) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetChatTitleRequest(req setChatTitle) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetGameScoreRequest(req setGameScore) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetMyCommandsRequest(req setMyCommands) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetPassportDataErrorsRequest(req setPassportDataErrors) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetStickerPositionInSetRequest(req setStickerPositionInSet) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetStickerSetThumbRequest(req setStickerSetThumb) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetWebhookRequest(req setWebhook) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeStopMessageLiveLocationRequest(req stopMessageLiveLocation) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeStopPollRequest(req stopPoll) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeUnbanChatMemberRequest(req unbanChatMember) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeUnpinAllChatMessagesRequest(req unpinAllChatMessages) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeUnpinChatMessageRequest(req unpinChatMessage) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeUploadStickerFileRequest(req uploadStickerFile) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}
