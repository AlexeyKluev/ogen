// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
)

func decodeAddStickerToSetRequest(r *http.Request) (req addStickerToSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request addStickerToSet
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeAnswerCallbackQueryRequest(r *http.Request) (req answerCallbackQuery, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request answerCallbackQuery
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeAnswerInlineQueryRequest(r *http.Request) (req answerInlineQuery, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request answerInlineQuery
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeAnswerPreCheckoutQueryRequest(r *http.Request) (req answerPreCheckoutQuery, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request answerPreCheckoutQuery
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeAnswerShippingQueryRequest(r *http.Request) (req answerShippingQuery, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request answerShippingQuery
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeBanChatMemberRequest(r *http.Request) (req banChatMember, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request banChatMember
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCopyMessageRequest(r *http.Request) (req copyMessage, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request copyMessage
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateChatInviteLinkRequest(r *http.Request) (req createChatInviteLink, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request createChatInviteLink
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeCreateNewStickerSetRequest(r *http.Request) (req createNewStickerSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request createNewStickerSet
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteChatPhotoRequest(r *http.Request) (req deleteChatPhoto, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request deleteChatPhoto
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteChatStickerSetRequest(r *http.Request) (req deleteChatStickerSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request deleteChatStickerSet
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteMessageRequest(r *http.Request) (req deleteMessage, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request deleteMessage
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteMyCommandsRequest(r *http.Request) (req deleteMyCommands, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request deleteMyCommands
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStickerFromSetRequest(r *http.Request) (req deleteStickerFromSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request deleteStickerFromSet
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteWebhookRequest(r *http.Request) (req deleteWebhook, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request deleteWebhook
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeEditChatInviteLinkRequest(r *http.Request) (req editChatInviteLink, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request editChatInviteLink
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeEditMessageCaptionRequest(r *http.Request) (req editMessageCaption, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request editMessageCaption
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeEditMessageLiveLocationRequest(r *http.Request) (req editMessageLiveLocation, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request editMessageLiveLocation
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeEditMessageMediaRequest(r *http.Request) (req editMessageMedia, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request editMessageMedia
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeEditMessageReplyMarkupRequest(r *http.Request) (req editMessageReplyMarkup, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request editMessageReplyMarkup
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeEditMessageTextRequest(r *http.Request) (req editMessageText, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request editMessageText
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeExportChatInviteLinkRequest(r *http.Request) (req exportChatInviteLink, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request exportChatInviteLink
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeForwardMessageRequest(r *http.Request) (req forwardMessage, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request forwardMessage
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetChatRequest(r *http.Request) (req getChat, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request getChat
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetChatAdministratorsRequest(r *http.Request) (req getChatAdministrators, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request getChatAdministrators
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetChatMemberRequest(r *http.Request) (req getChatMember, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request getChatMember
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetChatMemberCountRequest(r *http.Request) (req getChatMemberCount, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request getChatMemberCount
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetFileRequest(r *http.Request) (req getFile, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request getFile
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetGameHighScoresRequest(r *http.Request) (req getGameHighScores, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request getGameHighScores
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetMyCommandsRequest(r *http.Request) (req getMyCommands, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request getMyCommands
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetStickerSetRequest(r *http.Request) (req getStickerSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request getStickerSet
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetUpdatesRequest(r *http.Request) (req getUpdates, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request getUpdates
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetUserProfilePhotosRequest(r *http.Request) (req getUserProfilePhotos, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request getUserProfilePhotos
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeLeaveChatRequest(r *http.Request) (req leaveChat, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request leaveChat
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePinChatMessageRequest(r *http.Request) (req pinChatMessage, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request pinChatMessage
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodePromoteChatMemberRequest(r *http.Request) (req promoteChatMember, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request promoteChatMember
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeRestrictChatMemberRequest(r *http.Request) (req restrictChatMember, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request restrictChatMember
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeRevokeChatInviteLinkRequest(r *http.Request) (req revokeChatInviteLink, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request revokeChatInviteLink
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendAnimationRequest(r *http.Request) (req sendAnimation, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendAnimation
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendAudioRequest(r *http.Request) (req sendAudio, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendAudio
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendChatActionRequest(r *http.Request) (req sendChatAction, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendChatAction
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendContactRequest(r *http.Request) (req sendContact, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendContact
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendDiceRequest(r *http.Request) (req sendDice, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendDice
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendDocumentRequest(r *http.Request) (req sendDocument, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendDocument
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendGameRequest(r *http.Request) (req sendGame, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendGame
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendInvoiceRequest(r *http.Request) (req sendInvoice, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendInvoice
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendLocationRequest(r *http.Request) (req sendLocation, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendLocation
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendMediaGroupRequest(r *http.Request) (req sendMediaGroup, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendMediaGroup
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendMessageRequest(r *http.Request) (req sendMessage, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendMessage
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendPhotoRequest(r *http.Request) (req sendPhoto, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendPhoto
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendPollRequest(r *http.Request) (req sendPoll, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendPoll
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendStickerRequest(r *http.Request) (req sendSticker, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendSticker
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendVenueRequest(r *http.Request) (req sendVenue, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendVenue
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendVideoRequest(r *http.Request) (req sendVideo, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendVideo
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendVideoNoteRequest(r *http.Request) (req sendVideoNote, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendVideoNote
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendVoiceRequest(r *http.Request) (req sendVoice, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request sendVoice
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetChatAdministratorCustomTitleRequest(r *http.Request) (req setChatAdministratorCustomTitle, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request setChatAdministratorCustomTitle
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetChatDescriptionRequest(r *http.Request) (req setChatDescription, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request setChatDescription
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetChatPermissionsRequest(r *http.Request) (req setChatPermissions, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request setChatPermissions
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetChatPhotoRequest(r *http.Request) (req setChatPhoto, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request setChatPhoto
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetChatStickerSetRequest(r *http.Request) (req setChatStickerSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request setChatStickerSet
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetChatTitleRequest(r *http.Request) (req setChatTitle, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request setChatTitle
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetGameScoreRequest(r *http.Request) (req setGameScore, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request setGameScore
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetMyCommandsRequest(r *http.Request) (req setMyCommands, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request setMyCommands
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetPassportDataErrorsRequest(r *http.Request) (req setPassportDataErrors, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request setPassportDataErrors
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetStickerPositionInSetRequest(r *http.Request) (req setStickerPositionInSet, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request setStickerPositionInSet
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetStickerSetThumbRequest(r *http.Request) (req setStickerSetThumb, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request setStickerSetThumb
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetWebhookRequest(r *http.Request) (req setWebhook, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request setWebhook
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeStopMessageLiveLocationRequest(r *http.Request) (req stopMessageLiveLocation, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request stopMessageLiveLocation
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeStopPollRequest(r *http.Request) (req stopPoll, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request stopPoll
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeUnbanChatMemberRequest(r *http.Request) (req unbanChatMember, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request unbanChatMember
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeUnpinAllChatMessagesRequest(r *http.Request) (req unpinAllChatMessages, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request unpinAllChatMessages
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeUnpinChatMessageRequest(r *http.Request) (req unpinChatMessage, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request unpinChatMessage
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeUploadStickerFileRequest(r *http.Request) (req uploadStickerFile, err error) {
	buf := json.GetBuffer()
	defer json.PutBuffer(buf)
	if _, err := io.Copy(buf, r.Body); err != nil {
		return req, err
	}

	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request uploadStickerFile
		i := json.GetIterator()
		defer json.PutIterator(i)
		i.ResetBytes(buf.Bytes())
		if err := func() error {
			if err := request.ReadJSON(i); err != nil {
				return err
			}
			return i.Error
		}(); err != nil {
			return req, err
		}
		return request, nil
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}
