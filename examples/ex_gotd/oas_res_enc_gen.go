// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
)

func encodeAddStickerToSetResponse(response AddStickerToSetResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeAnswerCallbackQueryResponse(response AnswerCallbackQueryResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeAnswerInlineQueryResponse(response AnswerInlineQueryResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeAnswerPreCheckoutQueryResponse(response AnswerPreCheckoutQueryResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeAnswerShippingQueryResponse(response AnswerShippingQueryResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeBanChatMemberResponse(response BanChatMemberResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeCopyMessageResponse(response CopyMessageResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeCreateChatInviteLinkResponse(response CreateChatInviteLinkResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeCreateNewStickerSetResponse(response CreateNewStickerSetResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeDeleteChatPhotoResponse(response DeleteChatPhotoResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeDeleteChatStickerSetResponse(response DeleteChatStickerSetResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeDeleteMessageResponse(response DeleteMessageResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeDeleteMyCommandsResponse(response DeleteMyCommandsResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeDeleteStickerFromSetResponse(response DeleteStickerFromSetResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeDeleteWebhookResponse(response DeleteWebhookResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeEditChatInviteLinkResponse(response EditChatInviteLinkResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeEditMessageCaptionResponse(response EditMessageCaptionResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeEditMessageLiveLocationResponse(response EditMessageLiveLocationResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeEditMessageMediaResponse(response EditMessageMediaResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeEditMessageReplyMarkupResponse(response EditMessageReplyMarkupResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeEditMessageTextResponse(response EditMessageTextResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeExportChatInviteLinkResponse(response ExportChatInviteLinkResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeForwardMessageResponse(response ForwardMessageResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetChatResponse(response GetChatResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetChatAdministratorsResponse(response GetChatAdministratorsResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetChatMemberResponse(response GetChatMemberResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetChatMemberCountResponse(response GetChatMemberCountResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetFileResponse(response GetFileResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetGameHighScoresResponse(response GetGameHighScoresResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetMeResponse(response GetMeResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetMyCommandsResponse(response GetMyCommandsResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetStickerSetResponse(response GetStickerSetResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetUpdatesResponse(response GetUpdatesResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetUserProfilePhotosResponse(response GetUserProfilePhotosResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeLeaveChatResponse(response LeaveChatResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodePinChatMessageResponse(response PinChatMessageResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodePromoteChatMemberResponse(response PromoteChatMemberResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeRestrictChatMemberResponse(response RestrictChatMemberResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeRevokeChatInviteLinkResponse(response RevokeChatInviteLinkResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendAnimationResponse(response SendAnimationResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendAudioResponse(response SendAudioResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendChatActionResponse(response SendChatActionResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendContactResponse(response SendContactResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendDiceResponse(response SendDiceResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendDocumentResponse(response SendDocumentResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendGameResponse(response SendGameResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendInvoiceResponse(response SendInvoiceResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendLocationResponse(response SendLocationResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendMediaGroupResponse(response SendMediaGroupResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendMessageResponse(response SendMessageResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendPhotoResponse(response SendPhotoResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendPollResponse(response SendPollResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendStickerResponse(response SendStickerResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendVenueResponse(response SendVenueResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendVideoResponse(response SendVideoResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendVideoNoteResponse(response SendVideoNoteResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendVoiceResponse(response SendVoiceResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetChatAdministratorCustomTitleResponse(response SetChatAdministratorCustomTitleResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetChatDescriptionResponse(response SetChatDescriptionResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetChatPermissionsResponse(response SetChatPermissionsResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetChatPhotoResponse(response SetChatPhotoResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetChatStickerSetResponse(response SetChatStickerSetResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetChatTitleResponse(response SetChatTitleResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetGameScoreResponse(response SetGameScoreResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetMyCommandsResponse(response SetMyCommandsResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetPassportDataErrorsResponse(response SetPassportDataErrorsResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetStickerPositionInSetResponse(response SetStickerPositionInSetResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetStickerSetThumbResponse(response SetStickerSetThumbResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetWebhookResponse(response SetWebhookResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeStopMessageLiveLocationResponse(response StopMessageLiveLocationResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeStopPollResponse(response StopPollResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeUnbanChatMemberResponse(response UnbanChatMemberResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeUnpinAllChatMessagesResponse(response UnpinAllChatMessagesResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeUnpinChatMessageResponse(response UnpinChatMessageResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeUploadStickerFileResponse(response UploadStickerFileResOKApplicationJSON, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()

	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}
