// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
)

func encodeAddStickerToSetResponse(response AddStickerToSetResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeAnswerCallbackQueryResponse(response AnswerCallbackQueryResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeAnswerInlineQueryResponse(response AnswerInlineQueryResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeAnswerPreCheckoutQueryResponse(response AnswerPreCheckoutQueryResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeAnswerShippingQueryResponse(response AnswerShippingQueryResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeBanChatMemberResponse(response BanChatMemberResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeCopyMessageResponse(response CopyMessageResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeCreateChatInviteLinkResponse(response CreateChatInviteLinkResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeCreateNewStickerSetResponse(response CreateNewStickerSetResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeDeleteChatPhotoResponse(response DeleteChatPhotoResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeDeleteChatStickerSetResponse(response DeleteChatStickerSetResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeDeleteMessageResponse(response DeleteMessageResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeDeleteMyCommandsResponse(response DeleteMyCommandsResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeDeleteStickerFromSetResponse(response DeleteStickerFromSetResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeDeleteWebhookResponse(response DeleteWebhookResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeEditChatInviteLinkResponse(response EditChatInviteLinkResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeEditMessageCaptionResponse(response EditMessageCaptionResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeEditMessageLiveLocationResponse(response EditMessageLiveLocationResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeEditMessageMediaResponse(response EditMessageMediaResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeEditMessageReplyMarkupResponse(response EditMessageReplyMarkupResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeEditMessageTextResponse(response EditMessageTextResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeExportChatInviteLinkResponse(response ExportChatInviteLinkResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeForwardMessageResponse(response ForwardMessageResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetChatResponse(response GetChatResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetChatAdministratorsResponse(response GetChatAdministratorsResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetChatMemberResponse(response GetChatMemberResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetChatMemberCountResponse(response GetChatMemberCountResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetFileResponse(response GetFileResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetGameHighScoresResponse(response GetGameHighScoresResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetMeResponse(response GetMeResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetMyCommandsResponse(response GetMyCommandsResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetStickerSetResponse(response GetStickerSetResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetUpdatesResponse(response GetUpdatesResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeGetUserProfilePhotosResponse(response GetUserProfilePhotosResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeLeaveChatResponse(response LeaveChatResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodePinChatMessageResponse(response PinChatMessageResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodePromoteChatMemberResponse(response PromoteChatMemberResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeRestrictChatMemberResponse(response RestrictChatMemberResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeRevokeChatInviteLinkResponse(response RevokeChatInviteLinkResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendAnimationResponse(response SendAnimationResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendAudioResponse(response SendAudioResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendChatActionResponse(response SendChatActionResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendContactResponse(response SendContactResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendDiceResponse(response SendDiceResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendDocumentResponse(response SendDocumentResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendGameResponse(response SendGameResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendInvoiceResponse(response SendInvoiceResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendLocationResponse(response SendLocationResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendMediaGroupResponse(response SendMediaGroupResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendMessageResponse(response SendMessageResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendPhotoResponse(response SendPhotoResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendPollResponse(response SendPollResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendStickerResponse(response SendStickerResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendVenueResponse(response SendVenueResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendVideoResponse(response SendVideoResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendVideoNoteResponse(response SendVideoNoteResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSendVoiceResponse(response SendVoiceResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetChatAdministratorCustomTitleResponse(response SetChatAdministratorCustomTitleResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetChatDescriptionResponse(response SetChatDescriptionResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetChatPermissionsResponse(response SetChatPermissionsResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetChatPhotoResponse(response SetChatPhotoResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetChatStickerSetResponse(response SetChatStickerSetResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetChatTitleResponse(response SetChatTitleResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetGameScoreResponse(response SetGameScoreResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetMyCommandsResponse(response SetMyCommandsResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetPassportDataErrorsResponse(response SetPassportDataErrorsResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetStickerPositionInSetResponse(response SetStickerPositionInSetResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetStickerSetThumbResponse(response SetStickerSetThumbResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeSetWebhookResponse(response SetWebhookResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeStopMessageLiveLocationResponse(response StopMessageLiveLocationResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeStopPollResponse(response StopPollResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeUnbanChatMemberResponse(response UnbanChatMemberResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeUnpinAllChatMessagesResponse(response UnpinAllChatMessagesResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeUnpinChatMessageResponse(response UnpinChatMessageResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}

func encodeUploadStickerFileResponse(response UploadStickerFileResOK, w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)
	j := json.NewStream(w)
	defer json.PutStream(j)
	more := json.NewMore(j)
	defer more.Reset()
	more.More()
	response.WriteJSON(j)
	if err := j.Flush(); err != nil {
		return err
	}
	return nil
}
