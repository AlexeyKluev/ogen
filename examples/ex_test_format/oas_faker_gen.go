// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"math/big"
	"math/bits"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"sync"
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/codes"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = bits.LeadingZeros64
	_ = big.Rat{}
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = attribute.KeyValue{}
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
	_ = jx.Null
	_ = sync.Pool{}
	_ = codes.Unset
)

// SetFake set fake values.
func (s *Error) SetFake() {
	{

		{
			s.Code.SetFake()
		}
	}
	{

		{
			s.Status.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *NilBool) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilDate) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilDateTime) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilDuration) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilFloat32) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilFloat64) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilIP) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilIPv4) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilIPv6) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilInt) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilInt32) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilInt64) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilString) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilTime) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilURI) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *NilUUID) SetFake() {
	s.Null = true
}

// SetFake set fake values.
func (s *OptBool) SetFake() {
}

// SetFake set fake values.
func (s *OptDate) SetFake() {
}

// SetFake set fake values.
func (s *OptDateTime) SetFake() {
}

// SetFake set fake values.
func (s *OptDuration) SetFake() {
}

// SetFake set fake values.
func (s *OptFloat32) SetFake() {
}

// SetFake set fake values.
func (s *OptFloat64) SetFake() {
}

// SetFake set fake values.
func (s *OptIP) SetFake() {
}

// SetFake set fake values.
func (s *OptIPv4) SetFake() {
}

// SetFake set fake values.
func (s *OptIPv6) SetFake() {
}

// SetFake set fake values.
func (s *OptInt) SetFake() {
}

// SetFake set fake values.
func (s *OptInt32) SetFake() {
}

// SetFake set fake values.
func (s *OptInt64) SetFake() {
}

// SetFake set fake values.
func (s *OptNilBool) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilByte) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilDate) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilDateTime) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilDuration) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilFloat32) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilFloat64) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilIP) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilIPv4) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilIPv6) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilInt) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilInt32) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilInt64) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilString) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilTime) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilURI) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptNilUUID) SetFake() {
	s.Null = true
	s.Set = true
}

// SetFake set fake values.
func (s *OptString) SetFake() {
}

// SetFake set fake values.
func (s *OptTestRequestFormatTestReq) SetFake() {
}

// SetFake set fake values.
func (s *OptTime) SetFake() {
}

// SetFake set fake values.
func (s *OptURI) SetFake() {
}

// SetFake set fake values.
func (s *OptUUID) SetFake() {
}

// SetFake set fake values.
func (s *TestRequestEmptyStructReq) SetFake() {
}

// SetFake set fake values.
func (s *TestRequestFormatTestReq) SetFake() {
	{

		{
			s.RequiredAny = []byte("null")
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayAny = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayBoolean = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayInteger = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayIntegerInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayIntegerInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumber = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumberDouble = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumberFloat = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumberInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumberInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayString = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringBinary = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringByte = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringDate = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringDateMinusTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringDuration = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringEmail = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringHostname = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringIP = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringIpv4 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringIpv6 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringPassword = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringURI = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringUUID = nil
		}
	}
	{

		{
			s.RequiredBoolean = true
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayAny = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayBoolean = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayInteger = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayIntegerInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayIntegerInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumber = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumberDouble = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumberFloat = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumberInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumberInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayString = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringBinary = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringByte = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringDate = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringDateMinusTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringDuration = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringEmail = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringHostname = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringIP = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringIpv4 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringIpv6 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringPassword = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringURI = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringUUID = nil
		}
	}
	{

		{
			s.RequiredInteger = int(0)
		}
	}
	{

		{
			s.RequiredIntegerInt32 = int32(0)
		}
	}
	{

		{
			s.RequiredIntegerInt64 = int64(0)
		}
	}
	{

		{
			s.RequiredNumber = float64(0)
		}
	}
	{

		{
			s.RequiredNumberDouble = float64(0)
		}
	}
	{

		{
			s.RequiredNumberFloat = float32(0)
		}
	}
	{

		{
			s.RequiredNumberInt32 = int32(0)
		}
	}
	{

		{
			s.RequiredNumberInt64 = int64(0)
		}
	}
	{

		{
			s.RequiredString = "string"
		}
	}
	{

		{
			s.RequiredStringBinary = "string"
		}
	}
	{

		{
			s.RequiredStringByte = []byte("[]byte")
		}
	}
	{

		{
			s.RequiredStringDate = time.Now()
		}
	}
	{

		{
			s.RequiredStringDateMinusTime = time.Now()
		}
	}
	{

		{
			s.RequiredStringDuration = time.Duration(5 * time.Second)
		}
	}
	{

		{
			s.RequiredStringEmail = "string"
		}
	}
	{

		{
			s.RequiredStringHostname = "string"
		}
	}
	{

		{
			s.RequiredStringIP = net.ParseIP("127.0.0.1")
		}
	}
	{

		{
			s.RequiredStringIpv4 = net.ParseIP("127.0.0.1")
		}
	}
	{

		{
			s.RequiredStringIpv6 = net.ParseIP("127.0.0.1")
		}
	}
	{

		{
			s.RequiredStringPassword = "string"
		}
	}
	{

		{
			s.RequiredStringTime = time.Now()
		}
	}
	{

		{
			s.RequiredStringURI = url.URL{Scheme: "https", Host: "github.com", Path: "/ogen-go/ogen"}
		}
	}
	{

		{
			s.RequiredStringUUID = uuid.New()
		}
	}
	{

		{
			s.OptionalAny = []byte("null")
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayAny = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayBoolean = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayInteger = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayIntegerInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayIntegerInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumber = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumberDouble = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumberFloat = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumberInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumberInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayString = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringBinary = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringByte = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringDate = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringDateMinusTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringDuration = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringEmail = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringHostname = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringIP = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringIpv4 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringIpv6 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringPassword = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringURI = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringUUID = nil
		}
	}
	{

		{
			s.OptionalBoolean.SetFake()
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayAny = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayBoolean = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayInteger = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayIntegerInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayIntegerInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumber = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumberDouble = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumberFloat = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumberInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumberInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayString = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringBinary = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringByte = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringDate = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringDateMinusTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringDuration = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringEmail = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringHostname = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringIP = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringIpv4 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringIpv6 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringPassword = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringURI = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringUUID = nil
		}
	}
	{

		{
			s.OptionalInteger.SetFake()
		}
	}
	{

		{
			s.OptionalIntegerInt32.SetFake()
		}
	}
	{

		{
			s.OptionalIntegerInt64.SetFake()
		}
	}
	{

		{
			s.OptionalNumber.SetFake()
		}
	}
	{

		{
			s.OptionalNumberDouble.SetFake()
		}
	}
	{

		{
			s.OptionalNumberFloat.SetFake()
		}
	}
	{

		{
			s.OptionalNumberInt32.SetFake()
		}
	}
	{

		{
			s.OptionalNumberInt64.SetFake()
		}
	}
	{

		{
			s.OptionalString.SetFake()
		}
	}
	{

		{
			s.OptionalStringBinary.SetFake()
		}
	}
	{

		{
			s.OptionalStringByte = []byte("[]byte")
		}
	}
	{

		{
			s.OptionalStringDate.SetFake()
		}
	}
	{

		{
			s.OptionalStringDateMinusTime.SetFake()
		}
	}
	{

		{
			s.OptionalStringDuration.SetFake()
		}
	}
	{

		{
			s.OptionalStringEmail.SetFake()
		}
	}
	{

		{
			s.OptionalStringHostname.SetFake()
		}
	}
	{

		{
			s.OptionalStringIP.SetFake()
		}
	}
	{

		{
			s.OptionalStringIpv4.SetFake()
		}
	}
	{

		{
			s.OptionalStringIpv6.SetFake()
		}
	}
	{

		{
			s.OptionalStringPassword.SetFake()
		}
	}
	{

		{
			s.OptionalStringTime.SetFake()
		}
	}
	{

		{
			s.OptionalStringURI.SetFake()
		}
	}
	{

		{
			s.OptionalStringUUID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TestRequestRequiredEmptyStructReq) SetFake() {
}

// SetFake set fake values.
func (s *TestRequestRequiredFormatTestReq) SetFake() {
	{

		{
			s.RequiredAny = []byte("null")
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayAny = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayBoolean = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayInteger = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayIntegerInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayIntegerInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumber = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumberDouble = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumberFloat = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumberInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumberInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayString = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringBinary = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringByte = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringDate = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringDateMinusTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringDuration = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringEmail = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringHostname = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringIP = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringIpv4 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringIpv6 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringPassword = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringURI = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringUUID = nil
		}
	}
	{

		{
			s.RequiredBoolean = true
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayAny = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayBoolean = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayInteger = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayIntegerInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayIntegerInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumber = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumberDouble = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumberFloat = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumberInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumberInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayString = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringBinary = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringByte = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringDate = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringDateMinusTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringDuration = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringEmail = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringHostname = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringIP = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringIpv4 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringIpv6 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringPassword = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringURI = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringUUID = nil
		}
	}
	{

		{
			s.RequiredInteger = int(0)
		}
	}
	{

		{
			s.RequiredIntegerInt32 = int32(0)
		}
	}
	{

		{
			s.RequiredIntegerInt64 = int64(0)
		}
	}
	{

		{
			s.RequiredNumber = float64(0)
		}
	}
	{

		{
			s.RequiredNumberDouble = float64(0)
		}
	}
	{

		{
			s.RequiredNumberFloat = float32(0)
		}
	}
	{

		{
			s.RequiredNumberInt32 = int32(0)
		}
	}
	{

		{
			s.RequiredNumberInt64 = int64(0)
		}
	}
	{

		{
			s.RequiredString = "string"
		}
	}
	{

		{
			s.RequiredStringBinary = "string"
		}
	}
	{

		{
			s.RequiredStringByte = []byte("[]byte")
		}
	}
	{

		{
			s.RequiredStringDate = time.Now()
		}
	}
	{

		{
			s.RequiredStringDateMinusTime = time.Now()
		}
	}
	{

		{
			s.RequiredStringDuration = time.Duration(5 * time.Second)
		}
	}
	{

		{
			s.RequiredStringEmail = "string"
		}
	}
	{

		{
			s.RequiredStringHostname = "string"
		}
	}
	{

		{
			s.RequiredStringIP = net.ParseIP("127.0.0.1")
		}
	}
	{

		{
			s.RequiredStringIpv4 = net.ParseIP("127.0.0.1")
		}
	}
	{

		{
			s.RequiredStringIpv6 = net.ParseIP("127.0.0.1")
		}
	}
	{

		{
			s.RequiredStringPassword = "string"
		}
	}
	{

		{
			s.RequiredStringTime = time.Now()
		}
	}
	{

		{
			s.RequiredStringURI = url.URL{Scheme: "https", Host: "github.com", Path: "/ogen-go/ogen"}
		}
	}
	{

		{
			s.RequiredStringUUID = uuid.New()
		}
	}
	{

		{
			s.OptionalAny = []byte("null")
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayAny = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayBoolean = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayInteger = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayIntegerInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayIntegerInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumber = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumberDouble = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumberFloat = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumberInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumberInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayString = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringBinary = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringByte = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringDate = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringDateMinusTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringDuration = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringEmail = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringHostname = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringIP = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringIpv4 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringIpv6 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringPassword = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringURI = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringUUID = nil
		}
	}
	{

		{
			s.OptionalBoolean.SetFake()
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayAny = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayBoolean = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayInteger = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayIntegerInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayIntegerInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumber = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumberDouble = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumberFloat = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumberInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumberInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayString = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringBinary = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringByte = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringDate = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringDateMinusTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringDuration = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringEmail = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringHostname = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringIP = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringIpv4 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringIpv6 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringPassword = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringURI = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringUUID = nil
		}
	}
	{

		{
			s.OptionalInteger.SetFake()
		}
	}
	{

		{
			s.OptionalIntegerInt32.SetFake()
		}
	}
	{

		{
			s.OptionalIntegerInt64.SetFake()
		}
	}
	{

		{
			s.OptionalNumber.SetFake()
		}
	}
	{

		{
			s.OptionalNumberDouble.SetFake()
		}
	}
	{

		{
			s.OptionalNumberFloat.SetFake()
		}
	}
	{

		{
			s.OptionalNumberInt32.SetFake()
		}
	}
	{

		{
			s.OptionalNumberInt64.SetFake()
		}
	}
	{

		{
			s.OptionalString.SetFake()
		}
	}
	{

		{
			s.OptionalStringBinary.SetFake()
		}
	}
	{

		{
			s.OptionalStringByte = []byte("[]byte")
		}
	}
	{

		{
			s.OptionalStringDate.SetFake()
		}
	}
	{

		{
			s.OptionalStringDateMinusTime.SetFake()
		}
	}
	{

		{
			s.OptionalStringDuration.SetFake()
		}
	}
	{

		{
			s.OptionalStringEmail.SetFake()
		}
	}
	{

		{
			s.OptionalStringHostname.SetFake()
		}
	}
	{

		{
			s.OptionalStringIP.SetFake()
		}
	}
	{

		{
			s.OptionalStringIpv4.SetFake()
		}
	}
	{

		{
			s.OptionalStringIpv6.SetFake()
		}
	}
	{

		{
			s.OptionalStringPassword.SetFake()
		}
	}
	{

		{
			s.OptionalStringTime.SetFake()
		}
	}
	{

		{
			s.OptionalStringURI.SetFake()
		}
	}
	{

		{
			s.OptionalStringUUID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TestResponseEmptyStructOK) SetFake() {
}

// SetFake set fake values.
func (s *TestResponseFormatTestOK) SetFake() {
	{

		{
			s.RequiredAny = []byte("null")
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayAny = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayBoolean = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayInteger = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayIntegerInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayIntegerInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumber = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumberDouble = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumberFloat = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumberInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayNumberInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayString = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringBinary = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringByte = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringDate = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringDateMinusTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringDuration = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringEmail = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringHostname = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringIP = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringIpv4 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringIpv6 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringPassword = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringURI = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredArrayStringUUID = nil
		}
	}
	{

		{
			s.RequiredBoolean = true
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayAny = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayBoolean = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayInteger = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayIntegerInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayIntegerInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumber = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumberDouble = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumberFloat = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumberInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayNumberInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayString = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringBinary = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringByte = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringDate = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringDateMinusTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringDuration = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringEmail = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringHostname = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringIP = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringIpv4 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringIpv6 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringPassword = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringURI = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.RequiredDoubleArrayStringUUID = nil
		}
	}
	{

		{
			s.RequiredInteger = int(0)
		}
	}
	{

		{
			s.RequiredIntegerInt32 = int32(0)
		}
	}
	{

		{
			s.RequiredIntegerInt64 = int64(0)
		}
	}
	{

		{
			s.RequiredNumber = float64(0)
		}
	}
	{

		{
			s.RequiredNumberDouble = float64(0)
		}
	}
	{

		{
			s.RequiredNumberFloat = float32(0)
		}
	}
	{

		{
			s.RequiredNumberInt32 = int32(0)
		}
	}
	{

		{
			s.RequiredNumberInt64 = int64(0)
		}
	}
	{

		{
			s.RequiredString = "string"
		}
	}
	{

		{
			s.RequiredStringBinary = "string"
		}
	}
	{

		{
			s.RequiredStringByte = []byte("[]byte")
		}
	}
	{

		{
			s.RequiredStringDate = time.Now()
		}
	}
	{

		{
			s.RequiredStringDateMinusTime = time.Now()
		}
	}
	{

		{
			s.RequiredStringDuration = time.Duration(5 * time.Second)
		}
	}
	{

		{
			s.RequiredStringEmail = "string"
		}
	}
	{

		{
			s.RequiredStringHostname = "string"
		}
	}
	{

		{
			s.RequiredStringIP = net.ParseIP("127.0.0.1")
		}
	}
	{

		{
			s.RequiredStringIpv4 = net.ParseIP("127.0.0.1")
		}
	}
	{

		{
			s.RequiredStringIpv6 = net.ParseIP("127.0.0.1")
		}
	}
	{

		{
			s.RequiredStringPassword = "string"
		}
	}
	{

		{
			s.RequiredStringTime = time.Now()
		}
	}
	{

		{
			s.RequiredStringURI = url.URL{Scheme: "https", Host: "github.com", Path: "/ogen-go/ogen"}
		}
	}
	{

		{
			s.RequiredStringUUID = uuid.New()
		}
	}
	{

		{
			s.OptionalAny = []byte("null")
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayAny = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayBoolean = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayInteger = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayIntegerInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayIntegerInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumber = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumberDouble = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumberFloat = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumberInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayNumberInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayString = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringBinary = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringByte = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringDate = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringDateMinusTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringDuration = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringEmail = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringHostname = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringIP = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringIpv4 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringIpv6 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringPassword = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringURI = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalArrayStringUUID = nil
		}
	}
	{

		{
			s.OptionalBoolean.SetFake()
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayAny = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayBoolean = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayInteger = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayIntegerInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayIntegerInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumber = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumberDouble = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumberFloat = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumberInt32 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayNumberInt64 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayString = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringBinary = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringByte = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringDate = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringDateMinusTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringDuration = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringEmail = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringHostname = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringIP = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringIpv4 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringIpv6 = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringPassword = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringTime = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringURI = nil
		}
	}
	{

		{ // Keep slice nil to prevent infinite recursion.
			s.OptionalDoubleArrayStringUUID = nil
		}
	}
	{

		{
			s.OptionalInteger.SetFake()
		}
	}
	{

		{
			s.OptionalIntegerInt32.SetFake()
		}
	}
	{

		{
			s.OptionalIntegerInt64.SetFake()
		}
	}
	{

		{
			s.OptionalNumber.SetFake()
		}
	}
	{

		{
			s.OptionalNumberDouble.SetFake()
		}
	}
	{

		{
			s.OptionalNumberFloat.SetFake()
		}
	}
	{

		{
			s.OptionalNumberInt32.SetFake()
		}
	}
	{

		{
			s.OptionalNumberInt64.SetFake()
		}
	}
	{

		{
			s.OptionalString.SetFake()
		}
	}
	{

		{
			s.OptionalStringBinary.SetFake()
		}
	}
	{

		{
			s.OptionalStringByte = []byte("[]byte")
		}
	}
	{

		{
			s.OptionalStringDate.SetFake()
		}
	}
	{

		{
			s.OptionalStringDateMinusTime.SetFake()
		}
	}
	{

		{
			s.OptionalStringDuration.SetFake()
		}
	}
	{

		{
			s.OptionalStringEmail.SetFake()
		}
	}
	{

		{
			s.OptionalStringHostname.SetFake()
		}
	}
	{

		{
			s.OptionalStringIP.SetFake()
		}
	}
	{

		{
			s.OptionalStringIpv4.SetFake()
		}
	}
	{

		{
			s.OptionalStringIpv6.SetFake()
		}
	}
	{

		{
			s.OptionalStringPassword.SetFake()
		}
	}
	{

		{
			s.OptionalStringTime.SetFake()
		}
	}
	{

		{
			s.OptionalStringURI.SetFake()
		}
	}
	{

		{
			s.OptionalStringUUID.SetFake()
		}
	}
}
