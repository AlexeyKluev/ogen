// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
)

func encodeAnswerCallbackQueryPostRequest(req AnswerCallbackQueryPostRequest) (data []byte, contentType string, err error) {
	switch req := req.(type) {
	case *AnswerCallbackQueryPostApplicationJSONRequest:
		return json.Encode(req), "application/json", nil
	case *AnswerCallbackQueryPostApplicationXWwwFormUrlencodedRequest:
		return nil, "", fmt.Errorf("application/x-www-form-urlencoded encoder not implemented")
	case *AnswerCallbackQueryPostMultipartFormDataRequest:
		return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
	default:
		return nil, "", fmt.Errorf("unexpected request type: %T", req)
	}
}

func encodeAnswerPreCheckoutQueryPostRequest(req AnswerPreCheckoutQueryPostRequest) (data []byte, contentType string, err error) {
	switch req := req.(type) {
	case *AnswerPreCheckoutQueryPostApplicationJSONRequest:
		return json.Encode(req), "application/json", nil
	case *AnswerPreCheckoutQueryPostApplicationXWwwFormUrlencodedRequest:
		return nil, "", fmt.Errorf("application/x-www-form-urlencoded encoder not implemented")
	case *AnswerPreCheckoutQueryPostMultipartFormDataRequest:
		return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
	default:
		return nil, "", fmt.Errorf("unexpected request type: %T", req)
	}
}

func encodeAnswerShippingQueryPostRequest(req AnswerShippingQueryPostRequest) (data []byte, contentType string, err error) {
	switch req := req.(type) {
	case *AnswerShippingQueryPostApplicationJSONRequest:
		return json.Encode(req), "application/json", nil
	case *AnswerShippingQueryPostApplicationXWwwFormUrlencodedRequest:
		return nil, "", fmt.Errorf("application/x-www-form-urlencoded encoder not implemented")
	case *AnswerShippingQueryPostMultipartFormDataRequest:
		return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
	default:
		return nil, "", fmt.Errorf("unexpected request type: %T", req)
	}
}

func encodeDeleteStickerFromSetPostRequest(req DeleteStickerFromSetPostRequest) (data []byte, contentType string, err error) {
	switch req := req.(type) {
	case *DeleteStickerFromSetPostApplicationJSONRequest:
		return json.Encode(req), "application/json", nil
	case *DeleteStickerFromSetPostApplicationXWwwFormUrlencodedRequest:
		return nil, "", fmt.Errorf("application/x-www-form-urlencoded encoder not implemented")
	case *DeleteStickerFromSetPostMultipartFormDataRequest:
		return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
	default:
		return nil, "", fmt.Errorf("unexpected request type: %T", req)
	}
}

func encodeDeleteWebhookPostRequest(req DeleteWebhookPostRequest) (data []byte, contentType string, err error) {
	switch req := req.(type) {
	case *DeleteWebhookPostApplicationJSONRequest:
		return json.Encode(req), "application/json", nil
	case *DeleteWebhookPostApplicationXWwwFormUrlencodedRequest:
		return nil, "", fmt.Errorf("application/x-www-form-urlencoded encoder not implemented")
	case *DeleteWebhookPostMultipartFormDataRequest:
		return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
	default:
		return nil, "", fmt.Errorf("unexpected request type: %T", req)
	}
}

func encodeGetFilePostRequest(req GetFilePostRequest) (data []byte, contentType string, err error) {
	switch req := req.(type) {
	case *GetFilePostApplicationJSONRequest:
		return json.Encode(req), "application/json", nil
	case *GetFilePostApplicationXWwwFormUrlencodedRequest:
		return nil, "", fmt.Errorf("application/x-www-form-urlencoded encoder not implemented")
	case *GetFilePostMultipartFormDataRequest:
		return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
	default:
		return nil, "", fmt.Errorf("unexpected request type: %T", req)
	}
}

func encodeGetGameHighScoresPostRequest(req GetGameHighScoresPostRequest) (data []byte, contentType string, err error) {
	switch req := req.(type) {
	case *GetGameHighScoresPostApplicationJSONRequest:
		return json.Encode(req), "application/json", nil
	case *GetGameHighScoresPostApplicationXWwwFormUrlencodedRequest:
		return nil, "", fmt.Errorf("application/x-www-form-urlencoded encoder not implemented")
	case *GetGameHighScoresPostMultipartFormDataRequest:
		return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
	default:
		return nil, "", fmt.Errorf("unexpected request type: %T", req)
	}
}

func encodeGetStickerSetPostRequest(req GetStickerSetPostRequest) (data []byte, contentType string, err error) {
	switch req := req.(type) {
	case *GetStickerSetPostApplicationJSONRequest:
		return json.Encode(req), "application/json", nil
	case *GetStickerSetPostApplicationXWwwFormUrlencodedRequest:
		return nil, "", fmt.Errorf("application/x-www-form-urlencoded encoder not implemented")
	case *GetStickerSetPostMultipartFormDataRequest:
		return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
	default:
		return nil, "", fmt.Errorf("unexpected request type: %T", req)
	}
}

func encodeGetUpdatesPostRequest(req GetUpdatesPostRequest) (data []byte, contentType string, err error) {
	switch req := req.(type) {
	case *GetUpdatesPostApplicationJSONRequest:
		return json.Encode(req), "application/json", nil
	case *GetUpdatesPostApplicationXWwwFormUrlencodedRequest:
		return nil, "", fmt.Errorf("application/x-www-form-urlencoded encoder not implemented")
	case *GetUpdatesPostMultipartFormDataRequest:
		return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
	default:
		return nil, "", fmt.Errorf("unexpected request type: %T", req)
	}
}

func encodeGetUserProfilePhotosPostRequest(req GetUserProfilePhotosPostRequest) (data []byte, contentType string, err error) {
	switch req := req.(type) {
	case *GetUserProfilePhotosPostApplicationJSONRequest:
		return json.Encode(req), "application/json", nil
	case *GetUserProfilePhotosPostApplicationXWwwFormUrlencodedRequest:
		return nil, "", fmt.Errorf("application/x-www-form-urlencoded encoder not implemented")
	case *GetUserProfilePhotosPostMultipartFormDataRequest:
		return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
	default:
		return nil, "", fmt.Errorf("unexpected request type: %T", req)
	}
}

func encodeSendGamePostRequest(req SendGamePostRequest) (data []byte, contentType string, err error) {
	switch req := req.(type) {
	case *SendGamePostApplicationJSONRequest:
		return json.Encode(req), "application/json", nil
	case *SendGamePostApplicationXWwwFormUrlencodedRequest:
		return nil, "", fmt.Errorf("application/x-www-form-urlencoded encoder not implemented")
	case *SendGamePostMultipartFormDataRequest:
		return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
	default:
		return nil, "", fmt.Errorf("unexpected request type: %T", req)
	}
}

func encodeSendInvoicePostRequest(req SendInvoicePostRequest) (data []byte, contentType string, err error) {
	switch req := req.(type) {
	case *SendInvoicePostApplicationJSONRequest:
		return json.Encode(req), "application/json", nil
	case *SendInvoicePostApplicationXWwwFormUrlencodedRequest:
		return nil, "", fmt.Errorf("application/x-www-form-urlencoded encoder not implemented")
	case *SendInvoicePostMultipartFormDataRequest:
		return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
	default:
		return nil, "", fmt.Errorf("unexpected request type: %T", req)
	}
}

func encodeSetMyCommandsPostRequest(req SetMyCommandsPostRequest) (data []byte, contentType string, err error) {
	switch req := req.(type) {
	case *SetMyCommandsPostApplicationJSONRequest:
		return json.Encode(req), "application/json", nil
	case *SetMyCommandsPostApplicationXWwwFormUrlencodedRequest:
		return nil, "", fmt.Errorf("application/x-www-form-urlencoded encoder not implemented")
	case *SetMyCommandsPostMultipartFormDataRequest:
		return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
	default:
		return nil, "", fmt.Errorf("unexpected request type: %T", req)
	}
}

func encodeSetStickerPositionInSetPostRequest(req SetStickerPositionInSetPostRequest) (data []byte, contentType string, err error) {
	switch req := req.(type) {
	case *SetStickerPositionInSetPostApplicationJSONRequest:
		return json.Encode(req), "application/json", nil
	case *SetStickerPositionInSetPostApplicationXWwwFormUrlencodedRequest:
		return nil, "", fmt.Errorf("application/x-www-form-urlencoded encoder not implemented")
	case *SetStickerPositionInSetPostMultipartFormDataRequest:
		return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
	default:
		return nil, "", fmt.Errorf("unexpected request type: %T", req)
	}
}

func encodeSetWebhookPostRequest(req SetWebhookPostMultipartFormDataRequest) (data []byte, contentType string, err error) {
	return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
}

func encodeUploadStickerFilePostRequest(req UploadStickerFilePostMultipartFormDataRequest) (data []byte, contentType string, err error) {
	return nil, "", fmt.Errorf("multipart/form-data encoder not implemented")
}
