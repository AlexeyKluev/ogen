// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
)

func decodeAnswerCallbackQueryPostRequest(r *http.Request) (req AnswerCallbackQueryPostRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request AnswerCallbackQueryPostApplicationJSONRequest
		if err := request.ReadJSONFrom(r.Body); err != nil {
			return req, fmt.Errorf("json: %w", err)
		}

		return &request, nil
	case "application/x-www-form-urlencoded":
		var request AnswerCallbackQueryPostApplicationXWwwFormUrlencodedRequest
		_ = request
		return req, fmt.Errorf("application/x-www-form-urlencoded decoder not implemented")
	case "multipart/form-data":
		var request AnswerCallbackQueryPostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeAnswerPreCheckoutQueryPostRequest(r *http.Request) (req AnswerPreCheckoutQueryPostRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request AnswerPreCheckoutQueryPostApplicationJSONRequest
		if err := request.ReadJSONFrom(r.Body); err != nil {
			return req, fmt.Errorf("json: %w", err)
		}

		return &request, nil
	case "application/x-www-form-urlencoded":
		var request AnswerPreCheckoutQueryPostApplicationXWwwFormUrlencodedRequest
		_ = request
		return req, fmt.Errorf("application/x-www-form-urlencoded decoder not implemented")
	case "multipart/form-data":
		var request AnswerPreCheckoutQueryPostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeAnswerShippingQueryPostRequest(r *http.Request) (req AnswerShippingQueryPostRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request AnswerShippingQueryPostApplicationJSONRequest
		if err := request.ReadJSONFrom(r.Body); err != nil {
			return req, fmt.Errorf("json: %w", err)
		}
		if err := request.Validate(); err != nil {
			return req, fmt.Errorf("validate: %w", err)
		}

		return &request, nil
	case "application/x-www-form-urlencoded":
		var request AnswerShippingQueryPostApplicationXWwwFormUrlencodedRequest
		_ = request
		return req, fmt.Errorf("application/x-www-form-urlencoded decoder not implemented")
	case "multipart/form-data":
		var request AnswerShippingQueryPostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteStickerFromSetPostRequest(r *http.Request) (req DeleteStickerFromSetPostRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request DeleteStickerFromSetPostApplicationJSONRequest
		if err := request.ReadJSONFrom(r.Body); err != nil {
			return req, fmt.Errorf("json: %w", err)
		}

		return &request, nil
	case "application/x-www-form-urlencoded":
		var request DeleteStickerFromSetPostApplicationXWwwFormUrlencodedRequest
		_ = request
		return req, fmt.Errorf("application/x-www-form-urlencoded decoder not implemented")
	case "multipart/form-data":
		var request DeleteStickerFromSetPostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeDeleteWebhookPostRequest(r *http.Request) (req DeleteWebhookPostRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request DeleteWebhookPostApplicationJSONRequest
		if err := request.ReadJSONFrom(r.Body); err != nil {
			return req, fmt.Errorf("json: %w", err)
		}

		return &request, nil
	case "application/x-www-form-urlencoded":
		var request DeleteWebhookPostApplicationXWwwFormUrlencodedRequest
		_ = request
		return req, fmt.Errorf("application/x-www-form-urlencoded decoder not implemented")
	case "multipart/form-data":
		var request DeleteWebhookPostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetFilePostRequest(r *http.Request) (req GetFilePostRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request GetFilePostApplicationJSONRequest
		if err := request.ReadJSONFrom(r.Body); err != nil {
			return req, fmt.Errorf("json: %w", err)
		}

		return &request, nil
	case "application/x-www-form-urlencoded":
		var request GetFilePostApplicationXWwwFormUrlencodedRequest
		_ = request
		return req, fmt.Errorf("application/x-www-form-urlencoded decoder not implemented")
	case "multipart/form-data":
		var request GetFilePostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetGameHighScoresPostRequest(r *http.Request) (req GetGameHighScoresPostRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request GetGameHighScoresPostApplicationJSONRequest
		if err := request.ReadJSONFrom(r.Body); err != nil {
			return req, fmt.Errorf("json: %w", err)
		}

		return &request, nil
	case "application/x-www-form-urlencoded":
		var request GetGameHighScoresPostApplicationXWwwFormUrlencodedRequest
		_ = request
		return req, fmt.Errorf("application/x-www-form-urlencoded decoder not implemented")
	case "multipart/form-data":
		var request GetGameHighScoresPostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetStickerSetPostRequest(r *http.Request) (req GetStickerSetPostRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request GetStickerSetPostApplicationJSONRequest
		if err := request.ReadJSONFrom(r.Body); err != nil {
			return req, fmt.Errorf("json: %w", err)
		}

		return &request, nil
	case "application/x-www-form-urlencoded":
		var request GetStickerSetPostApplicationXWwwFormUrlencodedRequest
		_ = request
		return req, fmt.Errorf("application/x-www-form-urlencoded decoder not implemented")
	case "multipart/form-data":
		var request GetStickerSetPostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetUpdatesPostRequest(r *http.Request) (req GetUpdatesPostRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request GetUpdatesPostApplicationJSONRequest
		if err := request.ReadJSONFrom(r.Body); err != nil {
			return req, fmt.Errorf("json: %w", err)
		}
		if err := request.Validate(); err != nil {
			return req, fmt.Errorf("validate: %w", err)
		}

		return &request, nil
	case "application/x-www-form-urlencoded":
		var request GetUpdatesPostApplicationXWwwFormUrlencodedRequest
		_ = request
		return req, fmt.Errorf("application/x-www-form-urlencoded decoder not implemented")
	case "multipart/form-data":
		var request GetUpdatesPostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeGetUserProfilePhotosPostRequest(r *http.Request) (req GetUserProfilePhotosPostRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request GetUserProfilePhotosPostApplicationJSONRequest
		if err := request.ReadJSONFrom(r.Body); err != nil {
			return req, fmt.Errorf("json: %w", err)
		}
		if err := request.Validate(); err != nil {
			return req, fmt.Errorf("validate: %w", err)
		}

		return &request, nil
	case "application/x-www-form-urlencoded":
		var request GetUserProfilePhotosPostApplicationXWwwFormUrlencodedRequest
		_ = request
		return req, fmt.Errorf("application/x-www-form-urlencoded decoder not implemented")
	case "multipart/form-data":
		var request GetUserProfilePhotosPostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendGamePostRequest(r *http.Request) (req SendGamePostRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request SendGamePostApplicationJSONRequest
		if err := request.ReadJSONFrom(r.Body); err != nil {
			return req, fmt.Errorf("json: %w", err)
		}
		if err := request.Validate(); err != nil {
			return req, fmt.Errorf("validate: %w", err)
		}

		return &request, nil
	case "application/x-www-form-urlencoded":
		var request SendGamePostApplicationXWwwFormUrlencodedRequest
		_ = request
		return req, fmt.Errorf("application/x-www-form-urlencoded decoder not implemented")
	case "multipart/form-data":
		var request SendGamePostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSendInvoicePostRequest(r *http.Request) (req SendInvoicePostRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request SendInvoicePostApplicationJSONRequest
		if err := request.ReadJSONFrom(r.Body); err != nil {
			return req, fmt.Errorf("json: %w", err)
		}
		if err := request.Validate(); err != nil {
			return req, fmt.Errorf("validate: %w", err)
		}

		return &request, nil
	case "application/x-www-form-urlencoded":
		var request SendInvoicePostApplicationXWwwFormUrlencodedRequest
		_ = request
		return req, fmt.Errorf("application/x-www-form-urlencoded decoder not implemented")
	case "multipart/form-data":
		var request SendInvoicePostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetMyCommandsPostRequest(r *http.Request) (req SetMyCommandsPostRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request SetMyCommandsPostApplicationJSONRequest
		if err := request.ReadJSONFrom(r.Body); err != nil {
			return req, fmt.Errorf("json: %w", err)
		}
		if err := request.Validate(); err != nil {
			return req, fmt.Errorf("validate: %w", err)
		}

		return &request, nil
	case "application/x-www-form-urlencoded":
		var request SetMyCommandsPostApplicationXWwwFormUrlencodedRequest
		_ = request
		return req, fmt.Errorf("application/x-www-form-urlencoded decoder not implemented")
	case "multipart/form-data":
		var request SetMyCommandsPostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetStickerPositionInSetPostRequest(r *http.Request) (req SetStickerPositionInSetPostRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "application/json":
		var request SetStickerPositionInSetPostApplicationJSONRequest
		if err := request.ReadJSONFrom(r.Body); err != nil {
			return req, fmt.Errorf("json: %w", err)
		}

		return &request, nil
	case "application/x-www-form-urlencoded":
		var request SetStickerPositionInSetPostApplicationXWwwFormUrlencodedRequest
		_ = request
		return req, fmt.Errorf("application/x-www-form-urlencoded decoder not implemented")
	case "multipart/form-data":
		var request SetStickerPositionInSetPostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeSetWebhookPostRequest(r *http.Request) (req SetWebhookPostMultipartFormDataRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "multipart/form-data":
		var request SetWebhookPostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}

func decodeUploadStickerFilePostRequest(r *http.Request) (req UploadStickerFilePostMultipartFormDataRequest, err error) {
	switch r.Header.Get("Content-Type") {
	case "multipart/form-data":
		var request UploadStickerFilePostMultipartFormDataRequest
		_ = request
		return req, fmt.Errorf("multipart/form-data decoder not implemented")
	default:
		return req, fmt.Errorf("unexpected content-type: %s", r.Header.Get("Content-Type"))
	}
}
