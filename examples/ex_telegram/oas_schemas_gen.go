// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"github.com/valyala/fasthttp"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = fasthttp.Client{}
)

// Ref: #/components/schemas/Animation
type Animation struct {
	Duration     int          `json:"duration"`
	FileID       string       `json:"file_id"`
	FileName     OptString    `json:"file_name"`
	FileSize     OptInt       `json:"file_size"`
	FileUniqueID string       `json:"file_unique_id"`
	Height       int          `json:"height"`
	MimeType     OptString    `json:"mime_type"`
	Thumb        OptPhotoSize `json:"thumb"`
	Width        int          `json:"width"`
}

type AnswerCallbackQueryPostReqApplicationJSON struct {
	CacheTime       OptInt    `json:"cache_time"`
	CallbackQueryID string    `json:"callback_query_id"`
	ShowAlert       OptBool   `json:"show_alert"`
	Text            OptString `json:"text"`
	URL             OptString `json:"url"`
}

func (*AnswerCallbackQueryPostReqApplicationJSON) answerCallbackQueryPostReq() {}

type AnswerCallbackQueryPostReqApplicationXWwwFormUrlencoded struct {
	CacheTime       OptInt    `json:"cache_time"`
	CallbackQueryID string    `json:"callback_query_id"`
	ShowAlert       OptBool   `json:"show_alert"`
	Text            OptString `json:"text"`
	URL             OptString `json:"url"`
}

func (*AnswerCallbackQueryPostReqApplicationXWwwFormUrlencoded) answerCallbackQueryPostReq() {}

type AnswerCallbackQueryPostReqMultipartFormData struct {
	CacheTime       OptInt    `json:"cache_time"`
	CallbackQueryID string    `json:"callback_query_id"`
	ShowAlert       OptBool   `json:"show_alert"`
	Text            OptString `json:"text"`
	URL             OptString `json:"url"`
}

func (*AnswerCallbackQueryPostReqMultipartFormData) answerCallbackQueryPostReq() {}

type AnswerCallbackQueryPostResOK struct {
	Ok     bool `json:"ok"`
	Result bool `json:"result"`
}

func (*AnswerCallbackQueryPostResOK) answerCallbackQueryPostRes() {}

type AnswerPreCheckoutQueryPostReqApplicationJSON struct {
	ErrorMessage       OptString `json:"error_message"`
	Ok                 bool      `json:"ok"`
	PreCheckoutQueryID string    `json:"pre_checkout_query_id"`
}

func (*AnswerPreCheckoutQueryPostReqApplicationJSON) answerPreCheckoutQueryPostReq() {}

type AnswerPreCheckoutQueryPostReqApplicationXWwwFormUrlencoded struct {
	ErrorMessage       OptString `json:"error_message"`
	Ok                 bool      `json:"ok"`
	PreCheckoutQueryID string    `json:"pre_checkout_query_id"`
}

func (*AnswerPreCheckoutQueryPostReqApplicationXWwwFormUrlencoded) answerPreCheckoutQueryPostReq() {}

type AnswerPreCheckoutQueryPostReqMultipartFormData struct {
	ErrorMessage       OptString `json:"error_message"`
	Ok                 bool      `json:"ok"`
	PreCheckoutQueryID string    `json:"pre_checkout_query_id"`
}

func (*AnswerPreCheckoutQueryPostReqMultipartFormData) answerPreCheckoutQueryPostReq() {}

type AnswerPreCheckoutQueryPostResOK struct {
	Ok     bool `json:"ok"`
	Result bool `json:"result"`
}

func (*AnswerPreCheckoutQueryPostResOK) answerPreCheckoutQueryPostRes() {}

type AnswerShippingQueryPostReqApplicationJSON struct {
	ErrorMessage    OptString        `json:"error_message"`
	Ok              bool             `json:"ok"`
	ShippingOptions []ShippingOption `json:"shipping_options"`
	ShippingQueryID string           `json:"shipping_query_id"`
}

func (*AnswerShippingQueryPostReqApplicationJSON) answerShippingQueryPostReq() {}

type AnswerShippingQueryPostReqApplicationXWwwFormUrlencoded struct {
	ErrorMessage    OptString        `json:"error_message"`
	Ok              bool             `json:"ok"`
	ShippingOptions []ShippingOption `json:"shipping_options"`
	ShippingQueryID string           `json:"shipping_query_id"`
}

func (*AnswerShippingQueryPostReqApplicationXWwwFormUrlencoded) answerShippingQueryPostReq() {}

type AnswerShippingQueryPostReqMultipartFormData struct {
	ErrorMessage    OptString        `json:"error_message"`
	Ok              bool             `json:"ok"`
	ShippingOptions []ShippingOption `json:"shipping_options"`
	ShippingQueryID string           `json:"shipping_query_id"`
}

func (*AnswerShippingQueryPostReqMultipartFormData) answerShippingQueryPostReq() {}

type AnswerShippingQueryPostResOK struct {
	Ok     bool `json:"ok"`
	Result bool `json:"result"`
}

func (*AnswerShippingQueryPostResOK) answerShippingQueryPostRes() {}

// Ref: #/components/schemas/Audio
type Audio struct {
	Duration     int          `json:"duration"`
	FileID       string       `json:"file_id"`
	FileName     OptString    `json:"file_name"`
	FileSize     OptInt       `json:"file_size"`
	FileUniqueID string       `json:"file_unique_id"`
	MimeType     OptString    `json:"mime_type"`
	Performer    OptString    `json:"performer"`
	Thumb        OptPhotoSize `json:"thumb"`
	Title        OptString    `json:"title"`
}

// Ref: #/components/schemas/BotCommand
type BotCommand struct {
	Command     string `json:"command"`
	Description string `json:"description"`
}

type CallbackGame string

// Ref: #/components/schemas/CallbackQuery
type CallbackQuery struct {
	ChatInstance    string     `json:"chat_instance"`
	Data            OptString  `json:"data"`
	From            User       `json:"from"`
	GameShortName   OptString  `json:"game_short_name"`
	ID              string     `json:"id"`
	InlineMessageID OptString  `json:"inline_message_id"`
	Message         OptMessage `json:"message"`
}

// Ref: #/components/schemas/Chat
type Chat struct {
	Bio              OptString          `json:"bio"`
	CanSetStickerSet OptBool            `json:"can_set_sticker_set"`
	Description      OptString          `json:"description"`
	FirstName        OptString          `json:"first_name"`
	ID               int                `json:"id"`
	InviteLink       OptString          `json:"invite_link"`
	LastName         OptString          `json:"last_name"`
	LinkedChatID     OptInt             `json:"linked_chat_id"`
	Location         OptChatLocation    `json:"location"`
	Permissions      OptChatPermissions `json:"permissions"`
	Photo            OptChatPhoto       `json:"photo"`
	PinnedMessage    OptMessage         `json:"pinned_message"`
	SlowModeDelay    OptInt             `json:"slow_mode_delay"`
	StickerSetName   OptString          `json:"sticker_set_name"`
	Title            OptString          `json:"title"`
	Type             ChatType           `json:"type"`
	Username         OptString          `json:"username"`
}

// Ref: #/components/schemas/ChatLocation
type ChatLocation struct {
	Address  string   `json:"address"`
	Location Location `json:"location"`
}

// Ref: #/components/schemas/ChatPermissions
type ChatPermissions struct {
	CanAddWebPagePreviews OptBool `json:"can_add_web_page_previews"`
	CanChangeInfo         OptBool `json:"can_change_info"`
	CanInviteUsers        OptBool `json:"can_invite_users"`
	CanPinMessages        OptBool `json:"can_pin_messages"`
	CanSendMediaMessages  OptBool `json:"can_send_media_messages"`
	CanSendMessages       OptBool `json:"can_send_messages"`
	CanSendOtherMessages  OptBool `json:"can_send_other_messages"`
	CanSendPolls          OptBool `json:"can_send_polls"`
}

// Ref: #/components/schemas/ChatPhoto
type ChatPhoto struct {
	BigFileID         string `json:"big_file_id"`
	BigFileUniqueID   string `json:"big_file_unique_id"`
	SmallFileID       string `json:"small_file_id"`
	SmallFileUniqueID string `json:"small_file_unique_id"`
}

type ChatType string

const (
	ChatTypePrivate    ChatType = "private"
	ChatTypeGroup      ChatType = "group"
	ChatTypeSupergroup ChatType = "supergroup"
	ChatTypeChannel    ChatType = "channel"
)

// Ref: #/components/schemas/ChosenInlineResult
type ChosenInlineResult struct {
	From            User        `json:"from"`
	InlineMessageID OptString   `json:"inline_message_id"`
	Location        OptLocation `json:"location"`
	Query           string      `json:"query"`
	ResultID        string      `json:"result_id"`
}

type ClosePostResOK struct {
	Ok     bool `json:"ok"`
	Result bool `json:"result"`
}

func (*ClosePostResOK) closePostRes() {}

// Ref: #/components/schemas/Contact
type Contact struct {
	FirstName   string    `json:"first_name"`
	LastName    OptString `json:"last_name"`
	PhoneNumber string    `json:"phone_number"`
	UserID      OptInt    `json:"user_id"`
	Vcard       OptString `json:"vcard"`
}

type DeleteStickerFromSetPostReqApplicationJSON struct {
	Sticker string `json:"sticker"`
}

func (*DeleteStickerFromSetPostReqApplicationJSON) deleteStickerFromSetPostReq() {}

type DeleteStickerFromSetPostReqApplicationXWwwFormUrlencoded struct {
	Sticker string `json:"sticker"`
}

func (*DeleteStickerFromSetPostReqApplicationXWwwFormUrlencoded) deleteStickerFromSetPostReq() {}

type DeleteStickerFromSetPostReqMultipartFormData struct {
	Sticker string `json:"sticker"`
}

func (*DeleteStickerFromSetPostReqMultipartFormData) deleteStickerFromSetPostReq() {}

type DeleteStickerFromSetPostResOK struct {
	Ok     bool `json:"ok"`
	Result bool `json:"result"`
}

func (*DeleteStickerFromSetPostResOK) deleteStickerFromSetPostRes() {}

type DeleteWebhookPostReqApplicationJSON struct {
	DropPendingUpdates OptBool `json:"drop_pending_updates"`
}

func (*DeleteWebhookPostReqApplicationJSON) deleteWebhookPostReq() {}

type DeleteWebhookPostReqApplicationXWwwFormUrlencoded struct {
	DropPendingUpdates OptBool `json:"drop_pending_updates"`
}

func (*DeleteWebhookPostReqApplicationXWwwFormUrlencoded) deleteWebhookPostReq() {}

type DeleteWebhookPostReqMultipartFormData struct {
	DropPendingUpdates OptBool `json:"drop_pending_updates"`
}

func (*DeleteWebhookPostReqMultipartFormData) deleteWebhookPostReq() {}

type DeleteWebhookPostResOK struct {
	Ok     bool `json:"ok"`
	Result bool `json:"result"`
}

func (*DeleteWebhookPostResOK) deleteWebhookPostRes() {}

// Ref: #/components/schemas/Dice
type Dice struct {
	Emoji string `json:"emoji"`
	Value int    `json:"value"`
}

// Ref: #/components/schemas/Document
type Document struct {
	FileID       string       `json:"file_id"`
	FileName     OptString    `json:"file_name"`
	FileSize     OptInt       `json:"file_size"`
	FileUniqueID string       `json:"file_unique_id"`
	MimeType     OptString    `json:"mime_type"`
	Thumb        OptPhotoSize `json:"thumb"`
}

// Ref: #/components/schemas/EncryptedCredentials
type EncryptedCredentials struct {
	Data   string `json:"data"`
	Hash   string `json:"hash"`
	Secret string `json:"secret"`
}

// Ref: #/components/schemas/EncryptedPassportElement
type EncryptedPassportElement struct {
	Data        OptString                    `json:"data"`
	Email       OptString                    `json:"email"`
	Files       []PassportFile               `json:"files"`
	FrontSide   OptPassportFile              `json:"front_side"`
	Hash        string                       `json:"hash"`
	PhoneNumber OptString                    `json:"phone_number"`
	ReverseSide OptPassportFile              `json:"reverse_side"`
	Selfie      OptPassportFile              `json:"selfie"`
	Translation []PassportFile               `json:"translation"`
	Type        EncryptedPassportElementType `json:"type"`
}

type EncryptedPassportElementType string

const (
	EncryptedPassportElementTypePersonalDetails       EncryptedPassportElementType = "personal_details"
	EncryptedPassportElementTypePassport              EncryptedPassportElementType = "passport"
	EncryptedPassportElementTypeDriverLicense         EncryptedPassportElementType = "driver_license"
	EncryptedPassportElementTypeIdentityCard          EncryptedPassportElementType = "identity_card"
	EncryptedPassportElementTypeInternalPassport      EncryptedPassportElementType = "internal_passport"
	EncryptedPassportElementTypeAddress               EncryptedPassportElementType = "address"
	EncryptedPassportElementTypeUtilityBill           EncryptedPassportElementType = "utility_bill"
	EncryptedPassportElementTypeBankStatement         EncryptedPassportElementType = "bank_statement"
	EncryptedPassportElementTypeRentalAgreement       EncryptedPassportElementType = "rental_agreement"
	EncryptedPassportElementTypePassportRegistration  EncryptedPassportElementType = "passport_registration"
	EncryptedPassportElementTypeTemporaryRegistration EncryptedPassportElementType = "temporary_registration"
	EncryptedPassportElementTypePhoneNumber           EncryptedPassportElementType = "phone_number"
	EncryptedPassportElementTypeEmail                 EncryptedPassportElementType = "email"
)

// Ref: #/components/schemas/Error
type Error struct {
	Description string                `json:"description"`
	ErrorCode   int                   `json:"error_code"`
	Ok          bool                  `json:"ok"`
	Parameters  OptResponseParameters `json:"parameters"`
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

func (*ErrorStatusCode) answerCallbackQueryPostRes()     {}
func (*ErrorStatusCode) answerPreCheckoutQueryPostRes()  {}
func (*ErrorStatusCode) answerShippingQueryPostRes()     {}
func (*ErrorStatusCode) closePostRes()                   {}
func (*ErrorStatusCode) deleteStickerFromSetPostRes()    {}
func (*ErrorStatusCode) deleteWebhookPostRes()           {}
func (*ErrorStatusCode) getFilePostRes()                 {}
func (*ErrorStatusCode) getGameHighScoresPostRes()       {}
func (*ErrorStatusCode) getMePostRes()                   {}
func (*ErrorStatusCode) getMyCommandsPostRes()           {}
func (*ErrorStatusCode) getStickerSetPostRes()           {}
func (*ErrorStatusCode) getUpdatesPostRes()              {}
func (*ErrorStatusCode) getUserProfilePhotosPostRes()    {}
func (*ErrorStatusCode) getWebhookInfoPostRes()          {}
func (*ErrorStatusCode) logOutPostRes()                  {}
func (*ErrorStatusCode) sendGamePostRes()                {}
func (*ErrorStatusCode) sendInvoicePostRes()             {}
func (*ErrorStatusCode) setMyCommandsPostRes()           {}
func (*ErrorStatusCode) setStickerPositionInSetPostRes() {}
func (*ErrorStatusCode) setWebhookPostRes()              {}
func (*ErrorStatusCode) uploadStickerFilePostRes()       {}

// Ref: #/components/schemas/File
type File struct {
	FileID       string    `json:"file_id"`
	FilePath     OptString `json:"file_path"`
	FileSize     OptInt    `json:"file_size"`
	FileUniqueID string    `json:"file_unique_id"`
}

// Ref: #/components/schemas/Game
type Game struct {
	Animation    OptAnimation    `json:"animation"`
	Description  string          `json:"description"`
	Photo        []PhotoSize     `json:"photo"`
	Text         OptString       `json:"text"`
	TextEntities []MessageEntity `json:"text_entities"`
	Title        string          `json:"title"`
}

// Ref: #/components/schemas/GameHighScore
type GameHighScore struct {
	Position int  `json:"position"`
	Score    int  `json:"score"`
	User     User `json:"user"`
}

type GetFilePostReqApplicationJSON struct {
	FileID string `json:"file_id"`
}

func (*GetFilePostReqApplicationJSON) getFilePostReq() {}

type GetFilePostReqApplicationXWwwFormUrlencoded struct {
	FileID string `json:"file_id"`
}

func (*GetFilePostReqApplicationXWwwFormUrlencoded) getFilePostReq() {}

type GetFilePostReqMultipartFormData struct {
	FileID string `json:"file_id"`
}

func (*GetFilePostReqMultipartFormData) getFilePostReq() {}

type GetFilePostResOK struct {
	Ok     bool `json:"ok"`
	Result File `json:"result"`
}

func (*GetFilePostResOK) getFilePostRes() {}

type GetGameHighScoresPostReqApplicationJSON struct {
	ChatID          OptInt    `json:"chat_id"`
	InlineMessageID OptString `json:"inline_message_id"`
	MessageID       OptInt    `json:"message_id"`
	UserID          int       `json:"user_id"`
}

func (*GetGameHighScoresPostReqApplicationJSON) getGameHighScoresPostReq() {}

type GetGameHighScoresPostReqApplicationXWwwFormUrlencoded struct {
	ChatID          OptInt    `json:"chat_id"`
	InlineMessageID OptString `json:"inline_message_id"`
	MessageID       OptInt    `json:"message_id"`
	UserID          int       `json:"user_id"`
}

func (*GetGameHighScoresPostReqApplicationXWwwFormUrlencoded) getGameHighScoresPostReq() {}

type GetGameHighScoresPostReqMultipartFormData struct {
	ChatID          OptInt    `json:"chat_id"`
	InlineMessageID OptString `json:"inline_message_id"`
	MessageID       OptInt    `json:"message_id"`
	UserID          int       `json:"user_id"`
}

func (*GetGameHighScoresPostReqMultipartFormData) getGameHighScoresPostReq() {}

type GetGameHighScoresPostResOK struct {
	Ok     bool            `json:"ok"`
	Result []GameHighScore `json:"result"`
}

func (*GetGameHighScoresPostResOK) getGameHighScoresPostRes() {}

type GetMePostResOK struct {
	Ok     bool `json:"ok"`
	Result User `json:"result"`
}

func (*GetMePostResOK) getMePostRes() {}

type GetMyCommandsPostResOK struct {
	Ok     bool         `json:"ok"`
	Result []BotCommand `json:"result"`
}

func (*GetMyCommandsPostResOK) getMyCommandsPostRes() {}

type GetStickerSetPostReqApplicationJSON struct {
	Name string `json:"name"`
}

func (*GetStickerSetPostReqApplicationJSON) getStickerSetPostReq() {}

type GetStickerSetPostReqApplicationXWwwFormUrlencoded struct {
	Name string `json:"name"`
}

func (*GetStickerSetPostReqApplicationXWwwFormUrlencoded) getStickerSetPostReq() {}

type GetStickerSetPostReqMultipartFormData struct {
	Name string `json:"name"`
}

func (*GetStickerSetPostReqMultipartFormData) getStickerSetPostReq() {}

type GetStickerSetPostResOK struct {
	Ok     bool       `json:"ok"`
	Result StickerSet `json:"result"`
}

func (*GetStickerSetPostResOK) getStickerSetPostRes() {}

type GetUpdatesPostReqApplicationJSON struct {
	AllowedUpdates []string `json:"allowed_updates"`
	Limit          OptInt   `json:"limit"`
	Offset         OptInt   `json:"offset"`
	Timeout        OptInt   `json:"timeout"`
}

func (*GetUpdatesPostReqApplicationJSON) getUpdatesPostReq() {}

type GetUpdatesPostReqApplicationXWwwFormUrlencoded struct {
	AllowedUpdates []string `json:"allowed_updates"`
	Limit          OptInt   `json:"limit"`
	Offset         OptInt   `json:"offset"`
	Timeout        OptInt   `json:"timeout"`
}

func (*GetUpdatesPostReqApplicationXWwwFormUrlencoded) getUpdatesPostReq() {}

type GetUpdatesPostReqMultipartFormData struct {
	AllowedUpdates []string `json:"allowed_updates"`
	Limit          OptInt   `json:"limit"`
	Offset         OptInt   `json:"offset"`
	Timeout        OptInt   `json:"timeout"`
}

func (*GetUpdatesPostReqMultipartFormData) getUpdatesPostReq() {}

type GetUpdatesPostResOK struct {
	Ok     bool     `json:"ok"`
	Result []Update `json:"result"`
}

func (*GetUpdatesPostResOK) getUpdatesPostRes() {}

type GetUserProfilePhotosPostReqApplicationJSON struct {
	Limit  OptInt `json:"limit"`
	Offset OptInt `json:"offset"`
	UserID int    `json:"user_id"`
}

func (*GetUserProfilePhotosPostReqApplicationJSON) getUserProfilePhotosPostReq() {}

type GetUserProfilePhotosPostReqApplicationXWwwFormUrlencoded struct {
	Limit  OptInt `json:"limit"`
	Offset OptInt `json:"offset"`
	UserID int    `json:"user_id"`
}

func (*GetUserProfilePhotosPostReqApplicationXWwwFormUrlencoded) getUserProfilePhotosPostReq() {}

type GetUserProfilePhotosPostReqMultipartFormData struct {
	Limit  OptInt `json:"limit"`
	Offset OptInt `json:"offset"`
	UserID int    `json:"user_id"`
}

func (*GetUserProfilePhotosPostReqMultipartFormData) getUserProfilePhotosPostReq() {}

type GetUserProfilePhotosPostResOK struct {
	Ok     bool              `json:"ok"`
	Result UserProfilePhotos `json:"result"`
}

func (*GetUserProfilePhotosPostResOK) getUserProfilePhotosPostRes() {}

type GetWebhookInfoPostResOK struct {
	Ok     bool        `json:"ok"`
	Result WebhookInfo `json:"result"`
}

func (*GetWebhookInfoPostResOK) getWebhookInfoPostRes() {}

// Ref: #/components/schemas/InlineKeyboardButton
type InlineKeyboardButton struct {
	CallbackData                 OptString       `json:"callback_data"`
	CallbackGame                 OptCallbackGame `json:"callback_game"`
	LoginURL                     OptLoginUrl     `json:"login_url"`
	Pay                          OptBool         `json:"pay"`
	SwitchInlineQuery            OptString       `json:"switch_inline_query"`
	SwitchInlineQueryCurrentChat OptString       `json:"switch_inline_query_current_chat"`
	Text                         string          `json:"text"`
	URL                          OptString       `json:"url"`
}

// Ref: #/components/schemas/InlineKeyboardMarkup
type InlineKeyboardMarkup struct {
	InlineKeyboard [][]InlineKeyboardButton `json:"inline_keyboard"`
}

// Ref: #/components/schemas/InlineQuery
type InlineQuery struct {
	From     User        `json:"from"`
	ID       string      `json:"id"`
	Location OptLocation `json:"location"`
	Offset   string      `json:"offset"`
	Query    string      `json:"query"`
}

type InputFile string

// Ref: #/components/schemas/Invoice
type Invoice struct {
	Currency       string `json:"currency"`
	Description    string `json:"description"`
	StartParameter string `json:"start_parameter"`
	Title          string `json:"title"`
	TotalAmount    int    `json:"total_amount"`
}

// Ref: #/components/schemas/LabeledPrice
type LabeledPrice struct {
	Amount int    `json:"amount"`
	Label  string `json:"label"`
}

// Ref: #/components/schemas/Location
type Location struct {
	Heading              OptInt     `json:"heading"`
	HorizontalAccuracy   OptFloat64 `json:"horizontal_accuracy"`
	Latitude             float64    `json:"latitude"`
	LivePeriod           OptInt     `json:"live_period"`
	Longitude            float64    `json:"longitude"`
	ProximityAlertRadius OptInt     `json:"proximity_alert_radius"`
}

type LogOutPostResOK struct {
	Ok     bool `json:"ok"`
	Result bool `json:"result"`
}

func (*LogOutPostResOK) logOutPostRes() {}

// Ref: #/components/schemas/LoginUrl
type LoginUrl struct {
	BotUsername        OptString `json:"bot_username"`
	ForwardText        OptString `json:"forward_text"`
	RequestWriteAccess OptBool   `json:"request_write_access"`
	URL                string    `json:"url"`
}

// Ref: #/components/schemas/MaskPosition
type MaskPosition struct {
	Point  MaskPositionPoint `json:"point"`
	Scale  float64           `json:"scale"`
	XShift float64           `json:"x_shift"`
	YShift float64           `json:"y_shift"`
}

type MaskPositionPoint string

const (
	MaskPositionPointForehead MaskPositionPoint = "forehead"
	MaskPositionPointEyes     MaskPositionPoint = "eyes"
	MaskPositionPointMouth    MaskPositionPoint = "mouth"
	MaskPositionPointChin     MaskPositionPoint = "chin"
)

// Ref: #/components/schemas/Message
type Message struct {
	Animation               OptAnimation               `json:"animation"`
	Audio                   OptAudio                   `json:"audio"`
	AuthorSignature         OptString                  `json:"author_signature"`
	Caption                 OptString                  `json:"caption"`
	CaptionEntities         []MessageEntity            `json:"caption_entities"`
	ChannelChatCreated      OptBool                    `json:"channel_chat_created"`
	Chat                    *Chat                      `json:"chat"`
	ConnectedWebsite        OptString                  `json:"connected_website"`
	Contact                 OptContact                 `json:"contact"`
	Date                    int                        `json:"date"`
	DeleteChatPhoto         OptBool                    `json:"delete_chat_photo"`
	Dice                    OptDice                    `json:"dice"`
	Document                OptDocument                `json:"document"`
	EditDate                OptInt                     `json:"edit_date"`
	Entities                []MessageEntity            `json:"entities"`
	ForwardDate             OptInt                     `json:"forward_date"`
	ForwardFrom             OptUser                    `json:"forward_from"`
	ForwardFromChat         *Chat                      `json:"forward_from_chat"`
	ForwardFromMessageID    OptInt                     `json:"forward_from_message_id"`
	ForwardSenderName       OptString                  `json:"forward_sender_name"`
	ForwardSignature        OptString                  `json:"forward_signature"`
	From                    OptUser                    `json:"from"`
	Game                    OptGame                    `json:"game"`
	GroupChatCreated        OptBool                    `json:"group_chat_created"`
	Invoice                 OptInvoice                 `json:"invoice"`
	LeftChatMember          OptUser                    `json:"left_chat_member"`
	Location                OptLocation                `json:"location"`
	MediaGroupID            OptString                  `json:"media_group_id"`
	MessageID               int                        `json:"message_id"`
	MigrateFromChatID       OptInt                     `json:"migrate_from_chat_id"`
	MigrateToChatID         OptInt                     `json:"migrate_to_chat_id"`
	NewChatMembers          []User                     `json:"new_chat_members"`
	NewChatPhoto            []PhotoSize                `json:"new_chat_photo"`
	NewChatTitle            OptString                  `json:"new_chat_title"`
	PassportData            OptPassportData            `json:"passport_data"`
	Photo                   []PhotoSize                `json:"photo"`
	PinnedMessage           *Message                   `json:"pinned_message"`
	Poll                    OptPoll                    `json:"poll"`
	ProximityAlertTriggered OptProximityAlertTriggered `json:"proximity_alert_triggered"`
	ReplyMarkup             OptInlineKeyboardMarkup    `json:"reply_markup"`
	ReplyToMessage          *Message                   `json:"reply_to_message"`
	SenderChat              *Chat                      `json:"sender_chat"`
	Sticker                 OptSticker                 `json:"sticker"`
	SuccessfulPayment       OptSuccessfulPayment       `json:"successful_payment"`
	SupergroupChatCreated   OptBool                    `json:"supergroup_chat_created"`
	Text                    OptString                  `json:"text"`
	Venue                   OptVenue                   `json:"venue"`
	ViaBot                  OptUser                    `json:"via_bot"`
	Video                   OptVideo                   `json:"video"`
	VideoNote               OptVideoNote               `json:"video_note"`
	Voice                   OptVoice                   `json:"voice"`
}

// Ref: #/components/schemas/MessageEntity
type MessageEntity struct {
	Language OptString         `json:"language"`
	Length   int               `json:"length"`
	Offset   int               `json:"offset"`
	Type     MessageEntityType `json:"type"`
	URL      OptString         `json:"url"`
	User     OptUser           `json:"user"`
}

type MessageEntityType string

const (
	MessageEntityTypeMention       MessageEntityType = "mention"
	MessageEntityTypeHashtag       MessageEntityType = "hashtag"
	MessageEntityTypeCashtag       MessageEntityType = "cashtag"
	MessageEntityTypeBotCommand    MessageEntityType = "bot_command"
	MessageEntityTypeURL           MessageEntityType = "url"
	MessageEntityTypeEmail         MessageEntityType = "email"
	MessageEntityTypePhoneNumber   MessageEntityType = "phone_number"
	MessageEntityTypeBold          MessageEntityType = "bold"
	MessageEntityTypeItalic        MessageEntityType = "italic"
	MessageEntityTypeUnderline     MessageEntityType = "underline"
	MessageEntityTypeStrikethrough MessageEntityType = "strikethrough"
	MessageEntityTypeCode          MessageEntityType = "code"
	MessageEntityTypePre           MessageEntityType = "pre"
	MessageEntityTypeTextLink      MessageEntityType = "text_link"
	MessageEntityTypeTextMention   MessageEntityType = "text_mention"
)

// NewOptAnimation returns new OptAnimation with value set to v.
func NewOptAnimation(v Animation) OptAnimation {
	return OptAnimation{
		Value: v,
		Set:   true,
	}
}

// OptAnimation is optional Animation.
type OptAnimation struct {
	Value Animation
	Set   bool
}

// IsSet returns true if OptAnimation was set.
func (o OptAnimation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAnimation) Reset() {
	var v Animation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAnimation) SetTo(v Animation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAnimation) Get() (v Animation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAudio returns new OptAudio with value set to v.
func NewOptAudio(v Audio) OptAudio {
	return OptAudio{
		Value: v,
		Set:   true,
	}
}

// OptAudio is optional Audio.
type OptAudio struct {
	Value Audio
	Set   bool
}

// IsSet returns true if OptAudio was set.
func (o OptAudio) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAudio) Reset() {
	var v Audio
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAudio) SetTo(v Audio) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAudio) Get() (v Audio, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCallbackGame returns new OptCallbackGame with value set to v.
func NewOptCallbackGame(v CallbackGame) OptCallbackGame {
	return OptCallbackGame{
		Value: v,
		Set:   true,
	}
}

// OptCallbackGame is optional CallbackGame.
type OptCallbackGame struct {
	Value CallbackGame
	Set   bool
}

// IsSet returns true if OptCallbackGame was set.
func (o OptCallbackGame) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCallbackGame) Reset() {
	var v CallbackGame
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCallbackGame) SetTo(v CallbackGame) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCallbackGame) Get() (v CallbackGame, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptCallbackQuery returns new OptCallbackQuery with value set to v.
func NewOptCallbackQuery(v CallbackQuery) OptCallbackQuery {
	return OptCallbackQuery{
		Value: v,
		Set:   true,
	}
}

// OptCallbackQuery is optional CallbackQuery.
type OptCallbackQuery struct {
	Value CallbackQuery
	Set   bool
}

// IsSet returns true if OptCallbackQuery was set.
func (o OptCallbackQuery) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCallbackQuery) Reset() {
	var v CallbackQuery
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCallbackQuery) SetTo(v CallbackQuery) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCallbackQuery) Get() (v CallbackQuery, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptChatLocation returns new OptChatLocation with value set to v.
func NewOptChatLocation(v ChatLocation) OptChatLocation {
	return OptChatLocation{
		Value: v,
		Set:   true,
	}
}

// OptChatLocation is optional ChatLocation.
type OptChatLocation struct {
	Value ChatLocation
	Set   bool
}

// IsSet returns true if OptChatLocation was set.
func (o OptChatLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChatLocation) Reset() {
	var v ChatLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChatLocation) SetTo(v ChatLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChatLocation) Get() (v ChatLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptChatPermissions returns new OptChatPermissions with value set to v.
func NewOptChatPermissions(v ChatPermissions) OptChatPermissions {
	return OptChatPermissions{
		Value: v,
		Set:   true,
	}
}

// OptChatPermissions is optional ChatPermissions.
type OptChatPermissions struct {
	Value ChatPermissions
	Set   bool
}

// IsSet returns true if OptChatPermissions was set.
func (o OptChatPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChatPermissions) Reset() {
	var v ChatPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChatPermissions) SetTo(v ChatPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChatPermissions) Get() (v ChatPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptChatPhoto returns new OptChatPhoto with value set to v.
func NewOptChatPhoto(v ChatPhoto) OptChatPhoto {
	return OptChatPhoto{
		Value: v,
		Set:   true,
	}
}

// OptChatPhoto is optional ChatPhoto.
type OptChatPhoto struct {
	Value ChatPhoto
	Set   bool
}

// IsSet returns true if OptChatPhoto was set.
func (o OptChatPhoto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChatPhoto) Reset() {
	var v ChatPhoto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChatPhoto) SetTo(v ChatPhoto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChatPhoto) Get() (v ChatPhoto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptChosenInlineResult returns new OptChosenInlineResult with value set to v.
func NewOptChosenInlineResult(v ChosenInlineResult) OptChosenInlineResult {
	return OptChosenInlineResult{
		Value: v,
		Set:   true,
	}
}

// OptChosenInlineResult is optional ChosenInlineResult.
type OptChosenInlineResult struct {
	Value ChosenInlineResult
	Set   bool
}

// IsSet returns true if OptChosenInlineResult was set.
func (o OptChosenInlineResult) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChosenInlineResult) Reset() {
	var v ChosenInlineResult
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChosenInlineResult) SetTo(v ChosenInlineResult) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChosenInlineResult) Get() (v ChosenInlineResult, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptContact returns new OptContact with value set to v.
func NewOptContact(v Contact) OptContact {
	return OptContact{
		Value: v,
		Set:   true,
	}
}

// OptContact is optional Contact.
type OptContact struct {
	Value Contact
	Set   bool
}

// IsSet returns true if OptContact was set.
func (o OptContact) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContact) Reset() {
	var v Contact
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContact) SetTo(v Contact) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContact) Get() (v Contact, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptDice returns new OptDice with value set to v.
func NewOptDice(v Dice) OptDice {
	return OptDice{
		Value: v,
		Set:   true,
	}
}

// OptDice is optional Dice.
type OptDice struct {
	Value Dice
	Set   bool
}

// IsSet returns true if OptDice was set.
func (o OptDice) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDice) Reset() {
	var v Dice
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDice) SetTo(v Dice) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDice) Get() (v Dice, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptDocument returns new OptDocument with value set to v.
func NewOptDocument(v Document) OptDocument {
	return OptDocument{
		Value: v,
		Set:   true,
	}
}

// OptDocument is optional Document.
type OptDocument struct {
	Value Document
	Set   bool
}

// IsSet returns true if OptDocument was set.
func (o OptDocument) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDocument) Reset() {
	var v Document
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDocument) SetTo(v Document) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDocument) Get() (v Document, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGame returns new OptGame with value set to v.
func NewOptGame(v Game) OptGame {
	return OptGame{
		Value: v,
		Set:   true,
	}
}

// OptGame is optional Game.
type OptGame struct {
	Value Game
	Set   bool
}

// IsSet returns true if OptGame was set.
func (o OptGame) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGame) Reset() {
	var v Game
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGame) SetTo(v Game) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGame) Get() (v Game, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInlineKeyboardMarkup returns new OptInlineKeyboardMarkup with value set to v.
func NewOptInlineKeyboardMarkup(v InlineKeyboardMarkup) OptInlineKeyboardMarkup {
	return OptInlineKeyboardMarkup{
		Value: v,
		Set:   true,
	}
}

// OptInlineKeyboardMarkup is optional InlineKeyboardMarkup.
type OptInlineKeyboardMarkup struct {
	Value InlineKeyboardMarkup
	Set   bool
}

// IsSet returns true if OptInlineKeyboardMarkup was set.
func (o OptInlineKeyboardMarkup) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInlineKeyboardMarkup) Reset() {
	var v InlineKeyboardMarkup
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInlineKeyboardMarkup) SetTo(v InlineKeyboardMarkup) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInlineKeyboardMarkup) Get() (v InlineKeyboardMarkup, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInlineQuery returns new OptInlineQuery with value set to v.
func NewOptInlineQuery(v InlineQuery) OptInlineQuery {
	return OptInlineQuery{
		Value: v,
		Set:   true,
	}
}

// OptInlineQuery is optional InlineQuery.
type OptInlineQuery struct {
	Value InlineQuery
	Set   bool
}

// IsSet returns true if OptInlineQuery was set.
func (o OptInlineQuery) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInlineQuery) Reset() {
	var v InlineQuery
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInlineQuery) SetTo(v InlineQuery) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInlineQuery) Get() (v InlineQuery, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInputFile returns new OptInputFile with value set to v.
func NewOptInputFile(v InputFile) OptInputFile {
	return OptInputFile{
		Value: v,
		Set:   true,
	}
}

// OptInputFile is optional InputFile.
type OptInputFile struct {
	Value InputFile
	Set   bool
}

// IsSet returns true if OptInputFile was set.
func (o OptInputFile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInputFile) Reset() {
	var v InputFile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInputFile) SetTo(v InputFile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInputFile) Get() (v InputFile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInvoice returns new OptInvoice with value set to v.
func NewOptInvoice(v Invoice) OptInvoice {
	return OptInvoice{
		Value: v,
		Set:   true,
	}
}

// OptInvoice is optional Invoice.
type OptInvoice struct {
	Value Invoice
	Set   bool
}

// IsSet returns true if OptInvoice was set.
func (o OptInvoice) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInvoice) Reset() {
	var v Invoice
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInvoice) SetTo(v Invoice) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInvoice) Get() (v Invoice, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptLocation returns new OptLocation with value set to v.
func NewOptLocation(v Location) OptLocation {
	return OptLocation{
		Value: v,
		Set:   true,
	}
}

// OptLocation is optional Location.
type OptLocation struct {
	Value Location
	Set   bool
}

// IsSet returns true if OptLocation was set.
func (o OptLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLocation) Reset() {
	var v Location
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLocation) SetTo(v Location) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLocation) Get() (v Location, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptLoginUrl returns new OptLoginUrl with value set to v.
func NewOptLoginUrl(v LoginUrl) OptLoginUrl {
	return OptLoginUrl{
		Value: v,
		Set:   true,
	}
}

// OptLoginUrl is optional LoginUrl.
type OptLoginUrl struct {
	Value LoginUrl
	Set   bool
}

// IsSet returns true if OptLoginUrl was set.
func (o OptLoginUrl) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLoginUrl) Reset() {
	var v LoginUrl
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLoginUrl) SetTo(v LoginUrl) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLoginUrl) Get() (v LoginUrl, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMaskPosition returns new OptMaskPosition with value set to v.
func NewOptMaskPosition(v MaskPosition) OptMaskPosition {
	return OptMaskPosition{
		Value: v,
		Set:   true,
	}
}

// OptMaskPosition is optional MaskPosition.
type OptMaskPosition struct {
	Value MaskPosition
	Set   bool
}

// IsSet returns true if OptMaskPosition was set.
func (o OptMaskPosition) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMaskPosition) Reset() {
	var v MaskPosition
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMaskPosition) SetTo(v MaskPosition) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMaskPosition) Get() (v MaskPosition, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMessage returns new OptMessage with value set to v.
func NewOptMessage(v Message) OptMessage {
	return OptMessage{
		Value: v,
		Set:   true,
	}
}

// OptMessage is optional Message.
type OptMessage struct {
	Value Message
	Set   bool
}

// IsSet returns true if OptMessage was set.
func (o OptMessage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMessage) Reset() {
	var v Message
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMessage) SetTo(v Message) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMessage) Get() (v Message, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrderInfo returns new OptOrderInfo with value set to v.
func NewOptOrderInfo(v OrderInfo) OptOrderInfo {
	return OptOrderInfo{
		Value: v,
		Set:   true,
	}
}

// OptOrderInfo is optional OrderInfo.
type OptOrderInfo struct {
	Value OrderInfo
	Set   bool
}

// IsSet returns true if OptOrderInfo was set.
func (o OptOrderInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrderInfo) Reset() {
	var v OrderInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrderInfo) SetTo(v OrderInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrderInfo) Get() (v OrderInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPassportData returns new OptPassportData with value set to v.
func NewOptPassportData(v PassportData) OptPassportData {
	return OptPassportData{
		Value: v,
		Set:   true,
	}
}

// OptPassportData is optional PassportData.
type OptPassportData struct {
	Value PassportData
	Set   bool
}

// IsSet returns true if OptPassportData was set.
func (o OptPassportData) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPassportData) Reset() {
	var v PassportData
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPassportData) SetTo(v PassportData) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPassportData) Get() (v PassportData, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPassportFile returns new OptPassportFile with value set to v.
func NewOptPassportFile(v PassportFile) OptPassportFile {
	return OptPassportFile{
		Value: v,
		Set:   true,
	}
}

// OptPassportFile is optional PassportFile.
type OptPassportFile struct {
	Value PassportFile
	Set   bool
}

// IsSet returns true if OptPassportFile was set.
func (o OptPassportFile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPassportFile) Reset() {
	var v PassportFile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPassportFile) SetTo(v PassportFile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPassportFile) Get() (v PassportFile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPhotoSize returns new OptPhotoSize with value set to v.
func NewOptPhotoSize(v PhotoSize) OptPhotoSize {
	return OptPhotoSize{
		Value: v,
		Set:   true,
	}
}

// OptPhotoSize is optional PhotoSize.
type OptPhotoSize struct {
	Value PhotoSize
	Set   bool
}

// IsSet returns true if OptPhotoSize was set.
func (o OptPhotoSize) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhotoSize) Reset() {
	var v PhotoSize
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhotoSize) SetTo(v PhotoSize) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhotoSize) Get() (v PhotoSize, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPoll returns new OptPoll with value set to v.
func NewOptPoll(v Poll) OptPoll {
	return OptPoll{
		Value: v,
		Set:   true,
	}
}

// OptPoll is optional Poll.
type OptPoll struct {
	Value Poll
	Set   bool
}

// IsSet returns true if OptPoll was set.
func (o OptPoll) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPoll) Reset() {
	var v Poll
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPoll) SetTo(v Poll) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPoll) Get() (v Poll, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPollAnswer returns new OptPollAnswer with value set to v.
func NewOptPollAnswer(v PollAnswer) OptPollAnswer {
	return OptPollAnswer{
		Value: v,
		Set:   true,
	}
}

// OptPollAnswer is optional PollAnswer.
type OptPollAnswer struct {
	Value PollAnswer
	Set   bool
}

// IsSet returns true if OptPollAnswer was set.
func (o OptPollAnswer) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPollAnswer) Reset() {
	var v PollAnswer
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPollAnswer) SetTo(v PollAnswer) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPollAnswer) Get() (v PollAnswer, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPreCheckoutQuery returns new OptPreCheckoutQuery with value set to v.
func NewOptPreCheckoutQuery(v PreCheckoutQuery) OptPreCheckoutQuery {
	return OptPreCheckoutQuery{
		Value: v,
		Set:   true,
	}
}

// OptPreCheckoutQuery is optional PreCheckoutQuery.
type OptPreCheckoutQuery struct {
	Value PreCheckoutQuery
	Set   bool
}

// IsSet returns true if OptPreCheckoutQuery was set.
func (o OptPreCheckoutQuery) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPreCheckoutQuery) Reset() {
	var v PreCheckoutQuery
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPreCheckoutQuery) SetTo(v PreCheckoutQuery) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPreCheckoutQuery) Get() (v PreCheckoutQuery, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProximityAlertTriggered returns new OptProximityAlertTriggered with value set to v.
func NewOptProximityAlertTriggered(v ProximityAlertTriggered) OptProximityAlertTriggered {
	return OptProximityAlertTriggered{
		Value: v,
		Set:   true,
	}
}

// OptProximityAlertTriggered is optional ProximityAlertTriggered.
type OptProximityAlertTriggered struct {
	Value ProximityAlertTriggered
	Set   bool
}

// IsSet returns true if OptProximityAlertTriggered was set.
func (o OptProximityAlertTriggered) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProximityAlertTriggered) Reset() {
	var v ProximityAlertTriggered
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProximityAlertTriggered) SetTo(v ProximityAlertTriggered) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProximityAlertTriggered) Get() (v ProximityAlertTriggered, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptResponseParameters returns new OptResponseParameters with value set to v.
func NewOptResponseParameters(v ResponseParameters) OptResponseParameters {
	return OptResponseParameters{
		Value: v,
		Set:   true,
	}
}

// OptResponseParameters is optional ResponseParameters.
type OptResponseParameters struct {
	Value ResponseParameters
	Set   bool
}

// IsSet returns true if OptResponseParameters was set.
func (o OptResponseParameters) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptResponseParameters) Reset() {
	var v ResponseParameters
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptResponseParameters) SetTo(v ResponseParameters) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptResponseParameters) Get() (v ResponseParameters, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptShippingAddress returns new OptShippingAddress with value set to v.
func NewOptShippingAddress(v ShippingAddress) OptShippingAddress {
	return OptShippingAddress{
		Value: v,
		Set:   true,
	}
}

// OptShippingAddress is optional ShippingAddress.
type OptShippingAddress struct {
	Value ShippingAddress
	Set   bool
}

// IsSet returns true if OptShippingAddress was set.
func (o OptShippingAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptShippingAddress) Reset() {
	var v ShippingAddress
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptShippingAddress) SetTo(v ShippingAddress) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptShippingAddress) Get() (v ShippingAddress, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptShippingQuery returns new OptShippingQuery with value set to v.
func NewOptShippingQuery(v ShippingQuery) OptShippingQuery {
	return OptShippingQuery{
		Value: v,
		Set:   true,
	}
}

// OptShippingQuery is optional ShippingQuery.
type OptShippingQuery struct {
	Value ShippingQuery
	Set   bool
}

// IsSet returns true if OptShippingQuery was set.
func (o OptShippingQuery) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptShippingQuery) Reset() {
	var v ShippingQuery
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptShippingQuery) SetTo(v ShippingQuery) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptShippingQuery) Get() (v ShippingQuery, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptSticker returns new OptSticker with value set to v.
func NewOptSticker(v Sticker) OptSticker {
	return OptSticker{
		Value: v,
		Set:   true,
	}
}

// OptSticker is optional Sticker.
type OptSticker struct {
	Value Sticker
	Set   bool
}

// IsSet returns true if OptSticker was set.
func (o OptSticker) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSticker) Reset() {
	var v Sticker
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSticker) SetTo(v Sticker) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSticker) Get() (v Sticker, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptSuccessfulPayment returns new OptSuccessfulPayment with value set to v.
func NewOptSuccessfulPayment(v SuccessfulPayment) OptSuccessfulPayment {
	return OptSuccessfulPayment{
		Value: v,
		Set:   true,
	}
}

// OptSuccessfulPayment is optional SuccessfulPayment.
type OptSuccessfulPayment struct {
	Value SuccessfulPayment
	Set   bool
}

// IsSet returns true if OptSuccessfulPayment was set.
func (o OptSuccessfulPayment) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSuccessfulPayment) Reset() {
	var v SuccessfulPayment
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSuccessfulPayment) SetTo(v SuccessfulPayment) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSuccessfulPayment) Get() (v SuccessfulPayment, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptUser returns new OptUser with value set to v.
func NewOptUser(v User) OptUser {
	return OptUser{
		Value: v,
		Set:   true,
	}
}

// OptUser is optional User.
type OptUser struct {
	Value User
	Set   bool
}

// IsSet returns true if OptUser was set.
func (o OptUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUser) Reset() {
	var v User
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUser) SetTo(v User) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUser) Get() (v User, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVenue returns new OptVenue with value set to v.
func NewOptVenue(v Venue) OptVenue {
	return OptVenue{
		Value: v,
		Set:   true,
	}
}

// OptVenue is optional Venue.
type OptVenue struct {
	Value Venue
	Set   bool
}

// IsSet returns true if OptVenue was set.
func (o OptVenue) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVenue) Reset() {
	var v Venue
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVenue) SetTo(v Venue) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVenue) Get() (v Venue, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVideo returns new OptVideo with value set to v.
func NewOptVideo(v Video) OptVideo {
	return OptVideo{
		Value: v,
		Set:   true,
	}
}

// OptVideo is optional Video.
type OptVideo struct {
	Value Video
	Set   bool
}

// IsSet returns true if OptVideo was set.
func (o OptVideo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVideo) Reset() {
	var v Video
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVideo) SetTo(v Video) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVideo) Get() (v Video, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVideoNote returns new OptVideoNote with value set to v.
func NewOptVideoNote(v VideoNote) OptVideoNote {
	return OptVideoNote{
		Value: v,
		Set:   true,
	}
}

// OptVideoNote is optional VideoNote.
type OptVideoNote struct {
	Value VideoNote
	Set   bool
}

// IsSet returns true if OptVideoNote was set.
func (o OptVideoNote) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVideoNote) Reset() {
	var v VideoNote
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVideoNote) SetTo(v VideoNote) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVideoNote) Get() (v VideoNote, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVoice returns new OptVoice with value set to v.
func NewOptVoice(v Voice) OptVoice {
	return OptVoice{
		Value: v,
		Set:   true,
	}
}

// OptVoice is optional Voice.
type OptVoice struct {
	Value Voice
	Set   bool
}

// IsSet returns true if OptVoice was set.
func (o OptVoice) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVoice) Reset() {
	var v Voice
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVoice) SetTo(v Voice) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVoice) Get() (v Voice, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Ref: #/components/schemas/OrderInfo
type OrderInfo struct {
	Email           OptString          `json:"email"`
	Name            OptString          `json:"name"`
	PhoneNumber     OptString          `json:"phone_number"`
	ShippingAddress OptShippingAddress `json:"shipping_address"`
}

// Ref: #/components/schemas/PassportData
type PassportData struct {
	Credentials EncryptedCredentials       `json:"credentials"`
	Data        []EncryptedPassportElement `json:"data"`
}

// Ref: #/components/schemas/PassportFile
type PassportFile struct {
	FileDate     int    `json:"file_date"`
	FileID       string `json:"file_id"`
	FileSize     int    `json:"file_size"`
	FileUniqueID string `json:"file_unique_id"`
}

// Ref: #/components/schemas/PhotoSize
type PhotoSize struct {
	FileID       string `json:"file_id"`
	FileSize     OptInt `json:"file_size"`
	FileUniqueID string `json:"file_unique_id"`
	Height       int    `json:"height"`
	Width        int    `json:"width"`
}

// Ref: #/components/schemas/Poll
type Poll struct {
	AllowsMultipleAnswers bool            `json:"allows_multiple_answers"`
	CloseDate             OptInt          `json:"close_date"`
	CorrectOptionID       OptInt          `json:"correct_option_id"`
	Explanation           OptString       `json:"explanation"`
	ExplanationEntities   []MessageEntity `json:"explanation_entities"`
	ID                    string          `json:"id"`
	IsAnonymous           bool            `json:"is_anonymous"`
	IsClosed              bool            `json:"is_closed"`
	OpenPeriod            OptInt          `json:"open_period"`
	Options               []PollOption    `json:"options"`
	Question              string          `json:"question"`
	TotalVoterCount       int             `json:"total_voter_count"`
	Type                  string          `json:"type"`
}

// Ref: #/components/schemas/PollAnswer
type PollAnswer struct {
	OptionIds []int  `json:"option_ids"`
	PollID    string `json:"poll_id"`
	User      User   `json:"user"`
}

// Ref: #/components/schemas/PollOption
type PollOption struct {
	Text       string `json:"text"`
	VoterCount int    `json:"voter_count"`
}

// Ref: #/components/schemas/PreCheckoutQuery
type PreCheckoutQuery struct {
	Currency         string       `json:"currency"`
	From             User         `json:"from"`
	ID               string       `json:"id"`
	InvoicePayload   string       `json:"invoice_payload"`
	OrderInfo        OptOrderInfo `json:"order_info"`
	ShippingOptionID OptString    `json:"shipping_option_id"`
	TotalAmount      int          `json:"total_amount"`
}

// Ref: #/components/schemas/ProximityAlertTriggered
type ProximityAlertTriggered struct {
	Distance int  `json:"distance"`
	Traveler User `json:"traveler"`
	Watcher  User `json:"watcher"`
}

// Ref: #/components/schemas/ResponseParameters
type ResponseParameters struct {
	MigrateToChatID OptInt `json:"migrate_to_chat_id"`
	RetryAfter      OptInt `json:"retry_after"`
}

type SendGamePostReqApplicationJSON struct {
	AllowSendingWithoutReply OptBool                 `json:"allow_sending_without_reply"`
	ChatID                   int                     `json:"chat_id"`
	DisableNotification      OptBool                 `json:"disable_notification"`
	GameShortName            string                  `json:"game_short_name"`
	ReplyMarkup              OptInlineKeyboardMarkup `json:"reply_markup"`
	ReplyToMessageID         OptInt                  `json:"reply_to_message_id"`
}

func (*SendGamePostReqApplicationJSON) sendGamePostReq() {}

type SendGamePostReqApplicationXWwwFormUrlencoded struct {
	AllowSendingWithoutReply OptBool                 `json:"allow_sending_without_reply"`
	ChatID                   int                     `json:"chat_id"`
	DisableNotification      OptBool                 `json:"disable_notification"`
	GameShortName            string                  `json:"game_short_name"`
	ReplyMarkup              OptInlineKeyboardMarkup `json:"reply_markup"`
	ReplyToMessageID         OptInt                  `json:"reply_to_message_id"`
}

func (*SendGamePostReqApplicationXWwwFormUrlencoded) sendGamePostReq() {}

type SendGamePostReqMultipartFormData struct {
	AllowSendingWithoutReply OptBool                 `json:"allow_sending_without_reply"`
	ChatID                   int                     `json:"chat_id"`
	DisableNotification      OptBool                 `json:"disable_notification"`
	GameShortName            string                  `json:"game_short_name"`
	ReplyMarkup              OptInlineKeyboardMarkup `json:"reply_markup"`
	ReplyToMessageID         OptInt                  `json:"reply_to_message_id"`
}

func (*SendGamePostReqMultipartFormData) sendGamePostReq() {}

type SendGamePostResOK struct {
	Ok     bool    `json:"ok"`
	Result Message `json:"result"`
}

func (*SendGamePostResOK) sendGamePostRes() {}

type SendInvoicePostReqApplicationJSON struct {
	AllowSendingWithoutReply  OptBool                 `json:"allow_sending_without_reply"`
	ChatID                    int                     `json:"chat_id"`
	Currency                  string                  `json:"currency"`
	Description               string                  `json:"description"`
	DisableNotification       OptBool                 `json:"disable_notification"`
	IsFlexible                OptBool                 `json:"is_flexible"`
	NeedEmail                 OptBool                 `json:"need_email"`
	NeedName                  OptBool                 `json:"need_name"`
	NeedPhoneNumber           OptBool                 `json:"need_phone_number"`
	NeedShippingAddress       OptBool                 `json:"need_shipping_address"`
	Payload                   string                  `json:"payload"`
	PhotoHeight               OptInt                  `json:"photo_height"`
	PhotoSize                 OptInt                  `json:"photo_size"`
	PhotoURL                  OptString               `json:"photo_url"`
	PhotoWidth                OptInt                  `json:"photo_width"`
	Prices                    []LabeledPrice          `json:"prices"`
	ProviderData              OptString               `json:"provider_data"`
	ProviderToken             string                  `json:"provider_token"`
	ReplyMarkup               OptInlineKeyboardMarkup `json:"reply_markup"`
	ReplyToMessageID          OptInt                  `json:"reply_to_message_id"`
	SendEmailToProvider       OptBool                 `json:"send_email_to_provider"`
	SendPhoneNumberToProvider OptBool                 `json:"send_phone_number_to_provider"`
	StartParameter            string                  `json:"start_parameter"`
	Title                     string                  `json:"title"`
}

func (*SendInvoicePostReqApplicationJSON) sendInvoicePostReq() {}

type SendInvoicePostReqApplicationXWwwFormUrlencoded struct {
	AllowSendingWithoutReply  OptBool                 `json:"allow_sending_without_reply"`
	ChatID                    int                     `json:"chat_id"`
	Currency                  string                  `json:"currency"`
	Description               string                  `json:"description"`
	DisableNotification       OptBool                 `json:"disable_notification"`
	IsFlexible                OptBool                 `json:"is_flexible"`
	NeedEmail                 OptBool                 `json:"need_email"`
	NeedName                  OptBool                 `json:"need_name"`
	NeedPhoneNumber           OptBool                 `json:"need_phone_number"`
	NeedShippingAddress       OptBool                 `json:"need_shipping_address"`
	Payload                   string                  `json:"payload"`
	PhotoHeight               OptInt                  `json:"photo_height"`
	PhotoSize                 OptInt                  `json:"photo_size"`
	PhotoURL                  OptString               `json:"photo_url"`
	PhotoWidth                OptInt                  `json:"photo_width"`
	Prices                    []LabeledPrice          `json:"prices"`
	ProviderData              OptString               `json:"provider_data"`
	ProviderToken             string                  `json:"provider_token"`
	ReplyMarkup               OptInlineKeyboardMarkup `json:"reply_markup"`
	ReplyToMessageID          OptInt                  `json:"reply_to_message_id"`
	SendEmailToProvider       OptBool                 `json:"send_email_to_provider"`
	SendPhoneNumberToProvider OptBool                 `json:"send_phone_number_to_provider"`
	StartParameter            string                  `json:"start_parameter"`
	Title                     string                  `json:"title"`
}

func (*SendInvoicePostReqApplicationXWwwFormUrlencoded) sendInvoicePostReq() {}

type SendInvoicePostReqMultipartFormData struct {
	AllowSendingWithoutReply  OptBool                 `json:"allow_sending_without_reply"`
	ChatID                    int                     `json:"chat_id"`
	Currency                  string                  `json:"currency"`
	Description               string                  `json:"description"`
	DisableNotification       OptBool                 `json:"disable_notification"`
	IsFlexible                OptBool                 `json:"is_flexible"`
	NeedEmail                 OptBool                 `json:"need_email"`
	NeedName                  OptBool                 `json:"need_name"`
	NeedPhoneNumber           OptBool                 `json:"need_phone_number"`
	NeedShippingAddress       OptBool                 `json:"need_shipping_address"`
	Payload                   string                  `json:"payload"`
	PhotoHeight               OptInt                  `json:"photo_height"`
	PhotoSize                 OptInt                  `json:"photo_size"`
	PhotoURL                  OptString               `json:"photo_url"`
	PhotoWidth                OptInt                  `json:"photo_width"`
	Prices                    []LabeledPrice          `json:"prices"`
	ProviderData              OptString               `json:"provider_data"`
	ProviderToken             string                  `json:"provider_token"`
	ReplyMarkup               OptInlineKeyboardMarkup `json:"reply_markup"`
	ReplyToMessageID          OptInt                  `json:"reply_to_message_id"`
	SendEmailToProvider       OptBool                 `json:"send_email_to_provider"`
	SendPhoneNumberToProvider OptBool                 `json:"send_phone_number_to_provider"`
	StartParameter            string                  `json:"start_parameter"`
	Title                     string                  `json:"title"`
}

func (*SendInvoicePostReqMultipartFormData) sendInvoicePostReq() {}

type SendInvoicePostResOK struct {
	Ok     bool    `json:"ok"`
	Result Message `json:"result"`
}

func (*SendInvoicePostResOK) sendInvoicePostRes() {}

type SetGameScorePostReqApplicationJSON struct {
	ChatID             OptInt    `json:"chat_id"`
	DisableEditMessage OptBool   `json:"disable_edit_message"`
	Force              OptBool   `json:"force"`
	InlineMessageID    OptString `json:"inline_message_id"`
	MessageID          OptInt    `json:"message_id"`
	Score              int       `json:"score"`
	UserID             int       `json:"user_id"`
}

func (*SetGameScorePostReqApplicationJSON) setGameScorePostReq() {}

type SetGameScorePostReqApplicationXWwwFormUrlencoded struct {
	ChatID             OptInt    `json:"chat_id"`
	DisableEditMessage OptBool   `json:"disable_edit_message"`
	Force              OptBool   `json:"force"`
	InlineMessageID    OptString `json:"inline_message_id"`
	MessageID          OptInt    `json:"message_id"`
	Score              int       `json:"score"`
	UserID             int       `json:"user_id"`
}

func (*SetGameScorePostReqApplicationXWwwFormUrlencoded) setGameScorePostReq() {}

type SetGameScorePostReqMultipartFormData struct {
	ChatID             OptInt    `json:"chat_id"`
	DisableEditMessage OptBool   `json:"disable_edit_message"`
	Force              OptBool   `json:"force"`
	InlineMessageID    OptString `json:"inline_message_id"`
	MessageID          OptInt    `json:"message_id"`
	Score              int       `json:"score"`
	UserID             int       `json:"user_id"`
}

func (*SetGameScorePostReqMultipartFormData) setGameScorePostReq() {}

type SetMyCommandsPostReqApplicationJSON struct {
	Commands []BotCommand `json:"commands"`
}

func (*SetMyCommandsPostReqApplicationJSON) setMyCommandsPostReq() {}

type SetMyCommandsPostReqApplicationXWwwFormUrlencoded struct {
	Commands []BotCommand `json:"commands"`
}

func (*SetMyCommandsPostReqApplicationXWwwFormUrlencoded) setMyCommandsPostReq() {}

type SetMyCommandsPostReqMultipartFormData struct {
	Commands []BotCommand `json:"commands"`
}

func (*SetMyCommandsPostReqMultipartFormData) setMyCommandsPostReq() {}

type SetMyCommandsPostResOK struct {
	Ok     bool `json:"ok"`
	Result bool `json:"result"`
}

func (*SetMyCommandsPostResOK) setMyCommandsPostRes() {}

type SetStickerPositionInSetPostReqApplicationJSON struct {
	Position int    `json:"position"`
	Sticker  string `json:"sticker"`
}

func (*SetStickerPositionInSetPostReqApplicationJSON) setStickerPositionInSetPostReq() {}

type SetStickerPositionInSetPostReqApplicationXWwwFormUrlencoded struct {
	Position int    `json:"position"`
	Sticker  string `json:"sticker"`
}

func (*SetStickerPositionInSetPostReqApplicationXWwwFormUrlencoded) setStickerPositionInSetPostReq() {
}

type SetStickerPositionInSetPostReqMultipartFormData struct {
	Position int    `json:"position"`
	Sticker  string `json:"sticker"`
}

func (*SetStickerPositionInSetPostReqMultipartFormData) setStickerPositionInSetPostReq() {}

type SetStickerPositionInSetPostResOK struct {
	Ok     bool `json:"ok"`
	Result bool `json:"result"`
}

func (*SetStickerPositionInSetPostResOK) setStickerPositionInSetPostRes() {}

type SetWebhookPostReq struct {
	AllowedUpdates     []string     `json:"allowed_updates"`
	Certificate        OptInputFile `json:"certificate"`
	DropPendingUpdates OptBool      `json:"drop_pending_updates"`
	IPAddress          OptString    `json:"ip_address"`
	MaxConnections     OptInt       `json:"max_connections"`
	URL                string       `json:"url"`
}

type SetWebhookPostResOK struct {
	Ok     bool `json:"ok"`
	Result bool `json:"result"`
}

func (*SetWebhookPostResOK) setWebhookPostRes() {}

// Ref: #/components/schemas/ShippingAddress
type ShippingAddress struct {
	City        string `json:"city"`
	CountryCode string `json:"country_code"`
	PostCode    string `json:"post_code"`
	State       string `json:"state"`
	StreetLine1 string `json:"street_line1"`
	StreetLine2 string `json:"street_line2"`
}

// Ref: #/components/schemas/ShippingOption
type ShippingOption struct {
	ID     string         `json:"id"`
	Prices []LabeledPrice `json:"prices"`
	Title  string         `json:"title"`
}

// Ref: #/components/schemas/ShippingQuery
type ShippingQuery struct {
	From            User            `json:"from"`
	ID              string          `json:"id"`
	InvoicePayload  string          `json:"invoice_payload"`
	ShippingAddress ShippingAddress `json:"shipping_address"`
}

// Ref: #/components/schemas/Sticker
type Sticker struct {
	Emoji        OptString       `json:"emoji"`
	FileID       string          `json:"file_id"`
	FileSize     OptInt          `json:"file_size"`
	FileUniqueID string          `json:"file_unique_id"`
	Height       int             `json:"height"`
	IsAnimated   bool            `json:"is_animated"`
	MaskPosition OptMaskPosition `json:"mask_position"`
	SetName      OptString       `json:"set_name"`
	Thumb        OptPhotoSize    `json:"thumb"`
	Width        int             `json:"width"`
}

// Ref: #/components/schemas/StickerSet
type StickerSet struct {
	ContainsMasks bool         `json:"contains_masks"`
	IsAnimated    bool         `json:"is_animated"`
	Name          string       `json:"name"`
	Stickers      []Sticker    `json:"stickers"`
	Thumb         OptPhotoSize `json:"thumb"`
	Title         string       `json:"title"`
}

// Ref: #/components/schemas/SuccessfulPayment
type SuccessfulPayment struct {
	Currency                string       `json:"currency"`
	InvoicePayload          string       `json:"invoice_payload"`
	OrderInfo               OptOrderInfo `json:"order_info"`
	ProviderPaymentChargeID string       `json:"provider_payment_charge_id"`
	ShippingOptionID        OptString    `json:"shipping_option_id"`
	TelegramPaymentChargeID string       `json:"telegram_payment_charge_id"`
	TotalAmount             int          `json:"total_amount"`
}

// Ref: #/components/schemas/Update
type Update struct {
	CallbackQuery      OptCallbackQuery      `json:"callback_query"`
	ChannelPost        OptMessage            `json:"channel_post"`
	ChosenInlineResult OptChosenInlineResult `json:"chosen_inline_result"`
	EditedChannelPost  OptMessage            `json:"edited_channel_post"`
	EditedMessage      OptMessage            `json:"edited_message"`
	InlineQuery        OptInlineQuery        `json:"inline_query"`
	Message            OptMessage            `json:"message"`
	Poll               OptPoll               `json:"poll"`
	PollAnswer         OptPollAnswer         `json:"poll_answer"`
	PreCheckoutQuery   OptPreCheckoutQuery   `json:"pre_checkout_query"`
	ShippingQuery      OptShippingQuery      `json:"shipping_query"`
	UpdateID           int                   `json:"update_id"`
}

type UploadStickerFilePostReq struct {
	PNGSticker InputFile `json:"png_sticker"`
	UserID     int       `json:"user_id"`
}

type UploadStickerFilePostResOK struct {
	Ok     bool `json:"ok"`
	Result File `json:"result"`
}

func (*UploadStickerFilePostResOK) uploadStickerFilePostRes() {}

// Ref: #/components/schemas/User
type User struct {
	CanJoinGroups           OptBool   `json:"can_join_groups"`
	CanReadAllGroupMessages OptBool   `json:"can_read_all_group_messages"`
	FirstName               string    `json:"first_name"`
	ID                      int       `json:"id"`
	IsBot                   bool      `json:"is_bot"`
	LanguageCode            OptString `json:"language_code"`
	LastName                OptString `json:"last_name"`
	SupportsInlineQueries   OptBool   `json:"supports_inline_queries"`
	Username                OptString `json:"username"`
}

// Ref: #/components/schemas/UserProfilePhotos
type UserProfilePhotos struct {
	Photos     [][]PhotoSize `json:"photos"`
	TotalCount int           `json:"total_count"`
}

// Ref: #/components/schemas/Venue
type Venue struct {
	Address         string    `json:"address"`
	FoursquareID    OptString `json:"foursquare_id"`
	FoursquareType  OptString `json:"foursquare_type"`
	GooglePlaceID   OptString `json:"google_place_id"`
	GooglePlaceType OptString `json:"google_place_type"`
	Location        Location  `json:"location"`
	Title           string    `json:"title"`
}

// Ref: #/components/schemas/Video
type Video struct {
	Duration     int          `json:"duration"`
	FileID       string       `json:"file_id"`
	FileName     OptString    `json:"file_name"`
	FileSize     OptInt       `json:"file_size"`
	FileUniqueID string       `json:"file_unique_id"`
	Height       int          `json:"height"`
	MimeType     OptString    `json:"mime_type"`
	Thumb        OptPhotoSize `json:"thumb"`
	Width        int          `json:"width"`
}

// Ref: #/components/schemas/VideoNote
type VideoNote struct {
	Duration     int          `json:"duration"`
	FileID       string       `json:"file_id"`
	FileSize     OptInt       `json:"file_size"`
	FileUniqueID string       `json:"file_unique_id"`
	Length       int          `json:"length"`
	Thumb        OptPhotoSize `json:"thumb"`
}

// Ref: #/components/schemas/Voice
type Voice struct {
	Duration     int       `json:"duration"`
	FileID       string    `json:"file_id"`
	FileSize     OptInt    `json:"file_size"`
	FileUniqueID string    `json:"file_unique_id"`
	MimeType     OptString `json:"mime_type"`
}

// Ref: #/components/schemas/WebhookInfo
type WebhookInfo struct {
	AllowedUpdates       []string  `json:"allowed_updates"`
	HasCustomCertificate bool      `json:"has_custom_certificate"`
	IPAddress            OptString `json:"ip_address"`
	LastErrorDate        OptInt    `json:"last_error_date"`
	LastErrorMessage     OptString `json:"last_error_message"`
	MaxConnections       OptInt    `json:"max_connections"`
	PendingUpdateCount   int       `json:"pending_update_count"`
	URL                  string    `json:"url"`
}
