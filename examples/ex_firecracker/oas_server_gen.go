// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"sync"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
	_ = jx.Null
	_ = sync.Pool{}
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// CreateSnapshot implements createSnapshot operation.
	CreateSnapshot(ctx context.Context, req SnapshotCreateParams) (CreateSnapshotRes, error)
	// CreateSyncAction implements createSyncAction operation.
	CreateSyncAction(ctx context.Context, req InstanceActionInfo) (CreateSyncActionRes, error)
	// DescribeBalloonConfig implements describeBalloonConfig operation.
	DescribeBalloonConfig(ctx context.Context) (DescribeBalloonConfigRes, error)
	// DescribeBalloonStats implements describeBalloonStats operation.
	DescribeBalloonStats(ctx context.Context) (DescribeBalloonStatsRes, error)
	// DescribeInstance implements describeInstance operation.
	DescribeInstance(ctx context.Context) (DescribeInstanceRes, error)
	// GetExportVmConfig implements getExportVmConfig operation.
	GetExportVmConfig(ctx context.Context) (GetExportVmConfigRes, error)
	// GetMachineConfiguration implements getMachineConfiguration operation.
	GetMachineConfiguration(ctx context.Context) (GetMachineConfigurationRes, error)
	// LoadSnapshot implements loadSnapshot operation.
	LoadSnapshot(ctx context.Context, req SnapshotLoadParams) (LoadSnapshotRes, error)
	// MmdsConfigPut implements  operation.
	MmdsConfigPut(ctx context.Context, req MmdsConfig) (MmdsConfigPutRes, error)
	// MmdsGet implements  operation.
	MmdsGet(ctx context.Context) (MmdsGetRes, error)
	// MmdsPatch implements  operation.
	MmdsPatch(ctx context.Context, req MmdsPatchReq) (MmdsPatchRes, error)
	// MmdsPut implements  operation.
	MmdsPut(ctx context.Context, req MmdsPutReq) (MmdsPutRes, error)
	// PatchBalloon implements patchBalloon operation.
	PatchBalloon(ctx context.Context, req BalloonUpdate) (PatchBalloonRes, error)
	// PatchBalloonStatsInterval implements patchBalloonStatsInterval operation.
	PatchBalloonStatsInterval(ctx context.Context, req BalloonStatsUpdate) (PatchBalloonStatsIntervalRes, error)
	// PatchGuestDriveByID implements patchGuestDriveByID operation.
	PatchGuestDriveByID(ctx context.Context, req PartialDrive, params PatchGuestDriveByIDParams) (PatchGuestDriveByIDRes, error)
	// PatchGuestNetworkInterfaceByID implements patchGuestNetworkInterfaceByID operation.
	PatchGuestNetworkInterfaceByID(ctx context.Context, req PartialNetworkInterface, params PatchGuestNetworkInterfaceByIDParams) (PatchGuestNetworkInterfaceByIDRes, error)
	// PatchMachineConfiguration implements patchMachineConfiguration operation.
	PatchMachineConfiguration(ctx context.Context, req MachineConfiguration) (PatchMachineConfigurationRes, error)
	// PatchVm implements patchVm operation.
	PatchVm(ctx context.Context, req VM) (PatchVmRes, error)
	// PutBalloon implements putBalloon operation.
	PutBalloon(ctx context.Context, req Balloon) (PutBalloonRes, error)
	// PutGuestBootSource implements putGuestBootSource operation.
	PutGuestBootSource(ctx context.Context, req BootSource) (PutGuestBootSourceRes, error)
	// PutGuestDriveByID implements putGuestDriveByID operation.
	PutGuestDriveByID(ctx context.Context, req Drive, params PutGuestDriveByIDParams) (PutGuestDriveByIDRes, error)
	// PutGuestNetworkInterfaceByID implements putGuestNetworkInterfaceByID operation.
	PutGuestNetworkInterfaceByID(ctx context.Context, req NetworkInterface, params PutGuestNetworkInterfaceByIDParams) (PutGuestNetworkInterfaceByIDRes, error)
	// PutGuestVsock implements putGuestVsock operation.
	PutGuestVsock(ctx context.Context, req Vsock) (PutGuestVsockRes, error)
	// PutLogger implements putLogger operation.
	PutLogger(ctx context.Context, req Logger) (PutLoggerRes, error)
	// PutMachineConfiguration implements putMachineConfiguration operation.
	PutMachineConfiguration(ctx context.Context, req MachineConfiguration) (PutMachineConfigurationRes, error)
	// PutMetrics implements putMetrics operation.
	PutMetrics(ctx context.Context, req Metrics) (PutMetricsRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	mux *chi.Mux
	cfg config
}

func NewServer(h Handler, opts ...Option) *Server {
	srv := &Server{
		h:   h,
		mux: chi.NewMux(),
		cfg: newConfig(opts...),
	}
	srv.setupRoutes()
	return srv
}

func (s *Server) setupRoutes() {
	s.mux.MethodFunc("PUT", "/snapshot/create", s.HandleCreateSnapshotRequest)
	s.mux.MethodFunc("PUT", "/actions", s.HandleCreateSyncActionRequest)
	s.mux.MethodFunc("GET", "/balloon", s.HandleDescribeBalloonConfigRequest)
	s.mux.MethodFunc("GET", "/balloon/statistics", s.HandleDescribeBalloonStatsRequest)
	s.mux.MethodFunc("GET", "/", s.HandleDescribeInstanceRequest)
	s.mux.MethodFunc("GET", "/vm/config", s.HandleGetExportVmConfigRequest)
	s.mux.MethodFunc("GET", "/machine-config", s.HandleGetMachineConfigurationRequest)
	s.mux.MethodFunc("PUT", "/snapshot/load", s.HandleLoadSnapshotRequest)
	s.mux.MethodFunc("PUT", "/mmds/config", s.HandleMmdsConfigPutRequest)
	s.mux.MethodFunc("GET", "/mmds", s.HandleMmdsGetRequest)
	s.mux.MethodFunc("PATCH", "/mmds", s.HandleMmdsPatchRequest)
	s.mux.MethodFunc("PUT", "/mmds", s.HandleMmdsPutRequest)
	s.mux.MethodFunc("PATCH", "/balloon", s.HandlePatchBalloonRequest)
	s.mux.MethodFunc("PATCH", "/balloon/statistics", s.HandlePatchBalloonStatsIntervalRequest)
	s.mux.MethodFunc("PATCH", "/drives/{drive_id}", s.HandlePatchGuestDriveByIDRequest)
	s.mux.MethodFunc("PATCH", "/network-interfaces/{iface_id}", s.HandlePatchGuestNetworkInterfaceByIDRequest)
	s.mux.MethodFunc("PATCH", "/machine-config", s.HandlePatchMachineConfigurationRequest)
	s.mux.MethodFunc("PATCH", "/vm", s.HandlePatchVmRequest)
	s.mux.MethodFunc("PUT", "/balloon", s.HandlePutBalloonRequest)
	s.mux.MethodFunc("PUT", "/boot-source", s.HandlePutGuestBootSourceRequest)
	s.mux.MethodFunc("PUT", "/drives/{drive_id}", s.HandlePutGuestDriveByIDRequest)
	s.mux.MethodFunc("PUT", "/network-interfaces/{iface_id}", s.HandlePutGuestNetworkInterfaceByIDRequest)
	s.mux.MethodFunc("PUT", "/vsock", s.HandlePutGuestVsockRequest)
	s.mux.MethodFunc("PUT", "/logger", s.HandlePutLoggerRequest)
	s.mux.MethodFunc("PUT", "/machine-config", s.HandlePutMachineConfigurationRequest)
	s.mux.MethodFunc("PUT", "/metrics", s.HandlePutMetricsRequest)
}

func (s *Server) ServeHTTP(w http.ResponseWriter, r *http.Request) {
	s.mux.ServeHTTP(w, r)
}
