// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"math/big"
	"math/bits"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"sync"
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/codes"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = bits.LeadingZeros64
	_ = big.Rat{}
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = attribute.KeyValue{}
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
	_ = jx.Null
	_ = sync.Pool{}
	_ = codes.Unset
)

// SetFake set fake values.
func (s *Balloon) SetFake() {
	{

		{
			s.AmountMib = int(1)
		}
	}
	{

		{
			s.DeflateOnOom = true
		}
	}
	{

		{
			s.StatsPollingIntervalS.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BalloonStats) SetFake() {
	{

		{
			s.TargetPages = int(1)
		}
	}
	{

		{
			s.ActualPages = int(1)
		}
	}
	{

		{
			s.TargetMib = int(1)
		}
	}
	{

		{
			s.ActualMib = int(1)
		}
	}
	{

		{
			s.SwapIn.SetFake()
		}
	}
	{

		{
			s.SwapOut.SetFake()
		}
	}
	{

		{
			s.MajorFaults.SetFake()
		}
	}
	{

		{
			s.MinorFaults.SetFake()
		}
	}
	{

		{
			s.FreeMemory.SetFake()
		}
	}
	{

		{
			s.TotalMemory.SetFake()
		}
	}
	{

		{
			s.AvailableMemory.SetFake()
		}
	}
	{

		{
			s.DiskCaches.SetFake()
		}
	}
	{

		{
			s.HugetlbAllocations.SetFake()
		}
	}
	{

		{
			s.HugetlbFailures.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *BalloonStatsUpdate) SetFake() {
	{

		{
			s.StatsPollingIntervalS = int(1)
		}
	}
}

// SetFake set fake values.
func (s *BalloonUpdate) SetFake() {
	{

		{
			s.AmountMib = int(1)
		}
	}
}

// SetFake set fake values.
func (s *BootSource) SetFake() {
	{

		{
			s.BootArgs.SetFake()
		}
	}
	{

		{
			s.InitrdPath.SetFake()
		}
	}
	{

		{
			s.KernelImagePath = ""
		}
	}
}

// SetFake set fake values.
func (s *CpuTemplate) SetFake() {
	*s = CpuTemplateC3
}

// SetFake set fake values.
func (s *Drive) SetFake() {
	{

		{
			s.DriveID = ""
		}
	}
	{

		{
			s.CacheType.SetFake()
		}
	}
	{

		{
			s.IsReadOnly = true
		}
	}
	{

		{
			s.IsRootDevice = true
		}
	}
	{

		{
			s.Partuuid.SetFake()
		}
	}
	{

		{
			s.PathOnHost = ""
		}
	}
	{

		{
			s.RateLimiter.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *Error) SetFake() {
	{

		{
			s.FaultMessage.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *FullVmConfiguration) SetFake() {
	{

		{
			s.BalloonDevice.SetFake()
		}
	}
	{

		{
			s.BlockDevices = nil
			for i := 0; i < 0; i++ {
				var elem Drive

				{
					elem.SetFake()
				}
				s.BlockDevices = append(s.BlockDevices, elem)
			}
		}
	}
	{

		{
			s.BootSource.SetFake()
		}
	}
	{

		{
			s.Logger.SetFake()
		}
	}
	{

		{
			s.MachineConfig.SetFake()
		}
	}
	{

		{
			s.Metrics.SetFake()
		}
	}
	{

		{
			s.MmdsConfig.SetFake()
		}
	}
	{

		{
			s.NetDevices = nil
			for i := 0; i < 0; i++ {
				var elem NetworkInterface

				{
					elem.SetFake()
				}
				s.NetDevices = append(s.NetDevices, elem)
			}
		}
	}
	{

		{
			s.VsockDevice.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InstanceActionInfo) SetFake() {
	{

		{
			s.ActionType.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *InstanceActionInfoActionType) SetFake() {
	*s = InstanceActionInfoActionTypeFlushMetrics
}

// SetFake set fake values.
func (s *InstanceInfo) SetFake() {
	{

		{
			s.AppName = ""
		}
	}
	{

		{
			s.ID = ""
		}
	}
	{

		{
			s.State.SetFake()
		}
	}
	{

		{
			s.VmmVersion = ""
		}
	}
}

// SetFake set fake values.
func (s *InstanceInfoState) SetFake() {
	*s = InstanceInfoStateNotStarted
}

// SetFake set fake values.
func (s *Logger) SetFake() {
	{

		{
			s.Level.SetFake()
		}
	}
	{

		{
			s.LogPath = ""
		}
	}
	{

		{
			s.ShowLevel.SetFake()
		}
	}
	{

		{
			s.ShowLogOrigin.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *LoggerLevel) SetFake() {
	*s = LoggerLevelError
}

// SetFake set fake values.
func (s *MachineConfiguration) SetFake() {
	{

		{
			s.CPUTemplate.SetFake()
		}
	}
	{

		{
			s.HtEnabled = true
		}
	}
	{

		{
			s.MemSizeMib = int(1)
		}
	}
	{

		{
			s.TrackDirtyPages.SetFake()
		}
	}
	{

		{
			s.VcpuCount = int(1)
		}
	}
}

// SetFake set fake values.
func (s *Metrics) SetFake() {
	{

		{
			s.MetricsPath = ""
		}
	}
}

// SetFake set fake values.
func (s *MmdsConfig) SetFake() {
	{

		{
			s.Ipv4Address.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *MmdsGetOK) SetFake() {
}

// SetFake set fake values.
func (s *MmdsPatchReq) SetFake() {
}

// SetFake set fake values.
func (s *MmdsPutReq) SetFake() {
}

// SetFake set fake values.
func (s *NetworkInterface) SetFake() {
	{

		{
			s.AllowMmdsRequests.SetFake()
		}
	}
	{

		{
			s.GuestMAC.SetFake()
		}
	}
	{

		{
			s.HostDevName = ""
		}
	}
	{

		{
			s.IfaceID = ""
		}
	}
	{

		{
			s.RxRateLimiter.SetFake()
		}
	}
	{

		{
			s.TxRateLimiter.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *OptBalloon) SetFake() {
	var elem Balloon

	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBool) SetFake() {
	var elem bool

	{
		elem = true
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptBootSource) SetFake() {
	var elem BootSource

	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptCpuTemplate) SetFake() {
	var elem CpuTemplate

	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptInt) SetFake() {
	var elem int

	{
		elem = int(1)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptInt64) SetFake() {
	var elem int64

	{
		elem = int64(1)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptLogger) SetFake() {
	var elem Logger

	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptLoggerLevel) SetFake() {
	var elem LoggerLevel

	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptMachineConfiguration) SetFake() {
	var elem MachineConfiguration

	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptMetrics) SetFake() {
	var elem Metrics

	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptMmdsConfig) SetFake() {
	var elem MmdsConfig

	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptRateLimiter) SetFake() {
	var elem RateLimiter

	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptSnapshotCreateParamsSnapshotType) SetFake() {
	var elem SnapshotCreateParamsSnapshotType

	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptString) SetFake() {
	var elem string

	{
		elem = ""
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptTokenBucket) SetFake() {
	var elem TokenBucket

	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptVsock) SetFake() {
	var elem Vsock

	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *PartialDrive) SetFake() {
	{

		{
			s.DriveID = ""
		}
	}
	{

		{
			s.PathOnHost.SetFake()
		}
	}
	{

		{
			s.RateLimiter.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *PartialNetworkInterface) SetFake() {
	{

		{
			s.IfaceID = ""
		}
	}
	{

		{
			s.RxRateLimiter.SetFake()
		}
	}
	{

		{
			s.TxRateLimiter.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RateLimiter) SetFake() {
	{

		{
			s.Bandwidth.SetFake()
		}
	}
	{

		{
			s.Ops.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SnapshotCreateParams) SetFake() {
	{

		{
			s.MemFilePath = ""
		}
	}
	{

		{
			s.SnapshotPath = ""
		}
	}
	{

		{
			s.SnapshotType.SetFake()
		}
	}
	{

		{
			s.Version.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *SnapshotCreateParamsSnapshotType) SetFake() {
	*s = SnapshotCreateParamsSnapshotTypeFull
}

// SetFake set fake values.
func (s *SnapshotLoadParams) SetFake() {
	{

		{
			s.EnableDiffSnapshots.SetFake()
		}
	}
	{

		{
			s.MemFilePath = ""
		}
	}
	{

		{
			s.SnapshotPath = ""
		}
	}
	{

		{
			s.ResumeVM.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *TokenBucket) SetFake() {
	{

		{
			s.OneTimeBurst.SetFake()
		}
	}
	{

		{
			s.RefillTime = int64(0)
		}
	}
	{

		{
			s.Size = int64(0)
		}
	}
}

// SetFake set fake values.
func (s *VM) SetFake() {
	{

		{
			s.State.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *VMState) SetFake() {
	*s = VMStatePaused
}

// SetFake set fake values.
func (s *Vsock) SetFake() {
	{

		{
			s.GuestCid = int(3)
		}
	}
	{

		{
			s.UdsPath = ""
		}
	}
	{

		{
			s.VsockID = ""
		}
	}
}
