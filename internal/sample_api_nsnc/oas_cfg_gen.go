// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"math/big"
	"regexp"
)

var regexMap = map[string]*regexp.Regexp{
	"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$": regexp.MustCompile("^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"),
	"^\\d-\\d$": regexp.MustCompile("^\\d-\\d$"),
	"foo.*":     regexp.MustCompile("foo.*"),
	"string_.*": regexp.MustCompile("string_.*"),
}
var ratMap = map[string]*big.Rat{
	"10/1": func() *big.Rat {
		r := new(big.Rat)
		if err := r.UnmarshalText([]byte("10/1")); err != nil {
			panic(fmt.Sprintf("rat %q: %v", "10/1", err))
		}
		return r
	}(),
	"5/1": func() *big.Rat {
		r := new(big.Rat)
		if err := r.UnmarshalText([]byte("5/1")); err != nil {
			panic(fmt.Sprintf("rat %q: %v", "5/1", err))
		}
		return r
	}(),
}
