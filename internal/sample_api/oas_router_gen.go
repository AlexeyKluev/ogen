// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/errors"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
)

func Register(r chi.Router, s Server, opts ...Option) {
	r.MethodFunc("GET", "/error", NewErrorGetHandler(s, opts...))
	r.MethodFunc("GET", "/foobar", NewFoobarGetHandler(s, opts...))
	r.MethodFunc("POST", "/foobar", NewFoobarPostHandler(s, opts...))
	r.MethodFunc("PUT", "/foobar", NewFoobarPutHandler(s, opts...))
	r.MethodFunc("POST", "/pet", NewPetCreateHandler(s, opts...))
	r.MethodFunc("GET", "/pet/friendNames/{id}", NewPetFriendsNamesByIDHandler(s, opts...))
	r.MethodFunc("GET", "/pet", NewPetGetHandler(s, opts...))
	r.MethodFunc("GET", "/pet/{name}", NewPetGetByNameHandler(s, opts...))
	r.MethodFunc("GET", "/pet/name/{id}", NewPetNameByIDHandler(s, opts...))
	r.MethodFunc("POST", "/pet/updateNameAlias", NewPetUpdateNameAliasPostHandler(s, opts...))
	r.MethodFunc("POST", "/pet/updateName", NewPetUpdateNamePostHandler(s, opts...))
}
