// Code generated by ogen, DO NOT EDIT.

package api

import (
	"io"
)

type AnyContentTypeBinaryStringSchemaDefaultDef struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s AnyContentTypeBinaryStringSchemaDefaultDef) Read(p []byte) (n int, err error) {
	return s.Data.Read(p)
}

// AnyContentTypeBinaryStringSchemaDefaultDefStatusCode wraps AnyContentTypeBinaryStringSchemaDefaultDef with StatusCode.
type AnyContentTypeBinaryStringSchemaDefaultDefStatusCode struct {
	StatusCode int
	Response   AnyContentTypeBinaryStringSchemaDefaultDef
}

// GetStatusCode returns the value of StatusCode.
func (s AnyContentTypeBinaryStringSchemaDefaultDefStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s AnyContentTypeBinaryStringSchemaDefaultDefStatusCode) GetResponse() AnyContentTypeBinaryStringSchemaDefaultDef {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *AnyContentTypeBinaryStringSchemaDefaultDefStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *AnyContentTypeBinaryStringSchemaDefaultDefStatusCode) SetResponse(val AnyContentTypeBinaryStringSchemaDefaultDef) {
	s.Response = val
}

type AnyContentTypeBinaryStringSchemaOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s AnyContentTypeBinaryStringSchemaOK) Read(p []byte) (n int, err error) {
	return s.Data.Read(p)
}

// Combined2XXStatusCode wraps int with StatusCode.
type Combined2XXStatusCode struct {
	StatusCode int
	Response   int
}

// GetStatusCode returns the value of StatusCode.
func (s Combined2XXStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s Combined2XXStatusCode) GetResponse() int {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *Combined2XXStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *Combined2XXStatusCode) SetResponse(val int) {
	s.Response = val
}

func (*Combined2XXStatusCode) combinedRes() {}

// Combined5XXStatusCode wraps bool with StatusCode.
type Combined5XXStatusCode struct {
	StatusCode int
	Response   bool
}

// GetStatusCode returns the value of StatusCode.
func (s Combined5XXStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s Combined5XXStatusCode) GetResponse() bool {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *Combined5XXStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *Combined5XXStatusCode) SetResponse(val bool) {
	s.Response = val
}

func (*Combined5XXStatusCode) combinedRes() {}

// CombinedDefStatusCode wraps []string with StatusCode.
type CombinedDefStatusCode struct {
	StatusCode int
	Response   []string
}

// GetStatusCode returns the value of StatusCode.
func (s CombinedDefStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s CombinedDefStatusCode) GetResponse() []string {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *CombinedDefStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *CombinedDefStatusCode) SetResponse(val []string) {
	s.Response = val
}

func (*CombinedDefStatusCode) combinedRes() {}

type CombinedOK struct {
	Ok string `json:"ok"`
}

// GetOk returns the value of Ok.
func (s CombinedOK) GetOk() string {
	return s.Ok
}

// SetOk sets the value of Ok.
func (s *CombinedOK) SetOk(val string) {
	s.Ok = val
}

func (*CombinedOK) combinedRes() {}

type CombinedType string

const (
	CombinedType200     CombinedType = "200"
	CombinedType2XX     CombinedType = "2XX"
	CombinedType5XX     CombinedType = "5XX"
	CombinedTypeDefault CombinedType = "default"
)

// Headers200OK is response for Headers200 operation.
type Headers200OK struct {
	TestHeader string
}

// GetTestHeader returns the value of TestHeader.
func (s Headers200OK) GetTestHeader() string {
	return s.TestHeader
}

// SetTestHeader sets the value of TestHeader.
func (s *Headers200OK) SetTestHeader(val string) {
	s.TestHeader = val
}

// HeadersCombined4XX is 4XX pattern response for HeadersCombined operation.
type HeadersCombined4XX struct {
	TestHeader string
	StatusCode int
}

// GetTestHeader returns the value of TestHeader.
func (s HeadersCombined4XX) GetTestHeader() string {
	return s.TestHeader
}

// GetStatusCode returns the value of StatusCode.
func (s HeadersCombined4XX) GetStatusCode() int {
	return s.StatusCode
}

// SetTestHeader sets the value of TestHeader.
func (s *HeadersCombined4XX) SetTestHeader(val string) {
	s.TestHeader = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HeadersCombined4XX) SetStatusCode(val int) {
	s.StatusCode = val
}

func (*HeadersCombined4XX) headersCombinedRes() {}

// HeadersCombinedDef is default response for HeadersCombined operation.
type HeadersCombinedDef struct {
	TestHeader string
	StatusCode int
}

// GetTestHeader returns the value of TestHeader.
func (s HeadersCombinedDef) GetTestHeader() string {
	return s.TestHeader
}

// GetStatusCode returns the value of StatusCode.
func (s HeadersCombinedDef) GetStatusCode() int {
	return s.StatusCode
}

// SetTestHeader sets the value of TestHeader.
func (s *HeadersCombinedDef) SetTestHeader(val string) {
	s.TestHeader = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HeadersCombinedDef) SetStatusCode(val int) {
	s.StatusCode = val
}

func (*HeadersCombinedDef) headersCombinedRes() {}

// HeadersCombinedOK is response for HeadersCombined operation.
type HeadersCombinedOK struct {
	TestHeader string
}

// GetTestHeader returns the value of TestHeader.
func (s HeadersCombinedOK) GetTestHeader() string {
	return s.TestHeader
}

// SetTestHeader sets the value of TestHeader.
func (s *HeadersCombinedOK) SetTestHeader(val string) {
	s.TestHeader = val
}

func (*HeadersCombinedOK) headersCombinedRes() {}

type HeadersCombinedType string

const (
	HeadersCombinedType200     HeadersCombinedType = "200"
	HeadersCombinedTypeDefault HeadersCombinedType = "default"
	HeadersCombinedType4XX     HeadersCombinedType = "4XX"
)

// HeadersDefaultDef is default response for HeadersDefault operation.
type HeadersDefaultDef struct {
	TestHeader string
	StatusCode int
}

// GetTestHeader returns the value of TestHeader.
func (s HeadersDefaultDef) GetTestHeader() string {
	return s.TestHeader
}

// GetStatusCode returns the value of StatusCode.
func (s HeadersDefaultDef) GetStatusCode() int {
	return s.StatusCode
}

// SetTestHeader sets the value of TestHeader.
func (s *HeadersDefaultDef) SetTestHeader(val string) {
	s.TestHeader = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HeadersDefaultDef) SetStatusCode(val int) {
	s.StatusCode = val
}

// HeadersPattern4XX is 4XX pattern response for HeadersPattern operation.
type HeadersPattern4XX struct {
	TestHeader string
	StatusCode int
}

// GetTestHeader returns the value of TestHeader.
func (s HeadersPattern4XX) GetTestHeader() string {
	return s.TestHeader
}

// GetStatusCode returns the value of StatusCode.
func (s HeadersPattern4XX) GetStatusCode() int {
	return s.StatusCode
}

// SetTestHeader sets the value of TestHeader.
func (s *HeadersPattern4XX) SetTestHeader(val string) {
	s.TestHeader = val
}

// SetStatusCode sets the value of StatusCode.
func (s *HeadersPattern4XX) SetStatusCode(val int) {
	s.StatusCode = val
}

// IntersectPatternCode2XXStatusCode wraps int with StatusCode.
type IntersectPatternCode2XXStatusCode struct {
	StatusCode int
	Response   int
}

// GetStatusCode returns the value of StatusCode.
func (s IntersectPatternCode2XXStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s IntersectPatternCode2XXStatusCode) GetResponse() int {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *IntersectPatternCode2XXStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *IntersectPatternCode2XXStatusCode) SetResponse(val int) {
	s.Response = val
}

func (*IntersectPatternCode2XXStatusCode) intersectPatternCodeRes() {}

type IntersectPatternCodeOKApplicationJSON string

func (*IntersectPatternCodeOKApplicationJSON) intersectPatternCodeRes() {}

// NewNilInt returns new NilInt with value set to v.
func NewNilInt(v int) NilInt {
	return NilInt{
		Value: v,
	}
}

// NilInt is nullable int.
type NilInt struct {
	Value int
	Null  bool
}

// SetTo sets value to v.
func (o *NilInt) SetTo(v int) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilInt) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilInt) Get() (v int, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

func (*NilInt) multipleGenericResponsesRes() {}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

func (*NilString) multipleGenericResponsesRes() {}

type OctetStreamBinaryStringSchemaOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s OctetStreamBinaryStringSchemaOK) Read(p []byte) (n int, err error) {
	return s.Data.Read(p)
}

type OctetStreamEmptySchemaOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s OctetStreamEmptySchemaOK) Read(p []byte) (n int, err error) {
	return s.Data.Read(p)
}

type TextPlainBinaryStringSchemaOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s TextPlainBinaryStringSchemaOK) Read(p []byte) (n int, err error) {
	return s.Data.Read(p)
}
