{{- /*gotype: github.com/ogen-go/ogen/internal/gen.config*/ -}}

{{ define "router" }}
    {{ $pkg := $.Package }}
    {{ template "header" $ }}

	func Register(r chi.Router, s Server) {
	{{- range $m := $.Server.Methods }}
		r.Method("{{ $m.HTTPMethod }}", "{{ $m.Path }}", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
			{{- if $m.Parameters }}
			params, err :=  Parse{{ $m.Name }}Parameters(r)
			if err != nil {
				w.WriteHeader(http.StatusBadRequest)
				return
			}
			{{- end }}

			{{- if $m.RequestType}}
			var req {{ $m.RequestType }}
			if err := json.NewDecoder(r.Body).Decode(&req); err != nil {
				w.WriteHeader(http.StatusBadRequest)
				return
			}
			{{- end}}

			resp, err := s.{{ $m.Name }}(r.Context(){{ if $m.RequestType }}, &req{{ end }}{{ if $m.Parameters }}, params{{ end }})
			if err != nil {
				w.WriteHeader(http.StatusInternalServerError)
				return
			}

			b, err := json.Marshal(resp)
			if err != nil {
				w.WriteHeader(http.StatusInternalServerError)
				return
			}

			w.Header().Set("content-type", "application/json")
			w.WriteHeader(http.StatusOK)
			io.Copy(w, bytes.NewReader(b))
		}))
	{{- end }}
	}
{{ end }}