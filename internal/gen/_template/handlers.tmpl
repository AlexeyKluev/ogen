{{- /*gotype: github.com/ogen-go/ogen/internal/gen.TemplateConfig*/ -}}

{{ define "handlers" }}
{{ $pkg := $.Package }}
{{ template "header" $ }}

{{- range $m := $.Methods }}
func New{{ $m.Name }}Handler(s Server) func(w http.ResponseWriter, r *http.Request) {
	return func(w http.ResponseWriter, r *http.Request) {
		{{- if $m.Parameters }}
        params, err := Decode{{ $m.Name }}Params(r)
        if err != nil {
            respondError(w, err)
            return
        }
        {{- end }}

        {{- if $m.RequestType }}
        request, err := Decode{{ $m.Name }}Request(r)
        if err != nil {
            respondError(w, err)
            return
        }
        {{- end }}

        response, err := s.{{$m.Name}}(r.Context(){{ if $m.RequestType }}, request{{ end }}{{if $m.Parameters}}, params {{ end }})
        if err != nil {
            w.WriteHeader(http.StatusInternalServerError)
            return
        }

        if err := Encode{{ $m.Name }}Response(response, w); err != nil {
            _ = err
            return
        }
	}
}
{{ end }}

func respondError(w http.ResponseWriter, err error) {
    w.Header().Set("Content-Type", "application/json")
    w.WriteHeader(http.StatusBadRequest)
    _ = json.NewEncoder(w).Encode(struct{
        ErrorMessage string `json:"error_message"`
    }{
        ErrorMessage: err.Error(),
    })
}
{{ end }}