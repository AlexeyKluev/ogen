{{ define "params_encode_path" }}
u := uri.Clone(c.serverURL)
{{- range $part := $.PathParts }}{{/* Range over path parts */}}
{{- if $part.Raw }}
u.Path += "{{ $part.Raw }}"

{{- else }}
{
	{{- $param := $part.Param }}
    // Encode "{{ $param.Spec.Name }}" parameter.
    e := uri.NewPathEncoder(uri.PathEncoderConfig{
        Param: "{{ $param.Spec.Name }}",
        Style: uri.PathStyle{{ pascalMP $param.Spec.Style }},
        Explode: {{ if $param.Spec.Explode }}true{{ else }}false{{ end }},
    })
    {{- if eq $param.Type.Kind "array" }}
    u.Path += e.EncodeStrings(conv.{{ $param.Type.ToString }}(params.{{ $param.Name }}))
    {{- else }}
    u.Path += e.EncodeString(conv.{{ $param.Type.ToString }}(params.{{ $param.Name }}))
    {{- end }}
}
{{- end }}
{{- end }}
{{- end }}

{{ define "params_encode_query" }}
{{ $pcount := len $.QueryParams }}
{{ if ne $pcount 0 }}{{/* Check params existence */}}
q := u.Query()
{{- range $param := $.QueryParams }}{{/* Range over params */}}
{
    // Encode "{{ $param.Spec.Name }}" parameter.
    e := uri.NewQueryEncoder(uri.QueryEncoderConfig{
        Style:uri.QueryStyle{{ pascalMP $param.Spec.Style }},
        Explode: {{ if $param.Spec.Explode }}true{{ else }}false{{ end }},
    })
    {{- if eq $param.Type.Kind "array" }}
    q["{{ $param.Spec.Name }}"] = e.EncodeStrings(conv.{{ $param.Type.ToString }}(params.{{ $param.Name }}))
    {{- else }}
    q.Set("{{ $param.Spec.Name }}", e.EncodeString(conv.{{ $param.Type.ToString }}(params.{{ $param.Name }})))
    {{- end }}
}
{{- end }}{{/* Range over params */}}
u.RawQuery = q.Encode()
{{- end }}{{/* Check params existence */}}
{{- end }}

