// Code generated by ogen, DO NOT EDIT.

package api

import (
	"github.com/google/uuid"
)

// SetFake set fake values.
func (s *JaegerAnyOf) SetFake() {
	{
		{
			s.Medium = "string"
		}
	}
	{
		{
			s.SizeLimit.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *JaegerAnyOfSizeLimit) SetFake() {
	var elem int

	{
		elem = int(0)
	}
	s.SetInt(elem)
}

// SetFake set fake values.
func (s *OneUUID) SetFake() {
	{
		{
			s.Owner = "string"
		}
	}
	{
		{
			s.Version = int32(0)
		}
	}
	{
		{
			s.SubscriptionID.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *OneUUIDSubscriptionID) SetFake() {
	var elem SubscriptionUUID

	{
		elem.SetFake()
	}
	s.SetSubscriptionUUID(elem)
}

// SetFake set fake values.
func (s *SubscriptionUUID) SetFake() {
	var elem UUIDv4

	{
		elem.SetFake()
	}
	s.SetUUIDv4(elem)
}

// SetFake set fake values.
func (s *UUIDv4) SetFake() {
	var unwrapped uuid.UUID
	{
		unwrapped = uuid.New()
	}
	*s = UUIDv4(unwrapped)
}
