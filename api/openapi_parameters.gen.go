// Code generated by ogen, DO NOT EDIT.

package api

import (
	"bytes"
	"context"
	"encoding/json"
	"errors"
	"fmt"
	"io"
	"net/http"
	"sort"
	"strconv"
	"strings"

	"github.com/go-chi/chi/v5"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
)

type PetGetParameters struct {
	Query PetGetQueryParameters
}

type PetGetQueryParameters struct {
	PetID int64
}

func ParsePetGetParameters(r *http.Request) (*PetGetParameters, error) {
	var parameters PetGetParameters

	param := r.URL.Query().Get("PetID")

	v, err := strconv.ParseInt(param, 10, 64)
	if err != nil {
		return nil, fmt.Errorf("param Query PetID parse: %w", err)
	}

	parameters.Query.PetID = v

	return &parameters, nil
}
